var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.251,1,0.865]],["body/components/ApiResponseComponent.html",[0,0.4,1,1.475,2,1.444,3,0.207,4,0.18,5,1.132,6,1.132,7,1.132,8,1.132,9,0.18,10,5.731,11,3.878,12,3.133,13,1.132,14,1.979,15,1.766,16,1.558,17,4.229,18,1.364,19,5.614,20,1.364,21,4.96,22,0.207,23,0.697,24,1.108,25,1.372,26,3.002,27,4.229,28,3.387,29,4.786,30,0.746,31,6.01,32,0.603,33,3.675,34,6.276,35,0.522,36,4.96,37,0.481,38,0.022,39,0.357,40,0.496,41,0.481,42,3.675,43,0.591,44,1.084,45,3.675,46,4.96,47,3.675,48,3.675,49,1.718,50,1.132,51,1.132,52,1.427,53,3.675,54,0.63,55,3.675,56,0.632,57,2.12,58,2.777,59,3.675,60,1.515,61,1.07,62,2.12,63,0.381,64,0.207,65,0.011,66,3.675,67,3.675,68,3.675,69,3.675,70,3.675,71,3.675,72,4.229,73,1.011,74,1.528,75,1.528,76,1.132,77,1.852,78,1.132,79,3.675,80,1.132,81,0.902,82,1.132,83,0.902,84,1.132,85,0.902,86,1.07,87,1.528,88,0.852,89,1.132,90,0.902,91,1.132,92,0.902,93,1.132,94,0.803,95,0.955,96,1.132,97,0.852,98,1.132,99,0.852,100,1.011,101,1.132,102,0.757,103,1.132,104,0.902,105,0.902,106,1.132,107,0.852,108,1.132,109,0.852,110,0.852,111,1.132,112,0.902,113,1.07,114,0.852,115,0.852,116,1.132,117,1.132,118,0.011,119,0.015,120,0.011]],["title/components/AppComponent.html",[0,0.251,81,0.865]],["body/components/AppComponent.html",[0,0.434,1,1.069,2,1.614,3,0.245,4,0.213,5,1.342,6,1.342,7,1.342,8,1.342,9,0.213,13,1.342,14,2.014,15,1.797,16,1.009,18,1.525,20,1.525,22,0.245,23,0.779,35,0.344,38,0.022,39,0.353,40,0.344,50,1.342,51,1.342,54,0.746,56,0.49,63,0.452,64,0.245,65,0.013,73,1.198,74,1.708,75,1.708,76,1.342,77,1.978,78,1.342,80,1.342,81,1.576,82,1.342,83,1.069,84,1.342,85,1.069,86,1.268,87,1.708,88,1.009,89,1.342,90,1.069,91,1.342,92,1.069,93,1.342,94,0.952,95,1.132,96,1.342,97,1.009,98,1.342,99,1.009,100,1.198,101,1.342,102,0.897,103,1.342,104,1.069,105,1.069,106,1.342,107,1.009,108,1.342,109,1.009,110,1.009,111,1.342,112,1.069,113,1.268,114,1.009,115,1.009,116,1.342,117,1.342,118,0.013,119,0.017,120,0.013,121,3.713,122,2.152,123,6.098,124,5.543,125,3.518,126,4.726,127,4.355]],["title/modules/AppModule.html",[128,2.407,129,2.407]],["body/modules/AppModule.html",[1,1.44,3,0.153,4,0.133,9,0.133,11,1.571,15,0.668,16,0.631,38,0.023,56,0.825,58,2.057,60,1.123,63,0.283,64,0.153,65,0.008,73,0.749,81,1.628,83,1.44,85,1.44,88,1.359,90,1.44,92,1.44,94,1.282,95,0.708,97,1.359,99,1.359,100,1.668,102,1.209,104,1.44,105,0.668,107,1.359,109,1.359,110,0.93,112,1.44,114,1.359,118,0.008,119,0.012,120,0.008,128,1.86,129,5.016,130,1.702,131,1.86,132,4.063,133,3.6,134,4.483,135,2.057,136,2.322,137,2.322,138,2.322,139,2.322,140,2.322,141,3.666,142,3.384,143,3.384,144,3.384,145,3.141,146,3.421,147,1.571,148,2.723,149,3.421,150,1.571,151,2.057,152,4.013,153,3.421,154,2.057,155,2.741,156,2.723,157,2.723,158,4.013,159,2.723,160,4.013,161,2.723,162,2.322,163,2.322,164,2.057,165,1.86,166,3.032,167,3.421,168,1.654,169,4.013,170,4.765,171,1.86,172,4.013,173,2.723,174,2.057,175,4.013,176,2.723,177,4.013,178,2.723,179,4.013,180,2.322,181,4.765,182,2.723,183,4.013,184,2.723,185,4.013,186,2.723,187,1.702,188,2.057,189,4.013,190,1.194,191,1.86,192,1.86,193,2.322,194,4.013,195,2.322,196,2.057,197,2.057,198,2.723,199,2.723,200,1.194,201,2.057,202,2.322,203,4.013,204,2.723,205,2.723,206,4.013,207,2.723,208,4.013,209,2.723,210,4.013,211,2.322,212,4.013,213,2.723,214,2.723,215,2.723,216,2.057,217,1.702,218,2.322,219,1.571,220,1.86,221,4.013,222,2.057,223,1.702,224,1.571,225,1.86,226,2.322,227,4.013,228,5.258,229,2.149,230,2.004,231,1.76,232,2.741,233,2.723,234,1.387,235,1.469,236,4.013,237,4.013,238,2.723,239,2.723,240,2.723,241,2.723,242,2.723,243,1.123,244,2.723,245,2.723]],["title/modules/AppRoutingModule.html",[128,2.407,141,2.203]],["body/modules/AppRoutingModule.html",[3,0.272,4,0.237,9,0.237,38,0.022,56,0.806,58,3.658,63,0.503,64,0.272,65,0.014,88,1.122,97,1.122,99,1.122,100,1.332,102,0.998,107,1.122,109,1.122,110,1.122,114,1.122,118,0.015,119,0.018,120,0.015,130,3.027,135,3.658,141,3.702,149,4.129,155,4.045,162,4.129,163,4.129,180,4.129,192,3.307,193,4.129,218,4.129,225,3.307,226,4.129,246,4.842,247,4.842,248,4.371,249,5.923,250,1.88,251,2.419,252,7.114,253,4.842,254,4.842,255,4.842,256,4.842,257,4.842,258,4.842,259,4.842,260,4.842,261,4.842,262,4.842]],["title/injectables/AuthorizationService.html",[263,0.684,264,2.407]],["body/injectables/AuthorizationService.html",[3,0.248,4,0.216,9,0.216,22,0.248,23,0.785,25,1.41,30,0.841,32,0.679,35,0.51,37,0.577,38,0.022,39,0.281,40,0.442,41,0.577,43,1.037,44,0.965,54,1.052,56,0.629,63,0.458,64,0.248,65,0.013,118,0.013,119,0.017,120,0.013,122,1.713,231,2.452,250,1.713,263,1.085,264,4.406,265,1.713,266,3.762,267,1.285,268,5.59,269,2.964,270,4.224,271,4.224,272,4.224,273,4.224,274,4.874,275,6.451,276,3.762,277,3.222,278,5.59,279,4.413,280,3.722,281,3.015,282,5.59,283,1.329,284,2.792,285,4.413,286,4.766,287,1.935,288,4.413,289,1.819,290,1.819,291,3.762,292,4.413,293,4.413,294,4.413,295,1.36,296,4.413,297,4.413]],["title/classes/Comment.html",[65,0.01,298,2.033]],["body/classes/Comment.html",[3,0.249,4,0.217,9,0.217,22,0.249,23,0.787,24,1.233,25,1.225,32,0.681,35,0.527,37,0.579,38,0.022,39,0.356,40,0.562,41,0.579,54,1.142,64,0.249,65,0.013,118,0.013,119,0.017,120,0.013,235,2.491,267,1.289,281,2.07,283,1.455,298,4.167,299,2.07,300,2.984,301,3.775,302,3.775,303,6.459,304,3.345,305,2.534,306,4.551,307,3.842,308,4.428,309,4.428,310,5.373,311,4.428,312,4.776,313,4.428,314,4.233,315,4.428,316,5.602,317,3.826,318,4.428,319,4.428,320,3.024]],["title/components/CommentComponent.html",[0,0.251,83,0.865]],["body/components/CommentComponent.html",[0,0.457,1,0.81,2,1.341,3,0.185,4,0.162,5,1.016,6,1.016,7,1.016,8,1.016,9,0.162,13,1.016,14,1.955,15,1.745,16,0.764,18,1.267,20,1.267,22,0.185,24,0.984,25,1.16,30,0.693,32,0.401,35,0.454,38,0.022,39,0.338,40,0.364,43,0.74,44,1.16,56,0.518,61,1.545,63,0.342,64,0.185,65,0.01,73,0.907,74,1.419,75,1.419,76,1.016,77,1.769,78,1.016,80,1.016,81,0.81,82,1.016,83,1.536,84,1.016,85,0.81,86,0.96,87,1.419,88,0.764,89,1.016,90,1.608,91,1.016,92,0.81,93,1.016,94,0.721,95,0.857,96,1.016,97,0.764,98,1.016,99,0.764,100,0.907,101,1.016,102,0.68,103,1.016,104,0.81,105,0.81,106,1.016,107,0.764,108,1.016,109,0.764,110,0.764,111,1.016,112,0.81,113,0.96,114,0.764,115,0.764,116,1.016,117,1.016,118,0.01,119,0.014,120,0.01,234,0.96,267,0.96,269,1.898,270,2.492,283,0.949,284,2.3,289,2.58,298,3.705,300,2.744,305,1.36,321,2.812,322,2.878,323,4.338,324,3.479,325,3.926,326,1.341,327,5.305,328,4.605,329,4.895,330,1.769,331,3.926,332,2.868,333,3.479,334,4.605,335,3.298,336,2.878,337,3.479,338,3.298,339,4.605,340,3.298,341,2.102,342,4.605,343,4.605,344,3.926,345,3.926,346,2.656,347,3.298,348,2.878,349,3.926,350,3.298,351,3.298,352,3.623,353,3.298,354,2.812,355,3.623,356,5.305,357,3.298,358,2.812,359,2.492,360,3.298,361,3.298,362,3.298,363,3.298,364,3.298,365,3.298,366,2.492,367,3.298,368,3.298,369,3.298,370,3.298,371,3.926,372,1.767,373,1.903,374,2.253,375,2.492,376,2.812,377,3.298,378,3.479,379,1.647,380,2.253,381,2.812,382,3.298,383,1.767,384,2.466,385,1.28]],["title/components/CreateProposalComponent.html",[0,0.251,85,0.865]],["body/components/CreateProposalComponent.html",[0,0.453,1,0.784,2,1.311,3,0.18,4,0.157,5,0.984,6,0.984,7,0.984,8,0.984,9,0.157,13,0.984,14,1.947,15,1.738,16,0.74,18,1.239,20,1.239,22,0.18,23,0.632,24,1.114,25,0.698,30,0.677,35,0.447,38,0.022,39,0.287,40,0.252,43,0.513,44,0.698,54,0.548,56,0.587,60,1.317,61,1.518,62,1.843,63,0.332,64,0.18,65,0.009,73,0.879,74,1.387,75,1.387,76,0.984,77,1.744,78,0.984,80,0.984,81,0.784,82,0.984,83,0.784,84,0.984,85,1.39,86,1.892,87,1.387,88,0.74,89,0.984,90,0.784,91,0.984,92,0.784,93,0.984,94,0.698,95,0.83,96,0.984,97,0.74,98,0.984,99,0.74,100,1.434,101,0.984,102,0.658,103,0.984,104,0.784,105,0.784,106,0.984,107,0.74,108,0.984,109,0.74,110,0.74,111,0.984,112,0.784,113,0.93,114,0.74,115,0.74,116,0.984,117,0.984,118,0.01,119,0.014,120,0.01,125,3.266,164,4.51,165,4.077,174,4.51,235,1.648,267,1.518,269,1.856,283,0.928,284,2.249,289,2.679,300,2.618,312,4.827,322,2.815,326,1.311,330,1.744,332,2.249,336,2.815,341,1.648,348,3.539,385,1.24,386,2.413,387,2.299,388,5.662,389,4.502,390,4.446,391,3.839,392,5.214,393,5.214,394,3.194,395,4.502,396,3.075,397,1.974,398,4.502,399,3.194,400,3.194,401,3.194,402,2.724,403,2.182,404,2.724,405,3.194,406,1.843,407,3.194,408,3.194,409,2.724,410,1.169,411,2.724,412,3.194,413,3.194,414,3.194,415,3.194,416,5.214,417,3.194,418,3.194,419,3.194,420,3.194,421,3.194,422,3.194,423,3.194,424,3.194,425,3.194,426,1.997,427,3.194,428,5.662,429,4.827,430,3.839,431,5.28,432,4.502,433,4.502,434,3.839,435,4.502,436,3.839,437,2.598,438,3.839,439,1.843,440,2.724,441,3.194,442,2.724,443,3.194]],["title/interfaces/DialogData.html",[57,2.033,444,2.033]],["body/interfaces/DialogData.html",[0,0.358,3,0.168,4,0.147,9,0.147,14,0.824,15,0.735,16,0.694,18,0.824,20,0.824,22,0.168,23,0.604,24,0.863,26,1.496,30,0.45,38,0.023,39,0.191,40,0.237,44,0.94,49,2.01,52,2.135,54,0.943,56,0.76,57,2.481,60,1.235,61,1.252,62,1.728,63,0.311,64,0.283,65,0.013,94,0.655,95,0.778,102,0.617,105,1.235,110,0.997,118,0.013,119,0.013,120,0.009,147,2.481,150,1.728,168,1.235,171,2.046,219,1.728,220,2.046,229,2.695,230,2.747,231,2.739,232,2.046,234,1.601,243,2.401,250,1.163,251,2.148,269,1.235,277,2.513,281,2.01,283,1.392,290,2.401,295,0.923,326,1.252,330,0.923,341,1.574,385,1.163,387,0.977,397,1.886,444,1.728,445,2.995,446,2.046,447,2.834,448,1.496,449,2.046,450,1.872,451,1.728,452,2.263,453,2.688,454,2.263,455,2.352,456,3.438,457,1.604,458,2.046,459,3.249,460,3.249,461,3.249,462,2.303,463,1.604,464,2.046,465,2.688,466,4.155,467,2.688,468,2.263,469,3.173,470,2.481,471,3.249,472,2.263,473,2.263,474,2.263,475,2.263,476,2.263,477,2.263,478,2.263,479,2.263,480,2.046,481,2.263,482,2.263,483,2.263,484,2.263,485,2.046,486,1.728,487,3.437,488,1.872,489,2.263,490,2.263,491,2.263,492,1.872,493,1.235,494,1.872,495,2.263,496,2.263,497,1.872,498,2.263,499,2.01,500,1.872,501,2.263,502,2.263,503,4.155,504,2.263,505,2.263,506,1.728,507,2.046,508,2.263,509,2.263,510,1.604,511,2.263,512,2.263,513,3.249,514,2.263,515,3.145,516,2.263,517,1.872,518,2.352,519,2.263,520,2.263,521,2.263,522,2.263,523,2.263,524,2.263,525,2.263,526,2.263,527,2.263,528,2.303,529,3.249,530,2.263,531,1.872,532,2.046,533,2.937,534,2.263,535,2.937,536,3.802,537,1.872,538,2.046,539,2.263,540,2.263,541,2.263,542,2.263,543,2.263,544,2.263,545,2.263,546,4.155,547,4.155,548,2.263,549,1.604,550,3.802,551,3.437,552,3.802,553,2.075,554,2.046,555,2.046,556,2.046,557,2.046,558,1.604,559,1.728,560,2.263,561,2.263,562,2.263,563,3.249,564,1.496,565,1.872,566,1.4,567,1.313,568,1.313,569,1.4,570,1.4,571,1.496,572,1.728,573,1.872,574,2.263,575,1.604,576,2.263,577,2.046]],["title/components/ErrorComponent.html",[0,0.251,88,0.817]],["body/components/ErrorComponent.html",[0,0.425,1,1.02,2,1.566,3,0.234,4,0.204,5,1.28,6,1.28,7,1.28,8,1.28,9,0.204,13,1.28,14,2.005,15,1.789,16,0.963,18,1.48,20,1.48,22,0.234,23,0.756,30,0.809,32,0.725,35,0.471,38,0.022,39,0.342,40,0.328,43,0.668,44,1.176,50,1.28,51,1.28,54,0.712,56,0.468,61,1.737,63,0.431,64,0.234,65,0.012,73,1.143,74,1.657,75,1.657,76,1.28,77,1.944,78,1.28,80,1.28,81,1.02,82,1.28,83,1.02,84,1.28,85,1.02,86,1.21,87,1.657,88,1.462,89,1.28,90,1.02,91,1.28,92,1.02,93,1.28,94,0.909,95,1.08,96,1.28,97,0.963,98,1.28,99,0.963,100,1.143,101,1.28,102,0.856,103,1.28,104,1.02,105,1.02,106,1.28,107,0.963,108,1.28,109,0.963,110,0.963,111,1.28,112,1.02,113,1.21,114,0.963,115,0.963,116,1.28,117,1.28,118,0.013,119,0.016,120,0.013,326,1.566,330,1.944,485,4.463,553,2.601,567,2.359,578,3.543,579,5.965,580,5.379,581,5.379,582,4.156]],["title/components/FeedComponent.html",[0,0.251,90,0.865]],["body/components/FeedComponent.html",[0,0.365,1,0.423,2,0.818,3,0.097,4,0.084,5,0.531,6,0.531,7,0.531,8,0.531,9,0.084,13,0.531,14,1.762,15,1.573,16,0.399,18,0.773,20,0.773,22,0.097,23,0.395,24,0.997,25,0.898,30,0.618,32,0.499,35,0.496,37,0.592,38,0.023,39,0.326,40,0.422,41,0.592,43,0.913,44,1.271,56,0.576,61,1.037,63,0.179,64,0.097,65,0.005,73,0.474,74,0.866,75,0.866,76,0.531,77,1.266,78,0.531,80,0.531,81,0.423,82,0.531,83,0.69,84,0.531,85,0.423,86,1.037,87,0.866,88,0.399,89,0.531,90,1.192,91,0.531,92,0.423,93,0.531,94,0.377,95,0.448,96,0.531,97,0.399,98,0.531,99,0.399,100,1.245,101,0.531,102,0.355,103,0.531,104,0.423,105,0.423,106,0.531,107,0.399,108,0.531,109,0.399,110,0.399,111,0.531,112,0.69,113,1.654,114,0.399,115,0.399,116,0.531,117,0.531,118,0.005,119,0.008,120,0.005,125,0.994,144,2.954,155,1.177,166,1.302,200,2.646,201,1.302,217,1.077,235,1.656,267,1.317,269,1.694,272,1.302,281,1.664,283,1.294,284,2.052,289,2.488,298,3.581,300,2.783,305,2.277,322,1.757,323,3.103,324,4.034,325,2.397,326,0.818,330,1.266,331,2.397,332,1.404,333,2.124,336,2.568,337,4.559,341,2.345,344,4.139,345,4.139,346,1.622,348,3.337,349,1.469,352,3.315,354,3.036,358,1.469,359,3.103,372,2.2,373,2.054,374,1.177,375,2.69,376,3.502,379,2.557,380,2.432,381,1.469,383,0.923,384,0.923,385,0.669,387,2.025,396,2.806,397,1.801,406,0.994,426,3.55,434,1.469,518,1.314,553,2.446,558,2.2,564,2.26,565,1.757,566,1.92,567,1.561,568,1.984,569,1.664,570,1.664,575,1.506,583,1.469,584,4.552,585,3.56,586,2.811,587,4.108,588,4.854,589,4.108,590,4.854,591,2.811,592,3.502,593,2.397,594,2.397,595,4.854,596,2.397,597,1.723,598,1.723,599,3.036,600,1.723,601,1.723,602,4.139,603,1.723,604,1.723,605,1.723,606,2.811,607,2.811,608,3.502,609,2.811,610,1.723,611,3.502,612,3.502,613,3.502,614,1.723,615,2.811,616,2.397,617,1.723,618,2.811,619,2.397,620,2.811,621,2.811,622,1.723,623,2.397,624,1.723,625,3.502,626,3.502,627,1.723,628,1.469,629,1.723,630,2.397,631,2.811,632,1.469,633,1.723,634,4.108,635,3.56,636,2.811,637,1.723,638,2.811,639,2.397,640,1.92,641,2.811,642,1.723,643,1.723,644,1.077,645,1.723,646,1.302,647,1.723,648,1.723,649,1.723,650,1.723,651,1.723,652,1.723,653,1.723,654,1.723,655,1.723,656,1.723,657,1.723,658,1.723,659,1.723,660,1.723,661,1.723,662,1.723,663,2.37,664,1.723,665,1.723,666,1.723,667,3.56,668,1.723,669,1.723,670,1.723,671,1.723,672,1.723,673,1.723,674,1.723,675,1.723,676,1.723,677,4.108,678,4.108,679,2.811,680,1.723,681,1.723,682,1.723,683,2.811,684,2.397,685,1.723,686,1.723,687,1.723,688,1.723,689,1.723,690,1.723,691,2.811,692,2.811,693,1.723,694,1.469,695,1.723,696,1.723,697,1.723,698,1.723,699,2.811,700,4.108,701,1.757,702,2.811,703,1.723,704,1.723,705,2.811,706,2.811,707,1.723,708,1.723,709,1.723,710,1.723,711,1.469,712,1.723,713,1.177,714,2.811,715,1.302,716,1.723,717,1.723,718,2.811,719,2.811,720,2.811,721,2.811,722,2.811,723,2.397,724,2.811,725,2.811,726,2.811,727,2.397,728,1.907,729,1.506,730,2.397,731,2.568,732,2.811,733,2.2,734,1.723,735,1.723,736,2.124,737,2.69,738,1.302,739,2.69,740,1.723,741,1.302,742,2.811,743,1.907,744,1.723,745,0.994,746,1.723,747,2.69,748,1.469,749,1.723,750,1.469,751,1.469,752,1.723,753,1.177,754,1.723,755,1.723,756,1.723,757,1.723,758,1.302,759,2.811,760,1.723,761,2.811,762,2.397,763,1.404,764,1.723,765,2.124,766,1.469,767,1.723,768,1.723,769,1.723,770,1.723,771,1.723,772,1.723,773,1.723,774,1.723,775,2.811,776,1.723,777,1.723,778,0.994,779,1.723,780,1.723,781,2.811,782,1.723,783,1.723,784,1.723]],["title/classes/FeedParams.html",[65,0.01,785,2.203]],["body/classes/FeedParams.html",[3,0.241,4,0.21,9,0.21,22,0.241,23,0.771,24,1.253,32,0.736,35,0.542,37,0.561,38,0.022,39,0.273,40,0.522,41,0.863,54,1.157,64,0.241,65,0.016,118,0.013,119,0.017,120,0.013,224,3.683,267,1.249,269,2.264,283,1.132,284,3.189,289,2.264,299,2.006,306,4.611,332,3.428,336,3.433,346,2.475,733,3.42,785,3.433,786,5.925,787,3.658,788,3.242,789,6.75,790,6.599,791,5.851,792,4.291,793,4.291,794,4.149,795,4.291,796,5.443,797,4.291,798,4.291,799,4.291,800,4.291,801,4.291,802,4.291,803,4.291,804,4.291,805,4.291]],["title/components/FilterComponent.html",[0,0.251,92,0.865]],["body/components/FilterComponent.html",[0,0.4,1,0.67,2,1.171,3,0.154,4,0.134,5,0.842,6,0.842,7,0.842,8,0.842,9,0.134,13,0.842,14,1.908,15,1.702,16,1.106,18,1.106,20,1.106,22,0.154,24,1.006,25,1.044,28,2.747,30,0.605,32,0.332,35,0.444,37,0.357,38,0.023,39,0.304,40,0.216,41,0.357,43,0.846,44,1.227,56,0.593,61,1.171,63,0.283,64,0.154,65,0.008,73,0.751,74,1.239,75,1.239,76,0.842,77,1.623,78,0.842,80,0.842,81,0.67,82,0.842,83,0.67,84,0.842,85,0.67,86,0.795,87,1.239,88,0.633,89,0.842,90,0.67,91,0.842,92,1.441,93,0.842,94,0.597,95,0.71,96,0.842,97,0.633,98,0.842,99,0.633,100,1.749,101,0.842,102,0.563,103,0.842,104,0.67,105,0.67,106,0.842,107,0.633,108,0.842,109,0.633,110,0.633,111,0.842,112,0.67,113,0.795,114,0.633,115,1.106,116,0.842,117,0.842,118,0.008,119,0.012,120,0.008,200,2.875,211,2.329,223,4.099,224,3.594,234,0.795,267,0.795,280,3.387,283,1.21,284,3.112,289,2.568,300,2.575,306,4.617,322,2.514,326,1.171,330,0.842,333,3.039,337,3.979,341,1.927,346,3.038,348,3.292,352,1.866,359,2.064,373,1.576,385,1.853,430,4.07,439,1.576,507,2.747,518,1.88,568,1.198,625,3.429,644,1.707,646,2.064,728,2.557,729,2.821,730,2.329,731,2.514,753,1.866,763,1.364,796,3.429,806,2.329,807,4.774,808,4.022,809,5.266,810,5.266,811,5.266,812,4.022,813,4.022,814,2.731,815,2.731,816,3.429,817,4.022,818,5.311,819,3.429,820,2.731,821,3.429,822,4.022,823,5.871,824,2.731,825,5.266,826,5.266,827,3.429,828,4.022,829,4.022,830,2.731,831,4.022,832,2.731,833,2.731,834,2.731,835,2.731,836,2.731,837,2.731,838,2.731,839,2.731,840,2.731,841,2.731,842,2.731,843,4.022,844,2.731,845,2.731,846,2.731,847,2.731,848,2.731,849,2.731,850,4.774,851,2.329,852,2.731,853,2.731,854,2.731,855,2.731,856,2.731,857,3.039,858,2.731,859,2.731,860,4.022,861,2.154,862,2.731,863,2.984,864,2.731,865,2.731,866,2.731,867,2.731]],["title/components/ForgetPasswordComponent.html",[0,0.251,94,0.771]],["body/components/ForgetPasswordComponent.html",[0,0.365,1,0.76,2,1.282,3,0.174,4,0.152,5,0.954,6,0.954,7,0.954,8,0.954,9,0.152,13,0.954,14,1.94,15,1.731,16,0.718,18,1.212,20,1.212,22,0.174,23,0.619,25,1.121,30,0.663,32,0.376,35,0.509,37,0.405,38,0.022,39,0.326,40,0.466,41,0.405,43,0.824,44,1.221,49,1.448,50,0.954,51,0.954,52,1.202,54,0.957,56,0.577,61,1.492,63,0.321,64,0.174,65,0.009,72,3.756,73,0.852,74,1.357,75,1.357,76,0.954,77,1.818,78,0.954,80,0.954,81,0.76,82,0.954,83,0.76,84,0.954,85,0.76,86,0.902,87,1.357,88,0.718,89,0.954,90,0.76,91,0.954,92,0.76,93,0.954,94,1.221,95,1.729,96,0.954,97,0.718,98,0.954,99,0.718,100,0.852,101,0.954,102,0.638,103,0.954,104,0.76,105,1.548,106,0.954,107,0.718,108,0.954,109,0.718,110,1.462,111,0.954,112,0.76,113,0.902,114,0.718,115,0.718,116,0.954,117,0.954,118,0.009,119,0.013,120,0.009,168,1.277,219,3.784,234,1.282,235,2.159,243,1.277,283,0.908,326,1.282,330,1.72,341,1.612,437,2.541,447,3.146,455,2.396,456,2.753,457,1.659,493,1.277,499,1.448,500,1.936,518,2.059,528,2.359,549,1.659,553,2.6,559,2.541,564,1.547,566,1.448,567,1.358,568,2.449,569,2.059,570,2.059,571,1.547,713,2.115,715,2.34,827,3.756,868,5.592,869,2.64,870,5.126,871,4.405,872,4.405,873,5.126,874,5.584,875,3.814,876,3.097,877,3.49,878,4.405,879,4.405,880,3.097,881,3.097,882,3.097,883,5.496,884,3.756,885,5.584,886,4.405,887,4.405,888,3.097,889,3.097,890,3.097,891,2.64,892,2.64,893,3.097,894,3.097,895,3.097,896,3.097,897,3.097,898,2.34,899,3.097,900,4.405,901,3.097,902,2.64,903,2.64,904,2.753,905,3.328,906,3.756,907,3.328,908,4.405,909,4.405,910,4.405]],["title/injectables/GetProposalsService.html",[142,2.033,263,0.684]],["body/injectables/GetProposalsService.html",[3,0.149,4,0.13,9,0.13,16,1.529,22,0.149,23,0.554,25,1.271,30,0.593,32,0.479,35,0.527,37,0.787,38,0.023,39,0.383,40,0.564,41,0.787,43,1.06,50,1.791,51,1.791,54,0.996,56,0.624,63,0.276,64,0.149,65,0.008,115,1.347,118,0.008,119,0.012,120,0.008,122,1.032,142,2.273,190,1.165,200,2.893,263,0.765,265,1.032,267,0.774,280,3.806,287,1.165,289,1.095,290,1.095,295,1.791,305,2.142,332,2.595,346,3.202,387,0.867,510,3.533,640,3.97,663,3.706,713,3.208,785,4.339,788,2.007,791,4.43,857,5.483,911,5.735,912,2.265,913,3.36,914,3.36,915,3.941,916,3.941,917,3.941,918,3.941,919,3.941,920,3.941,921,3.941,922,3.941,923,3.941,924,3.941,925,3.941,926,3.941,927,2.657,928,2.346,929,3.941,930,2.657,931,2.657,932,2.657,933,5.625,934,5.625,935,3.941,936,6.597,937,3.706,938,3.806,939,2.657,940,2.657,941,2.657,942,2.657,943,6.424,944,2.657,945,2.657,946,2.657,947,2.657,948,2.657,949,2.657,950,3.941,951,2.657,952,2.657,953,3.941,954,2.657,955,5.196,956,2.657,957,3.941,958,2.657,959,1.327,960,2.265,961,2.657,962,2.657,963,2.657,964,2.657,965,2.657,966,2.657,967,2.657,968,2.657,969,2.657,970,2.657,971,2.657,972,2.657,973,2.657,974,3.941,975,2.657,976,2.657,977,2.657,978,2.657,979,3.36,980,2.657,981,2.657,982,2.657]],["title/components/HomeComponent.html",[0,0.251,97,0.817]],["body/components/HomeComponent.html",[0,0.347,1,0.695,2,1.202,3,0.159,4,0.139,5,0.872,6,0.872,7,0.872,8,0.872,9,0.139,13,0.872,14,1.917,15,1.711,16,0.656,18,1.136,20,1.136,22,0.232,23,0.58,24,1.019,27,3.52,30,0.621,32,0.344,35,0.45,37,0.37,38,0.022,39,0.341,40,0.385,41,0.37,43,0.664,44,1.066,49,1.93,56,0.465,61,1.419,63,0.294,64,0.159,65,0.008,73,0.779,74,1.272,75,1.272,76,0.872,77,1.651,78,0.872,80,0.872,81,0.695,82,0.872,83,0.695,84,0.872,85,0.695,86,0.824,87,1.272,88,0.656,89,0.872,90,0.695,91,0.872,92,0.695,93,0.872,94,0.619,95,0.736,96,0.872,97,1.241,98,0.872,99,0.656,100,0.779,101,0.872,102,0.583,103,0.872,104,0.695,105,0.695,106,0.872,107,0.656,108,0.872,109,0.656,110,0.656,111,0.872,112,0.695,113,0.824,114,0.656,115,0.656,116,0.872,117,0.872,118,0.009,119,0.012,120,0.012,196,2.139,231,1.811,250,1.099,267,1.202,280,1.633,326,1.202,330,1.651,371,2.414,373,3.286,374,1.934,375,2.139,379,2.97,380,1.934,383,3.051,384,1.516,385,2.211,387,1.347,439,3.286,440,4.856,493,1.167,531,2.581,532,2.82,602,2.414,701,3.047,728,3.539,729,1.516,731,3.838,733,2.61,737,3.12,738,3.12,743,3.492,747,2.139,750,2.414,753,4.454,758,3.12,762,2.414,763,2.062,765,2.139,778,2.382,851,2.414,861,2.869,863,1.77,983,2.414,984,3.52,985,4.874,986,4.129,987,4.129,988,5.357,989,2.831,990,4.567,991,4.129,992,2.831,993,2.831,994,2.831,995,2.831,996,2.831,997,2.414,998,2.831,999,2.831,1000,2.831,1001,3.52,1002,4.129,1003,2.831,1004,2.831,1005,2.414,1006,2.831,1007,3.329,1008,2.831,1009,2.414,1010,2.831,1011,2.831,1012,3.52,1013,2.831,1014,2.831,1015,3.286,1016,2.581,1017,2.414,1018,2.414,1019,2.139,1020,6.14,1021,1.77,1022,2.831,1023,1.934,1024,1.77,1025,1.77,1026,4.129,1027,2.831,1028,2.414,1029,2.831,1030,2.414,1031,4.129,1032,5.365,1033,4.874,1034,2.831,1035,2.831,1036,5.696,1037,5.357,1038,2.831,1039,2.831,1040,2.831,1041,2.831,1042,3.52,1043,2.831,1044,2.831,1045,2.831,1046,2.831,1047,2.831,1048,4.129,1049,4.129,1050,6.293,1051,2.831,1052,2.831,1053,2.831,1054,2.831,1055,2.831,1056,2.831,1057,2.831,1058,2.831,1059,2.831,1060,2.831,1061,2.831,1062,2.831,1063,2.831,1064,2.414,1065,2.831,1066,2.831,1067,2.831,1068,2.831,1069,2.831]],["title/interceptors/HttpInterceptorService.html",[1070,3.005,1071,2.663]],["body/interceptors/HttpInterceptorService.html",[3,0.257,4,0.224,9,0.224,22,0.257,30,0.86,32,0.556,35,0.452,37,0.748,38,0.023,39,0.364,40,0.493,41,0.748,43,0.735,56,0.735,63,0.475,64,0.257,65,0.014,118,0.014,119,0.017,120,0.014,190,2.006,234,1.332,251,2.285,263,1.109,274,3.455,283,0.943,295,1.762,326,1.332,463,3.5,464,3.124,493,1.886,506,2.639,701,2.859,937,3.598,959,2.285,1071,4.32,1072,4.574,1073,5.318,1074,3.899,1075,5.718,1076,4.574,1077,4.574,1078,5.718,1079,5.718,1080,6.535,1081,6.238,1082,6.535,1083,4.574,1084,4.574,1085,5.718,1086,4.574,1087,5.718,1088,4.574,1089,4.574,1090,4.574,1091,4.574,1092,3.899,1093,4.574,1094,4.574,1095,4.574,1096,4.574,1097,4.574,1098,4.574]],["title/components/LandingPageComponent.html",[0,0.251,99,0.817]],["body/components/LandingPageComponent.html",[0,0.227,1,0.362,2,1.309,3,0.083,4,0.072,5,0.454,6,0.454,7,0.454,8,0.454,9,0.072,13,0.454,14,1.703,15,1.519,16,1.505,18,0.68,20,0.68,22,0.234,23,0.347,24,0.97,25,1.095,26,1.234,30,0.561,32,0.3,35,0.516,37,0.625,38,0.023,39,0.331,40,0.471,41,0.625,43,1.037,44,1.322,50,0.761,51,0.761,54,0.423,56,0.671,60,0.608,61,0.928,63,0.153,64,0.083,65,0.004,73,0.405,74,0.761,75,0.761,76,0.454,77,1.15,78,0.454,80,0.454,81,0.362,82,0.454,83,0.362,84,0.454,85,0.606,86,1.086,87,0.761,88,0.342,89,0.454,90,0.606,91,0.454,92,0.606,93,0.454,94,0.322,95,0.383,96,0.454,97,0.342,98,0.454,99,0.865,100,1.48,101,0.454,102,0.304,103,0.454,104,0.362,105,0.362,106,0.454,107,0.342,108,0.454,109,0.342,110,0.342,111,0.454,112,0.606,113,0.928,114,0.342,115,0.963,116,0.454,117,0.454,118,0.004,119,0.007,120,0.007,142,1.84,143,2.153,155,1.007,165,1.007,166,1.866,192,4.487,197,3.14,200,2.197,201,1.114,202,1.257,217,0.921,223,2.333,224,3.189,229,0.789,230,0.736,231,0.646,234,0.719,235,0.904,250,0.572,264,2.549,267,0.429,269,2.066,270,1.866,277,2.503,280,1.425,283,0.984,284,2.386,286,1.257,289,2.493,290,1.315,291,1.257,300,2.881,306,2.178,326,0.719,330,1.15,341,2.477,346,3.532,372,0.789,373,0.85,374,1.687,379,1.593,380,1.007,383,2.226,385,1.613,387,1.882,397,2.197,410,1.969,426,2.333,439,1.84,442,1.257,447,1.155,462,1.999,465,2.333,497,1.544,515,1.993,518,2.973,528,2.881,531,1.544,533,1.007,553,2.066,558,1.323,564,1.234,565,1.993,566,0.689,567,0.646,568,1.636,569,1.744,570,0.689,571,1.864,572,2.153,575,1.323,577,1.007,584,2.106,592,2.106,596,2.106,611,1.257,612,3.181,613,2.106,619,1.257,623,2.106,626,2.106,640,2.549,644,0.921,663,1.425,694,1.257,701,0.921,711,1.257,727,2.106,728,1.323,729,1.323,731,1.993,733,1.323,736,1.114,737,1.114,739,1.114,741,1.114,743,1.708,745,0.85,747,1.866,748,1.257,751,1.257,753,2.549,758,1.114,763,1.593,765,1.866,766,1.257,785,0.921,788,1.114,794,1.114,819,2.106,857,4.176,861,0.789,863,0.921,884,2.106,913,1.257,914,2.106,934,5.008,938,2.398,960,3.834,984,1.257,1015,0.85,1016,0.921,1017,1.257,1018,3.181,1019,1.114,1030,1.257,1042,2.106,1099,1.257,1100,2.47,1101,3.189,1102,2.47,1103,2.47,1104,3.731,1105,3.731,1106,2.47,1107,3.731,1108,3.181,1109,2.819,1110,3.731,1111,2.47,1112,3.731,1113,4.156,1114,2.47,1115,3.731,1116,2.47,1117,2.47,1118,1.474,1119,2.47,1120,2.178,1121,1.474,1122,1.474,1123,4.156,1124,1.474,1125,1.474,1126,1.474,1127,1.474,1128,1.474,1129,1.474,1130,1.474,1131,1.474,1132,1.474,1133,1.257,1134,1.474,1135,2.47,1136,1.474,1137,1.474,1138,4.156,1139,1.474,1140,1.474,1141,1.474,1142,1.474,1143,1.474,1144,1.474,1145,1.474,1146,1.474,1147,1.474,1148,1.474,1149,1.474,1150,3.189,1151,1.866,1152,2.47,1153,2.47,1154,2.47,1155,1.474,1156,2.47,1157,1.474,1158,2.47,1159,3.731,1160,2.47,1161,1.474,1162,3.731,1163,2.47,1164,2.47,1165,2.47,1166,1.474,1167,1.474,1168,2.47,1169,2.47,1170,2.47,1171,1.866,1172,2.47,1173,2.47,1174,1.474,1175,2.47,1176,2.47,1177,1.474,1178,2.47,1179,4.156,1180,1.474,1181,1.474,1182,2.47,1183,1.474,1184,1.474,1185,1.474,1186,1.474,1187,1.474,1188,1.474,1189,1.474,1190,1.474,1191,1.474,1192,1.474,1193,1.474,1194,1.474,1195,1.474,1196,1.474,1197,1.474,1198,1.474,1199,1.474,1200,1.474,1201,1.474,1202,1.474,1203,1.474,1204,1.474,1205,1.474,1206,1.474,1207,1.474,1208,2.47,1209,1.474,1210,1.474,1211,1.474,1212,1.474,1213,1.474,1214,1.474,1215,1.474,1216,1.474,1217,1.474,1218,1.474,1219,1.474,1220,1.257,1221,1.474,1222,1.474,1223,3.731,1224,1.257,1225,1.474,1226,1.474,1227,1.474,1228,1.474,1229,3.189,1230,3.189,1231,1.474,1232,1.474,1233,1.474,1234,1.474,1235,1.474,1236,1.474,1237,1.474,1238,1.474,1239,1.474,1240,1.474,1241,1.474,1242,1.474,1243,1.474,1244,1.474,1245,1.474,1246,1.474,1247,1.474,1248,3.189,1249,3.731,1250,1.474,1251,3.189,1252,1.474,1253,1.474,1254,1.474,1255,1.474,1256,1.474,1257,1.474,1258,1.474,1259,1.474,1260,1.474,1261,1.474,1262,1.474,1263,1.474,1264,1.474,1265,1.474,1266,1.474,1267,1.687,1268,1.474,1269,2.47,1270,2.47,1271,1.474,1272,1.474,1273,3.189,1274,1.474,1275,1.474,1276,1.474,1277,1.474,1278,2.47,1279,1.474,1280,1.474,1281,1.474,1282,1.474,1283,2.47,1284,2.47,1285,2.47,1286,2.47,1287,2.47,1288,1.866,1289,1.474,1290,2.47,1291,1.257,1292,1.474,1293,1.474,1294,2.47,1295,1.474,1296,1.474,1297,1.257,1298,1.474,1299,1.474,1300,1.474,1301,2.47,1302,1.474,1303,1.474,1304,1.474,1305,1.474,1306,1.474,1307,1.474,1308,1.474,1309,1.474,1310,1.474,1311,1.474,1312,1.257,1313,1.474,1314,1.474,1315,1.474,1316,1.474]],["title/components/LoginComponent.html",[0,0.251,102,0.726]],["body/components/LoginComponent.html",[0,0.343,1,0.479,2,0.905,3,0.11,4,0.096,5,0.601,6,0.601,7,0.601,8,0.601,9,0.096,13,0.601,14,1.806,15,1.611,16,0.897,18,0.855,20,0.855,22,0.11,23,0.436,24,0.988,26,0.975,30,0.664,32,0.237,35,0.532,37,0.255,38,0.023,39,0.307,40,0.467,41,0.255,43,0.775,44,1.178,49,2.064,50,1.486,51,1.486,52,1.714,54,0.826,56,0.691,57,1.126,60,0.805,61,1.127,62,1.126,63,0.203,64,0.218,65,0.009,73,0.537,74,0.957,75,0.957,76,0.601,77,1.36,78,0.601,80,0.601,81,0.479,82,0.601,83,0.479,84,0.601,85,0.479,86,0.568,87,0.957,88,0.452,89,0.601,90,0.479,91,0.601,92,0.479,93,0.601,94,0.679,95,0.808,96,0.601,97,0.452,98,0.601,99,0.452,100,0.537,101,0.601,102,0.91,103,0.601,104,0.479,105,1.507,106,0.601,107,0.452,108,0.601,109,0.452,110,1.248,111,0.601,112,0.479,113,0.568,114,0.452,115,0.452,116,0.601,117,0.601,118,0.009,119,0.009,120,0.006,147,2.547,150,1.126,168,0.805,171,1.333,219,1.126,220,1.333,229,2.074,230,2.408,231,2.452,232,1.333,234,1.404,243,2.306,250,0.758,251,1.552,269,1.281,276,1.664,277,2.565,281,2.064,283,1.395,290,2.376,295,0.601,326,1.127,330,1.36,341,1.616,372,1.045,379,1.552,384,1.664,385,1.206,387,1.014,397,2.362,444,1.126,446,1.333,447,2.951,448,2.408,449,1.333,450,1.22,451,2.234,452,1.474,453,2.421,454,1.474,455,2.064,456,2.76,457,1.045,458,1.333,459,2.348,460,2.348,461,2.348,462,2.582,463,2.365,464,1.333,465,2.76,466,4.07,467,2.421,468,1.474,469,2.781,470,1.793,471,2.348,472,1.474,473,1.474,474,1.474,475,1.474,476,1.474,477,2.348,478,2.926,479,1.474,480,1.333,481,2.926,482,2.926,483,1.474,484,2.926,485,3.293,486,1.793,487,3.508,488,2.421,489,2.926,490,2.926,491,2.926,492,2.421,493,0.805,494,1.22,495,1.474,496,1.474,497,2.421,498,1.474,499,1.452,500,1.22,501,2.926,502,2.348,503,4.225,504,2.348,505,2.348,506,1.793,507,2.122,508,2.348,509,2.348,510,1.664,511,2.348,512,2.348,513,3.336,514,2.348,515,3.211,516,2.348,517,1.943,518,2.401,519,3.336,520,1.474,521,1.474,522,1.474,523,1.474,524,1.474,525,1.474,526,1.474,527,2.348,528,2.365,529,3.88,530,2.348,531,1.943,532,2.122,533,3.016,534,2.348,535,3.016,536,4.225,537,1.943,538,3.016,539,1.474,540,1.474,541,1.474,542,1.474,543,1.474,544,1.474,545,1.474,546,3.336,547,3.336,548,1.474,549,1.045,550,2.926,551,2.645,552,2.926,553,1.596,554,1.333,555,1.333,556,1.333,557,1.333,558,1.664,559,1.793,560,3.336,561,1.474,562,1.474,563,2.348,564,0.975,565,1.22,566,0.912,567,0.856,568,2.114,569,0.912,570,0.912,571,0.975,572,1.793,573,1.943,574,2.348,575,2.365,576,1.474,577,1.333,728,1.045,729,1.045,733,1.045,739,1.474,743,1.045,745,1.126,763,0.975,778,1.126,861,1.045,863,1.22,904,2.76,905,3.336,906,3.765,907,3.336,1012,1.664,1015,2.963,1016,1.22,1021,1.22,1023,1.333,1024,1.943,1025,1.943,1032,1.664,1317,2.649,1318,4.415,1319,3.107,1320,3.107,1321,3.107,1322,1.951,1323,1.951,1324,1.951,1325,1.951,1326,1.951,1327,1.951,1328,1.951,1329,1.951,1330,1.951,1331,1.951,1332,1.951,1333,1.951,1334,1.951,1335,1.951,1336,1.951,1337,1.951,1338,1.951,1339,1.951,1340,1.951,1341,1.951,1342,3.107,1343,3.107,1344,1.951,1345,1.951,1346,1.664,1347,1.664]],["title/classes/MyErrorStateMatcher.html",[65,0.01,467,2.203]],["body/classes/MyErrorStateMatcher.html",[0,0.352,3,0.163,4,0.142,9,0.142,14,0.799,15,0.713,16,0.673,18,0.799,20,0.799,22,0.163,24,0.848,26,1.451,30,0.744,35,0.23,37,0.38,38,0.023,39,0.268,40,0.23,41,0.38,43,0.467,44,0.92,49,2.312,52,2.105,54,0.721,56,0.756,57,1.676,60,1.198,61,1.225,62,1.676,63,0.302,64,0.278,65,0.012,94,0.635,95,0.755,102,0.599,105,1.214,110,0.975,118,0.013,119,0.013,120,0.009,147,2.428,150,1.676,168,1.198,171,1.985,219,1.676,220,1.985,229,2.65,230,2.709,231,2.714,232,1.985,234,1.579,243,2.373,250,1.128,251,2.102,269,1.198,277,2.471,281,1.967,283,1.384,290,2.373,295,0.895,299,1.358,326,1.44,330,0.895,341,1.54,385,1.128,387,0.948,397,1.845,444,1.676,446,1.985,447,2.312,448,1.451,449,1.985,450,1.816,451,1.676,452,2.195,453,2.63,454,2.195,455,2.312,456,3.751,457,1.556,458,1.985,459,4.097,460,4.097,461,3.738,462,2.254,463,1.556,464,1.985,465,2.63,466,4.097,467,3.092,468,3.179,469,3.656,470,3.129,471,3.179,472,2.195,473,3.179,474,2.195,475,2.195,476,2.195,477,2.195,478,2.195,479,2.195,480,1.985,481,2.195,482,2.195,483,2.195,484,2.195,485,1.985,486,1.676,487,3.379,488,1.816,489,2.195,490,2.195,491,2.195,492,1.816,493,1.198,494,1.816,495,2.195,496,2.195,497,1.816,498,2.195,499,1.967,500,1.816,501,2.195,502,2.195,503,4.097,504,2.195,505,2.195,506,1.676,507,1.985,508,2.195,509,2.195,510,1.556,511,2.195,512,2.195,513,3.179,514,2.195,515,3.092,516,2.195,517,1.816,518,2.312,519,2.195,520,2.195,521,2.195,522,2.195,523,2.195,524,2.195,525,2.195,526,2.195,527,2.195,528,2.254,529,3.179,530,2.195,531,1.816,532,1.985,533,2.874,534,2.195,535,2.874,536,3.738,537,1.816,538,1.985,539,2.195,540,2.195,541,2.195,542,2.195,543,2.195,544,2.195,545,2.195,546,4.097,547,4.097,548,2.195,549,1.556,550,3.738,551,3.379,552,3.738,553,2.04,554,1.985,555,1.985,556,1.985,557,1.985,558,1.556,559,1.676,560,2.195,561,2.195,562,2.195,563,3.179,564,1.451,565,1.816,566,1.358,567,1.274,568,1.274,569,1.358,570,1.358,571,1.451,572,1.676,573,1.816,574,2.195,575,1.556,576,2.195,577,1.985,1348,4.208,1349,2.906]],["title/components/PasswordSpecsComponent.html",[0,0.251,104,0.865]],["body/components/PasswordSpecsComponent.html",[0,0.415,1,0.973,2,1.518,3,0.223,4,0.194,5,1.221,6,1.221,7,1.221,8,1.221,9,0.194,13,1.221,14,1.995,15,1.78,16,0.918,18,1.435,20,1.435,22,0.223,30,0.784,32,0.708,35,0.412,38,0.022,39,0.332,43,0.637,44,1.14,56,0.446,61,1.697,63,0.411,64,0.223,65,0.012,73,1.09,74,1.607,75,1.607,76,1.221,77,1.908,78,1.221,80,1.221,81,0.973,82,1.221,83,0.973,84,1.221,85,0.973,86,1.154,87,1.607,88,0.918,89,1.221,90,0.973,91,1.221,92,0.973,93,1.221,94,0.866,95,1.03,96,1.221,97,0.918,98,1.221,99,0.918,100,1.09,101,1.221,102,0.817,103,1.221,104,1.52,105,1.738,106,1.221,107,0.918,108,1.221,109,0.918,110,0.918,111,1.221,112,0.973,113,1.154,114,0.918,115,0.918,116,1.221,117,1.221,118,0.012,119,0.016,120,0.012,187,3.644,305,2.15,326,1.518,330,1.908,429,4.446,431,4.446,1291,4.446,1350,4.97,1351,3.378,1352,5.215,1353,5.829,1354,5.215,1355,3.962,1356,3.962,1357,4.446,1358,5.215,1359,5.215,1360,6.193,1361,5.215,1362,5.215,1363,5.215,1364,5.215,1365,5.215,1366,5.215,1367,5.215]],["title/classes/Post.html",[65,0.01,200,1.546]],["body/classes/Post.html",[3,0.223,4,0.194,9,0.194,22,0.223,23,0.732,24,1.243,25,1.14,32,0.634,35,0.532,37,0.518,38,0.022,39,0.394,40,0.552,41,0.518,54,1.231,64,0.223,65,0.012,115,1.351,118,0.012,119,0.016,120,0.012,125,3.886,200,3.032,235,2.555,267,1.961,281,1.852,283,1.449,299,1.852,305,2.9,307,3.644,310,5.479,314,4.679,317,2.706,320,2.706,410,2.502,447,2.437,640,2.706,938,3.008,1368,3.378,1369,6.435,1370,3.962,1371,3.962,1372,3.962,1373,3.962,1374,3.962,1375,3.94,1376,3.962,1377,3.962,1378,5.215,1379,3.962]],["title/injectables/PostProposalService.html",[143,2.033,263,0.684]],["body/injectables/PostProposalService.html",[3,0.206,4,0.18,9,0.18,16,1.641,22,0.206,23,0.696,24,0.629,25,1.083,30,0.745,32,0.602,35,0.511,37,0.734,38,0.023,39,0.357,40,0.511,41,0.734,43,0.965,44,1.083,50,1.728,51,1.728,54,0.962,56,0.676,63,0.381,64,0.206,65,0.011,86,1.749,113,1.882,118,0.011,119,0.015,120,0.011,122,1.425,143,2.859,190,1.609,200,2.898,235,1.814,263,0.962,265,1.425,267,1.068,287,1.609,289,2.043,290,2.838,295,1.728,305,2.043,332,2.475,387,2.33,410,1.343,426,3.097,510,3.462,518,2.807,528,2.654,644,4.13,663,3.465,713,2.507,928,2.802,937,3.729,959,1.833,979,4.225,1220,4.225,1380,3.129,1381,4.955,1382,4.955,1383,4.955,1384,4.955,1385,4.955,1386,1.966,1387,4.955,1388,1.966,1389,3.67,1390,3.67,1391,6.007,1392,3.67,1393,3.67,1394,3.67,1395,3.67,1396,3.67,1397,3.67,1398,3.67,1399,3.67,1400,3.67,1401,3.67,1402,3.67,1403,2.507,1404,3.67,1405,3.67,1406,3.67,1407,3.67,1408,3.67,1409,3.67,1410,3.67,1411,3.67,1412,3.67,1413,3.67,1414,3.67]],["title/classes/Proposal.html",[65,0.01,387,1.15]],["body/classes/Proposal.html",[3,0.237,4,0.206,9,0.206,22,0.237,23,0.762,24,1.24,25,0.92,32,0.77,35,0.531,37,0.551,38,0.022,39,0.268,40,0.553,41,0.785,54,1.199,64,0.237,65,0.019,118,0.013,119,0.016,120,0.013,125,3.994,235,2.534,267,2.053,269,2.474,299,1.967,305,2.613,307,3.751,332,3.413,348,2.631,387,2.359,410,2.56,411,3.588,663,3.784,794,3.18,938,3.462,1375,4.534,1415,3.588,1416,4.209,1417,4.209,1418,4.209,1419,4.209,1420,4.209,1421,4.209,1422,4.209,1423,4.209,1424,4.209,1425,4.209,1426,4.209]],["title/injectables/ProposalService.html",[144,2.033,263,0.684]],["body/injectables/ProposalService.html",[3,0.141,4,0.123,9,0.123,22,0.141,23,0.531,30,0.568,32,0.459,35,0.531,37,0.795,38,0.022,39,0.387,40,0.531,41,0.795,43,1.07,50,1.82,51,1.82,54,1.086,56,0.568,63,0.261,64,0.141,65,0.007,118,0.008,119,0.011,120,0.008,122,0.975,144,2.179,190,1.101,200,2.215,235,2.601,263,0.733,265,0.975,267,1.81,269,2.505,271,3.817,272,4.591,281,3.161,283,1.173,287,1.101,295,1.82,298,3.76,300,2.966,305,2.961,324,3.817,329,3.22,332,3.456,336,3.799,341,2.436,387,2.306,396,2.58,493,1.035,510,3.565,528,2.023,593,3.22,594,3.22,599,3.22,616,3.22,628,2.14,630,5.401,632,2.14,663,3.803,723,3.22,816,3.22,928,2.706,937,4.026,959,1.254,1386,1.345,1388,2.023,1403,1.715,1427,2.14,1428,4.541,1429,3.777,1430,3.777,1431,3.777,1432,3.777,1433,3.777,1434,3.777,1435,3.777,1436,3.777,1437,3.777,1438,3.777,1439,3.777,1440,2.51,1441,2.51,1442,2.51,1443,2.51,1444,2.51,1445,2.51,1446,2.51,1447,2.51,1448,5.052,1449,4.541,1450,2.51,1451,2.51,1452,2.51,1453,5.052,1454,2.51,1455,3.777,1456,2.51,1457,2.51,1458,2.51,1459,2.51,1460,2.51,1461,2.51,1462,2.51,1463,2.51,1464,2.51,1465,2.51,1466,2.51,1467,2.51,1468,2.51,1469,2.51,1470,2.51,1471,2.51,1472,2.51,1473,2.51,1474,2.51,1475,2.51,1476,2.51,1477,2.51,1478,2.51,1479,2.51,1480,2.51,1481,2.51,1482,2.51,1483,2.51,1484,2.51,1485,2.51,1486,2.51,1487,2.51,1488,2.51]],["title/components/RegisterComponent.html",[0,0.251,107,0.817]],["body/components/RegisterComponent.html",[0,0.267,1,0.732,2,0.868,3,0.21,4,0.091,5,0.919,6,0.571,7,0.571,8,0.571,9,0.091,11,1.07,13,0.571,14,1.788,15,1.596,16,0.691,18,0.821,20,0.821,22,0.104,23,0.419,24,0.971,25,0.405,26,1.49,28,3.605,30,0.449,32,0.363,35,0.518,37,0.243,38,0.023,39,0.349,40,0.434,41,0.243,43,0.882,44,1.098,50,1.448,51,1.895,52,1.665,54,0.735,56,0.637,60,0.764,61,1.089,63,0.192,64,0.104,65,0.005,73,0.51,74,0.919,75,0.919,76,0.571,77,1.448,78,0.571,80,0.571,81,0.455,82,0.571,83,0.455,84,0.571,85,0.455,86,1.089,87,0.919,88,0.43,89,0.571,90,0.455,91,0.571,92,0.455,93,0.571,94,0.405,95,0.482,96,0.571,97,0.43,98,0.571,99,0.43,100,0.51,101,0.571,102,0.382,103,0.571,104,0.732,105,1.531,106,0.571,107,0.994,108,0.571,109,0.43,110,0.43,111,0.571,112,0.455,113,0.54,114,0.43,115,1.377,116,0.571,117,0.571,118,0.006,119,0.009,120,0.006,145,2.297,150,1.07,151,1.401,168,0.764,174,3.988,187,1.159,188,1.401,191,1.266,222,1.401,231,1.308,234,0.868,235,0.679,243,1.937,250,0.72,251,1.49,277,2.904,283,0.771,290,1.23,295,1.153,326,0.868,330,1.321,341,1.092,352,1.266,355,1.266,372,0.993,373,1.07,378,1.401,379,1.49,383,2.517,384,2.297,385,2.049,397,2.484,410,1.569,437,1.721,439,2.159,447,2.648,455,1.749,457,0.993,462,2.517,470,2.896,486,2.159,499,2.196,500,1.159,517,1.865,535,2.037,537,1.865,549,0.993,553,2.45,558,1.598,559,2.159,564,0.926,566,1.394,567,1.308,568,2.826,569,1.749,570,2.196,571,1.49,572,2.474,573,2.68,575,2.297,728,1.598,729,1.598,731,2.68,733,0.993,738,1.401,741,2.254,743,0.993,745,1.07,763,0.926,778,1.721,821,2.543,861,2.004,875,2.929,902,2.543,903,1.581,904,3.785,905,2.254,907,3.24,938,1.721,1001,3.656,1005,1.581,1007,2.037,1009,1.581,1015,2.474,1016,1.159,1019,1.401,1021,1.159,1023,1.266,1024,1.159,1025,1.159,1028,1.581,1109,3.24,1224,1.581,1267,2.037,1312,1.581,1347,2.543,1357,2.543,1489,1.581,1490,3.742,1491,2.983,1492,3.742,1493,3.656,1494,3.656,1495,3.191,1496,3.742,1497,3.191,1498,5.02,1499,3.24,1500,1.581,1501,3.793,1502,3.191,1503,2.983,1504,1.854,1505,2.983,1506,1.854,1507,1.854,1508,2.983,1509,4.288,1510,2.983,1511,2.983,1512,2.983,1513,2.543,1514,1.854,1515,1.854,1516,4.288,1517,1.854,1518,2.983,1519,2.983,1520,1.854,1521,1.854,1522,1.854,1523,1.854,1524,1.854,1525,1.854,1526,1.854,1527,1.854,1528,1.854,1529,1.854,1530,2.339,1531,1.854,1532,1.266,1533,1.581,1534,1.854,1535,1.581,1536,1.581,1537,1.581,1538,1.581,1539,1.401,1540,1.401,1541,1.581,1542,1.854,1543,1.401,1544,3.24,1545,2.827,1546,1.854,1547,1.854,1548,3.656,1549,2.983,1550,1.854,1551,1.854,1552,1.854,1553,1.581,1554,1.581,1555,1.581,1556,1.581,1557,1.581,1558,2.983,1559,1.854,1560,1.854,1561,1.581,1562,1.581,1563,1.581,1564,1.581,1565,2.983,1566,1.854,1567,1.854,1568,1.854,1569,1.854,1570,1.581,1571,1.854,1572,1.581,1573,3.191,1574,1.854,1575,1.581,1576,1.581,1577,1.854,1578,1.854,1579,1.854,1580,1.854,1581,1.581,1582,2.543,1583,2.543,1584,2.543,1585,2.543,1586,2.827,1587,3.191,1588,2.543,1589,1.854,1590,1.854,1591,1.854,1592,1.581,1593,4.28,1594,4.147,1595,2.983,1596,2.543,1597,3.656,1598,3.656,1599,2.543,1600,2.983,1601,2.983,1602,2.983,1603,2.983,1604,1.581,1605,1.581,1606,1.581,1607,1.581,1608,1.581,1609,1.854,1610,2.543,1611,3.742,1612,1.854,1613,1.854,1614,1.854,1615,1.854,1616,1.854,1617,1.854,1618,1.854]],["title/components/ResetLinkComponent.html",[0,0.251,109,0.817]],["body/components/ResetLinkComponent.html",[0,0.321,1,0.919,2,1.09,3,0.254,4,0.122,5,0.765,6,0.765,7,0.765,8,0.765,9,0.122,11,1.432,13,0.765,14,1.881,15,1.679,16,1.164,17,3.193,18,1.03,20,1.03,22,0.14,23,0.526,24,0.642,25,0.543,26,1.871,29,3.193,30,0.563,32,0.302,35,0.514,37,0.325,38,0.023,39,0.287,40,0.426,41,0.325,43,0.807,44,1.179,49,1.16,50,1.39,51,1.813,52,1.454,54,0.425,56,0.681,60,1.023,61,1.313,63,0.258,64,0.14,65,0.007,73,0.683,74,1.154,75,1.154,76,0.765,77,1.746,78,0.765,80,0.765,81,0.609,82,0.765,83,0.609,84,0.765,85,0.609,86,0.723,87,1.154,88,0.575,89,0.765,90,0.609,91,0.765,92,0.609,93,0.765,94,0.543,95,0.645,96,0.765,97,0.575,98,0.765,99,0.575,100,0.683,101,0.765,102,0.511,103,0.765,104,0.919,105,1.63,106,0.765,107,0.575,108,0.765,109,1.164,110,1.564,111,0.765,112,0.609,113,0.723,114,0.575,115,0.575,116,0.765,117,0.765,118,0.007,119,0.011,120,0.007,168,1.023,187,1.552,188,1.875,191,1.695,225,4.492,234,1.462,250,0.964,251,1.871,283,0.772,290,1.859,326,1.09,330,1.548,341,1.838,372,1.329,379,1.24,383,2.416,384,1.329,385,1.454,397,2.485,406,1.432,426,2.341,437,2.898,455,2.108,457,1.329,462,2.887,486,2.898,487,2.558,499,1.75,518,1.75,549,2.416,551,2.558,553,1.859,566,1.16,567,1.088,568,2.58,569,1.16,570,1.16,571,1.24,572,2.161,573,2.341,575,2.69,715,1.875,728,1.329,729,1.329,733,1.329,743,1.329,745,1.432,763,1.24,778,1.432,861,1.329,863,1.552,875,3.431,877,3.14,883,4.832,891,2.116,892,2.116,898,2.829,904,3.14,933,3.193,990,4.596,997,2.116,1015,3.11,1021,1.552,1024,1.552,1025,1.552,1267,2.558,1346,2.116,1493,4.283,1494,4.283,1499,3.795,1501,4.445,1513,3.193,1532,1.695,1533,2.116,1535,2.116,1536,2.116,1537,2.116,1538,2.116,1539,1.875,1540,1.875,1543,1.875,1544,1.875,1545,1.875,1548,2.116,1553,2.116,1554,2.116,1555,2.116,1556,2.116,1557,2.116,1561,2.116,1562,2.116,1586,1.875,1594,2.829,1597,4.283,1598,4.283,1599,3.193,1619,5.607,1620,2.116,1621,4.51,1622,3.745,1623,4.51,1624,5.391,1625,3.745,1626,2.482,1627,3.845,1628,3.745,1629,2.482,1630,2.482,1631,3.745,1632,5.023,1633,3.745,1634,2.482,1635,3.745,1636,3.745,1637,2.482,1638,3.745,1639,3.745,1640,3.745,1641,2.482,1642,2.482,1643,3.745,1644,2.482,1645,2.482,1646,2.482,1647,2.482,1648,2.482,1649,2.482,1650,2.482,1651,3.745,1652,2.482,1653,2.482,1654,2.482,1655,3.745,1656,2.482,1657,2.482,1658,2.482,1659,2.482,1660,2.482,1661,2.482,1662,2.482,1663,2.482,1664,3.745,1665,2.482,1666,2.482,1667,2.482,1668,2.482]],["title/injectables/ResetPasswordService.html",[263,0.684,877,2.203]],["body/injectables/ResetPasswordService.html",[3,0.257,4,0.224,9,0.224,22,0.257,23,0.802,24,0.979,25,1.363,30,0.859,32,0.555,35,0.531,37,0.855,38,0.022,39,0.416,40,0.451,41,0.855,43,1.002,56,0.643,63,0.474,64,0.257,65,0.014,118,0.014,119,0.017,120,0.014,122,1.772,190,2.002,263,1.108,265,1.772,287,2.002,295,1.92,406,2.634,877,3.57,928,3.358,1386,2.445,1388,3.498,1627,5.314,1669,5.848,1670,3.893,1671,5.711,1672,6.233,1673,4.566,1674,5.711,1675,4.566,1676,5.711,1677,4.566,1678,5.711,1679,4.566,1680,4.566,1681,4.709,1682,4.566,1683,5.314,1684,4.709,1685,4.566,1686,4.566,1687,4.566]],["title/components/ShareProposalComponent.html",[0,0.251,112,0.865]],["body/components/ShareProposalComponent.html",[0,0.441,1,0.869,2,1.408,3,0.199,4,0.174,5,1.091,6,1.091,7,1.091,8,1.091,9,0.174,13,1.091,14,1.971,15,1.759,16,0.821,18,1.331,20,1.331,22,0.199,24,0.607,25,0.774,30,0.728,35,0.28,38,0.022,39,0.308,43,0.569,44,1.057,52,1.375,56,0.666,60,1.46,61,1.604,62,2.043,63,0.368,64,0.199,65,0.01,73,0.974,74,1.49,75,1.49,76,1.091,77,1.824,78,1.091,80,1.091,81,0.869,82,1.091,83,0.869,84,1.091,85,0.869,86,1.031,87,1.49,88,0.821,89,1.091,90,1.352,91,1.091,92,0.869,93,1.091,94,0.774,95,0.921,96,1.091,97,0.821,98,1.091,99,0.821,100,0.974,101,1.091,102,0.73,103,1.091,104,0.869,105,0.869,106,1.091,107,0.821,108,1.091,109,0.821,110,0.821,111,1.091,112,1.57,113,1.99,114,0.821,115,1.372,116,1.091,117,1.091,118,0.011,119,0.015,120,0.011,167,3.02,168,1.994,216,3.654,217,3.024,224,2.79,234,1.408,243,1.46,267,1.031,289,2.555,295,1.697,300,2.121,322,3.024,323,3.654,326,1.408,330,1.824,341,1.77,386,2.676,387,2.174,390,4.696,391,4.124,396,3.304,397,1.553,402,3.02,406,2.043,409,3.02,410,1.77,436,4.124,437,2.79,438,4.124,455,2.261,499,1.655,558,2.591,608,4.124,639,4.124,1375,4.472,1592,4.124,1688,4.837,1689,3.542,1690,3.542,1691,3.542,1692,3.542,1693,3.542,1694,3.542,1695,3.542,1696,3.542,1697,4.837,1698,4.837,1699,4.837,1700,3.542,1701,4.837,1702,3.542,1703,4.837,1704,3.542,1705,3.542,1706,3.542,1707,3.542]],["title/injectables/SocialMediaAuthService.html",[263,0.684,451,2.033]],["body/injectables/SocialMediaAuthService.html",[3,0.201,4,0.175,9,0.175,22,0.201,23,0.683,24,1.099,25,0.78,30,0.731,32,0.433,35,0.541,37,0.723,38,0.023,39,0.352,40,0.469,41,0.723,43,1.03,44,1.062,49,1.667,50,1.099,51,1.099,52,1.384,54,1.124,56,0.699,63,0.37,64,0.201,65,0.011,115,0.826,118,0.011,119,0.015,120,0.011,122,1.384,190,1.564,230,1.781,243,1.47,250,1.384,263,0.943,265,1.384,273,3.671,277,3.276,283,1.28,284,1.781,287,1.564,290,2.003,295,2.021,355,4.242,366,3.671,448,3.102,450,2.229,451,2.803,453,4.353,469,3.189,492,3.455,493,1.47,494,2.229,506,2.057,538,3.319,553,1.47,554,2.435,555,2.435,556,2.435,557,2.435,928,2.965,1288,4.484,1386,1.91,1388,2.603,1681,3.671,1684,2.694,1708,5.891,1709,3.04,1710,4.713,1711,4.143,1712,5.061,1713,5.061,1714,5.061,1715,4.859,1716,4.143,1717,3.566,1718,3.566,1719,3.566,1720,3.566,1721,3.566,1722,5.527,1723,3.566,1724,3.566,1725,3.566,1726,3.566,1727,3.04,1728,3.04,1729,3.566,1730,3.566,1731,3.566,1732,3.04,1733,3.566,1734,3.566,1735,3.566,1736,3.04,1737,3.04,1738,3.04,1739,4.143]],["title/components/TeamComponent.html",[0,0.251,114,0.817]],["body/components/TeamComponent.html",[0,0.336,1,0.973,2,1.154,3,0.151,4,0.131,5,0.825,6,0.825,7,0.825,8,0.825,9,0.131,11,1.545,13,0.825,14,1.902,15,1.698,16,0.919,18,1.091,20,1.091,22,0.151,23,0.557,24,0.999,25,0.586,26,1.338,28,3.224,30,0.596,32,0.482,35,0.532,37,0.35,38,0.023,39,0.394,40,0.477,41,0.35,43,0.759,44,1.14,50,1.454,51,1.454,52,1.539,54,0.68,56,0.697,60,1.104,61,1.374,63,0.278,64,0.151,65,0.008,73,0.737,74,1.222,75,1.222,76,0.825,77,1.716,78,0.825,80,0.825,81,0.658,82,0.825,83,0.658,84,0.825,85,0.658,86,1.374,87,1.222,88,0.621,89,0.825,90,0.658,91,0.825,92,0.658,93,0.825,94,0.586,95,0.696,96,0.825,97,0.621,98,0.825,99,0.621,100,0.737,101,0.825,102,0.552,103,0.825,104,0.658,105,0.973,106,0.825,107,0.621,108,0.825,109,0.621,110,0.621,111,0.825,112,0.658,113,0.78,114,1.209,115,1.573,116,0.825,117,0.825,118,0.008,119,0.012,120,0.008,145,2.794,150,1.545,151,2.024,168,1.104,191,1.83,223,2.478,229,1.435,230,1.338,231,2.07,234,1.154,243,2.151,250,1.04,251,1.338,277,3.215,283,0.552,290,2.151,295,0.825,326,1.154,330,1.607,372,1.435,379,1.338,383,2.123,384,2.123,385,1.539,397,2.442,410,1.451,437,2.287,447,1.252,448,2.781,449,1.83,450,1.674,455,2.206,457,1.435,462,2.982,465,3.261,470,1.545,486,1.545,488,2.95,494,1.674,497,2.95,499,1.252,517,2.478,537,2.478,549,1.435,553,1.634,559,2.723,564,1.338,566,1.252,567,1.175,568,2.442,569,1.252,570,2.206,571,1.338,743,1.435,745,1.545,763,1.338,778,1.545,861,1.435,875,3.563,898,2.024,904,3.261,1015,3.009,1016,1.674,1021,1.674,1023,1.83,1024,1.674,1025,1.674,1267,1.83,1495,4.024,1497,4.024,1499,3.941,1500,2.284,1501,4.405,1502,4.024,1539,2.024,1540,2.024,1541,2.284,1543,2.024,1544,2.024,1545,2.024,1563,2.284,1564,2.284,1570,2.284,1572,2.284,1573,2.284,1575,2.284,1576,2.284,1581,2.284,1582,3.38,1583,3.38,1584,3.38,1585,3.38,1586,2.995,1587,3.38,1588,3.38,1593,3.38,1594,2.995,1596,3.38,1604,2.284,1605,2.284,1606,2.284,1607,2.284,1608,2.284,1740,2.284,1741,4.72,1742,3.965,1743,4.72,1744,4.024,1745,3.965,1746,2.679,1747,2.679,1748,2.679,1749,2.679,1750,2.679,1751,2.679,1752,2.679,1753,2.679,1754,2.679,1755,2.679,1756,2.679,1757,2.679,1758,2.679,1759,2.679,1760,2.679,1761,2.284,1762,2.679,1763,2.679,1764,2.679,1765,2.679,1766,2.679,1767,2.679,1768,2.679,1769,3.965,1770,2.679,1771,2.679]],["title/classes/Teams.html",[65,0.01,410,1.29]],["body/classes/Teams.html",[3,0.291,4,0.254,9,0.254,22,0.291,23,0.866,24,1.211,32,0.749,35,0.52,37,0.677,38,0.022,39,0.443,40,0.52,41,0.677,54,1.129,64,0.291,65,0.015,118,0.016,119,0.019,120,0.016,235,2.41,299,2.419,304,3.91,305,2.715,317,3.534,320,3.534,410,2.257,1772,4.412,1773,5.175,1774,5.175,1775,5.175]],["title/injectables/TeamsService.html",[263,0.684,1120,2.407]],["body/injectables/TeamsService.html",[3,0.279,4,0.243,9,0.243,22,0.279,23,0.844,30,0.904,32,0.603,35,0.511,37,0.649,38,0.022,39,0.316,40,0.475,41,0.649,43,0.797,50,1.528,51,1.528,54,0.85,56,0.756,63,0.515,64,0.279,65,0.015,118,0.015,119,0.018,120,0.015,122,1.926,190,2.175,263,1.166,265,1.926,287,2.175,295,1.528,410,2.2,493,2.045,510,3.219,928,3.23,937,3.468,959,2.478,1109,4.886,1120,4.105,1386,2.657,1388,2.657,1403,3.388,1776,4.229,1777,6.011,1778,4.961,1779,4.961,1780,4.961,1781,4.961,1782,4.961]],["title/injectables/TestServiceService.html",[263,0.684,403,2.407]],["body/injectables/TestServiceService.html",[0,0.417,3,0.267,4,0.233,9,0.233,32,0.827,35,0.376,38,0.023,56,0.659,63,0.493,64,0.267,65,0.014,115,1.102,118,0.014,119,0.018,120,0.014,122,1.846,125,3.662,168,1.96,234,1.981,263,1.137,265,1.846,267,1.848,287,2.085,289,2.415,300,2.569,387,1.551,403,4.001,410,2.144,455,2.967,456,3.968,458,3.248,469,2.743,470,3.925,499,2.223,938,2.743,1007,3.248,1783,4.994,1784,4.054,1785,5.857,1786,4.755,1787,5.857,1788,4.755,1789,6.348,1790,4.755,1791,4.755,1792,4.755,1793,4.755]],["title/injectables/TransferDataService.html",[263,0.684,448,1.761]],["body/injectables/TransferDataService.html",[3,0.283,4,0.247,9,0.247,22,0.283,23,0.852,24,0.863,25,1.326,30,0.912,35,0.479,37,0.659,38,0.022,39,0.32,40,0.398,41,0.659,43,0.809,44,1.101,56,0.683,63,0.523,64,0.283,65,0.015,118,0.015,119,0.018,120,0.015,122,1.955,234,1.466,263,0.977,265,1.955,448,3.03,488,4.069,959,2.516,1761,4.294,1794,5.55,1795,4.294,1796,6.066,1797,6.066,1798,5.036,1799,5.036,1800,6.066,1801,5.036,1802,5.036,1803,5.036,1804,5.036,1805,5.036]],["title/classes/User.html",[65,0.01,283,0.726]],["body/classes/User.html",[3,0.249,4,0.217,9,0.217,22,0.249,23,0.788,24,1.233,25,0.97,32,0.682,35,0.527,37,0.58,38,0.022,39,0.445,40,0.558,41,0.58,54,1.227,64,0.249,65,0.013,115,1.636,118,0.013,119,0.017,120,0.013,235,2.492,267,1.291,283,1.475,299,2.073,302,3.781,304,3.351,305,2.536,307,3.845,310,5.374,314,4.647,317,3.83,320,3.83,447,3.182,480,3.029,1806,3.781,1807,4.435,1808,4.435,1809,4.435,1810,4.435,1811,4.435]],["title/injectables/UserLoginService.html",[263,0.684,463,1.888]],["body/injectables/UserLoginService.html",[3,0.203,4,0.177,9,0.177,22,0.203,23,0.688,24,1.163,30,0.737,32,0.439,35,0.547,37,0.781,38,0.023,39,0.38,40,0.508,41,0.781,43,1.034,44,1.071,49,1.687,50,1.112,51,1.112,52,1.401,54,1.231,56,0.626,63,0.375,64,0.203,65,0.011,105,1.75,118,0.011,119,0.015,120,0.011,122,1.401,190,1.583,243,1.488,263,0.951,265,1.401,273,3.702,274,2.727,283,1.285,287,1.583,295,1.982,355,4.494,366,3.702,463,2.624,469,3.442,492,3.477,493,1.488,506,2.082,928,2.98,1092,3.078,1288,4.507,1386,1.933,1388,2.624,1710,4.743,1711,4.178,1712,5.086,1713,5.086,1714,4.178,1716,4.178,1727,3.078,1728,3.078,1732,3.078,1736,3.078,1737,3.078,1738,3.078,1739,4.178,1812,5.272,1813,3.078,1814,4.9,1815,4.9,1816,3.61,1817,4.9,1818,3.61,1819,3.61,1820,3.61,1821,3.61,1822,4.9,1823,3.61,1824,3.61,1825,3.61,1826,3.61,1827,3.61,1828,3.61,1829,3.61,1830,3.61,1831,3.61,1832,4.9,1833,3.61,1834,3.61]],["title/injectables/UserRegisterService.html",[145,1.888,263,0.684]],["body/injectables/UserRegisterService.html",[3,0.27,4,0.236,9,0.236,22,0.27,25,1.051,30,0.887,32,0.584,35,0.504,37,0.772,38,0.022,39,0.375,40,0.38,41,0.772,43,0.948,56,0.748,63,0.499,64,0.27,65,0.014,118,0.015,119,0.018,120,0.015,122,1.866,145,3.158,190,2.108,263,1.144,265,1.866,287,2.108,295,1.965,493,1.982,928,3.186,937,3.402,959,2.401,1108,5.67,1386,2.575,1388,2.575,1403,3.283,1530,3.686,1681,4.455,1683,4.098,1684,3.632,1812,5.024,1835,4.098,1836,5.896,1837,4.807,1838,5.896,1839,4.807,1840,4.807,1841,4.807,1842,4.807,1843,4.807,1844,4.807,1845,4.807]],["title/coverage.html",[1846,4.11]],["body/coverage.html",[0,0.506,1,0.864,9,0.172,10,3,11,2.03,12,3,38,0.022,40,0.278,57,2.03,65,0.02,81,0.864,83,0.864,85,0.864,88,0.815,90,0.864,92,0.864,94,0.769,97,0.815,99,0.815,102,0.725,104,0.864,107,0.815,109,0.815,112,0.864,114,0.815,118,0.011,119,0.015,120,0.011,121,3,142,2.03,143,2.03,144,2.03,145,1.884,164,2.658,165,2.403,187,2.199,192,2.403,200,1.543,216,2.658,217,2.199,219,2.03,225,2.403,234,1.024,263,1.338,264,2.403,266,3,280,2.03,283,0.725,298,2.03,300,2.96,301,3,321,3,378,2.658,386,3.638,387,1.147,403,2.403,410,1.288,439,3.77,444,2.03,446,3.749,448,1.757,451,2.03,453,2.199,463,1.884,467,2.199,578,3,583,3,644,2.199,785,2.199,786,3,787,3,806,3,868,3,869,3,877,2.199,911,3,912,3,983,3,1007,4.945,1070,3,1071,2.658,1073,3,1074,3,1099,3,1120,2.403,1350,3,1351,3,1368,3,1380,3,1415,3,1427,3,1489,3,1530,2.199,1532,2.403,1610,3,1619,3,1620,3,1669,3,1670,3,1708,3,1709,3,1740,3,1772,3,1776,3,1783,3,1784,3,1794,3,1795,3,1806,3,1812,3.638,1813,3,1835,3,1846,3,1847,3.518,1848,3.518,1849,3.518,1850,3.518,1851,5.489,1852,3.518,1853,3,1854,6.182,1855,5.902,1856,3.518,1857,3.518,1858,3,1859,3.518,1860,3.518,1861,3.518,1862,4.815,1863,4.815,1864,4.815,1865,4.815,1866,3.518,1867,4.815,1868,3.518,1869,3.518,1870,3.518,1871,3.518,1872,3.518,1873,3.518,1874,3.518,1875,5.902,1876,3.518,1877,3.518,1878,3.518,1879,3.518,1880,3.518,1881,3.518,1882,3.518,1883,3.518,1884,3.518,1885,3.518,1886,3.518,1887,3,1888,3,1889,5.902,1890,4.105,1891,3,1892,4.105,1893,3,1894,3,1895,3.518,1896,3.518]],["title/dependencies.html",[131,2.897,1897,2.938]],["body/dependencies.html",[38,0.022,63,0.519,118,0.015,119,0.018,120,0.015,131,3.414,133,3.776,153,5.148,154,4.562,168,2.061,195,5.148,196,3.776,197,3.776,222,4.562,223,3.775,224,2.884,229,2.677,230,2.497,231,2.192,250,1.94,646,3.776,959,2.497,1297,4.262,1898,4.998,1899,6.1,1900,4.998,1901,6.038,1902,4.998,1903,4.998,1904,4.998,1905,4.262,1906,4.998,1907,4.998,1908,4.998,1909,4.998,1910,4.998,1911,4.998,1912,4.998,1913,4.998,1914,4.998,1915,4.998,1916,4.998,1917,4.998,1918,4.998]],["title/miscellaneous/functions.html",[1151,3.205,1919,2.007]],["body/miscellaneous/functions.html",[22,0.315,37,0.733,38,0.021,39,0.357,41,0.733,118,0.017,119,0.02,120,0.017,1151,4.234,1532,4.412,1853,4.778,1919,3.827,1920,5.603,1921,5.603,1922,6.46,1923,5.603]],["title/index.html",[22,0.165,271,2.22,1924,2.938]],["body/index.html",[0,0.455,4,0.236,15,1.182,38,0.018,39,0.306,118,0.015,119,0.018,120,0.015,126,4.106,147,2.778,234,1.402,404,4.106,515,3.69,684,4.106,818,5.674,1064,5.033,1133,4.106,1317,4.106,1899,4.106,1905,5.443,1925,5.903,1926,4.816,1927,6.384,1928,4.816,1929,4.816,1930,6.828,1931,7.038,1932,4.816,1933,4.816,1934,4.816,1935,4.816,1936,4.816,1937,4.816,1938,4.816,1939,4.816,1940,4.816,1941,6.384,1942,6.384,1943,4.816,1944,6.828,1945,4.816,1946,4.816,1947,4.816,1948,4.816,1949,4.816,1950,4.106,1951,5.903,1952,6.654,1953,5.903,1954,5.903,1955,4.816,1956,4.816,1957,4.816,1958,4.816,1959,6.384,1960,4.816,1961,4.816,1962,4.816]],["title/modules.html",[130,3.013]],["body/modules.html",[38,0.02,118,0.017,119,0.02,120,0.017,129,3.868,130,3.54,141,3.54,154,4.279,1963,5.664,1964,5.664,1965,6.499,1966,5.664,1967,5.664]],["title/overview.html",[1968,4.11]],["body/overview.html",[1,1.482,2,1.241,38,0.022,73,1.173,81,1.682,83,1.482,85,1.482,88,1.399,90,1.482,92,1.482,94,1.32,97,1.399,99,1.399,102,1.244,104,1.482,107,1.399,109,1.399,110,0.988,112,1.482,114,1.399,118,0.013,119,0.017,120,0.013,128,2.912,129,5.118,130,2.665,131,2.912,132,3.635,133,3.221,134,3.635,135,3.221,136,3.635,137,3.635,138,3.635,139,3.635,140,3.635,141,3.774,142,3.483,143,3.483,144,3.483,145,3.234,146,4.663,147,2.459,248,2.912,265,1.655,299,1.993,444,2.459,701,2.665,736,3.221,1858,3.635,1968,3.635,1969,4.263,1970,5.469]],["title/routes.html",[248,3.293]],["body/routes.html",[38,0.02,118,0.017,119,0.02,120,0.017,248,3.945]],["title/classes/teamList.html",[65,0.01,1530,2.203]],["body/classes/teamList.html",[3,0.302,4,0.263,9,0.263,22,0.302,23,0.885,24,1.079,32,0.652,35,0.498,37,0.702,38,0.021,39,0.341,40,0.498,41,0.702,54,1.146,64,0.302,65,0.016,118,0.016,119,0.019,120,0.016,299,2.507,406,3.095,1530,3.937,1744,5.7,1887,4.574,1971,5.364,1972,5.364,1973,5.364,1974,5.364]],["title/miscellaneous/variables.html",[1171,3.205,1919,2.007]],["body/miscellaneous/variables.html",[22,0.294,38,0.022,40,0.541,50,2.039,51,2.039,52,2.41,118,0.016,119,0.019,120,0.016,243,2.159,281,2.902,307,3.273,1171,3.956,1888,4.465,1890,5.835,1891,4.465,1892,4.465,1893,5.294,1894,5.294,1919,3.576,1950,5.294,1975,6.209,1976,5.236,1977,5.236,1978,5.236,1979,5.236]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["1/9",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":435,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1899,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":439,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1294,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["100px",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":384,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["11",{"_index":1858,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["120",{"_index":1665,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["13/14",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1292,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["16",{"_index":1969,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1em",{"_index":1293,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1fr",{"_index":1613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":375,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["200",{"_index":1307,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["200px",{"_index":1618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":775,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{}}}],["23",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["23/26",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["236",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["23px",{"_index":777,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":756,"title":{},"body":{"components/FeedComponent.html":{}}}],["250px",{"_index":1266,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["25px",{"_index":1668,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["3",{"_index":1160,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3.1.2",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["30)),new",{"_index":1214,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["300",{"_index":1303,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["30px",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["380px",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["4/20",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["4/23",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1771,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1312,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["400px",{"_index":1267,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":381,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["5/5",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["500",{"_index":434,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":577,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["5px",{"_index":779,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":1275,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["60px",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["62",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":781,"title":{},"body":{"components/FeedComponent.html":{}}}],["7/7",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":762,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["75",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1970,"title":{},"body":{"overview.html":{}}}],["80",{"_index":378,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["83",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["9.1.0",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":860,"title":{},"body":{"components/FilterComponent.html":{}}}],["92",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["936da5,#58482e",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":968,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_teams",{"_index":1103,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["_teams:teams",{"_index":1200,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["absolute",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acces",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["activatedroute",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["adding",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{},"injectables/ProposalService.html":{}}}],["address",{"_index":906,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":796,"title":{},"body":{"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["af4261",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":570,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"error",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":566,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"there",{"_index":1230,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["align",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":915,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":963,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allowing",{"_index":574,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["allurl",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":962,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["along",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["already",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["angular",{"_index":1905,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["angular/compiler",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1664,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["api's",{"_index":914,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["application/json",{"_index":1094,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["applied",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{}}}],["appmodule",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["arguments",{"_index":1122,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["arial",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrangement",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["array",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{}}}],["artifacts",{"_index":1945,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1635,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["auth.service",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1709,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1724,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1725,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1715,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:24",{"_index":1723,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1717,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:47",{"_index":1721,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:51",{"_index":1720,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:56",{"_index":1719,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:62",{"_index":1718,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth_token",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticate",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticateduser",{"_index":273,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authentication",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticationservice",{"_index":1078,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["autho",{"_index":1104,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["autho:authorizationservice",{"_index":1216,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorization",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorization.service",{"_index":1195,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorizationservice",{"_index":264,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["authreq",{"_index":1090,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["autologin",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1936,"title":{},"body":{"index.html":{}}}],["available",{"_index":1967,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":1135,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["background",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1827,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["based",{"_index":1505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["basic",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["basis",{"_index":1176,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["black",{"_index":758,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["block",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":894,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":372,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":776,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":851,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom:1",{"_index":1311,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["box",{"_index":573,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["browse",{"_index":1965,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":382,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":862,"title":{},"body":{"components/FilterComponent.html":{}}}],["build",{"_index":1944,"title":{},"body":{"index.html":{}}}],["button",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":782,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["called",{"_index":1138,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["calls",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["cancel",{"_index":1367,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate=false",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1362,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":863,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1937,"title":{},"body":{"index.html":{}}}],["changed",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{}}}],["changes",{"_index":1156,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["character",{"_index":1364,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checked",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checking",{"_index":1448,"title":{},"body":{"injectables/ProposalService.html":{}}}],["checks",{"_index":558,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["child",{"_index":322,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":65,"title":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":299,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":371,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1927,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":438,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closing",{"_index":1162,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cluster_appmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1939,"title":{},"body":{"index.html":{}}}],["color",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["color:#3f51b5",{"_index":759,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#8b8a8a",{"_index":1314,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["color:#e9ebee",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":774,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":780,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":377,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":760,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["commendid",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment",{"_index":298,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":327,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":328,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":318,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":771,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":83,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror:string",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":324,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["comments:comment",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["communicate",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1651,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after2____\",this.user",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":548,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"date\",this.edate",{"_index":842,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":554,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["console.log(\"in",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":1681,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["console.log(\"response",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1760,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1413,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1408,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":898,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(error.status",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1733,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(this.comment",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data",{"_index":1255,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1695,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.newfeed",{"_index":1263,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1704,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.type",{"_index":1247,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1763,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1479,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1076,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(authservice",{"_index":1118,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["constructor(description",{"_index":1370,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":1626,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(formbuilder",{"_index":1500,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":1386,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(id",{"_index":304,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(proposalwork",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(resetlinkservice",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(router",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(startdate",{"_index":792,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1971,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1417,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1291,"title":{},"body":{"components/LandingPageComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["contains",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["content",{"_index":1093,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["control",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controls",{"_index":1172,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["count",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1846,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatain",{"_index":1510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["create",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1711,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1716,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["created",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{}}}],["createproposalcomponent",{"_index":85,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createurl",{"_index":1381,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1400,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creation",{"_index":312,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{}}}],["creationdate",{"_index":303,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":319,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["crimson",{"_index":866,"title":{},"body":{"components/FilterComponent.html":{}}}],["current",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/ProposalService.html":{}}}],["cursor",{"_index":767,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserRegisterService.html":{}}}],["data)=>console.log(data",{"_index":1272,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data.id=id",{"_index":1405,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1410,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1412,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1795,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1798,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1799,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":974,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":979,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":549,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":839,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1658,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data:{name:this.user.id,post:post,teams:this._teams",{"_index":1276,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data:{prop:post.teams,teams:this._teams",{"_index":1268,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data=new",{"_index":1211,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data={\"data1",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1653,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":896,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1683,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["database",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["date",{"_index":306,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["date(),\"0\",\"3",{"_index":1215,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[0",{"_index":1243,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[1",{"_index":1245,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(this.startdate.setdate(this.startdate.getdate",{"_index":1213,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dateplusone",{"_index":809,"title":{},"body":{"components/FilterComponent.html":{}}}],["day",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{}}}],["deals",{"_index":268,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":310,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["defines",{"_index":302,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{}}}],["delay",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["deletecomment",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1440,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1485,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1428,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1435,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1442,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1487,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1429,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1473,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["deleteproposal(1",{"_index":1136,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal(id",{"_index":1129,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal=new",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{}}}],["deletes",{"_index":1131,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleting",{"_index":272,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["deletion",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["delproposal",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":392,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":267,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["description:string",{"_index":1425,"title":{},"body":{"classes/Proposal.html":{}}}],["destroying",{"_index":1139,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["destroys",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["destroysession",{"_index":1105,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["details",{"_index":1638,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["dev",{"_index":1933,"title":{},"body":{"index.html":{}}}],["development",{"_index":1929,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog",{"_index":1218,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialog:matdialog,public",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":57,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1269,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["different",{"_index":960,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["differentiating",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1943,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1947,"title":{},"body":{"index.html":{}}}],["dislike",{"_index":1453,"title":{},"body":{"injectables/ProposalService.html":{}}}],["disliking",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":783,"title":{},"body":{"components/FeedComponent.html":{}}}],["display:none",{"_index":1300,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["displaying",{"_index":1516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dist",{"_index":1946,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1841,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":902,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1814,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1817,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1836,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1838,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["during",{"_index":1143,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dynamic",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":909,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1956,"title":{},"body":{"index.html":{}}}],["edate",{"_index":838,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1365,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emit",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{}}}],["emitdata",{"_index":1796,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1797,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emiting",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{}}}],["emits",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["emitted",{"_index":1159,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["emitter",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{}}}],["end",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":789,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":803,"title":{},"body":{"classes/FeedParams.html":{}}}],["endmessage",{"_index":1208,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["enter",{"_index":904,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["environment",{"_index":1890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":553,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["error'},{'name",{"_index":89,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":579,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":580,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":555,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["errorcomponent",{"_index":88,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandling",{"_index":1106,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errorhandling(error",{"_index":1140,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errormessage",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["etc",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["evenr",{"_index":1127,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["event",{"_index":1123,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["eventemitter",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["example",{"_index":270,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/LandingPageComponent.html":{}}}],["execute",{"_index":1953,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1513,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["exists",{"_index":903,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["false",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{}}}],["feature",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["feed'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed/feed.component",{"_index":1191,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feed/share",{"_index":1193,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feedcomponent",{"_index":90,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":785,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["feedparams(new",{"_index":1212,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["field",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1938,"title":{},"body":{"index.html":{}}}],["fill",{"_index":440,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":807,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":808,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter/filter.component",{"_index":1190,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["filtercomponent",{"_index":92,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredteams",{"_index":1492,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filters",{"_index":1175,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fixed",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["flag",{"_index":1949,"title":{},"body":{"index.html":{}}}],["flag=false",{"_index":1701,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1697,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["flex:1",{"_index":1298,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["following",{"_index":1358,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":379,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1698,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1685,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["forgetpasswordcomponent",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":893,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgotten",{"_index":887,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":1501,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1693,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1790,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1788,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1690,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":1134,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["function",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1151,"title":{"miscellaneous/functions.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1958,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1941,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1926,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1182,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getall",{"_index":1107,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getallnextpost",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":971,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":939,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":969,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1436,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1444,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1483,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1430,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1469,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1437,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1446,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1481,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1431,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1472,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1712,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposals",{"_index":1119,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposals:getproposalsservice",{"_index":1219,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposalsservice",{"_index":142,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gets",{"_index":1150,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getteam",{"_index":1108,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/UserRegisterService.html":{}}}],["getteam():observable",{"_index":1844,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["getteamnextpost",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":941,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":976,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":944,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":973,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1109,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1781,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getting",{"_index":271,"title":{"index.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/ProposalService.html":{}}}],["getyour",{"_index":1110,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getyournextpost",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":946,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":981,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":948,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":978,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1961,"title":{},"body":{"index.html":{}}}],["google",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1966,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":853,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["group",{"_index":1785,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["h1",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["handled",{"_index":1128,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["handlelogin",{"_index":560,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["handles",{"_index":913,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["handling",{"_index":1416,"title":{},"body":{"classes/Proposal.html":{}}}],["happened",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["headers",{"_index":1092,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":383,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:500px",{"_index":1306,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:50px",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:55px",{"_index":1310,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:60px",{"_index":766,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["height:auto",{"_index":769,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["hello",{"_index":1284,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["help",{"_index":1959,"title":{},"body":{"index.html":{}}}],["here",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["hidden",{"_index":765,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["hide",{"_index":1493,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1494,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["home',component:homecomponent",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":97,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1192,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hostlisteners",{"_index":1116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote",{"_index":1316,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote&nbsp",{"_index":1289,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":1388,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["http://localhost:4200",{"_index":1935,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1828,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1462,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1458,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1455,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":950,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":957,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":953,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1394,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1457,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1396,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1397,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1779,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1464,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1460,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1466,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":1403,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclientmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1086,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1082,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1087,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1085,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1071,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1080,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1659,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":317,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1426,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1409,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":293,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if((this.newfeed.length>0",{"_index":1252,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(array.isarray(data",{"_index":1241,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data!=null",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data===\"allpost",{"_index":1233,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"teampost",{"_index":1235,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"yourpost",{"_index":1237,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(error.status!=200",{"_index":565,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(error.status==200",{"_index":564,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["if(error.status==202",{"_index":1656,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["if(error.status==302",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==404",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["if(flag",{"_index":1702,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1707,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1706,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(result",{"_index":1270,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(team.id==item.id",{"_index":1700,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.innerwidth",{"_index":1282,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.loginform.valid",{"_index":561,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.menuvisibility",{"_index":1279,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.post.user.id==this.userid",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":848,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":852,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.type.includes(\"allpost",{"_index":1256,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"teampost",{"_index":1258,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"yourpost",{"_index":1260,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(user!=null",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ignore",{"_index":289,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{}}}],["image:linear",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":326,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["incase",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["include",{"_index":943,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["includes",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["information",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["initial",{"_index":1153,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["initialiseformgroup",{"_index":1792,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["initializes",{"_index":1512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["injectable",{"_index":263,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1801,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":265,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"overview.html":{}}}],["innerwidth",{"_index":1199,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["input",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["input,output,eventemitter",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["instance",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["intercept",{"_index":1075,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1079,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1070,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1074,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1083,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1077,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1072,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":444,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"interfaces/DialogData.html":{}}}],["intialization",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{}}}],["invalid",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1348,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1713,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1703,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["iteration",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1684,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["json.parse(this.authenticateduser",{"_index":296,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["jsonpipe",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1955,"title":{},"body":{"index.html":{}}}],["key",{"_index":1789,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["landingpagecomponent",{"_index":99,"title":{"components/LandingPageComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{}}}],["later",{"_index":571,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lato",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":861,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":784,"title":{},"body":{"components/FeedComponent.html":{}}}],["left:5",{"_index":1313,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1366,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1360,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":773,"title":{},"body":{"components/FeedComponent.html":{}}}],["liked",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["likesetup",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["link'},{'name",{"_index":111,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1621,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1622,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1620,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:18",{"_index":1645,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:19",{"_index":1647,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1644,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1646,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1642,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1628,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:26",{"_index":1641,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:31",{"_index":1629,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:68",{"_index":1637,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:76",{"_index":1634,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:85",{"_index":1630,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link/reset",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":307,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1495,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loggedin",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1813,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1825,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1826,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1824,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1815,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:21",{"_index":1818,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:31",{"_index":1816,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1823,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1821,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:45",{"_index":1820,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:51",{"_index":1819,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginservice",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1288,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["logs",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["long",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1361,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":910,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["makes",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/ResetLinkComponent.html":{}}}],["mandatory",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["manner",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{}}}],["map",{"_index":1727,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":764,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matbuttonmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1691,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matdividermodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":453,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{}}}],["menu",{"_index":1179,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menubutton=false",{"_index":1198,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menuvisibility=true",{"_index":1197,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["message:string",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["message=null",{"_index":1196,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["method",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["minimum",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1919,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1960,"title":{},"body":{"index.html":{}}}],["morepost=true",{"_index":1209,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["moz",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1649,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":467,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1765,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":320,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1934,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":858,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":1449,"title":{},"body":{"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":837,"title":{},"body":{"components/FilterComponent.html":{}}}],["newfeed",{"_index":1201,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["next",{"_index":1081,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1097,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1098,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1931,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["ngoninit",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments:boolean=true",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{}}}],["non",{"_index":1299,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["none",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["not.a",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["notified",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["now",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["null",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":305,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes:number",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1220,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{}}}],["observable",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["observer",{"_index":1802,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["occured",{"_index":567,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["ok",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["onfilter",{"_index":1111,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onfilter(data",{"_index":1154,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onresize",{"_index":1168,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onscroll",{"_index":1112,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onsubmit",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":761,"title":{},"body":{"components/FeedComponent.html":{}}}],["opacity:20",{"_index":1295,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["open",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialog",{"_index":575,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare(post",{"_index":1165,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["opened",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["opens",{"_index":572,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["others",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{}}}],["out",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["overview",{"_index":1968,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1897,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":763,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{}}}],["padding:number",{"_index":1207,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["page'},{'name",{"_index":101,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1101,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1102,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1099,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:111",{"_index":1146,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:123",{"_index":1148,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:137",{"_index":1174,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:154",{"_index":1155,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:175",{"_index":1157,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:199",{"_index":1166,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:223",{"_index":1161,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:259",{"_index":1177,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:271",{"_index":1167,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:292",{"_index":1125,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:301",{"_index":1141,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:317",{"_index":1137,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:333",{"_index":1130,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:35",{"_index":1180,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:37",{"_index":1184,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":1189,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1188,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:59",{"_index":1121,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:65",{"_index":1181,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:67",{"_index":1186,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:69",{"_index":1185,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:71",{"_index":1183,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:78",{"_index":1149,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:88",{"_index":1147,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:99",{"_index":1145,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/comment",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":301,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:11",{"_index":311,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:13",{"_index":315,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":308,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:7",{"_index":313,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:9",{"_index":309,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":321,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:32",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:38",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:46",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:59",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:133",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:146",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:173",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:206",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:213",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:221",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:234",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:52",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:55",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:58",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:61",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:67",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:74",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:80",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:89",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:99",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":806,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:105",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:114",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:51",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:73",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:82",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1427,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:14",{"_index":1463,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1459,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1467,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1465,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:26",{"_index":1461,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:29",{"_index":1456,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:32",{"_index":1439,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:45",{"_index":1450,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:54",{"_index":1454,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:63",{"_index":1452,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:73",{"_index":1447,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:81",{"_index":1445,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:89",{"_index":1441,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:98",{"_index":1443,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1783,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":804,"title":{},"body":{"classes/FeedParams.html":{}}}],["page=0",{"_index":1205,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pagination",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["param",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":788,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["params.ts",{"_index":787,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:11",{"_index":795,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:14",{"_index":797,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:17",{"_index":798,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:2",{"_index":793,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:20",{"_index":801,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:23",{"_index":800,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":799,"title":{},"body":{"classes/FeedParams.html":{}}}],["parent",{"_index":1100,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["parentfunction",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":841,"title":{},"body":{"components/FilterComponent.html":{}}}],["particular",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1660,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":96,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:13",{"_index":890,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":888,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":889,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":892,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1670,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1677,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:17",{"_index":1675,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:23",{"_index":1679,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1673,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1680,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":104,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{}}}],["per",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{}}}],["person",{"_index":1283,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["photo",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1831,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":568,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":768,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1666,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["position:fixed",{"_index":1301,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["post",{"_index":200,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["post.description",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:postproposalservice",{"_index":1217,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postbutton",{"_index":1308,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postcomment",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1474,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror:string",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1432,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1468,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1438,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1451,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1478,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1433,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1471,"title":{},"body":{"injectables/ProposalService.html":{}}}],["posted",{"_index":316,"title":{},"body":{"classes/Comment.html":{}}}],["posting",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1476,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1434,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1470,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1384,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1389,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1407,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":143,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":857,"title":{},"body":{"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["private",{"_index":290,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["priyanka",{"_index":1636,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["process",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":810,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1948,"title":{},"body":{"index.html":{}}}],["production",{"_index":1950,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1925,"title":{},"body":{"index.html":{}}}],["prop",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":387,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":87,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.component.css",{"_index":390,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":391,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":386,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:23",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:31",{"_index":1689,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:38",{"_index":400,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:41",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:47",{"_index":394,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.service",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.service.ts",{"_index":1380,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:15",{"_index":1395,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:17",{"_index":1398,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:19",{"_index":1387,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:29",{"_index":1393,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:39",{"_index":1390,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposalerror:string",{"_index":1202,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["proposalid",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposals",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service.ts",{"_index":912,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:17",{"_index":952,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:19",{"_index":951,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:21",{"_index":956,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:23",{"_index":954,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":958,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:27",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:37",{"_index":940,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:46",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:55",{"_index":945,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:67",{"_index":942,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:77",{"_index":949,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:89",{"_index":947,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":144,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["propose",{"_index":1290,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["propsal",{"_index":389,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["protractor",{"_index":1957,"title":{},"body":{"index.html":{}}}],["provide",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["provider",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["put",{"_index":1631,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["radius",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1962,"title":{},"body":{"index.html":{}}}],["real",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["receive",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["recieved",{"_index":1142,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["refreshs",{"_index":1164,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["register",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register',component:registercomponent",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register.component.css",{"_index":1490,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1491,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1835,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:15",{"_index":1839,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:22",{"_index":1840,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:9",{"_index":1837,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["registerform",{"_index":1496,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1714,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1822,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["registration",{"_index":1509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":441,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["removing",{"_index":1132,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["req",{"_index":1084,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1091,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1089,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1632,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":907,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["res[\"name",{"_index":1734,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["resetlink",{"_index":1671,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink(data",{"_index":1674,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink/:token",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":109,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1623,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetlinkservice",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword",{"_index":1627,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1676,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":877,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["resize",{"_index":1113,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resp",{"_index":1843,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["response'},{'name",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1499,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["responsible",{"_index":323,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["responsive",{"_index":1178,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resposible",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"classes/Proposal.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":295,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["returned",{"_index":1391,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["rgb(211",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(236",{"_index":1315,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rgb(238",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":373,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":291,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["routermodule",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":248,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1930,"title":{},"body":{"index.html":{}}}],["running",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["runs",{"_index":1158,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rxjs",{"_index":959,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1728,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["same",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sans",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["saved",{"_index":1633,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["saying",{"_index":1640,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sbsi",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1940,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["scrollable",{"_index":1304,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["scrolling",{"_index":1144,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sdate",{"_index":836,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1297,"title":{},"body":{"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["select",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selectapi",{"_index":1114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selectapi(data",{"_index":1173,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selected",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["selected(team",{"_index":1705,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1497,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selection",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":859,"title":{},"body":{"components/FilterComponent.html":{}}}],["seletion",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":864,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["senddata",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddate",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sends",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{}}}],["sent",{"_index":908,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1399,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1932,"title":{},"body":{"index.html":{}}}],["server",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["service",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{}}}],["service.service",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1784,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:8",{"_index":1786,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/reset",{"_index":891,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["service/social",{"_index":452,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":449,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["session",{"_index":269,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["sessionstorage.clear",{"_index":297,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1739,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1738,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1736,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sets",{"_index":1169,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["setup",{"_index":1152,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["share",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{}}}],["shared",{"_index":1375,"title":{},"body":{"classes/Post.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{}}}],["shareproposal",{"_index":1385,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1392,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1404,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":112,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1382,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1402,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["sharing",{"_index":1688,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["shine",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["showing",{"_index":1639,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["showmenu",{"_index":1115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["shown",{"_index":325,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["sign",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["signed",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":805,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1722,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(frontend",{"_index":1729,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":451,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["socialuser",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":376,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":442,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{}}}],["spacing",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1363,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1357,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{}}}],["specs",{"_index":1352,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":106,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1353,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1354,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1351,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1356,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1355,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":266,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:12",{"_index":278,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:19",{"_index":279,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:29",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1853,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":578,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":581,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":582,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":786,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/forget",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":911,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":300,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:105",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:136",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":1349,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:81",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1350,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1368,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:11",{"_index":1374,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:13",{"_index":1376,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:15",{"_index":1377,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:17",{"_index":1379,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1371,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1372,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:9",{"_index":1373,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1415,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:12",{"_index":1423,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:13",{"_index":1422,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:14",{"_index":1419,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:15",{"_index":1421,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:16",{"_index":1420,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:2",{"_index":1418,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1489,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:101",{"_index":1504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:111",{"_index":1514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:19",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":1503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:35",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:37",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:43",{"_index":1515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:53",{"_index":1517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:66",{"_index":1507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:83",{"_index":1506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1619,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1073,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1669,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1708,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1794,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1812,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1740,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:18",{"_index":1751,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:19",{"_index":1755,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1750,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1754,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1753,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1757,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1756,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1745,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:32",{"_index":1749,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1752,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:38",{"_index":1748,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:46",{"_index":1746,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:58",{"_index":1747,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1887,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1972,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1973,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1776,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1778,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1777,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1772,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1773,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1774,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1775,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.ts",{"_index":1806,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:11",{"_index":1808,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:13",{"_index":1811,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1807,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":1809,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:9",{"_index":1810,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":790,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":802,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate=new",{"_index":1210,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["started",{"_index":1924,"title":{"index.html":{}},"body":{}}],["state",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["store",{"_index":1163,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stored",{"_index":1133,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["string?,array",{"_index":1239,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stroke",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1800,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submission",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submit",{"_index":437,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":559,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["subscriber",{"_index":1803,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["success",{"_index":1518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successful",{"_index":551,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["successmessage",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1643,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1663,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["such",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["support",{"_index":1963,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1964,"title":{},"body":{"modules.html":{}}}],["system",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["table",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["tap",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["team',component:teamcomponent",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team's",{"_index":955,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["team.component.css",{"_index":1741,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1742,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":436,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team/team.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":114,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1743,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":791,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":1530,"title":{"classes/teamList.html":{}},"body":{"components/RegisterComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1744,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1974,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":965,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":1187,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams",{"_index":410,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams.service",{"_index":1194,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams:any",{"_index":1758,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teams:teamsservice",{"_index":1221,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teamsservice",{"_index":1120,"title":{"injectables/TeamsService.html":{}},"body":{"components/LandingPageComponent.html":{},"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":964,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility=true",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1952,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":1787,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["testserviceservice",{"_index":403,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":865,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":972,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":970,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":977,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":975,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":982,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":980,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._teams=data",{"_index":1227,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":292,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1088,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1096,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1769,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":365,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":369,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":367,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":368,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1830,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":846,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.enddate=new",{"_index":1244,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.page=this.page.tostring",{"_index":1249,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.post.description",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1699,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.data.startdate=new",{"_index":1242,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(createproposalcomponent",{"_index":1274,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":576,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialog.open(shareproposalcomponent",{"_index":1265,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":844,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":849,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.endmessage",{"_index":1251,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.error=\"email",{"_index":901,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":900,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errorhandling(error",{"_index":1229,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed",{"_index":1240,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed=this.feed.concat(this.newfeed",{"_index":1262,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":895,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1793,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getall",{"_index":1234,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallnextpost(this.data).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1257,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallposts(this.data).subscribe((data)=>this.feed=data,(error",{"_index":1228,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamnextpost(this.data,this.user.team.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1259,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamposts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error",{"_index":1231,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyournextpost(this.data,this.user.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1261,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyourposts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error",{"_index":1232,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteam",{"_index":1236,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteams",{"_index":1224,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getyour",{"_index":1238,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":1845,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1829,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1782,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgotpassword",{"_index":1686,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(\"http://localhost:8080/getsocialinfo\",data[\"data1\"],{responsetype:'text",{"_index":1730,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1842,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validate_token",{"_index":1687,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1731,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1411,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1486,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1488,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1484,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1482,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1475,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1480,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1477,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1406,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1414,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/reset_password",{"_index":1682,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":546,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":899,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe",{"_index":562,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":547,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.menuvisibility=false",{"_index":1280,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.menuvisibility=true",{"_index":1281,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.message",{"_index":850,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"this",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.morepost=true",{"_index":1250,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.msg=\"your",{"_index":1662,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":843,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":845,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newfeed",{"_index":1264,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.nocomments=false",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.observer.asobservable",{"_index":1804,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.observer.next(data",{"_index":1805,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.page",{"_index":1254,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page=0",{"_index":1248,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page==0)&&this.morepost",{"_index":1253,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":370,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":856,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1832,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.post.postproposal(result,this.user.id).subscribe",{"_index":1277,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.post.shareproposal(result,post.id).subscribe",{"_index":1271,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.prop",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalerror",{"_index":1278,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1735,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1833,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1737,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1732,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1650,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetlinkservice.resetlink(data).subscribe",{"_index":897,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1661,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.tokenverification(data).subscribe",{"_index":1654,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resize",{"_index":1225,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.responsedialog",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":294,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":557,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.router.navigate(['/welcome",{"_index":552,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":847,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selectapi(this.type",{"_index":1223,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.senddata(this.data",{"_index":854,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":855,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1696,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.share.emit(this.post",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":550,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1762,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1770,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1764,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.getteams().subscribe",{"_index":1226,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.teams=data",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1652,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":556,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.type=data",{"_index":1246,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.update.emit(post",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1692,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.user.email",{"_index":1286,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.name",{"_index":1285,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.team.name",{"_index":1287,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user=this.autho.authorization",{"_index":1222,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.userdata",{"_index":1761,"title":{},"body":{"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1767,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1766,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1759,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":563,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1768,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":417,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":366,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.userservice.getteam().subscribe",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validtoken=false",{"_index":1657,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1655,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["those",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["three",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{}}}],["time",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["timing",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1424,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1624,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["tokenverification",{"_index":1672,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tokenverification(data",{"_index":1678,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tools",{"_index":867,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":778,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{}}}],["total",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1726,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["transferdataservice",{"_index":448,"title":{"injectables/TransferDataService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{}}}],["transferdataservice:transferdataservice",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":569,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["tslib",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["type=\"teampost",{"_index":1204,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["typepost=\"teampost",{"_index":840,"title":{},"body":{"components/FilterComponent.html":{}}}],["types",{"_index":961,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["udata",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unique",{"_index":314,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["unit",{"_index":1951,"title":{},"body":{"index.html":{}}}],["unlike",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{}}}],["up",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["update=new",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateform",{"_index":1694,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1383,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1401,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updation",{"_index":388,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["uppercase",{"_index":1359,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["upvotes",{"_index":1378,"title":{},"body":{"classes/Post.html":{}}}],["upvotescount",{"_index":1369,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1780,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1942,"title":{},"body":{"index.html":{}}}],["user",{"_index":283,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["user:user",{"_index":1203,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["user_name_session_attribute_name",{"_index":1710,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":757,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":463,"title":{"injectables/UserLoginService.html":{}},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["username",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":145,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1502,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["usevalue",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":905,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":1511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validations",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":457,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1791,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1625,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1648,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1170,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["values:testserviceservice",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1171,"title":{"miscellaneous/variables.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1928,"title":{},"body":{"index.html":{}}}],["via",{"_index":1954,"title":{},"body":{"index.html":{}}}],["view",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["visibility",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":770,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["want",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["webkit",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":380,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["welcome",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["whether",{"_index":396,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{}}}],["white",{"_index":374,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["whitesmoke",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["widows",{"_index":1305,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width",{"_index":385,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:100",{"_index":1309,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:24",{"_index":1302,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:35",{"_index":443,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1667,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:70px",{"_index":1296,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:87",{"_index":772,"title":{},"body":{"components/FeedComponent.html":{}}}],["width:number",{"_index":1206,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window",{"_index":1126,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1095,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1834,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["window.location.reload",{"_index":1273,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize",{"_index":1117,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize(event",{"_index":1124,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["write",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["yes",{"_index":794,"title":{},"body":{"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"classes/Proposal.html":{}}}],["yournexturl",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":967,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":966,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["z0",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n \n  onNoClick(): void {\n    \n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\n\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n            \n                Description\n            \n            \n                AuthorizationService deals with the session \n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            like getting data from session and deleting session\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:19\n                \n            \n\n\n            \n                \n                    function returns the session data as object and if there is no session takes user to login page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:29\n                \n            \n\n\n            \n                \n                    this function destroys the session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:12\n                            \n                        \n\n                \n                    \n                        user object as a string\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n/** AuthorizationService deals with the session \n * @example\n * like getting data from session and deleting session\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  /**user object as a string*/\n  authenticatedUser:string\n  constructor(\n    /**@ignore */\n    private router:Router) { }\n  /**\n   * function returns the session data as object and if there is no session takes user to login page\n  */\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  /**\n   * this function destroys the session\n  */\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n            \n                Description\n            \n            \n                defines the comment object \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:9\n                            \n                        \n\n                \n                    \n                        define string type comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:11\n                            \n                        \n\n                \n                    \n                        define the date of creation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the comment (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:13\n                            \n                        \n\n                \n                    \n                        define user data that posted the comment\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        /**define id of the comment (unique) */\n        public id:number,\n        /**define string type comment*/\n        public comment:string,\n        /**define the date of creation*/\n        public creationDate:Date,\n        /**define user data that posted the comment*/\n        public user:{\n            /**define id of the user*/\n            id:number,\n            /**define name of the user */\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n    \n        Description\n    \n    \n        CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:32\n                            \n                        \n                \n                    \n                        UserId of the user from the current session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:38\n                            \n                        \n                \n                    \n                        This the emitter to the FeedComponent\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:46\n                \n            \n\n\n            \n                \n                    This method is resposible for the comment data to show on the Page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\n\nimport {Comment} from 'src/app/landing-page/comment'\n/**\n * CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  /**@ignore */\n  @Input() comment:Comment;\n\n  /**@ignore */\n  public commentId;\n\n  /**@ignore */\n  public userName;\n\n  /**@ignore */\n  public commentData;\n\n  /**@ignore */\n  public commentedUserId:number;\n\n  /** UserId of the user from the current session \n   * @example\n   * Input from the FeedComponent\n   */\n  @Input() userId:number;\n\n  /** \n   * This the emitter to the FeedComponent\n   */\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n \n  /**@ignore */\n  constructor() { }\n\n  /**\n   * This method is resposible for the comment data to show on the Page.\n   */\n  ngOnInit(): void {\n\n     console.log(this.comment)\n\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n\n  }\n  /**\n   * This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n   */\n  deleteComment()\n  {\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n\n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:41\n                            \n                        \n\n                \n                    \n                        This is the description of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:38\n                            \n                        \n\n                \n                    \n                        This is the Title of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:23\n                            \n                        \n\n                \n                    \n                        This is the Id of user from Current Session.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n/**\n * This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n */\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n\n  /**@ignore */\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n  /** This is the Id of user from Current Session.*/\n  userId:string\n\n  /**@ignore */\n  teamVisibility=true\n\n  /**@ignore */\n  dialogTitle:string=\"Create Proposal\"\n\n  /**@ignore */\n  id:number=null\n\n  /**@ignore */\n  values:TestServiceService;\n\n  /** This is the Title of proposal*/\n  public tit \n\n  /**This is the description of proposal*/\n  public descrip\n\n  /**@ignore */\n  public prop\n\n  /**This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal */\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n    \n        Description\n    \n    \n        This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor of the FeedComponent \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the ProposalService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:61\n                            \n                        \n                \n                    \n                        Input from the current Session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:58\n                            \n                        \n                \n                    \n                        EventEmitter for the delete button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:55\n                            \n                        \n                \n                    \n                        EventEmitter for the Share button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:52\n                            \n                        \n                \n                    \n                        EventEmitter for the Update button on the Proposals \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:99\n                \n            \n\n\n            \n                \n                    This method is Resposible for the arrangement of the comments as per a particular manner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:234\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the proposal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:133\n                \n            \n\n\n            \n                \n                    This method checks total number of like on a post and whether a user with current session has liked it or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:80\n                \n            \n\n\n            \n                \n                    calls three methods in the same component on intialization -\nupdateApproval(),   likeSetup(),     commentsSetup()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:221\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the comment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is the id of the comment which user wants to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:213\n                \n            \n\n\n            \n                \n                    This method emits the proposal which a user want to update and open a update dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is an object of a proposal\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:206\n                \n            \n\n\n            \n                \n                    This method emits the Post to which user want to open a share dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:146\n                \n            \n\n\n            \n                \n                    This method is resposible for posting a comment on a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is proposalId of the proposal to which a user want to post a comment.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:173\n                \n            \n\n\n            \n                \n                    This method is resposible for the feature of liking a Proposal and Unlike feature too.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:89\n                \n            \n\n\n            \n                \n                    This method checks whether user can Update a particular proposal or not.A user can those Proposal \nthat are created by a user not others.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:74\n                            \n                        \n\n                \n                    \n                        Instance of the ProposalService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n/**\n * This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  /**@ignore */\n  @Input() post:Post;\n\n  /**@ignore */\n  public new_comment:string;\n\n  /**@ignore */\n  public canUpdate=false;\n\n  /**@ignore */\n  public numberLikes:number;\n\n  /**@ignore */\n  public comments:Comment[]=[];\n\n  /**@ignore */\n  public noComments:boolean=true;\n\n  /**@ignore */\n  public height:number;\n\n  /**@ignore */\n  public commentVisibility=false;\n\n  /**@ignore */\n  public commentsMessage=\"Comments\";\n\n  /**@ignore */\n  commentError:string;\n\n  /**@ignore */\n  postCommentError:string;\n\n  /** EventEmitter for the Update button on the Proposals */\n  @Output() update=new EventEmitter;\n\n  /**EventEmitter for the Share button on the Proposals */\n  @Output() share=new EventEmitter;\n\n  /**EventEmitter for the delete button on the Proposals */\n  @Output() deleteProposal=new EventEmitter;\n\n  /**Input from the current Session */\n  @Input() userId:number;\n\n  /**@ignore */\n  @Input() type:string;\n\n  /**@ignore */\n  public hasLiked=false;\n\n  /**\n   * Constructor of the FeedComponent \n   * @constructor\n   * @param proposalWork Instance of the ProposalService\n   */\n  constructor(public proposalWork:ProposalService) { }\n\n  /** \n   * calls three methods in the same component on intialization -\n   * updateApproval(),   likeSetup(),     commentsSetup()\n  */\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n  /**This method checks whether user can Update a particular proposal or not.A user can those Proposal \n   * that are created by a user not others.\n  */\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n  /**This method is Resposible for the arrangement of the comments as per a particular manner.\n  */\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n  /**This method checks total number of like on a post and whether a user with current session has liked it or not\n  */\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  /**\n   * This method is resposible for posting a comment on a post\n   * @param {number} id This is proposalId of the proposal to which a user want to post a comment.\n   */\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          alert(\"Some error has occured sending the comment please try again.\")\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n/**\n * This method is resposible for the feature of liking a Proposal and Unlike feature too.\n */\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n  /**\n   * This method emits the Post to which user want to open a share dialog.\n   */\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n  /**\n   * This method emits the proposal which a user want to update and open a update dialog\n   * @param {object} post this is an object of a proposal\n   */\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the comment.\n   * @param {number} commentId this is the id of the comment which user wants to delete.\n   */\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the proposal.\n   */\n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n\n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n    font-weight: bold;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n            \n                Description\n            \n            \n                this is the feed Params class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:11\n                            \n                        \n\n                \n                    \n                        endDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n                \n                    \n                        startDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:23\n                            \n                        \n\n                \n                    \n                        This is the teamId of the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:20\n                            \n                        \n\n                \n                    \n                        This is the userId from Current session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    /**\n     * @constructor\n     */\n    constructor(\n    /** startDate of the advanced filter*/\n    public startDate:Date,\n\n    /** endDate of the advanced filter*/\n    public endDate:Date,\n\n    /** @ignore */\n    public page:string,\n\n    /** @ignore */\n    public size:string,\n\n    /** This is the userId from Current session */\n    public userId?,\n\n    /**This is the teamId of the user */\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n    \n        Description\n    \n    \n        FilterComponent is the child component of the landing-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:51\n                            \n                        \n                \n                    \n                        This is the EventEmitter emits to Landing-page\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:73\n                \n            \n\n\n            \n                \n                    This function is resposible for adding a day to a end Date user selected\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:82\n                \n            \n\n\n            \n                \n                    This function is resposible for the Validations applied on the start date and end date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:105\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this function send the data to sendDate method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:114\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this method emit the information to the landing-page\nand landing-page calls the api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n  \n/**\n * FilterComponent is the child component of the landing-page.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\n\nexport class FilterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  @Input()\n  public sDate\n\n  /**\n   * @ignore\n   */\n  public newEdate\n\n  /**\n   * @ignore\n   */\n  public eDate\n\n  /**\n   * @ignore\n   */\n  public data:Date[]\n\n  /**\n   * @ignore\n   */\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n  /**\n   * This is the EventEmitter emits to Landing-page\n   */\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n\n /**\n   * @ignore\n   */ \n public message;\n  /**\n   * @ignore\n   */ \n  constructor() { \n  \n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  \n  }\n\n  /**\n   * This function is resposible for adding a day to a end Date user selected\n   */\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n\n  /**\n   * This function is resposible for the Validations applied on the start date and end date.\n   */\n  processFilter()\n  { \n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  /**\n   * As user changed the seletion on the select post this function send the data to sendDate method.\n   */\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n  /**\n   * As user changed the seletion on the select post this method emit the information to the landing-page\n   * and landing-page calls the api\n   */\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resetLinkService: ResetPasswordService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resetLinkService\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:33\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ResetPasswordService } from './../service/reset-password.service';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private resetLinkService: ResetPasswordService) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n/**\n * This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n */\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.resetLinkService.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n        if(error.status==200){\n          this.error=\"Reset link has been send to your email.\"\n          \n        }\n        else if(error.status==406){\n          this.error=\"Email id doesnot exists. Please try again!\"\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n            \n                Description\n            \n            \n                handles all type of feed api's\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:46\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts includes pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:37\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:67\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:55\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:89\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:77\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get created type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:19\n                            \n                        \n\n                \n                    \n                        get all posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:17\n                            \n                        \n\n                \n                    \n                        get all posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:23\n                            \n                        \n\n                \n                    \n                        get team's posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:21\n                            \n                        \n\n                \n                    \n                        get team's posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                        get created type posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:25\n                            \n                        \n\n                \n                    \n                        get created type posts url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n/**\n * handles all type of feed api's\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Proposal to get different types of posts\n*/\nexport class GetProposalsService {\n  /**get all posts url*/\n  allUrl=\"http://localhost:8080/feed/all\"\n  /**get all posts url include pagination*/\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  /**get team's posts url*/\n  teamUrl=\"http://localhost:8080/feed/team\"\n  /**get team's posts url include pagination*/\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  /**get created type posts url*/\n  yourUrl=\"http://localhost:8080/feed/create\"\n  /**get created type posts url include pagination*/\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(\n    /**@ignore*/\n    private _http:HttpClient) { }\n  /**\n   * This function makes a post api call to get all posts\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  /**\n   * This function makes a post api call to get all posts includes pagination\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get team type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get created type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n    \n        Description\n    \n    \n        Landing page parent to feed, and filter components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _teams\n                            \n                            \n                                    Public\n                                autho\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                feed\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                destroySession\n                            \n                            \n                                errorHandling\n                            \n                            \n                                getAll\n                            \n                            \n                                getTeam\n                            \n                            \n                                getTeams\n                            \n                            \n                                getYour\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                onScroll\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                resize\n                            \n                            \n                                selectApi\n                            \n                            \n                                showMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: SocialAuthService, autho: AuthorizationService, router: Router, post: PostProposalService, dialog: MatDialog, getProposals: GetProposalsService, teams: TeamsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autho\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        post\n                                                  \n                                                        \n                                                                        PostProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getProposals\n                                                  \n                                                        \n                                                                        GetProposalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                        TeamsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:292\n                \n            \n\n\n            \n                \n                    window resize evenr handled\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProposal(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:333\n                \n            \n\n\n            \n                \n                    This method deletes a proposal in real time by removing it from the array stored on frontend and also sending an api call to backend at the same time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            deleteProposal(1)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroySession\n                        \n                        \n                    \n                \n            \n            \n                \ndestroySession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:317\n                \n            \n\n\n            \n                \n                    This method destroys a session when called\n\n\n                    \n                        Example :\n                        \n                            destroySession()\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns to Home page of the application after destroying session\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorHandling\n                        \n                        \n                    \n                \n            \n            \n                \nerrorHandling(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:301\n                \n            \n\n\n            \n                \n                    This method handles the error that is recieved during scrolling api calls\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:99\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:111\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:88\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to Team posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYour\n                        \n                        \n                    \n                \n            \n            \n                \ngetYour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:123\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:78\n                \n            \n\n\n            \n                \n                    gets the session data and calls functions to setup the initial view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilter\n                        \n                        \n                    \n                \n            \n            \n                \nonFilter(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:154\n                \n            \n\n\n            \n                \n                    This method is called when filter components sends a data to filter feed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls select api function to select which feed api to call or changes the date to filter api feed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:175\n                \n            \n\n\n            \n                \n                    This method runs when a scroll event is emitted\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        returns new 3 proposals every time scroll event is emitted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:223\n                \n            \n\n\n            \n                \n                    This method opens a Create proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to store proposal and refreshs the page\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:199\n                \n            \n\n\n            \n                \n                    This method opens a Share proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to update teams of a proposal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:271\n                \n            \n\n\n            \n                \n                    This method is called by OnResize() and sets values of different variables that controls the padding and width\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectApi\n                        \n                        \n                    \n                \n            \n            \n                \nselectApi(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:137\n                \n            \n\n\n            \n                \n                    This method filters the api calls on the basis of which type is selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls different service methods to call different post api's\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMenu\n                        \n                        \n                    \n                \n            \n            \n                \nshowMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:259\n                \n            \n\n\n            \n                \n                    This method checks the responsive filter menu is open or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Teams[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:35\n                            \n                        \n\n                \n                    \n                        teams array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autho\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        session generation and deletion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:37\n                            \n                        \n\n                \n                    \n                        feed array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PostProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:69\n                            \n                        \n\n                \n                    \n                        posts proposal and update proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:45\n                            \n                        \n\n                \n                    \n                        type of feed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:43\n                            \n                        \n\n                \n                    \n                        User session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FilterComponent } from './filter/filter.component';\nimport { FeedComponent } from './feed/feed.component';\n\nimport { SocialAuthService } from 'angularx-social-login';\nimport { Component, OnInit ,HostListener, NgModule} from '@angular/core';\nimport { GetProposalsService } from '../get-proposals.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { CreateProposalComponent } from './create-proposal/create-proposal.component';\nimport { ShareProposalComponent } from './feed/share-proposal/share-proposal.component';\nimport {PostProposalService} from 'src/app/post-proposal.service'\nimport { FeedParams } from '../feed-params';\nimport {TeamsService} from '../teams.service'\nimport {Teams} from '../teams'\nimport {Router} from '@angular/router'\nimport {User} from '../user';\nimport {AuthorizationService} from '../authorization.service';\n/**Landing page parent to feed, and filter components*/\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css'],\n \n})\n\nexport class LandingPageComponent implements OnInit {\n/**@ignore */\n  message=null;\n  /**@ignore */\n  menuVisibility=true;\n  /**@ignore */\n  menuButton=false;\n  /**@ignore */\n  innerWidth;\n  /**teams array */\n  _teams:Teams[];\n  /**feed array */\n  feed=[];\n  /**@ignore */\n  newFeed=[];\n  /**@ignore */\n  proposalError:string;\n  /**User session */\n  user:User;\n  /**type of feed */\n  type=\"teamPost\";\n  /**@ignore */\n  page=0;\n  /**@ignore */\n  width:number;\n  /**@ignore */\n  padding:number;\n  /**@ignore */\n  endMessage=\"\";\n  /**@ignore */\n  morePost=true;\n  /**@ignore */\n  startDate=new Date()\n  /**@ignore */\n  data=new FeedParams(new Date(this.startDate.setDate(this.startDate.getDate()-30)),new Date(),\"0\",\"3\")\n  \n  constructor(\n    /**@ignore */\n    private authService: SocialAuthService,\n    /**session generation and deletion*/\n    public autho:AuthorizationService,\n    /**@ignore */\n    public router:Router,\n    /**posts proposal and update proposal*/\n    public post:PostProposalService,\n    /**@ignore */\n    public dialog:MatDialog,\n    /**gets all the posts from the backend*/\n    private getProposals:GetProposalsService,\n    /**teams objects api call*/\n    private teams:TeamsService) { }\n    \n/**gets the session data and calls functions to setup the initial view*/\n  ngOnInit(): void {\n    this.user=this.autho.authorization()\n    this.selectApi(this.type)\n    this.getTeams()\n    this.resize()\n  }\n\n/**\n  * This method calls a service method that is an api call to Team posts\n  */ \n  getTeams(){\n    this.teams.getTeams().subscribe(\n      (data)=>{\n        this._teams=data\n      }\n    );\n  }\n\n  /**\n  * This method calls a service method that is an api call to all posts\n  */ \n  getAll(){\n    this.getProposals.getAllPosts(this.data).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n/**\n * This method calls a service method that is an api call to all created posts\n */ \n  getTeam(){\n    this.getProposals.getTeamPosts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method calls a service method that is an api call to all created posts\n */ \n  getYour(){\n    this.getProposals.getYourPosts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method filters the api calls on the basis of which type is selected\n * @param {string}\n * @returns Calls different service methods to call different post api's\n */ \n  selectApi(data){\n    if(data===\"allPost\"){\n      this.getAll()\n    }\n    else if(data===\"teamPost\"){\n      this.getTeam()\n    }\n    else if(data===\"yourPost\"){\n      this.getYour()\n    }\n  }\n\n  /**\n * This method is called when filter components sends a data to filter feed\n * @param {string?,array?}\n * @returns Calls select api function to select which feed api to call or changes the date to filter api feed\n */ \n  onFilter(data){\n    this.feed=[]\n    if(Array.isArray(data)){\n      this.data.startDate=new Date(data[0])\n      this.data.endDate=new Date(data[1])\n    }\n    else{\n      this.type=data;\n      console.log(this.type)\n    }\n    this.page=0\n    this.data.page=this.page.toString()\n    this.selectApi(this.type)\n    this.morePost=true\n    this.endMessage=\"\"\n  }\n\n  /**\n * This method runs when a scroll event is emitted\n * @returns returns new 3 proposals every time scroll event is emitted\n */ \n  onScroll(){\n    if((this.newFeed.length>0 || this.page==0)&&this.morePost){\n      this.page++\n      this.data.page=this.page.toString()\n      console.log(this.data)\n      if(this.type.includes(\"allPost\")){\n        this.getProposals.getAllNextPost(this.data).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"teamPost\")){\n        this.getProposals.getTeamNextPost(this.data,this.user.team.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"yourPost\")){\n        this.getProposals.getYourNextPost(this.data,this.user.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }      \n      this.feed=this.feed.concat(this.newFeed)\n      console.log(this.newFeed)\n      this.newFeed=[]\n    }\n  }\n\n/**\n * This method opens a Share proposal dialog\n * @returns After closing calls an api to update teams of a proposal\n */ \n  openDialogshare(post){\n    let dialogRef = this.dialog.open(ShareProposalComponent, {\n      height: '250px',\n      width: '400px',\n      data:{prop:post.teams,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result =>{\n      if(result){\n        this.post.shareProposal(result,post.id).subscribe(\n          (data)=>console.log(data),\n          (error)=>{\n            if(error.status==200){\n              window.location.reload()\n            }\n          })\n      }\n    })\n\n  }\n\n/**\n * This method opens a Create proposal dialog\n * @returns After closing calls an api to store proposal and refreshs the page\n */ \n  openDialog(post?){\n    let dialogRef = this.dialog.open(CreateProposalComponent, {\n      height: '400px',\n      width: '600px',\n      data:{name:this.user.id,post:post,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.post.postProposal(result,this.user.id).subscribe(\n          (data)=>{\n            this.selectApi(this.type)\n            this.page=0\n            this.data.page=this.page.toString()\n            window.location.reload()\n            this.proposalError=\"\"\n          },\n          (error)=>{\n            if(error.status==200){\n              this.selectApi(this.type)\n              this.page=0\n              this.data.page=this.page.toString()\n              window.location.reload()\n              this.proposalError=\"\"\n            }\n            else{\n              alert(\"Some error has occured! please try again later.\")\n            }\n          }\n        ) \n      }\n    });\n  }\n  \n/**\n * This method checks the responsive filter menu is open or not\n */\n  showMenu(){\n    if(this.menuVisibility){\n      this.menuVisibility=false\n    }\n    else{\n      this.menuVisibility=true\n    }\n  }\n  \n  /**\n * This method is called by OnResize() and sets values of different variables that controls the padding and width\n */\n  resize(){\n    if(this.innerWidth item.id != id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n        \n        \n        \n        \n            person\n        \n        \n            Hello, {{this.user.name}}\n            Email : {{this.user.email}}\n            Team  : {{this.user.team.name}}\n            Logout\n        \n    \n    \n        \n        \n            \n                \n            \n            \n                \n                    \n                         how_to_vote&nbsp;\n                        Propose an improvement...\n                    \n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                    {{this.endMessage}}\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .contain{\n    overflow-x: hidden;\n    width: 100%;\n    ;\n}\n.endMessage{\n    font-size: 15px;\n    text-align: center;\n    color: black;\n}\n.header{\n    height:60px;\n    margin-bottom: 1em;\n    position: fixed;\n    z-index: 1000;\n}\n.menu{\n    opacity:20%;\n    width:70px;\n}\n.search-results {\n    height: 100%;\n}\n.space{\n    flex:1 1 auto;\n}\n.non-scroll{\n    overflow-y: hidden;\n    height: 500px;\n    display:none;\n    position:fixed;\n    z-index: 1000;\n}\n\n\n.filter{\n    background-color: white; \n    position:fixed;\n    width:24%;\n    z-index: 300;\n    height: 100%;\n}\n.scrollable{\n    widows: 50%;\n    height:500px;\n}\n.feed{\n    margin-right: 2%;\n    background-color: white;\n    z-index: 200;\n}\n.postButton{\n    width:100%;\n    height:55px;\n    margin-bottom:1%;\n    font-weight: 400;\n    font-size: 20px;\n    border-radius: 50px;\n    padding-left:5%;\n    text-align: left;\n    color:#8b8a8a;\n    background-color: rgb(236, 236, 236);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                                            person                            Hello, {{this.user.name}}            Email : {{this.user.email}}            Team  : {{this.user.team.name}}            Logout                                                                                                                                                 how_to_vote                         Propose an improvement...                                                                                                                                                                                                            {{this.endMessage}}                                        '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n                    You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:105\n                \n            \n\n\n            \n                \n                    This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:136\n                \n            \n\n\n            \n                \n                    This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:81\n                \n            \n\n\n            \n                \n                    This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n                \n              \n              \n               -->\n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                                                           -->                                        Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n            \n                Description\n            \n            \n                The object type of a post that is created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n                \n                    \n                        define description of a post (string)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:9\n                            \n                        \n\n                \n                    \n                        define id of the post (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:11\n                            \n                        \n\n                \n                    \n                        define teams array that its shared to \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:13\n                            \n                        \n\n                \n                    \n                        define title of the post (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:15\n                            \n                        \n\n                \n                    \n                        define number of upvotes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:17\n                            \n                        \n\n                \n                    \n                        define the user data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        /**define description of a post (string)*/\n        public description: string,\n        /**define id of the post (unique) */\n        public id: number,\n        /**define teams array that its shared to */\n        public teams:[],\n        /**define title of the post (string) */\n        public title: string,\n        /**define number of upvotes */\n        public upvotesCount: number,\n        /**define the user data */\n        public user: {\n            /**define id of the user (unique) */\n            id: number,\n            /**define name of the user */\n            name: string,\n            /**define email of the user */\n            email: string,\n            /**define team the user is in */\n            teams:{\n                /**define id of the team (unique) */\n                id:number,\n                /**define name of the team (string) */\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is the post-proposal service \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:39\n                \n            \n\n\n            \n                \n                    calls a post api to create proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable is returned of type void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:29\n                \n            \n\n\n            \n                \n                    share proposal calls a post api to share proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable is returned \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:15\n                            \n                        \n\n                \n                    \n                        a url to create proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:19\n                            \n                        \n\n                \n                    \n                        url to share proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        url to update proposal api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n/** This is the post-proposal service */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  /**@ignore */\n  public sentTeams:{}[]\n  /**\n   * a url to create proposal api\n  */\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  /**url to update proposal api*/\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  /**url to share proposal api*/\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  constructor(\n    /**@ignore */\n    private http:HttpClient) { }\n  /**\n   * share proposal calls a post api to share proposal api\n   * @param {objects of teams}\n   * @param {number}\n   * @returns an observable is returned \n  */\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  /**\n   * calls a post api to create proposal api\n   * @param {objects of post}\n   * @param {number}\n   * @returns an observable is returned of type void\n  */\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n            \n                Description\n            \n            \n                This is a proposal class resposible for handling proposal data \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:2\n                            \n                        \n\n                \n                    \n                            this is the constructor of proposal class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the UserId from session.\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the title of the Proposal.\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the description of the Proposal.\n\n                                                        \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the array of teams to which it shared.\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                This is the Proposal id. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:14\n                            \n                        \n\n                \n                    \n                        This is the description of the Proposal.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:16\n                            \n                        \n\n                \n                    \n                        This is the Proposal id. \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:15\n                            \n                        \n\n                \n                    \n                        This is the array of teams to which it shared.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:13\n                            \n                        \n\n                \n                    \n                        This is the title of the Proposal.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:12\n                            \n                        \n\n                \n                    \n                        This is the UserId from session.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    /**\n     * this is the constructor of proposal class\n     * @param userId This is the UserId from session.\n     * @param title This is the title of the Proposal.\n     * @param description This is the description of the Proposal.\n     * @param teams This is the array of teams to which it shared.\n     * @param {number} id This is the Proposal id. \n     */\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is Proposal Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:89\n                \n            \n\n\n            \n                \n                    This is the method for deleting a comment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:98\n                \n            \n\n\n            \n                \n                    This is the method for deleting a proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:81\n                \n            \n\n\n            \n                \n                    This is the method for getting all comments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:73\n                \n            \n\n\n            \n                \n                    This is the method for checking whether a user liked a post or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:45\n                \n            \n\n\n            \n                \n                    This is the method for posting a comment to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the comment user wants to post.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:63\n                \n            \n\n\n            \n                \n                    This is the method for posting a dislike to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:54\n                \n            \n\n\n            \n                \n                    This is the method for posting a like to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:29\n                            \n                        \n\n                \n                    \n                        Url for deleting comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                        Url for deleting a proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url for getting all comments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:26\n                            \n                        \n\n                \n                    \n                        Url for checking user has upvoted or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        Url for adding Comment \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:23\n                            \n                        \n\n                \n                    \n                        Url for Posting disLike\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:20\n                            \n                        \n\n                \n                    \n                        Url for Posting Like\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n/**\n * This is Proposal Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n\n  /**Url for adding Comment */\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n\n  /**Url for getting all comments*/\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n\n  /**Url for Posting Like*/\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n\n  /**Url for Posting disLike*/\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n\n  /**Url for checking user has upvoted or not*/\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n\n  /**Url for deleting comment*/\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n\n  /**Url for deleting a proposal*/\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http:HttpClient) { }\n\n  /**This is the method for posting a comment to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {string} new_comment This is the comment user wants to post.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n\n  /**This is the method for posting a like to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for posting a dislike to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n\n  /**This is the method for checking whether a user liked a post or not.\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for getting all comments\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a comment\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a proposal\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getTeams\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:101\n                \n            \n\n\n            \n                \n                    returns error message based on email field validations.\n\n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:66\n                \n            \n\n\n            \n                \n                    Creates a registration form with creatain validation checks.\nInitializes a array of existing teams in the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:43\n                \n            \n\n\n            \n                \n                    This method opens dialog box displaying required specifications for the password field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:53\n                \n            \n\n\n            \n                \n                    Opens dialog box displaying success or error message after submission of registration form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    \n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n/**\n * This method opens dialog box displaying required specifications for the password field.\n */\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n/**\n * Opens dialog box displaying success or error message after submission of registration form.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n/**\n * Creates a registration form with creatain validation checks.\n * \n * Initializes a array of existing teams in the database.\n */\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n\n  this.getTeams();\n  }\n\n\n  getTeams(){\n    this.userService.getTeam().subscribe(\n      (data)=> {this.teams=data\n        this.filteredTeams=this.teams.slice();\n      },\n      (error)=>{\n       if(error.status==404){\n        this.filteredTeams=this.teams.slice();\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      }); \n  }\n  \n  /**\n   * returns error message based on email field validations.\n   */\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":{\n          \"name\":this.registerForm.value.team}\n      ,\"user\":{\n        \"name\": this.registerForm.value.userName,\n        \"email\": this.registerForm.value.email,\n        \"password\" :this.registerForm.value.password}\n      }\n\n    }\n\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n        },\n        (error)=>{\n          if(error.status==200){\n            console.log(error.status)\n            this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n         \n          }\n          else if(error.status==302){\n            this.message=\"This email Id already exists, Please try again!\"\n            this.responseDialog()\n            this.loading=false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n}\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:85\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:76\n                \n            \n\n\n            \n                \n                    ask Priyanka\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:68\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.resetPassword.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n        if(error.status==202){\n          this.validToken=true;\n        }\n        else if(error.status==406){\n          this.validToken=false;\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      \n       }\n     );\n    \n  }\n/**\n * This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n/** ask Priyanka*/\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n/** \n * This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n*/\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                            \n                                resetPassword\n                            \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/reset_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n\nresetLink(data){\n  console.log(\"inside forgetPassword\")\n  return this.http.post(\"http://localhost:8080/forgotPassword\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n\ntokenVerification(data){\n  console.log(\"inside tokenVerification\")\n  return this.http.post(\"http://localhost:8080/validate_token\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:31\n                \n            \n\n\n            \n                \n                    This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n/**\n * This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n */\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n\n  /**@ignore */\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n\n  /**@ignore */\n  updateForm: FormGroup;\n    \n   /**\n   * This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n   */\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n\n  /**@ignore */\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  // socialMedia(data){\n  //   console.log(\"inside socialMedia(Frontend)\")\n  //   return this.http.post(\"http://localhost:8080/getSocialInfo\",data[\"data1\"],{responseType:'text' as 'json'})\n  // }\n\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        // this.username = res[\"name\"];\n        this.registerSuccessfulLogin();\n      }\n      // ,\n      // (error)=>{\n      //   console.log(\"error------\",error['error']);\n      //   //team page\n      //   this.transferDataService.emitData(error['error'])\n      //   this.router.navigate(['/team']);\n  \n      // }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n   \n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.userService.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up! Now please login again to continue.\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       },\n       (error)=>{\n        if(error.status==200){\n         \n          this.message=\"You have been signed up! Now please login again to continue.\"\n          this.responseDialog()\n          this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       \n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      });\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n            \n                Description\n            \n            \n                This is the form Group of component \n\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:8\n                            \n                        \n\n                \n                    \n                            This is the Constructor for testService\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n/** This is the form Group of component */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n  /**\n   * This is the Constructor for testService\n  */\n  constructor() { }\n  /**@ignore */\n  form: FormGroup = new FormGroup({\n  /**This is the key of form */ key: new FormControl(null),\n  /**This is the form title */  title: new FormControl(' ',[Validators.required]),\n  /**This is the Description */  description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n  /**This is the teams array */  teams: new FormControl(),\n  });\n  \n  /**@ignore */\n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n  //observer = new Subject();\n//  public subscriber = this.observer.asObservable();\n\n  emitData(data) {\n    this.userData = data;\n   // this.observer.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n            \n                Description\n            \n            \n                defines the user data type\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:11\n                            \n                        \n\n                \n                    \n                        define email of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the user (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:9\n                            \n                        \n\n                \n                    \n                        define name of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:13\n                            \n                        \n\n                \n                    \n                        define team the user is in \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        /**define id of the user (unique) */\n        public id:number,\n        /**define name of the user (string) */\n        public name:string,\n        /**define email of the user (string) */\n        public email:string,\n        /**define team the user is in */\n        public team:{\n            /**define id of the team (unique) */\n            id:number,\n            /**define name of the team (string) */\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { teamList } from './../teamList';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n // return resp\n}\n\ngetTeam():Observable{\n  console.log(\"inside GetTeam\")\n  return this.http.get(\"http://localhost:8080/getTeam\")\n  \n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                17 %\n                (4/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                20 %\n                (4/20)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
