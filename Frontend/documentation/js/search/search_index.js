var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.417,1,0.996]],["body/components/ApiResponseComponent.html",[0,0.629,1,1.626,2,1.527,3,0.17,4,0.148,5,1.154,6,1.154,7,1.154,8,1.154,9,0.148,10,5.739,11,3.932,12,2.893,13,1.154,14,2.234,15,2.012,16,2.171,17,4.717,18,1.449,19,5.433,20,1.449,21,4.717,22,0.17,23,0.546,24,1.151,25,1.802,26,3.21,27,4.037,28,3.255,29,4.65,30,0.667,31,5.879,32,0.435,33,3.38,34,3.918,35,0.463,36,4.717,37,0.337,38,0.02,39,0.346,40,0.352,41,0.337,42,3.38,43,0.509,44,1.175,45,2.573,46,3.59,47,3.38,48,3.38,49,1.439,50,0.887,51,0.887,52,1.218,53,3.38,54,0.607,55,3.38,56,0.585,57,1.982,58,2.573,59,1.846,60,1.439,61,1.094,62,1.982,63,0.337,64,0.17,65,0.026,66,3.38,67,3.38,68,3.38,69,3.38,70,3.38,71,3.38,72,4.037,73,1.038,74,1.61,75,1.61,76,1.154,77,2.007,78,1.154,79,3.38,80,1.154,81,0.935,82,1.154,83,0.935,84,1.154,85,0.935,86,1.154,87,1.61,88,0.887,89,1.154,90,0.935,91,1.154,92,0.935,93,1.154,94,0.842,95,0.985,96,1.154,97,0.887,98,1.154,99,0.935,100,1.038,101,1.154,102,0.799,103,1.154,104,0.935,105,0.935,106,1.154,107,0.887,108,1.154,109,0.887,110,0.887,111,1.154,112,0.935,113,1.154,114,0.887,115,0.887,116,1.154,117,1.154,118,0.009,119,0.013,120,0.009]],["title/components/AppComponent.html",[0,0.417,81,0.996]],["body/components/AppComponent.html",[0,0.697,1,1.144,2,1.75,3,0.208,4,0.182,5,1.412,6,1.412,7,1.412,8,1.412,9,0.182,13,1.412,14,2.283,15,2.057,16,1.339,18,1.66,20,1.66,22,0.208,23,0.625,35,0.291,38,0.02,39,0.344,40,0.235,50,1.085,51,1.085,54,0.743,56,0.445,63,0.413,64,0.208,65,0.032,73,1.27,74,1.845,75,1.845,76,1.412,77,2.18,78,1.412,80,1.412,81,1.766,82,1.412,83,1.144,84,1.412,85,1.144,86,1.412,87,1.845,88,1.085,89,1.412,90,1.144,91,1.412,92,1.144,93,1.412,94,1.03,95,1.205,96,1.412,97,1.085,98,1.412,99,1.144,100,1.27,101,1.412,102,0.977,103,1.412,104,1.144,105,1.144,106,1.412,107,1.085,108,1.412,109,1.085,110,1.085,111,1.412,112,1.144,113,1.412,114,1.085,115,1.085,116,1.412,117,1.412,118,0.011,119,0.015,120,0.011,121,3.539,122,1.75,123,6.021,124,5.405,125,3.531,126,4.626,127,4.135]],["title/modules/AppModule.html",[128,2.486,129,2.486]],["body/modules/AppModule.html",[1,1.556,3,0.118,4,0.103,9,0.103,11,1.378,15,0.65,16,0.761,38,0.021,56,0.8,58,1.789,60,1,63,0.235,64,0.118,65,0.018,73,0.722,81,1.808,83,1.556,85,1.556,88,1.477,90,1.556,92,1.556,94,1.401,95,0.685,97,1.477,99,1.556,100,1.8,102,1.329,104,1.556,105,0.65,107,1.477,109,1.477,110,0.948,112,1.556,114,1.477,118,0.006,119,0.01,120,0.006,128,1.622,129,5.14,130,1.489,131,1.622,132,3.766,133,3.348,134,4.227,135,1.789,136,2.012,137,2.012,138,2.012,139,2.012,140,2.012,141,3.565,142,3.565,143,3.072,144,3.565,145,3.299,146,3.072,147,3.092,148,1.789,149,2.35,150,3.092,151,1.789,152,1.789,153,1.378,154,1.789,155,3.612,156,3.092,157,1.789,158,2.493,159,2.35,160,2.35,161,3.612,162,2.35,163,3.612,164,2.35,165,2.012,166,2.012,167,1.789,168,1.789,169,3.092,170,2.289,171,1.537,172,3.612,173,4.4,174,1.489,175,2.493,176,1.622,177,1.378,178,2.493,179,1.622,180,3.612,181,2.35,182,2.749,183,2.012,184,1.127,185,4.4,186,2.35,187,3.612,188,2.35,189,3.612,190,2.35,191,1.489,192,1.789,193,3.612,194,0.847,195,1.622,196,1.789,197,2.012,198,3.612,199,2.012,200,1.789,201,2.012,202,2.35,203,2.35,204,1.378,205,2.012,206,2.35,207,3.612,208,2.35,209,2.35,210,3.612,211,2.35,212,3.612,213,2.35,214,3.612,215,2.012,216,3.612,217,2.35,218,2.35,219,2.35,220,1.789,221,1.622,222,2.012,223,1.378,224,1.622,225,3.612,226,1.789,227,1.622,228,1.789,229,1.622,230,2.012,231,3.612,232,4.938,233,2.118,234,1.973,235,1.973,236,2.493,237,2.35,238,1.424,239,1.452,240,3.612,241,3.612,242,2.35,243,2.35,244,2.35,245,2.35,246,2.35,247,0.945,248,2.35,249,2.35]],["title/modules/AppRoutingModule.html",[128,2.486,141,2.282]],["body/modules/AppRoutingModule.html",[3,0.237,4,0.207,9,0.207,38,0.021,56,0.783,58,3.582,63,0.47,64,0.237,65,0.037,88,1.236,97,1.236,99,1.302,100,1.446,102,1.112,107,1.236,109,1.236,110,1.236,114,1.236,118,0.013,119,0.016,120,0.013,130,2.982,135,3.582,141,3.72,150,4.029,158,4.052,165,4.029,166,4.029,183,4.029,196,3.582,197,4.029,222,4.029,229,3.249,230,4.029,250,4.707,251,4.707,252,4.416,253,4.052,254,2.003,255,2.257,256,7.209,257,4.707,258,4.707,259,4.707,260,4.707,261,4.707,262,4.707,263,4.707,264,4.707,265,4.707,266,4.707]],["title/injectables/AuthorizationService.html",[267,0.477,268,2.741]],["body/injectables/AuthorizationService.html",[3,0.243,4,0.212,9,0.212,22,0.243,23,0.69,30,0.843,32,0.445,35,0.477,37,0.482,38,0.02,39,0.307,40,0.339,41,0.482,43,0.897,44,1.202,54,0.867,56,0.642,63,0.482,64,0.243,65,0.038,118,0.013,119,0.016,120,0.013,122,1.563,254,2.054,267,0.791,268,4.539,269,1.563,270,4.132,271,4.539,272,5.145,273,6.76,274,4.132,275,3.692,276,5.964,277,4.828,278,4.828,279,1.739,280,4.828,281,1.483,282,4.828,283,4.828,284,4.828,285,4.828,286,1.202,287,4.828,288,4.828]],["title/classes/Comment.html",[65,0.028,289,2.112]],["body/classes/Comment.html",[3,0.233,4,0.204,9,0.204,22,0.233,23,0.673,24,1.326,32,0.536,35,0.484,37,0.463,38,0.02,39,0.295,40,0.409,41,0.463,54,1.141,64,0.233,65,0.036,118,0.013,119,0.016,120,0.013,239,2.554,289,4.107,290,2.091,291,3.357,292,3.966,293,6.662,294,2.472,295,3.526,296,2.867,297,4.835,298,3.046,299,4.634,300,4.634,301,4.634,302,4.634,303,4.634,304,4.012,305,4.634,306,4.634,307,3.198]],["title/components/CommentComponent.html",[0,0.417,83,0.996]],["body/components/CommentComponent.html",[0,0.608,1,0.881,2,1.464,3,0.16,4,0.14,5,1.087,6,1.087,7,1.087,8,1.087,9,0.14,13,1.087,14,2.217,15,1.997,16,1.031,18,1.389,20,1.389,22,0.16,23,0.523,24,1.25,25,0.928,30,0.639,32,0.485,35,0.48,38,0.02,39,0.334,40,0.326,43,0.68,44,1.31,56,0.487,61,1.702,63,0.318,64,0.16,65,0.025,73,0.978,74,1.543,75,1.543,76,1.087,77,1.954,78,1.087,80,1.087,81,0.881,82,1.087,83,1.584,84,1.087,85,0.881,86,1.087,87,1.543,88,0.836,89,1.087,90,0.881,91,1.087,92,0.881,93,1.087,94,0.793,95,0.928,96,1.087,97,0.836,98,1.087,99,0.881,100,0.978,101,1.087,102,0.752,103,1.087,104,0.881,105,0.881,106,1.087,107,0.836,108,1.087,109,0.836,110,0.836,111,1.087,112,0.881,113,1.087,114,0.836,115,0.836,116,1.087,117,1.087,118,0.009,119,0.012,120,0.009,238,1.031,289,3.684,291,3.337,296,2.04,308,2.725,309,1.464,310,5.258,311,4.521,312,6.047,313,4.521,314,4.501,315,4.173,316,4.9,317,1.954,318,3.441,319,2.31,320,3.441,321,4.521,322,4.521,323,3.183,324,3.183,325,3.441,326,3.183,327,3.183,328,3.183,329,3.183,330,3.183,331,3.183,332,3.183,333,3.183,334,2.865,335,3.183,336,3.183,337,2.725,338,2.423,339,3.183,340,3.183,341,3.183,342,3.183,343,3.183,344,3.183,345,2.423,346,3.183,347,3.183,348,3.183,349,3.183,350,3.87,351,1.867,352,2.017,353,2.423,354,2.423,355,2.725,356,3.183,357,3.87,358,1.738,359,2.423,360,2.725,361,3.183,362,1.867,363,2.469,364,1.355]],["title/components/CreateProposalComponent.html",[0,0.417,85,0.996]],["body/components/CreateProposalComponent.html",[0,0.546,1,0.729,2,1.275,3,0.133,4,0.116,5,0.899,6,0.899,7,0.899,8,0.899,9,0.116,13,0.899,14,2.16,15,1.946,16,0.853,18,1.209,20,1.209,22,0.133,23,0.456,24,1.248,25,1.633,30,0.557,32,0.243,35,0.486,37,0.263,38,0.02,39,0.3,40,0.371,41,0.263,43,0.396,44,0.656,45,2.004,46,2.004,50,1.471,51,1.471,52,0.949,54,0.708,56,0.508,60,1.121,61,1.527,62,1.545,63,0.263,64,0.133,65,0.021,73,0.809,74,1.344,75,1.344,76,0.899,77,1.787,78,0.899,80,0.899,81,0.729,82,0.899,83,0.729,84,0.899,85,1.448,86,2.186,87,1.344,88,0.691,89,0.899,90,0.729,91,0.899,92,0.729,93,0.899,94,0.656,95,0.768,96,0.899,97,0.691,98,0.899,99,0.729,100,0.809,101,0.899,102,0.622,103,0.899,104,0.729,105,0.729,106,0.899,107,0.691,108,0.899,109,0.691,110,0.691,111,0.899,112,0.729,113,0.899,114,0.691,115,0.691,116,0.899,117,0.899,118,0.007,119,0.011,120,0.007,125,2.309,167,5.288,168,5.288,177,3.286,239,1.583,291,3.331,296,1.188,298,1.263,309,1.275,317,1.787,319,2.011,364,1.121,365,2.004,366,3.003,367,4.037,368,3.371,369,4.716,370,2.409,371,3.938,372,5.602,373,4.037,374,4.48,375,2.007,376,3.938,377,4.716,378,3.938,379,2.004,380,2.261,381,3.867,382,2.634,383,2.634,384,4.716,385,2.634,386,2.634,387,1.345,388,2.634,389,2.254,390,2.254,391,2.254,392,2.254,393,2.634,394,2.634,395,2.254,396,2.254,397,2.254,398,2.634,399,1.438,400,2.634,401,2.634,402,2.254,403,2.634,404,2.634,405,2.634,406,2.634,407,2.634,408,2.634,409,2.634,410,2.634,411,2.634,412,2.634,413,2.634,414,2.634,415,2.634,416,2.254,417,2.634,418,5.234,419,4.48,420,3.371,421,5.032,422,3.938,423,3.938,424,3.371,425,3.938,426,3.371,427,2.309,428,3.371,429,1.818,430,2.254,431,2.634,432,2.634,433,2.634]],["title/interfaces/DialogData.html",[57,2.112,434,2.112]],["body/interfaces/DialogData.html",[0,0.478,3,0.141,4,0.123,9,0.123,14,0.863,15,0.777,18,0.863,20,0.863,22,0.141,23,0.478,24,0.88,26,1.534,34,1.779,38,0.021,40,0.16,44,1.029,49,1.757,52,1.945,54,0.97,56,0.76,57,2.422,59,1.534,60,2.084,61,1.337,62,1.647,63,0.28,64,0.247,65,0.032,94,0.7,95,0.819,102,0.664,105,0.777,115,0.737,118,0.013,119,0.011,120,0.008,153,1.647,170,1.779,171,1.757,174,1.779,175,1.938,176,1.938,177,1.647,178,1.938,179,1.938,223,1.647,224,1.938,233,2.873,234,2.675,235,3.286,236,1.938,238,1.748,247,2.171,253,1.938,254,1.195,255,1.98,275,2.675,281,0.863,286,1.029,294,2.073,309,1.337,317,0.959,364,1.195,370,2.11,380,1.98,387,2.759,434,1.647,435,2.808,436,1.938,437,2.94,438,1.435,439,1.938,440,1.779,441,1.647,442,2.137,443,1.779,444,2.137,445,1.647,446,2.348,447,2.759,448,1.534,449,1.938,450,2.85,451,2.85,452,2.85,453,1.534,454,1.938,455,2.85,456,3.143,457,2.422,458,1.938,459,2.255,460,2.85,461,1.938,462,1.938,463,1.938,464,1.938,465,1.938,466,2.137,467,2.137,468,2.137,469,1.938,470,2.137,471,2.137,472,2.137,473,2.137,474,1.938,475,1.647,476,2.137,477,1.779,478,2.137,479,2.137,480,2.94,481,2.137,482,1.779,483,1.779,484,2.137,485,2.137,486,1.938,487,2.137,488,1.98,489,1.779,490,2.137,491,3.143,492,3.143,493,3.143,494,2.137,495,2.137,496,2.137,497,2.137,498,2.137,499,2.137,500,2.137,501,1.938,502,2.137,503,2.137,504,2.137,505,2.137,506,2.137,507,2.137,508,2.137,509,2.137,510,3.728,511,3.728,512,2.137,513,3.143,514,2.137,515,3.143,516,1.534,517,3.143,518,3.143,519,3.143,520,1.98,521,1.938,522,1.938,523,1.779,524,1.938,525,1.938,526,2.137,527,2.137,528,2.137,529,2.137,530,2.137,531,2.137,532,1.779,533,2.137,534,1.938,535,1.647,536,2.137,537,2.137,538,2.137,539,2.137,540,2.137,541,2.137]],["title/components/ErrorComponent.html",[0,0.417,88,0.945]],["body/components/ErrorComponent.html",[0,0.678,1,1.081,2,1.686,3,0.197,4,0.172,5,1.334,6,1.334,7,1.334,8,1.334,9,0.172,13,1.334,14,2.27,15,2.045,16,1.265,18,1.6,20,1.6,22,0.197,23,0.603,30,0.736,32,0.54,35,0.413,38,0.02,39,0.331,40,0.222,43,0.588,44,1.297,50,1.026,51,1.026,54,0.702,56,0.421,61,1.896,63,0.39,64,0.197,65,0.03,73,1.201,74,1.778,75,1.778,76,1.334,77,2.132,78,1.334,80,1.334,81,1.081,82,1.334,83,1.081,84,1.334,85,1.081,86,1.334,87,1.778,88,1.64,89,1.334,90,1.081,91,1.334,92,1.081,93,1.334,94,0.974,95,1.139,96,1.334,97,1.026,98,1.334,99,1.081,100,1.201,101,1.334,102,0.924,103,1.334,104,1.081,105,1.081,106,1.334,107,1.026,108,1.334,109,1.026,110,1.026,111,1.334,112,1.081,113,1.334,114,1.026,115,1.026,116,1.334,117,1.334,118,0.011,119,0.014,120,0.011,309,1.686,317,2.132,474,4.49,520,2.995,542,3.346,543,5.857,544,5.208,545,5.208,546,3.909,547,4.458]],["title/classes/Feed.html",[65,0.028,548,2.112]],["body/classes/Feed.html",[3,0.265,4,0.231,9,0.231,22,0.265,23,0.728,24,1.208,32,0.58,35,0.443,37,0.526,38,0.02,39,0.335,40,0.405,41,0.526,64,0.265,65,0.041,118,0.014,119,0.017,120,0.014,290,2.377,298,3.224,548,3.689,549,4.51,550,5.961,551,5.269,552,5.269,553,5.269]],["title/components/FeedComponent.html",[0,0.417,90,0.996]],["body/components/FeedComponent.html",[0,0.408,1,0.466,2,0.897,3,0.085,4,0.074,5,0.575,6,0.575,7,0.575,8,0.575,9,0.074,13,0.575,14,1.994,15,1.796,16,0.545,18,0.851,20,0.851,22,0.085,23,0.321,24,1.246,25,1.192,30,0.392,32,0.155,35,0.489,37,0.451,38,0.021,39,0.327,40,0.376,41,0.451,43,0.861,44,1.461,49,0.717,50,1.276,51,1.276,52,0.607,54,0.812,56,0.553,61,1.142,63,0.168,64,0.085,65,0.013,73,0.517,74,0.946,75,0.946,76,0.575,77,1.396,78,0.575,80,0.575,81,0.466,82,0.575,83,0.766,84,0.575,85,0.466,86,1.205,87,0.946,88,0.442,89,0.575,90,1.131,91,0.575,92,0.466,93,0.575,94,0.42,95,0.491,96,0.575,97,0.442,98,0.575,99,0.466,100,0.517,101,0.575,102,0.398,103,0.575,104,0.466,105,0.466,106,0.575,107,0.442,108,0.575,109,0.442,110,0.442,111,0.575,112,0.766,113,1.659,114,0.442,115,0.442,116,0.575,117,0.575,118,0.005,119,0.008,120,0.005,125,0.988,145,2.398,158,1.162,169,1.442,204,3.012,205,1.442,221,1.162,239,1.114,247,1.419,289,3.147,291,3.336,296,2.318,309,0.897,314,2.371,317,1.396,318,2.108,319,1.415,320,2.108,325,3.909,334,2.591,337,1.442,338,3.112,351,2.398,352,2.236,353,1.282,354,2.686,355,3.5,358,2.654,359,2.108,360,1.442,362,2.07,363,0.92,364,0.717,366,0.808,399,0.92,416,2.371,424,1.442,520,2.871,534,1.162,535,1.625,547,3.021,548,1.625,554,1.442,555,3.529,556,2.771,557,2.771,558,2.771,559,5.558,560,2.771,561,2.771,562,2.771,563,2.371,564,2.771,565,2.771,566,2.771,567,3.529,568,4.089,569,4.089,570,4.089,571,2.771,572,4.089,573,2.371,574,2.371,575,4.089,576,2.771,577,1.684,578,2.771,579,1.684,580,1.684,581,1.684,582,1.684,583,1.684,584,1.684,585,1.684,586,1.684,587,1.684,588,1.684,589,2.771,590,1.684,591,2.771,592,1.684,593,1.684,594,1.442,595,1.684,596,1.442,597,1.684,598,1.684,599,1.684,600,1.684,601,1.684,602,1.684,603,1.684,604,1.684,605,1.684,606,1.684,607,1.684,608,1.684,609,1.684,610,1.684,611,1.162,612,1.684,613,1.282,614,1.684,615,1.684,616,1.684,617,1.684,618,1.684,619,1.684,620,1.684,621,1.684,622,1.684,623,1.684,624,1.684,625,1.684,626,1.684,627,1.684,628,1.684,629,1.684,630,1.684,631,1.684,632,1.684,633,3.529,634,1.684,635,1.684,636,1.684,637,1.684,638,1.684,639,1.684,640,1.684,641,1.684,642,1.684,643,4.089,644,4.089,645,2.771,646,1.684,647,1.684,648,1.684,649,2.771,650,4.089,651,2.771,652,2.468,653,2.371,654,1.684,655,1.684,656,1.684,657,1.684,658,1.684,659,1.684,660,2.771,661,2.771,662,3.868,663,1.684,664,1.684,665,3.021,666,3.021,667,1.684,668,1.684,669,1.684,670,1.684,671,2.771,672,4.089,673,1.755,674,2.771,675,1.684,676,1.684,677,2.771,678,2.771,679,1.684,680,1.684,681,1.684,682,1.684,683,1.684,684,1.684,685,1.684,686,1.162,687,2.771,688,1.684,689,1.684,690,1.684,691,2.771,692,2.771,693,2.771,694,2.771,695,2.771,696,2.771,697,2.771,698,2.771,699,2.771,700,2.771,701,2.771,702,2.07,703,1.625,704,2.371,705,2.822,706,2.771,707,2.398,708,1.684,709,1.684,710,2.371,711,3.021,712,1.282,713,3.021,714,1.684,715,1.442,716,2.771,717,2.07,718,1.684,719,1.067,720,1.684,721,3.021,722,1.684,723,1.684,724,1.684,725,1.684,726,1.282,727,1.684,728,1.684,729,1.684,730,1.684,731,1.442,732,2.771,733,1.684,734,2.771,735,2.371,736,1.513,737,1.684,738,2.371,739,1.684,740,1.684,741,1.684,742,1.684,743,1.684,744,1.684,745,1.684,746,1.684,747,1.684,748,1.684,749,2.771,750,1.684,751,1.684,752,0.988,753,1.684,754,1.684,755,2.771,756,1.684,757,1.684,758,1.684]],["title/classes/FeedParams.html",[65,0.028,759,2.486]],["body/classes/FeedParams.html",[3,0.222,4,0.194,9,0.194,22,0.222,23,0.653,24,1.344,32,0.52,35,0.496,37,0.441,38,0.02,39,0.281,40,0.385,41,0.675,54,1.243,64,0.222,65,0.034,118,0.012,119,0.015,120,0.012,290,1.993,297,5.264,319,3.455,523,4.148,707,3.839,759,3.893,760,6.093,761,3.78,762,6.547,763,6.214,764,5.79,765,4.417,766,4.417,767,4.827,768,4.417,769,4.417,770,4.417,771,4.417,772,4.417,773,4.417,774,4.417,775,4.417,776,4.417,777,4.417]],["title/components/FilterComponent.html",[0,0.417,92,0.996]],["body/components/FilterComponent.html",[0,0.545,1,0.727,2,1.272,3,0.132,4,0.115,5,0.897,6,0.897,7,0.897,8,0.897,9,0.115,13,0.897,14,2.16,15,1.945,16,0.85,18,1.207,20,1.207,22,0.132,23,0.455,24,1.248,25,1.373,28,3.608,30,0.556,32,0.434,35,0.478,37,0.262,38,0.021,39,0.3,40,0.268,41,0.262,43,0.842,44,1.463,50,0.69,51,0.69,54,0.472,56,0.563,61,1.272,63,0.262,64,0.132,65,0.02,73,0.807,74,1.342,75,1.342,76,0.897,77,1.784,78,0.897,80,0.897,81,0.727,82,0.897,83,0.727,84,0.897,85,0.727,86,0.897,87,1.342,88,0.69,89,0.897,90,0.727,91,0.897,92,1.446,93,0.897,94,0.654,95,0.766,96,0.897,97,0.69,98,0.897,99,0.727,100,0.807,101,0.897,102,0.621,103,0.897,104,0.727,105,0.727,106,0.897,107,0.69,108,0.897,109,0.69,110,0.69,111,0.897,112,0.727,113,0.897,114,0.69,115,1.236,116,0.897,117,0.897,118,0.007,119,0.011,120,0.007,204,3.57,215,2.249,227,4.202,228,4.764,238,0.85,291,3.279,297,4.871,309,1.272,317,1.784,318,2.991,320,2.991,325,2.991,334,1.664,338,1.999,352,1.664,364,2.004,420,4.031,429,1.813,548,3.065,550,3.364,611,1.813,613,1.999,652,1.435,673,1.664,702,2.762,703,3.065,704,2.249,705,2.713,726,1.999,736,1.435,778,2.249,779,4.709,780,3.93,781,4.709,782,4.709,783,3.93,784,5.227,785,5.227,786,5.227,787,3.93,788,4.709,789,3.93,790,3.93,791,2.627,792,2.627,793,2.627,794,2.627,795,2.627,796,2.627,797,3.93,798,2.627,799,2.627,800,2.627,801,2.627,802,2.627,803,2.627,804,2.627,805,2.627,806,2.627,807,2.627,808,2.627,809,2.627,810,2.627,811,2.627,812,3.93,813,3.93,814,2.627,815,2.627,816,2.627,817,2.627,818,2.627,819,2.627,820,2.627,821,2.627,822,4.709,823,2.249,824,5.227,825,4.474,826,2.627,827,2.627,828,2.627,829,2.627,830,2.627,831,3.93,832,2.627,833,2.627,834,3.93,835,2.305,836,2.627,837,3.25,838,2.627,839,2.627,840,2.627,841,2.627]],["title/components/ForgetPasswordComponent.html",[0,0.417,94,0.897]],["body/components/ForgetPasswordComponent.html",[0,0.558,1,0.755,2,1.31,3,0.137,4,0.12,5,0.932,6,0.932,7,0.932,8,0.932,9,0.12,13,0.932,14,2.172,15,1.956,16,0.884,18,1.243,20,1.243,22,0.137,23,0.468,25,1.404,30,0.572,32,0.252,34,1.73,35,0.446,37,0.273,38,0.021,39,0.307,40,0.324,41,0.273,43,0.725,44,1.327,49,1.722,50,0.717,51,0.717,52,0.984,54,0.957,56,0.612,59,1.491,60,1.162,61,1.56,63,0.273,64,0.204,65,0.032,72,3.463,73,0.839,74,1.381,75,1.381,76,0.932,77,1.942,78,0.932,80,0.932,81,0.755,82,0.932,83,0.755,84,0.932,85,0.755,86,0.932,87,1.381,88,0.717,89,0.932,90,0.755,91,0.932,92,0.755,93,0.932,94,1.327,95,1.918,96,0.932,97,0.717,98,0.932,99,0.755,100,0.839,101,0.932,102,0.645,103,0.932,104,0.755,105,1.574,106,0.932,107,0.717,108,0.932,109,0.717,110,1.399,111,0.932,112,0.755,113,0.932,114,0.717,115,0.717,116,0.932,117,0.932,118,0.007,119,0.011,120,0.007,171,1.162,174,1.73,182,2.078,223,3.792,238,1.31,239,1.937,247,1.098,255,1.309,281,0.839,286,0.68,309,1.56,317,1.819,380,1.309,387,2.066,427,2.372,437,3.234,446,2.31,447,2.461,448,1.491,450,2.792,451,2.792,452,2.792,457,2.372,458,1.885,459,2.209,460,2.792,461,1.885,462,1.885,463,1.885,464,1.885,465,1.885,488,1.309,489,1.73,516,1.491,520,2.856,652,2.631,665,2.337,666,2.337,686,1.885,842,5.535,843,2.337,844,4.819,845,4.045,846,4.045,847,4.819,848,5.328,849,3.677,850,2.731,851,3.677,852,4.045,853,4.045,854,2.731,855,2.731,856,2.731,857,2.731,858,2.731,859,2.731,860,2.731,861,2.731,862,2.731,863,2.731,864,2.731,865,2.731,866,2.731,867,2.731,868,1.885,869,2.731,870,2.731,871,4.124,872,2.731,873,2.731,874,2.337,875,2.337,876,2.563,877,3.079,878,3.463,879,3.079,880,4.045,881,4.045,882,4.045,883,4.045]],["title/injectables/GetProposalsService.html",[142,2.282,267,0.477]],["body/injectables/GetProposalsService.html",[3,0.164,4,0.143,9,0.143,22,0.164,23,0.532,25,1.846,30,0.651,32,0.301,35,0.497,37,0.65,38,0.021,39,0.414,40,0.401,41,0.65,43,0.953,50,1.663,51,1.663,54,1.138,56,0.657,63,0.326,64,0.164,65,0.025,118,0.009,119,0.013,120,0.009,122,1.056,142,2.916,184,1.565,194,1.175,267,0.61,269,1.056,279,1.175,281,1.002,286,1.577,319,2.957,548,3.126,686,3.679,759,4.864,764,4.955,884,6.074,885,2.793,886,4.602,887,4.602,888,4.602,889,4.602,890,4.602,891,4.602,892,4.602,893,4.602,894,4.602,895,4.602,896,4.602,897,4.602,898,3.263,899,2.143,900,4.602,901,3.263,902,3.263,903,3.263,904,4.016,905,3.263,906,3.263,907,3.263,908,3.263,909,3.263,910,3.263,911,3.263,912,3.263,913,3.263,914,3.263,915,4.602,916,3.263,917,3.263,918,4.602,919,3.263,920,3.263,921,4.602,922,3.263,923,3.263,924,3.263,925,3.263,926,3.263,927,3.263,928,3.263,929,3.263,930,3.263,931,3.263,932,3.263,933,3.263,934,3.263,935,3.263,936,4.602,937,3.263,938,3.263,939,3.263,940,3.263,941,3.939,942,3.263,943,3.263,944,3.263]],["title/injectables/GetTeamService.html",[143,1.967,267,0.477]],["body/injectables/GetTeamService.html",[3,0.247,4,0.216,9,0.216,22,0.247,30,0.852,32,0.452,35,0.425,37,0.49,38,0.021,39,0.312,40,0.279,41,0.49,43,0.738,56,0.732,63,0.49,64,0.247,65,0.038,118,0.013,119,0.016,120,0.013,122,1.589,143,3.29,184,2.353,194,1.768,267,0.799,269,1.589,279,1.768,281,1.507,286,1.501,899,2.621,904,3.533,945,5.58,946,4.201,947,5.174,948,2.088,949,4.908,950,2.088,951,4.908,952,3.817,953,3.109,954,4.908,955,2.68,956,4.908,957,4.201]],["title/components/HomeComponent.html",[0,0.417,97,0.945]],["body/components/HomeComponent.html",[0,0.53,1,0.693,2,1.228,3,0.126,4,0.11,5,0.856,6,0.856,7,0.856,8,0.856,9,0.11,13,0.856,14,2.144,15,1.931,16,0.811,18,1.165,20,1.165,22,0.191,23,0.439,24,1.037,27,3.247,30,0.536,32,0.231,35,0.387,37,0.25,38,0.021,39,0.325,40,0.26,41,0.25,43,0.571,44,1.14,49,1.614,56,0.408,61,1.482,63,0.25,64,0.126,65,0.02,73,0.77,74,1.295,75,1.295,76,0.856,77,1.743,78,0.856,80,0.856,81,0.693,82,0.856,83,0.693,84,0.856,85,0.693,86,0.856,87,1.295,88,0.658,89,0.856,90,0.693,91,0.856,92,0.693,93,0.856,94,0.624,95,0.731,96,0.856,97,1.34,98,0.856,99,0.693,100,0.77,101,0.856,102,0.592,103,0.856,104,0.693,105,0.693,106,0.856,107,0.658,108,0.856,109,0.658,110,0.658,111,0.856,112,0.693,113,0.856,114,0.658,115,0.658,116,0.856,117,0.856,118,0.007,119,0.01,120,0.01,200,1.908,235,2.072,254,1.067,281,0.77,309,1.228,317,1.743,350,2.145,352,3.474,353,1.908,354,1.908,358,3.151,359,1.908,362,3.216,363,1.369,364,2.334,366,1.819,429,3.785,430,4.694,673,2.9,702,3.838,703,1.47,705,4.136,707,2.685,711,3.247,712,2.887,717,3.777,721,2.145,726,4.901,731,3.247,735,2.145,736,2.072,738,2.145,752,2.225,823,2.145,835,2.994,837,1.73,958,2.145,959,3.794,960,4.578,961,3.794,962,3.794,963,5.105,964,2.506,965,4.37,966,3.794,967,2.506,968,2.506,969,2.506,970,2.506,971,2.506,972,2.145,973,2.506,974,2.506,975,2.506,976,3.247,977,3.794,978,3.794,979,3.794,980,2.506,981,2.506,982,2.145,983,2.506,984,3.159,985,2.506,986,2.145,987,2.506,988,2.506,989,3.247,990,2.506,991,2.506,992,3.474,993,2.618,994,2.506,995,2.506,996,2.145,997,5.992,998,1.588,999,2.506,1000,1.73,1001,1.588,1002,1.588,1003,3.794,1004,2.506,1005,2.145,1006,2.506,1007,2.506,1008,2.618,1009,2.506,1010,3.794,1011,5.282,1012,4.578,1013,2.506,1014,2.506,1015,5.484,1016,5.105,1017,2.506,1018,2.506,1019,2.506,1020,2.506,1021,3.794,1022,2.506,1023,2.506,1024,2.506,1025,2.506,1026,2.506,1027,2.506,1028,3.794,1029,3.794,1030,6.171,1031,2.506,1032,2.506,1033,2.506,1034,2.145,1035,2.506,1036,2.506,1037,2.506,1038,2.506,1039,2.506,1040,2.506,1041,2.506,1042,2.506,1043,2.506,1044,2.506,1045,2.145,1046,2.506,1047,2.506,1048,2.506,1049,2.506,1050,2.506]],["title/interceptors/HttpInterceptorService.html",[1051,3.083,1052,2.741]],["body/interceptors/HttpInterceptorService.html",[3,0.221,4,0.193,9,0.193,22,0.221,30,0.794,32,0.405,35,0.396,37,0.561,38,0.021,39,0.357,40,0.352,41,0.561,43,0.66,56,0.703,63,0.438,64,0.221,65,0.034,118,0.012,119,0.015,120,0.012,184,2.104,194,1.581,238,1.421,255,2.104,267,0.745,272,3.34,281,1.348,286,1.399,294,1.581,309,1.421,453,3.567,454,3.029,673,2.78,904,3.633,1052,4.275,1053,4.389,1054,5.303,1055,3.756,1056,5.617,1057,4.389,1058,4.389,1059,5.617,1060,5.617,1061,6.531,1062,6.195,1063,6.531,1064,4.389,1065,4.389,1066,5.617,1067,4.389,1068,5.617,1069,4.389,1070,4.389,1071,4.389,1072,4.389,1073,3.756,1074,4.389,1075,4.389,1076,3.34,1077,4.389,1078,4.389,1079,4.389,1080,4.389]],["title/components/LoginComponent.html",[0,0.417,102,0.851]],["body/components/LoginComponent.html",[0,0.434,1,0.508,2,0.963,3,0.093,4,0.081,5,0.627,6,0.627,7,0.627,8,0.627,9,0.081,13,0.627,14,2.03,15,1.828,16,0.595,18,0.914,20,0.914,22,0.093,23,0.344,24,1.03,26,1.004,30,0.421,32,0.169,34,1.165,35,0.479,37,0.183,38,0.021,39,0.238,40,0.335,41,0.183,43,0.712,44,1.328,49,1.833,50,1.242,51,1.242,52,1.551,54,0.85,56,0.705,57,1.078,59,1.004,60,1.595,61,1.213,62,1.078,63,0.183,64,0.189,65,0.023,73,0.565,74,1.016,75,1.016,76,0.627,77,1.47,78,0.627,80,0.627,81,0.508,82,0.627,83,0.508,84,0.627,85,0.508,86,0.627,87,1.016,88,0.483,89,0.627,90,0.508,91,0.627,92,0.508,93,0.627,94,0.741,95,0.867,96,0.627,97,0.483,98,0.627,99,0.508,100,0.565,101,0.627,102,1.018,103,0.627,104,0.508,105,1.535,106,0.627,107,0.483,108,0.627,109,0.483,110,0.984,111,0.627,112,0.508,113,0.627,114,0.483,115,0.781,116,0.627,117,0.627,118,0.01,119,0.008,120,0.005,153,1.078,170,1.165,171,1.266,174,1.165,175,1.269,176,1.269,177,1.078,178,1.269,179,1.269,223,1.078,224,1.269,233,2.198,234,2.047,235,2.911,236,1.269,238,1.532,247,2.143,253,1.269,254,0.782,255,1.426,274,1.573,275,2.765,281,0.565,286,0.741,294,1.92,309,1.213,317,1.47,351,1.078,358,1.625,363,1.625,364,1.266,370,2.586,380,2.268,387,2.2,434,1.078,436,1.269,437,3.137,438,2.417,439,1.269,440,1.165,441,2.198,442,1.399,443,1.165,444,1.399,445,1.078,446,2.065,447,2.2,448,1.004,449,1.269,450,2.053,451,2.053,452,2.053,453,2.352,454,1.269,455,2.973,456,2.852,457,2.198,458,1.269,459,1.625,460,2.053,461,1.269,462,1.269,463,1.269,464,1.269,465,1.269,466,2.264,467,2.852,468,1.399,469,1.269,470,2.852,471,2.852,472,1.399,473,2.852,474,3.265,475,1.745,476,2.264,477,2.375,478,2.852,479,2.852,480,2.929,481,2.852,482,2.375,483,1.165,484,1.399,485,1.399,486,2.587,487,1.399,488,1.426,489,1.165,490,2.852,491,2.264,492,2.264,493,2.264,494,3.278,495,1.399,496,1.399,497,1.399,498,1.399,499,1.399,500,1.399,501,2.973,502,1.399,503,1.399,504,1.399,505,1.399,506,1.399,507,1.399,508,1.399,509,1.399,510,2.852,511,2.852,512,1.399,513,2.264,514,1.399,515,2.264,516,1.004,517,2.264,518,2.264,519,2.264,520,1.426,521,1.269,522,1.269,523,1.165,524,1.269,525,1.269,526,3.278,527,1.399,528,1.399,529,1.399,530,1.399,531,1.399,532,1.165,533,1.399,534,1.269,535,2.526,536,1.399,537,1.399,538,1.399,539,1.399,540,1.399,541,1.399,652,2.352,702,1.078,703,1.078,707,1.078,713,1.573,717,1.078,719,1.165,736,1.004,752,1.078,835,1.078,837,1.269,876,2.729,877,3.278,878,3.687,879,3.278,989,1.573,992,3.208,993,1.269,998,1.165,1000,1.269,1001,1.885,1002,1.885,1011,1.573,1081,2.547,1082,4.307,1083,2.975,1084,2.975,1085,2.975,1086,1.838,1087,1.838,1088,1.838,1089,1.838,1090,1.838,1091,1.838,1092,1.838,1093,1.838,1094,1.838,1095,1.838,1096,1.838,1097,1.838,1098,1.838,1099,1.838,1100,1.838,1101,1.838,1102,1.838,1103,1.838,1104,1.838,1105,1.838,1106,2.975,1107,2.975,1108,2.975,1109,2.975,1110,1.838,1111,1.838,1112,1.573,1113,1.573]],["title/classes/MyErrorStateMatcher.html",[65,0.028,457,2.112]],["body/classes/MyErrorStateMatcher.html",[0,0.465,3,0.136,4,0.119,9,0.119,14,0.832,15,0.749,18,0.832,20,0.832,22,0.136,24,0.862,26,1.48,30,0.569,34,1.717,35,0.191,37,0.27,38,0.021,39,0.172,40,0.154,41,0.27,43,0.408,44,1.002,49,2.041,52,1.912,54,0.723,56,0.756,57,1.589,59,1.48,60,2.041,61,1.302,62,1.589,63,0.27,64,0.241,65,0.031,94,0.675,95,0.79,102,0.64,105,0.749,115,0.711,118,0.013,119,0.011,120,0.007,153,1.589,170,1.717,171,1.712,174,1.717,175,1.87,176,1.87,177,1.589,178,1.87,179,1.87,223,1.589,224,1.87,233,2.813,234,2.619,235,3.244,236,1.87,238,1.718,247,2.134,253,1.87,254,1.153,255,1.928,275,2.619,281,0.832,286,1.002,290,1.222,294,2.042,309,1.553,317,0.925,364,1.153,370,2.054,380,1.928,387,3.227,434,1.589,436,1.87,437,2.054,438,1.384,439,1.87,440,1.717,441,1.589,442,2.062,443,1.717,444,2.062,445,1.589,446,2.3,447,3.034,448,1.48,449,1.87,450,3.663,451,3.663,452,3.31,453,1.48,454,1.87,455,2.776,456,3.061,457,2.813,458,2.776,459,2.898,460,2.776,461,1.87,462,2.776,463,1.87,464,1.87,465,1.87,466,2.062,467,2.062,468,2.062,469,1.87,470,2.062,471,2.062,472,2.062,473,2.062,474,1.87,475,1.589,476,2.062,477,1.717,478,2.062,479,2.062,480,2.896,481,2.062,482,1.717,483,1.717,484,2.062,485,2.062,486,1.87,487,2.062,488,1.928,489,1.717,490,2.062,491,3.061,492,3.061,493,3.061,494,2.062,495,2.062,496,2.062,497,2.062,498,2.062,499,2.062,500,2.062,501,1.87,502,2.062,503,2.062,504,2.062,505,2.062,506,2.062,507,2.062,508,2.062,509,2.062,510,3.65,511,3.65,512,2.062,513,3.061,514,2.062,515,3.061,516,1.48,517,3.061,518,3.061,519,3.061,520,1.928,521,1.87,522,1.87,523,1.717,524,1.87,525,1.87,526,2.062,527,2.062,528,2.062,529,2.062,530,2.062,531,2.062,532,1.717,533,2.062,534,1.87,535,1.589,536,2.062,537,2.062,538,2.062,539,2.062,540,2.062,541,2.062,1114,4.022,1115,2.709]],["title/components/PasswordSpecsComponent.html",[0,0.417,104,0.996]],["body/components/PasswordSpecsComponent.html",[0,0.659,1,1.022,2,1.623,3,0.186,4,0.162,5,1.261,6,1.261,7,1.261,8,1.261,9,0.162,13,1.261,14,2.256,15,2.032,16,1.196,18,1.54,20,1.54,22,0.186,30,0.709,32,0.525,35,0.353,38,0.02,39,0.319,43,0.556,44,1.249,56,0.398,61,1.842,63,0.369,64,0.186,65,0.029,73,1.134,74,1.711,75,1.711,76,1.261,77,2.084,78,1.261,80,1.261,81,1.022,82,1.261,83,1.022,84,1.261,85,1.022,86,1.261,87,1.711,88,0.97,89,1.261,90,1.022,91,1.261,92,1.022,93,1.261,94,0.92,95,1.076,96,1.261,97,0.97,98,1.261,99,1.022,100,1.134,101,1.261,102,0.873,103,1.261,104,1.688,105,1.975,106,1.261,107,0.97,108,1.261,109,0.97,110,0.97,111,1.261,112,1.022,113,1.261,114,0.97,115,0.97,116,1.261,117,1.261,118,0.01,119,0.014,120,0.01,191,3.606,296,2.262,309,1.623,317,2.084,419,4.291,421,4.291,1116,4.871,1117,3.161,1118,5.013,1119,5.691,1120,5.013,1121,3.693,1122,3.693,1123,5.013,1124,5.013,1125,5.013,1126,5.013,1127,6.104,1128,5.013,1129,5.013,1130,5.013,1131,5.013,1132,5.013,1133,5.013,1134,5.013]],["title/classes/Post.html",[65,0.028,204,2.112]],["body/classes/Post.html",[3,0.217,4,0.19,9,0.19,22,0.217,23,0.643,24,1.341,32,0.512,35,0.493,37,0.431,38,0.02,39,0.353,40,0.407,41,0.431,54,1.297,64,0.217,65,0.034,118,0.012,119,0.015,120,0.012,125,3.939,204,3.259,239,2.764,290,1.947,294,2.419,296,3.23,298,2.947,304,2.978,307,2.978,375,2.926,437,2.204,1008,4.479,1135,3.694,1136,6.716,1137,4.316,1138,4.316,1139,4.316,1140,4.316,1141,4.316,1142,4.316,1143,4.316,1144,4.316]],["title/injectables/PostProposalService.html",[144,2.282,267,0.477]],["body/injectables/PostProposalService.html",[3,0.195,4,0.17,9,0.17,22,0.195,23,0.598,24,1.046,25,1.507,30,0.731,32,0.356,35,0.488,37,0.581,38,0.021,39,0.37,40,0.387,41,0.581,43,0.778,50,1.632,51,1.632,54,1.117,56,0.669,63,0.386,64,0.195,65,0.03,118,0.011,119,0.014,120,0.011,122,1.251,144,3.275,184,1.853,194,1.392,239,2.078,267,0.685,269,1.251,279,1.392,281,1.187,286,1.451,298,1.853,319,2.64,366,2.478,480,3.673,611,4.837,686,2.668,899,2.341,904,3.032,941,4.425,948,1.645,950,1.645,953,2.449,1145,3.308,1146,5.169,1147,5.169,1148,5.824,1149,5.169,1150,5.169,1151,5.169,1152,5.169,1153,5.169,1154,3.865,1155,3.865,1156,3.865,1157,3.865,1158,3.865,1159,3.865,1160,3.308,1161,3.865,1162,3.865,1163,3.865,1164,3.865,1165,3.865,1166,3.865,1167,3.865,1168,3.865,1169,3.865,1170,3.865,1171,3.865,1172,3.865,1173,3.865,1174,3.865,1175,3.865,1176,3.865,1177,3.865,1178,3.865,1179,3.865,1180,3.865]],["title/classes/Proposal.html",[65,0.028,366,1.727]],["body/classes/Proposal.html",[3,0.229,4,0.2,9,0.2,22,0.229,23,0.664,24,1.338,32,0.529,35,0.491,37,0.453,38,0.02,39,0.289,40,0.411,41,0.628,54,1.298,64,0.229,65,0.035,118,0.012,119,0.016,120,0.012,125,3.879,239,2.659,290,2.05,296,2.841,298,3.018,319,3.216,366,2.753,375,2.903,402,3.888,767,3.888,1008,4.565,1181,3.888,1182,4.542,1183,4.542,1184,4.542,1185,4.542,1186,4.542,1187,4.542,1188,4.542,1189,4.542,1190,4.542,1191,4.542]],["title/injectables/ProposalService.html",[145,2.112,267,0.477]],["body/injectables/ProposalService.html",[3,0.156,4,0.136,9,0.136,22,0.156,23,0.513,30,0.627,32,0.286,35,0.499,37,0.654,38,0.021,39,0.417,40,0.403,41,0.654,43,0.965,50,1.683,51,1.683,54,1.199,56,0.609,63,0.309,64,0.156,65,0.024,118,0.008,119,0.012,120,0.008,122,1.003,145,2.601,184,1.485,194,1.116,239,2.577,267,0.588,269,1.003,279,1.116,281,0.951,286,1.597,289,2.601,291,3.416,296,3.293,316,3.796,319,3.349,563,3.796,573,3.796,574,3.796,594,2.651,596,2.651,899,2.082,904,3.845,948,1.318,950,1.318,953,1.963,1160,2.651,1192,2.651,1193,5.18,1194,4.435,1195,4.435,1196,4.435,1197,4.435,1198,4.435,1199,4.435,1200,4.435,1201,4.435,1202,4.435,1203,4.435,1204,4.435,1205,3.098,1206,3.098,1207,3.098,1208,3.098,1209,3.098,1210,3.098,1211,3.098,1212,3.098,1213,3.098,1214,3.098,1215,3.098,1216,3.098,1217,4.435,1218,3.098,1219,3.098,1220,3.098,1221,3.098,1222,3.098,1223,3.098,1224,3.098,1225,3.098,1226,3.098,1227,3.098,1228,3.098,1229,3.098,1230,3.098,1231,3.098,1232,3.098,1233,3.098,1234,3.098,1235,3.098,1236,3.098,1237,3.098,1238,3.098,1239,3.098,1240,3.098,1241,3.098,1242,3.098,1243,3.098,1244,3.098,1245,3.098,1246,3.098,1247,3.098,1248,3.098,1249,3.098]],["title/components/RegisterComponent.html",[0,0.417,107,0.945]],["body/components/RegisterComponent.html",[0,0.401,1,0.75,2,0.878,3,0.174,4,0.072,5,0.925,6,0.56,7,0.56,8,0.56,9,0.072,11,0.962,13,0.56,14,1.982,15,1.785,16,0.878,18,0.833,20,0.833,22,0.083,23,0.314,24,0.989,25,0.478,26,1.48,28,2.391,30,0.383,32,0.25,35,0.459,37,0.164,38,0.021,39,0.338,40,0.302,41,0.164,43,0.67,44,1.11,50,1.169,51,1.589,52,1.449,54,0.723,56,0.611,59,0.896,60,0.698,61,1.121,63,0.164,64,0.083,65,0.013,73,0.504,74,0.925,75,0.925,76,0.56,77,1.521,78,0.56,80,0.56,81,0.454,82,0.56,83,0.454,84,0.56,85,0.454,86,1.183,87,0.925,88,0.431,89,0.56,90,0.454,91,0.56,92,0.454,93,0.56,94,0.409,95,0.478,96,0.56,97,0.431,98,0.56,99,0.454,100,0.504,101,0.56,102,0.388,103,0.56,104,0.75,105,1.644,106,0.56,107,1.056,108,0.56,109,0.431,110,0.431,111,0.56,112,0.454,113,0.56,114,0.431,115,1.527,116,0.56,117,0.56,118,0.004,119,0.007,120,0.004,143,2.197,146,2.197,151,1.248,152,1.248,153,0.962,154,1.248,158,1.132,171,0.698,177,2.032,182,1.248,191,1.039,192,1.248,195,1.132,226,1.248,238,0.878,239,1.393,247,1.791,254,0.698,255,1.3,275,3.097,286,1.002,294,1.248,309,0.878,315,1.132,317,1.373,334,1.039,351,0.962,352,1.039,357,1.404,358,1.48,362,2.613,363,2.197,364,2.161,370,2.276,375,1.154,380,2.136,427,1.59,429,2.391,437,2.451,445,2.977,446,1.661,447,0.838,448,0.896,459,1.48,475,2.032,480,1.77,488,2.136,489,1.039,516,0.896,520,1.929,535,2.36,652,3.245,662,1.404,702,1.59,703,1.59,705,2.777,707,0.962,712,1.248,715,2.32,717,0.962,719,1.039,736,0.896,752,1.59,835,2.032,849,2.777,868,1.132,874,2.32,875,2.965,876,3.764,877,2.063,879,2.063,947,2.063,952,2.195,976,3.444,982,1.404,984,1.871,986,1.404,992,2.549,993,1.132,996,1.404,998,1.039,1000,1.132,1001,1.039,1002,1.039,1005,1.404,1113,2.32,1250,1.404,1251,3.464,1252,2.711,1253,3.464,1254,3.444,1255,3.444,1256,2.965,1257,3.464,1258,2.965,1259,2.965,1260,4.798,1261,3.062,1262,2.711,1263,3.464,1264,1.404,1265,2.195,1266,2.711,1267,1.64,1268,1.64,1269,1.64,1270,1.64,1271,1.64,1272,1.64,1273,1.64,1274,1.64,1275,1.64,1276,1.64,1277,1.64,1278,1.64,1279,1.64,1280,1.64,1281,1.64,1282,1.64,1283,1.64,1284,1.64,1285,1.132,1286,1.404,1287,1.64,1288,1.404,1289,1.404,1290,1.404,1291,1.404,1292,2.063,1293,1.248,1294,1.248,1295,1.404,1296,1.64,1297,1.248,1298,3.062,1299,2.636,1300,1.64,1301,1.64,1302,3.444,1303,2.711,1304,1.64,1305,1.404,1306,1.64,1307,1.404,1308,1.404,1309,1.404,1310,1.404,1311,1.404,1312,2.711,1313,1.64,1314,1.64,1315,1.404,1316,1.404,1317,1.404,1318,1.404,1319,1.64,1320,1.64,1321,1.64,1322,1.64,1323,1.64,1324,1.64,1325,1.64,1326,1.64,1327,1.64,1328,1.64,1329,1.404,1330,1.64,1331,1.64,1332,1.404,1333,1.64,1334,1.404,1335,2.636,1336,1.64,1337,1.404,1338,1.404,1339,1.64,1340,1.64,1341,1.64,1342,1.64,1343,1.404,1344,1.64,1345,3.464,1346,2.711,1347,3.444,1348,2.636,1349,2.32,1350,2.32,1351,2.32,1352,2.32,1353,1.64,1354,1.64,1355,1.64,1356,1.64,1357,4.107,1358,4.04,1359,2.711,1360,2.32,1361,2.32,1362,3.444,1363,3.444,1364,2.32,1365,2.711,1366,2.711,1367,2.711,1368,2.711,1369,1.404,1370,1.404,1371,1.404,1372,1.404,1373,1.404,1374,1.64,1375,2.711,1376,1.64,1377,3.464,1378,1.64,1379,1.64,1380,1.64,1381,1.64,1382,1.64,1383,1.64,1384,1.64]],["title/components/ResetLinkComponent.html",[0,0.417,109,0.945]],["body/components/ResetLinkComponent.html",[0,0.504,1,0.988,2,1.156,3,0.219,4,0.102,5,0.791,6,0.791,7,0.791,8,0.791,9,0.102,11,1.358,13,0.791,14,2.117,15,1.907,16,1.156,18,1.097,20,1.097,22,0.117,23,0.413,24,0.642,25,0.675,26,1.951,29,3.057,30,0.505,32,0.214,35,0.459,37,0.231,38,0.021,39,0.277,40,0.301,41,0.231,43,0.737,44,1.319,49,0.986,50,1.144,51,1.53,52,1.286,54,0.416,56,0.665,59,1.265,60,0.986,61,1.411,63,0.231,64,0.117,65,0.018,73,0.711,74,1.219,75,1.219,76,0.791,77,1.909,78,0.791,80,0.791,81,0.641,82,0.791,83,0.641,84,0.791,85,0.641,86,0.791,87,1.219,88,0.608,89,0.791,90,0.641,91,0.791,92,0.641,93,0.791,94,0.577,95,0.675,96,0.791,97,0.608,98,0.791,99,0.641,100,0.711,101,0.791,102,0.547,103,0.791,104,0.988,105,1.745,106,0.791,107,0.608,108,0.791,109,1.286,110,1.71,111,0.791,112,0.641,113,0.791,114,0.608,115,0.608,116,0.791,117,0.791,118,0.006,119,0.01,120,0.006,171,0.986,191,1.467,192,1.763,195,1.599,229,4.554,238,1.156,254,0.986,255,1.712,309,1.156,317,1.673,351,1.358,358,1.265,362,2.557,363,1.265,364,1.52,370,2.503,379,1.763,380,2.538,399,1.265,427,2.095,445,3.418,446,2.09,447,1.183,448,1.265,475,2.874,480,2.503,488,1.712,516,2.381,520,1.712,535,2.874,652,3.054,702,1.358,703,1.358,707,1.358,717,1.358,719,1.467,736,1.265,752,1.358,835,1.358,837,1.599,849,3.382,868,2.465,871,4.194,876,3.104,965,4.531,972,1.983,992,3.354,998,1.467,1001,1.467,1002,1.467,1112,1.983,1254,4.194,1255,4.194,1261,3.729,1285,1.599,1286,1.983,1288,1.983,1289,1.983,1290,1.983,1291,1.983,1292,2.718,1293,1.763,1294,1.763,1297,1.763,1298,1.763,1299,1.763,1302,1.983,1307,1.983,1308,1.983,1309,1.983,1310,1.983,1311,1.983,1315,1.983,1316,1.983,1348,1.763,1358,2.718,1362,4.194,1363,4.194,1364,3.057,1385,5.648,1386,1.983,1387,4.36,1388,3.572,1389,4.36,1390,5.294,1391,3.572,1392,4.36,1393,3.382,1394,3.732,1395,3.382,1396,3.572,1397,2.316,1398,2.316,1399,2.316,1400,2.316,1401,2.316,1402,2.316,1403,3.572,1404,2.316,1405,2.316,1406,2.316,1407,2.316,1408,2.316,1409,2.316,1410,2.316,1411,2.316,1412,2.316,1413,2.316,1414,2.316,1415,3.572,1416,2.316,1417,2.316,1418,2.316,1419,2.316,1420,2.316,1421,2.316,1422,2.316,1423,2.316,1424,2.316,1425,2.316,1426,2.316,1427,3.572,1428,3.572,1429,2.316,1430,2.316,1431,2.316,1432,2.316]],["title/injectables/ResetPasswordService.html",[267,0.477,1395,2.486]],["body/injectables/ResetPasswordService.html",[3,0.242,4,0.211,9,0.211,22,0.242,23,0.688,24,1.069,25,1.401,30,0.841,32,0.443,35,0.455,37,0.594,38,0.02,39,0.378,40,0.338,41,0.594,43,0.723,56,0.64,63,0.48,64,0.242,65,0.037,118,0.013,119,0.016,120,0.013,122,1.556,194,1.731,267,0.788,269,1.556,279,1.731,286,1.197,399,2.624,899,2.788,948,2.045,950,2.872,955,2.624,1394,5.528,1395,4.105,1433,5.777,1434,4.113,1435,4.805,1436,5.947,1437,4.805,1438,4.805,1439,4.805,1440,3.316,1441,3.045]],["title/injectables/SendResetLinkService.html",[267,0.477,851,2.486]],["body/injectables/SendResetLinkService.html",[3,0.24,4,0.209,9,0.209,22,0.24,23,0.684,24,1.062,25,1.388,30,0.836,32,0.439,35,0.453,37,0.59,38,0.02,39,0.376,40,0.336,41,0.59,43,0.716,56,0.637,63,0.475,64,0.24,65,0.037,110,1.766,118,0.013,119,0.016,120,0.013,122,1.541,194,1.715,267,0.784,269,1.541,279,1.715,286,1.186,399,2.6,851,4.081,899,2.781,948,2.026,950,2.863,955,2.6,1440,3.286,1441,3.017,1442,5.758,1443,4.075,1444,5.913,1445,4.761,1446,5.913,1447,4.761,1448,4.761,1449,4.761,1450,4.761]],["title/components/ShareProposalComponent.html",[0,0.417,112,0.996]],["body/components/ShareProposalComponent.html",[0,0.591,1,0.837,2,1.411,3,0.152,4,0.133,5,1.033,6,1.033,7,1.033,8,1.033,9,0.133,13,1.033,14,2.203,15,1.984,16,0.979,18,1.339,20,1.339,22,0.152,23,0.504,24,1.065,25,1.728,30,0.616,32,0.279,35,0.459,37,0.435,38,0.02,39,0.356,40,0.351,41,0.435,43,0.656,44,1.086,45,2.303,46,2.303,49,1.287,50,1.145,51,1.145,52,1.09,56,0.602,60,1.287,61,1.655,62,1.774,63,0.302,64,0.152,65,0.024,73,0.929,74,1.488,75,1.488,76,1.033,77,1.909,78,1.033,80,1.033,81,0.837,82,1.033,83,0.837,84,1.033,85,0.837,86,1.033,87,1.488,88,0.794,89,1.033,90,0.837,91,1.033,92,0.837,93,1.033,94,0.754,95,0.882,96,1.033,97,0.794,98,1.033,99,0.837,100,0.929,101,1.033,102,0.715,103,1.033,104,0.837,105,0.837,106,1.033,107,0.794,108,1.033,109,0.794,110,0.794,111,1.033,112,1.547,113,2.3,114,0.794,115,1.342,116,1.033,117,1.033,118,0.008,119,0.012,120,0.008,170,1.917,171,1.855,220,5.051,221,4.58,238,1.411,247,1.216,286,1.273,291,3.182,298,1.451,309,1.411,317,1.909,365,2.303,366,2.682,367,4.375,368,3.732,370,2.857,373,4.375,375,2.38,379,2.303,380,2.451,389,2.59,390,2.59,391,3.732,392,3.732,395,2.59,396,2.59,399,1.652,426,3.732,427,2.557,428,3.732,446,2.451,488,1.451,1329,3.732,1451,5.111,1452,4.36,1453,4.36,1454,3.025,1455,3.025,1456,3.025,1457,3.025,1458,3.025,1459,3.025,1460,3.025,1461,4.36,1462,4.36,1463,4.36,1464,3.025,1465,4.36,1466,3.025,1467,3.025,1468,3.025,1469,3.025]],["title/injectables/SocialMediaAuthService.html",[267,0.477,441,2.112]],["body/injectables/SocialMediaAuthService.html",[3,0.164,4,0.143,9,0.143,22,0.164,23,0.532,24,1.138,25,0.951,30,0.651,32,0.301,35,0.483,37,0.532,38,0.021,39,0.339,40,0.329,41,0.532,43,0.953,44,1.146,49,1.389,50,0.857,51,0.857,52,1.175,54,1.169,56,0.657,63,0.326,64,0.164,65,0.025,115,0.857,118,0.009,119,0.013,120,0.009,122,1.056,194,1.175,234,1.782,247,1.312,254,1.389,267,0.61,269,1.056,271,3.502,275,3.554,279,1.175,281,1.002,286,1.621,294,2.198,315,4.212,345,3.502,387,2.723,438,3.118,440,2.068,441,2.699,443,4.429,480,2.351,482,3.377,483,2.068,501,3.176,520,1.565,521,2.252,522,2.252,523,2.068,524,2.252,525,2.252,899,2.327,948,1.389,950,1.958,955,2.513,1076,2.484,1441,2.068,1470,5.928,1471,2.793,1472,4.562,1473,3.939,1474,4.955,1475,4.955,1476,4.955,1477,4.955,1478,4.602,1479,3.939,1480,3.263,1481,3.263,1482,3.263,1483,3.263,1484,3.263,1485,5.33,1486,3.263,1487,3.263,1488,3.263,1489,3.263,1490,2.793,1491,2.793,1492,3.263,1493,3.263,1494,3.263,1495,2.793,1496,3.263,1497,3.263,1498,3.263,1499,2.793,1500,2.793,1501,2.793,1502,3.939]],["title/components/TeamComponent.html",[0,0.417,114,0.945]],["body/components/TeamComponent.html",[0,0.51,1,1.002,2,1.172,3,0.119,4,0.104,5,0.805,6,0.805,7,0.805,8,0.805,9,0.104,11,1.383,13,0.805,14,2.124,15,1.913,16,1.172,18,1.112,20,1.112,22,0.119,23,0.419,24,1.012,25,1.285,26,1.288,28,3.043,30,0.512,32,0.334,35,0.472,37,0.235,38,0.021,39,0.385,40,0.334,41,0.235,43,0.663,44,1.232,50,1.157,51,1.157,52,1.304,54,0.651,56,0.668,60,1.004,61,1.427,63,0.235,64,0.119,65,0.018,73,0.724,74,1.236,75,1.236,76,0.805,77,1.822,78,0.805,80,0.805,81,0.652,82,0.805,83,0.652,84,0.805,85,0.652,86,1.505,87,1.236,88,0.619,89,0.805,90,0.652,91,0.805,92,0.652,93,0.805,94,0.587,95,0.687,96,0.805,97,0.619,98,0.805,99,0.652,100,0.724,101,0.805,102,0.557,103,0.805,104,0.652,105,1.002,106,0.805,107,0.619,108,0.805,109,0.619,110,0.619,111,0.805,112,0.652,113,0.805,114,1.299,115,1.775,116,0.805,117,0.805,118,0.006,119,0.01,120,0.006,143,2.701,146,2.701,151,1.795,152,1.795,153,1.383,154,1.795,171,1.004,195,1.628,227,2.5,233,1.383,234,1.288,235,1.288,238,1.172,247,1.989,254,1.004,255,1.131,275,3.461,286,0.587,294,0.849,309,1.172,317,1.689,334,1.494,351,1.383,358,1.288,362,2.124,363,1.978,364,1.541,370,2.726,375,1.541,380,2.559,427,2.124,437,1.205,438,2.726,439,1.628,440,1.494,445,3.441,446,2.114,447,1.205,448,1.288,455,3.414,459,1.288,475,1.383,477,2.793,480,2.726,483,1.494,486,3.043,488,1.131,516,1.288,532,1.494,652,1.978,717,1.383,719,1.494,736,1.288,752,1.383,835,1.383,849,3.414,868,1.628,876,3.134,947,2.756,992,3.134,993,1.628,998,1.494,1000,1.628,1001,1.494,1002,1.494,1256,3.774,1258,3.774,1259,3.774,1261,3.765,1264,2.019,1265,2.793,1292,1.795,1293,1.795,1294,1.795,1295,2.019,1297,1.795,1298,1.795,1299,1.795,1317,2.019,1318,2.019,1332,2.019,1334,2.019,1335,1.795,1337,2.019,1338,2.019,1343,2.019,1347,2.019,1348,1.795,1349,2.019,1350,2.019,1351,2.019,1352,2.019,1357,3.1,1358,2.756,1360,3.1,1361,3.1,1369,2.019,1370,2.019,1371,2.019,1372,2.019,1373,2.019,1503,2.019,1504,4.409,1505,3.622,1506,4.409,1507,3.774,1508,3.622,1509,2.358,1510,2.358,1511,2.358,1512,2.358,1513,2.358,1514,2.358,1515,2.358,1516,2.358,1517,2.358,1518,2.358,1519,2.358,1520,2.358,1521,2.358,1522,2.358,1523,2.358,1524,2.358,1525,2.358,1526,2.358,1527,2.358,1528,2.358,1529,2.358,1530,2.358,1531,2.358,1532,2.358,1533,2.358,1534,2.358,1535,2.358,1536,2.358]],["title/classes/Teams.html",[65,0.028,375,1.533]],["body/classes/Teams.html",[3,0.257,4,0.225,9,0.225,22,0.257,23,0.715,24,1.289,32,0.57,35,0.468,37,0.51,38,0.02,39,0.449,40,0.378,41,0.51,54,1.193,64,0.257,65,0.04,118,0.014,119,0.017,120,0.014,239,2.669,290,2.307,295,3.891,296,2.995,304,3.529,307,3.529,375,2.629,1537,4.377,1538,5.113,1539,5.113,1540,5.113]],["title/injectables/TeamsService.html",[267,0.477,1541,2.741]],["body/injectables/TeamsService.html",[3,0.244,4,0.213,9,0.213,22,0.244,23,0.692,30,0.846,32,0.447,35,0.457,37,0.484,38,0.02,39,0.309,40,0.34,41,0.484,43,0.73,50,1.273,51,1.273,54,0.871,56,0.729,63,0.484,64,0.244,65,0.038,118,0.013,119,0.016,120,0.013,122,1.57,184,2.325,194,1.747,267,0.793,269,1.57,279,1.747,281,1.49,286,1.208,375,2.545,899,2.607,904,3.508,948,2.064,950,2.064,953,3.073,1541,4.552,1542,4.152,1543,5.981,1544,6.486,1545,5.981,1546,4.85,1547,4.85,1548,4.85,1549,4.85,1550,4.85]],["title/injectables/TestServiceService.html",[267,0.477,381,2.486]],["body/injectables/TestServiceService.html",[3,0.225,4,0.197,9,0.197,22,0.225,23,0.658,30,0.804,32,0.576,35,0.441,38,0.02,40,0.255,43,0.673,44,1.114,50,1.174,51,1.174,56,0.612,63,0.447,64,0.225,65,0.035,115,1.174,118,0.012,119,0.015,120,0.012,122,1.448,125,3.666,171,1.904,238,2.351,267,0.754,269,1.448,279,1.611,291,3.154,366,2.145,375,2.42,381,3.925,387,2.285,446,3.256,447,3.545,449,3.088,459,3.414,488,2.726,984,3.088,1008,3.925,1551,5.63,1552,3.829,1553,6.578,1554,4.474,1555,4.474,1556,6.251,1557,5.686,1558,5.686,1559,4.474,1560,4.474,1561,4.474]],["title/injectables/TransferDataService.html",[267,0.477,438,1.84]],["body/injectables/TransferDataService.html",[3,0.247,4,0.216,9,0.216,22,0.247,23,0.697,24,0.882,25,1.9,30,0.852,35,0.425,37,0.49,38,0.021,39,0.312,40,0.279,41,0.49,43,0.738,44,1.222,56,0.649,63,0.49,64,0.247,65,0.038,118,0.013,119,0.016,120,0.013,122,1.589,184,2.353,238,1.589,267,0.651,269,1.589,374,4.201,438,3.077,477,4.131,532,3.109,955,2.68,1562,5.58,1563,4.201,1564,6.025,1565,6.025,1566,4.908,1567,4.908,1568,6.025,1569,4.908,1570,4.908,1571,4.908,1572,4.908,1573,4.908]],["title/classes/User.html",[65,0.028,294,1.297]],["body/classes/User.html",[3,0.236,4,0.206,9,0.206,22,0.236,23,0.678,24,1.328,32,0.541,35,0.486,37,0.469,38,0.02,39,0.438,40,0.41,41,0.469,54,1.262,64,0.236,65,0.037,115,1.809,118,0.013,119,0.016,120,0.013,239,2.57,290,2.119,294,2.112,295,3.574,296,2.884,298,3.065,304,4.047,307,4.047,437,3.42,469,3.241,1574,4.02,1575,4.697,1576,4.697,1577,4.697,1578,4.697,1579,4.697]],["title/injectables/UserLoginService.html",[267,0.477,453,1.967]],["body/injectables/UserLoginService.html",[3,0.167,4,0.145,9,0.145,22,0.167,23,0.538,24,1.218,30,0.657,32,0.305,35,0.49,37,0.581,38,0.021,39,0.371,40,0.362,41,0.581,43,0.957,44,1.158,49,1.409,50,0.869,51,0.869,52,1.192,54,1.303,56,0.578,63,0.33,64,0.167,65,0.026,105,1.989,118,0.009,119,0.013,120,0.009,122,1.072,194,1.192,247,1.331,267,0.616,269,1.072,271,3.537,272,2.519,279,1.192,281,1.017,286,1.585,294,2.21,315,4.51,345,3.537,387,2.976,453,2.538,482,3.403,899,2.342,948,1.409,950,1.978,1073,2.833,1076,2.519,1472,4.598,1473,3.978,1474,4.986,1475,4.986,1476,4.986,1477,3.978,1479,3.978,1490,2.833,1491,2.833,1495,2.833,1499,2.833,1500,2.833,1501,2.833,1502,3.978,1580,5.334,1581,2.833,1582,4.648,1583,4.648,1584,3.31,1585,4.648,1586,3.31,1587,3.31,1588,3.31,1589,3.31,1590,4.648,1591,3.31,1592,3.31,1593,3.31,1594,3.31,1595,3.31,1596,3.31,1597,3.31,1598,3.31,1599,3.31,1600,4.648,1601,3.31,1602,3.31]],["title/injectables/UserRegisterService.html",[146,1.967,267,0.477]],["body/injectables/UserRegisterService.html",[3,0.248,4,0.216,9,0.216,22,0.248,25,1.434,30,0.853,32,0.454,35,0.425,37,0.602,38,0.021,39,0.384,40,0.28,41,0.602,43,0.74,56,0.65,63,0.491,64,0.248,65,0.038,118,0.013,119,0.016,120,0.013,122,1.593,146,3.295,194,1.772,267,0.8,269,1.593,279,1.772,281,1.511,286,1.503,899,2.624,948,2.093,950,2.093,953,3.117,955,2.686,957,4.211,1440,3.395,1441,3.117,1580,4.967,1603,4.211,1604,6.034,1605,4.919,1606,6.034,1607,4.919,1608,4.919,1609,4.919]],["title/injectables/UserService.html",[267,0.477,1265,2.282]],["body/injectables/UserService.html",[3,0.252,4,0.22,9,0.22,30,0.709,32,0.462,35,0.353,37,0.501,38,0.021,39,0.319,40,0.285,41,0.501,56,0.657,63,0.501,64,0.252,65,0.039,118,0.014,119,0.017,120,0.014,122,1.623,194,1.806,267,0.809,269,1.623,279,1.806,281,1.54,286,1.639,294,1.806,899,2.754,948,2.134,950,2.598,1265,3.868,1335,3.816,1610,4.292,1611,5.014,1612,5.014,1613,5.014,1614,5.014,1615,5.014,1616,5.014,1617,5.014,1618,5.014]],["title/injectables/ValidateTokenService.html",[267,0.477,1393,2.486]],["body/injectables/ValidateTokenService.html",[3,0.248,4,0.216,9,0.216,22,0.248,25,1.434,30,0.853,32,0.454,35,0.425,37,0.602,38,0.021,39,0.384,40,0.28,41,0.602,43,0.74,56,0.65,63,0.491,64,0.248,65,0.038,118,0.013,119,0.016,120,0.013,122,1.593,194,1.772,267,0.8,269,1.593,279,1.772,281,1.511,286,1.225,899,2.736,948,2.093,950,2.568,955,2.686,1393,4.164,1440,3.395,1441,3.117,1619,5.586,1620,4.211,1621,6.526,1622,4.919,1623,6.034,1624,4.919,1625,4.919,1626,4.919]],["title/coverage.html",[1627,4.218]],["body/coverage.html",[0,0.823,1,0.844,9,0.134,10,2.612,11,1.79,12,2.612,38,0.021,40,0.174,57,1.79,65,0.052,81,0.844,83,0.844,85,0.844,88,0.801,90,0.844,92,0.844,94,0.76,97,0.801,99,0.844,102,0.721,104,0.844,107,0.801,109,0.801,110,0.801,112,0.844,114,0.801,118,0.008,119,0.012,120,0.008,121,2.612,142,1.934,143,1.667,144,1.934,145,1.79,146,1.667,167,2.323,168,2.323,191,1.934,196,2.323,204,1.79,220,2.323,221,2.107,223,1.79,229,2.107,238,0.988,267,0.937,268,2.323,270,2.612,289,1.79,291,3.189,292,2.612,294,1.099,308,2.612,365,3.339,366,1.463,375,1.299,381,2.107,434,1.79,436,3.545,438,1.559,441,1.79,443,1.934,453,1.667,457,1.79,542,2.612,548,1.79,549,2.612,554,2.612,611,2.107,759,2.107,760,2.612,761,2.612,778,2.612,842,2.612,843,2.612,851,2.107,884,2.612,885,2.612,945,2.612,946,2.612,952,1.934,958,2.612,984,5.208,1034,2.612,1051,2.612,1052,2.323,1054,2.612,1055,2.612,1116,2.612,1117,2.612,1135,2.612,1145,2.612,1181,2.612,1192,2.612,1250,2.612,1265,1.934,1285,2.107,1385,2.612,1386,2.612,1393,2.107,1395,2.107,1433,2.612,1434,2.612,1442,2.612,1443,2.612,1470,2.612,1471,2.612,1503,2.612,1537,2.612,1541,2.323,1542,2.612,1551,2.612,1552,2.612,1562,2.612,1563,2.612,1574,2.612,1580,3.339,1581,2.612,1603,2.612,1610,2.612,1619,2.612,1620,2.612,1627,2.612,1628,3.052,1629,3.052,1630,3.052,1631,5.137,1632,5.616,1633,3.052,1634,2.612,1635,5.949,1636,6.194,1637,6.531,1638,5.137,1639,4.388,1640,5.137,1641,4.388,1642,4.388,1643,3.052,1644,3.052,1645,3.052,1646,3.052,1647,3.052,1648,3.052,1649,3.052,1650,3.052,1651,3.052,1652,3.052,1653,2.612,1654,2.612,1655,5.616,1656,3.756,1657,2.612,1658,3.756,1659,2.612,1660,2.612,1661,3.052,1662,3.052]],["title/dependencies.html",[131,2.992,1663,3.001]],["body/dependencies.html",[38,0.021,63,0.489,118,0.013,119,0.016,120,0.013,131,3.379,133,3.726,156,5.149,157,4.579,171,2.084,184,2.347,199,5.149,200,3.726,201,4.191,226,4.579,227,4.152,228,3.726,233,2.871,234,2.674,235,2.674,254,2.084,613,3.726,1664,4.896,1665,6.216,1666,4.896,1667,6.016,1668,4.896,1669,4.896,1670,4.896,1671,4.191,1672,4.896,1673,4.896,1674,4.896,1675,4.896,1676,4.896,1677,4.896,1678,4.896,1679,4.896,1680,4.896,1681,4.896,1682,4.896,1683,4.896,1684,4.896,1685,4.896]],["title/miscellaneous/functions.html",[1686,2.071,1687,3.71]],["body/miscellaneous/functions.html",[22,0.285,37,0.565,38,0.019,39,0.36,41,0.565,118,0.015,119,0.018,120,0.015,1285,4.526,1634,4.842,1686,3.904,1687,4.842,1688,5.657,1689,5.657,1690,6.558,1691,5.657]],["title/index.html",[22,0.151,1692,3.001,1693,3.001]],["body/index.html",[0,0.738,4,0.205,15,1.293,38,0.016,39,0.297,118,0.013,119,0.016,120,0.013,126,4.002,148,3.558,238,1.514,397,4.002,653,4.002,825,5.721,1045,5.004,1081,4.002,1665,4.002,1671,5.46,1694,5.847,1695,4.675,1696,6.379,1697,4.675,1698,4.675,1699,5.847,1700,6.881,1701,7.121,1702,4.675,1703,4.675,1704,4.675,1705,4.675,1706,4.675,1707,4.675,1708,4.675,1709,4.675,1710,4.675,1711,6.379,1712,6.379,1713,4.675,1714,6.881,1715,4.675,1716,4.675,1717,4.675,1718,4.675,1719,4.675,1720,4.675,1721,4.002,1722,5.847,1723,6.684,1724,5.847,1725,5.847,1726,4.675,1727,4.675,1728,4.675,1729,4.675,1730,6.379,1731,4.675,1732,4.675,1733,4.675]],["title/modules.html",[130,3.122]],["body/modules.html",[38,0.018,118,0.016,119,0.018,120,0.016,129,3.958,130,3.634,141,3.634,157,4.365,1734,5.735,1735,5.735,1736,6.61,1737,5.735,1738,5.735]],["title/overview.html",[1739,4.218]],["body/overview.html",[1,1.636,2,1.29,38,0.02,73,1.224,81,1.898,83,1.636,85,1.636,88,1.552,90,1.636,92,1.636,94,1.473,97,1.552,99,1.636,102,1.397,104,1.636,107,1.552,109,1.552,110,1.046,112,1.636,114,1.552,118,0.011,119,0.014,120,0.011,128,2.75,129,5.276,130,2.524,131,2.75,132,3.41,133,3.032,134,3.41,135,3.032,136,3.41,137,3.41,138,3.41,139,3.41,140,3.41,141,3.746,142,3.746,143,3.229,144,3.746,145,3.468,146,3.229,147,4.515,148,3.032,252,2.75,269,1.29,290,1.798,434,2.336,673,2.524,710,3.41,1305,3.41,1739,3.41,1740,3.984,1741,3.984,1742,3.984]],["title/routes.html",[252,3.401]],["body/routes.html",[38,0.018,118,0.016,119,0.018,120,0.016,252,4.059]],["title/classes/teamList.html",[65,0.028,952,2.282]],["body/classes/teamList.html",[3,0.269,4,0.235,9,0.235,22,0.269,23,0.734,24,1.14,32,0.493,35,0.447,37,0.534,38,0.019,39,0.34,40,0.361,41,0.534,54,1.216,64,0.269,65,0.042,118,0.015,119,0.017,120,0.015,290,2.414,399,2.922,952,4.022,1507,5.793,1653,4.58,1743,5.351,1744,5.351,1745,5.351,1746,5.351]],["title/miscellaneous/variables.html",[1686,2.071,1747,3.71]],["body/miscellaneous/variables.html",[22,0.261,38,0.02,40,0.394,50,1.754,51,1.754,52,2.245,118,0.014,119,0.017,120,0.014,247,2.087,298,2.488,1654,4.442,1656,5.931,1657,4.442,1658,4.442,1659,5.335,1660,5.335,1686,3.582,1721,5.335,1747,4.442,1748,6.233,1749,5.19,1750,5.19,1751,5.19,1752,5.19,1753,6.233]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1381,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"overview.html":{}}}],["10",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1665,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["100px",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["120",{"_index":1429,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["13/39",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1741,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1740,"title":{},"body":{"overview.html":{}}}],["180px",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1fr",{"_index":1379,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200px",{"_index":1384,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{}}}],["236",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{}}}],["23px",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{}}}],["25px",{"_index":1432,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["2a$10$lid/pd76qod0ctife1nfg.ruhb56krgfxocqteajk24oayabl",{"_index":1626,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["3.1.2",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["33",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["380px",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1380,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1536,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400px",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["50",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["500",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["5px",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["65",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{}}}],["70",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["75",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1742,"title":{},"body":{"overview.html":{}}}],["80",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["9",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{},"overview.html":{}}}],["9.1.0",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["936da5,#58482e",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":901,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["absolute",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accessors",{"_index":1262,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["address",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{}}}],["af4261",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["alert(\"error",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["align",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":886,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl",{"_index":887,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["already",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":1671,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["angular/compiler",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/grid",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/menu",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1428,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":1075,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["appmodule",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["arial",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":1715,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":444,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1471,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1487,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1488,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1478,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:24",{"_index":1486,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1480,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:47",{"_index":1484,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:51",{"_index":1483,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:56",{"_index":1482,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:62",{"_index":1481,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["authenticateduser",{"_index":271,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authenticationservice",{"_index":1059,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authorization",{"_index":272,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorizationservice",{"_index":268,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authreq",{"_index":1071,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["autologin",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1706,"title":{},"body":{"index.html":{}}}],["available",{"_index":1738,"title":{},"body":{"modules.html":{}}}],["background",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1595,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["basic",{"_index":1076,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["black",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["block",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":864,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":1736,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":836,"title":{},"body":{"components/FilterComponent.html":{}}}],["buffer",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["build",{"_index":1714,"title":{},"body":{"index.html":{}}}],["button",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":756,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["cancel",{"_index":1134,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate",{"_index":557,"title":{},"body":{"components/FeedComponent.html":{}}}],["canupdate=false",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1129,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":837,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1707,"title":{},"body":{"index.html":{}}}],["character",{"_index":1131,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":65,"title":{"classes/Comment.html":{},"classes/Feed.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":290,"title":{},"body":{"classes/Comment.html":{},"classes/Feed.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":273,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1696,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closed",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["cluster_appmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1709,"title":{},"body":{"index.html":{}}}],["color",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["color:#3f51b5",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#e9ebee",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1378,"title":{},"body":{"components/RegisterComponent.html":{}}}],["comment",{"_index":289,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":310,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":311,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":305,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":83,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":312,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid",{"_index":313,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror",{"_index":558,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenterror:string",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":314,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":559,"title":{},"body":{"components/FeedComponent.html":{}}}],["comments:comment",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage",{"_index":560,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":568,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility",{"_index":561,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1415,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1286,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after1____\",this.user",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"after2____\",this.user",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"before____\",this.user",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"date\",this.edate",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["console.log(\"in",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":955,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["console.log(\"is",{"_index":1523,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"response",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"results\",this.userdata",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1526,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1179,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log('the",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(data",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1174,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1496,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(responce",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(responce.mesaage",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.comment",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1459,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.filteredoptions",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1467,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1528,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1240,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":898,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":964,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1057,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(description",{"_index":1137,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":379,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(getteam",{"_index":1264,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":948,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(id",{"_index":295,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(posts",{"_index":551,"title":{},"body":{"classes/Feed.html":{}}}],["constructor(private",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(proposalwork",{"_index":577,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(router",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(sendresetlink",{"_index":850,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(startdate",{"_index":765,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1743,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1182,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1124,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["content",{"_index":1074,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1627,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1473,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1479,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createproposalcomponent",{"_index":85,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createurl",{"_index":1146,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1166,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creationdate",{"_index":293,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":306,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["crimson",{"_index":840,"title":{},"body":{"components/FilterComponent.html":{}}}],["cursor",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["data.id=id",{"_index":1171,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1176,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1178,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":440,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1563,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1566,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1567,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":941,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":808,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1421,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1417,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":866,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1440,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["dateplusone",{"_index":784,"title":{},"body":{"components/FilterComponent.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["delay",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{}}}],["delete(id",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["deletecomment",{"_index":316,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1205,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1246,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1193,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1200,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1207,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1248,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1194,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1234,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":576,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteproposal=new",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteurl",{"_index":1147,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleteurl=\"http://localhost:8080/proposal/delete",{"_index":1169,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleting",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{}}}],["delproposal",{"_index":569,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":369,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["description:string",{"_index":1190,"title":{},"body":{"classes/Proposal.html":{}}}],["dev",{"_index":1703,"title":{},"body":{"index.html":{}}}],["development",{"_index":1698,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":370,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog,public",{"_index":400,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":57,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dialogtitle",{"_index":371,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1713,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1718,"title":{},"body":{"index.html":{}}}],["disliking",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":757,"title":{},"body":{"components/FeedComponent.html":{}}}],["dist",{"_index":1717,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1608,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1582,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1585,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1604,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1606,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1727,"title":{},"body":{"index.html":{}}}],["edate",{"_index":781,"title":{},"body":{"components/FilterComponent.html":{}}}],["eedate",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{}}}],["eedate:date",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1132,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":437,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emitdata",{"_index":1564,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1565,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["end",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":762,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":775,"title":{},"body":{"classes/FeedParams.html":{}}}],["enter",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["environment",{"_index":1656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["error'},{'name",{"_index":89,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":543,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":544,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["errorcomponent",{"_index":88,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":452,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eventemitter",{"_index":325,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["execute",{"_index":1724,"title":{},"body":{"index.html":{}}}],["exists",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":806,"title":{},"body":{"components/FilterComponent.html":{}}}],["f",{"_index":1263,"title":{},"body":{"components/RegisterComponent.html":{}}}],["false",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":548,"title":{"classes/Feed.html":{}},"body":{"classes/Feed.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["feed'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":555,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":556,"title":{},"body":{"components/FeedComponent.html":{}}}],["feedcomponent",{"_index":90,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":759,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["field",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1708,"title":{},"body":{"index.html":{}}}],["fill",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":779,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":780,"title":{},"body":{"components/FilterComponent.html":{}}}],["filtercomponent",{"_index":92,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredoptions",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filteredteams",{"_index":1253,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filterusers",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fixed",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1720,"title":{},"body":{"index.html":{}}}],["flag=false",{"_index":1465,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1461,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["following",{"_index":1125,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1462,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1449,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["forgetpasswordcomponent",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":846,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":862,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":449,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":445,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1458,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1557,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1560,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1455,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1687,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1729,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1711,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1695,"title":{},"body":{"index.html":{}}}],["getall",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["getallnextpost",{"_index":892,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":902,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":893,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":905,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1201,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1209,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1244,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1195,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1230,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1260,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getf",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1202,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1211,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1242,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1196,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1233,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":804,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1474,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposalsservice",{"_index":142,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{},"overview.html":{}}}],["getteam",{"_index":947,"title":{},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["getteam():observable",{"_index":954,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["getteamnextpost",{"_index":894,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":907,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":895,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":909,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1544,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1549,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteamservice",{"_index":143,"title":{"injectables/GetTeamService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":1692,"title":{"index.html":{}},"body":{}}],["getyournextpost",{"_index":896,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":911,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":943,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":897,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":913,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":940,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1732,"title":{},"body":{"index.html":{}}}],["google",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":963,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1737,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["h1",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["handle(responce",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handlelogin",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["happened",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked",{"_index":562,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{}}}],["headers",{"_index":1073,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:50px",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:60px",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:auto",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{}}}],["help",{"_index":1730,"title":{},"body":{"index.html":{}}}],["here",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{}}}],["hidden",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["hide",{"_index":1254,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1255,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":959,"title":{},"body":{"components/HomeComponent.html":{}}}],["home',component:homecomponent",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":960,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":961,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":97,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":950,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["http://localhost:4200",{"_index":1705,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1596,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1223,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1219,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1217,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":915,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1158,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1160,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1162,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1164,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1547,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1225,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1221,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1227,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":953,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":899,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["httpclientmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1067,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1063,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1068,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1066,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1052,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1061,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1422,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":304,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1191,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1175,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(data!=null",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data1==\"email",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status!=200",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(error.status==200",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(flag",{"_index":1466,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1469,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1468,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(team.id==item.id",{"_index":1464,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.loginform.valid",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.post.user.id==this.userid",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(user!=null",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["image:linear",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":309,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["initialiseformgroup",{"_index":1553,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["injectable",{"_index":267,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1569,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"overview.html":{}}}],["input",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["input,output,eventemitter",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":318,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["intercept",{"_index":1056,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1060,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1051,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1055,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1064,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1058,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1053,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":434,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":435,"title":{},"body":{"interfaces/DialogData.html":{}}}],["invalid",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1114,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":962,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":847,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1475,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{}}}],["item.value.tolowercase().includes(this.selectedteam.tolowercase",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iteration",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1441,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["json.parse(this.authenticateduser",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["json.stringify(data1",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["json.stringify(result",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jsonpipe",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1726,"title":{},"body":{"index.html":{}}}],["key",{"_index":1556,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["landingpagecomponent",{"_index":99,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{}}}],["lato",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":758,"title":{},"body":{"components/FeedComponent.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1133,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1127,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{}}}],["likesetup",{"_index":570,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["link'},{'name",{"_index":111,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1387,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1388,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1386,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:19",{"_index":1405,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1407,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1404,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1406,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1402,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:24",{"_index":1396,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:27",{"_index":1401,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:33",{"_index":1397,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:59",{"_index":1400,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:67",{"_index":1399,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:74",{"_index":1398,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.service",{"_index":861,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["link.service.ts",{"_index":1443,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["link.service.ts:10",{"_index":1448,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:12",{"_index":1447,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:8",{"_index":1445,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link/reset",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":298,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1256,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedin",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1581,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1593,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1594,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1592,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1583,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:21",{"_index":1586,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:31",{"_index":1584,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1591,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1589,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:45",{"_index":1588,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:51",{"_index":1587,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginservice",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1476,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["long",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1128,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["mandatory",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["map",{"_index":1490,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["matbuttonmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matcher=new",{"_index":863,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["matching",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":380,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1456,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":396,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matdividermodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matgridlistmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matmenumodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":807,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":443,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["message:string",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["minimum",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1686,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1731,"title":{},"body":{"index.html":{}}}],["moz",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1413,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":457,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1530,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":307,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1704,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":563,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":782,"title":{},"body":{"components/FilterComponent.html":{}}}],["next",{"_index":1062,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1079,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1080,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1701,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":451,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":317,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments",{"_index":564,"title":{},"body":{"components/FeedComponent.html":{}}}],["nocomments:boolean=true",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{}}}],["none",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":387,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":296,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes",{"_index":565,"title":{},"body":{"components/FeedComponent.html":{}}}],["numberlikes:number",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":904,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["observer",{"_index":1570,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["occured",{"_index":547,"title":{},"body":{"components/ErrorComponent.html":{},"components/FeedComponent.html":{}}}],["ok",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":571,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":805,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":848,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onsubmit",{"_index":849,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialog",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialogshare",{"_index":572,"title":{},"body":{"components/FeedComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["out",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":320,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["overview",{"_index":1739,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1663,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{}}}],["page",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"classes/FeedParams.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["page'},{'name",{"_index":101,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.ts",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["page/comment",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":292,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:1",{"_index":299,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:3",{"_index":302,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":300,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:5",{"_index":301,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:6",{"_index":303,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":308,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:10",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:11",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:12",{"_index":328,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:13",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:14",{"_index":324,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:17",{"_index":322,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:21",{"_index":327,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:29",{"_index":326,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:9",{"_index":323,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":554,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:117",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:148",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:152",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:156",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:16",{"_index":579,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:166",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:17",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:18",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:19",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:20",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:21",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:22",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:23",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:24",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:25",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:26",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:27",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:28",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:29",{"_index":582,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:30",{"_index":581,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:31",{"_index":580,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:32",{"_index":578,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:33",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:34",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:41",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:50",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:83",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:92",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":778,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:14",{"_index":791,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:15",{"_index":801,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:16",{"_index":800,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:17",{"_index":799,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:18",{"_index":803,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:26",{"_index":792,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:27",{"_index":790,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:33",{"_index":794,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:36",{"_index":793,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:41",{"_index":795,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:65",{"_index":796,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:71",{"_index":798,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1192,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:10",{"_index":1220,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:11",{"_index":1228,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:12",{"_index":1226,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:13",{"_index":1222,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:14",{"_index":1218,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:15",{"_index":1204,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1213,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1216,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1215,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:27",{"_index":1212,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:30",{"_index":1210,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:33",{"_index":1206,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:37",{"_index":1208,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:9",{"_index":1224,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1551,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":776,"title":{},"body":{"classes/FeedParams.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["params.ts",{"_index":761,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:1",{"_index":766,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:3",{"_index":771,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:4",{"_index":768,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:5",{"_index":769,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:6",{"_index":770,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:7",{"_index":773,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":772,"title":{},"body":{"classes/FeedParams.html":{}}}],["parentfunction",{"_index":321,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":789,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":810,"title":{},"body":{"components/FilterComponent.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1423,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":96,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":844,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":845,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":843,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:22",{"_index":859,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":857,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":858,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":852,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":854,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":856,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":855,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":1409,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1434,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1437,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1435,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1438,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":104,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1599,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1430,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["post",{"_index":204,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"classes/Post.html":{},"coverage.html":{}}}],["post.description",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment",{"_index":573,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1235,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror",{"_index":566,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenterror:string",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1197,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1229,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1203,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1214,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1239,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1198,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1232,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlike",{"_index":574,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1237,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1199,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1231,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1151,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1154,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1173,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":144,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":550,"title":{},"body":{"classes/Feed.html":{},"components/FilterComponent.html":{}}}],["private",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["process",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":785,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1719,"title":{},"body":{"index.html":{}}}],["production",{"_index":1721,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1694,"title":{},"body":{"index.html":{}}}],["prop",{"_index":372,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":366,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":87,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.component.css",{"_index":367,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":368,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":365,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:10",{"_index":382,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:11",{"_index":384,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:12",{"_index":390,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:13",{"_index":391,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:14",{"_index":394,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:15",{"_index":392,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:16",{"_index":386,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:17",{"_index":388,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:18",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:19",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:20",{"_index":385,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:21",{"_index":389,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:22",{"_index":383,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:35",{"_index":1454,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.service.ts",{"_index":1145,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:10",{"_index":1159,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:11",{"_index":1165,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:12",{"_index":1163,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:13",{"_index":1153,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:15",{"_index":1157,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:19",{"_index":1155,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:9",{"_index":1161,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposals.service",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["proposals.service.ts",{"_index":885,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:10",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:11",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:12",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:13",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:14",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:15",{"_index":900,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:18",{"_index":906,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:22",{"_index":903,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":910,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:31",{"_index":908,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:35",{"_index":914,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:41",{"_index":912,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":145,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":567,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{}}}],["protractor",{"_index":1728,"title":{},"body":{"index.html":{}}}],["provide",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":279,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["provider",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["radius",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1733,"title":{},"body":{"index.html":{}}}],["register",{"_index":976,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register',component:registercomponent",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register(user",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":1251,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1252,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1603,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:14",{"_index":1607,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:8",{"_index":1605,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["registerform",{"_index":1257,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1477,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1590,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["reload",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["req",{"_index":1065,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1072,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1070,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1427,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["res[\"name",{"_index":1497,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlink",{"_index":1444,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink(data",{"_index":1446,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink/:token",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":109,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1389,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetpassword",{"_index":1394,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1436,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":1395,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["resp",{"_index":957,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response'},{'name",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1261,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["rgb(211",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(238",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["routermodule",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["routermodule.forroot(routes",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":252,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1700,"title":{},"body":{"index.html":{}}}],["running",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["rxjs",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1491,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sans",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["sbsi",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1710,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sdate",{"_index":788,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["select",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selected",{"_index":1452,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selected(team",{"_index":1453,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1258,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selecteduser",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selection",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":786,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":838,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["senddata",{"_index":787,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":797,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["sendresetlink",{"_index":853,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendresetlinkservice",{"_index":851,"title":{"injectables/SendResetLinkService.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["sent",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":373,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1148,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1702,"title":{},"body":{"index.html":{}}}],["server",{"_index":1699,"title":{},"body":{"index.html":{}}}],["service",{"_index":374,"title":{},"body":{"components/CreateProposalComponent.html":{},"injectables/TransferDataService.html":{}}}],["service.service",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1552,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":1559,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:17",{"_index":1555,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:7",{"_index":1554,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/get",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/reset",{"_index":1408,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service/send",{"_index":860,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["service/social",{"_index":442,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":439,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/validate",{"_index":1410,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["sessionstorage.clear",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1502,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1501,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem('data",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1499,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["share",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["shareproposal",{"_index":1152,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1156,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1170,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":112,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1149,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1168,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shine",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{}}}],["sign",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["signed",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":777,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1485,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(frontend",{"_index":1492,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":441,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["socialuser",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["spacing",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1130,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1123,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs",{"_index":1118,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":106,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1119,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1120,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1117,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1122,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1121,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":270,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:16",{"_index":278,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:7",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:9",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1634,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":542,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":545,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":546,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":760,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/feed.ts",{"_index":549,"title":{},"body":{"classes/Feed.html":{},"coverage.html":{}}}],["src/app/feed.ts:1",{"_index":552,"title":{},"body":{"classes/Feed.html":{}}}],["src/app/feed.ts:3",{"_index":553,"title":{},"body":{"classes/Feed.html":{}}}],["src/app/forget",{"_index":842,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":884,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":958,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":291,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":436,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:122",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:147",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":1115,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:48",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:57",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:74",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:91",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1116,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1135,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:1",{"_index":1138,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:3",{"_index":1139,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1140,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:5",{"_index":1141,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:6",{"_index":1142,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1143,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:8",{"_index":1144,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1181,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:1",{"_index":1183,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:3",{"_index":1188,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:4",{"_index":1187,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:5",{"_index":1184,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:6",{"_index":1186,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:7",{"_index":1185,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1250,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:106",{"_index":1269,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1273,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":1274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":1266,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":1272,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:40",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1270,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:51",{"_index":1271,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:60",{"_index":1268,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:87",{"_index":1267,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1385,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/get",{"_index":945,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1054,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1433,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/send",{"_index":1442,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1470,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1562,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1580,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/service/validate",{"_index":1619,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1503,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1514,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1518,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1513,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1517,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1516,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1520,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:26",{"_index":1519,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:27",{"_index":1508,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1512,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:36",{"_index":1515,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:40",{"_index":1511,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:48",{"_index":1509,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:64",{"_index":1510,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1653,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1744,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1745,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1542,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1546,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1545,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1537,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1538,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1539,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1540,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.service.ts",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user.service.ts:7",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.ts",{"_index":1574,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":1575,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":1577,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1578,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":1576,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":1579,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":763,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":774,"title":{},"body":{"classes/FeedParams.html":{}}}],["started",{"_index":1693,"title":{"index.html":{}},"body":{}}],["state",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["stored",{"_index":1716,"title":{},"body":{"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["stroke",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1568,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submit",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":1259,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["subscriber",{"_index":1571,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["successful",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["successmessage",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1403,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1426,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["support",{"_index":1734,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1735,"title":{},"body":{"modules.html":{}}}],["system",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["team',component:teamcomponent",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team.component.css",{"_index":1504,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1505,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["team.service.ts",{"_index":946,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["team.service.ts:13",{"_index":951,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team.service.ts:9",{"_index":949,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team/team.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":114,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1506,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":764,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":952,"title":{"classes/teamList.html":{}},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1507,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1746,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":888,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":802,"title":{},"body":{"components/FilterComponent.html":{}}}],["teams",{"_index":375,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams:any",{"_index":1521,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teamsservice",{"_index":1541,"title":{"injectables/TeamsService.html":{}},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":889,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility",{"_index":376,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["teamvisibility=true",{"_index":403,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1723,"title":{},"body":{"index.html":{}}}],["testserviceservice",{"_index":381,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":839,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":939,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":944,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":942,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1069,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1078,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1534,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1598,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.post.description",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1463,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.email",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.error=\"email",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.filteredoptions",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":865,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1561,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getteam.getteam().subscribe",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.delete(`${config.apiurl}/users/${id",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":956,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["this.http.get(`${config.apiurl}/users",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1597,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1550,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgot_password",{"_index":1450,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["this.http.post(\"http://localhost:8080/getsocialinfo\",data[\"data1\"],{responsetype:'text",{"_index":1493,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1609,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validate_token",{"_index":1625,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["this.http.post(`${config.apiurl}/users/register",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1494,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1177,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1247,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1249,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1245,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1243,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1236,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1241,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1238,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1172,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1180,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/reset_password",{"_index":1439,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":410,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":974,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":975,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform.get('email').value",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe((result",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.message",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"email",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.message=responce.message",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.msg=\"your",{"_index":1425,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.nocomments=false",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.observer.asobservable",{"_index":1572,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.observer.next(data",{"_index":1573,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1600,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.prop",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":417,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1498,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1601,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1500,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1495,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1414,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1424,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.responsedialog",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.router.navigate(['/welcome",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.data",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sendresetlink.resetlink(data).subscribe",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1460,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.sessioncreation.fetchsessiondetails(json.stringify(data1",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.share.emit(this.post",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1527,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1535,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1529,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.filter",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.teams=data",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1416,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.transferdataservice.subscriber.subscribe(data",{"_index":1522,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.update.emit(post",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1457,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1532,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1531,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1525,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=data",{"_index":1524,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1533,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validatetoken.tokenverification(data).subscribe",{"_index":1418,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=false",{"_index":1420,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1419,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["timing",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":377,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1189,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1390,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service",{"_index":1411,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service.ts",{"_index":1620,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["token.service.ts:12",{"_index":1624,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["token.service.ts:8",{"_index":1622,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification",{"_index":1621,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification(data",{"_index":1623,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tools",{"_index":841,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1489,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["transferdataservice",{"_index":438,"title":{"injectables/TransferDataService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{}}}],["transferdataservice:transferdataservice",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["tslib",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["typepost",{"_index":783,"title":{},"body":{"components/FilterComponent.html":{}}}],["typepost=\"teampost",{"_index":809,"title":{},"body":{"components/FilterComponent.html":{}}}],["udata",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unit",{"_index":1722,"title":{},"body":{"index.html":{}}}],["up",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["update=new",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":575,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateform",{"_index":1451,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1150,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1167,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["uppercase",{"_index":1126,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{}}}],["upvotescount",{"_index":1136,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":1543,"title":{},"body":{"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1548,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1712,"title":{},"body":{"index.html":{}}}],["user",{"_index":294,"title":{"classes/User.html":{}},"body":{"classes/Comment.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user_name_session_attribute_name",{"_index":1472,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":319,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":453,"title":{"injectables/UserLoginService.html":{}},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["username",{"_index":315,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":146,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1265,"title":{"injectables/UserService.html":{}},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validatetoken",{"_index":1392,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validatetokenservice",{"_index":1393,"title":{"injectables/ValidateTokenService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["validator",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":448,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1558,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1391,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1412,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":378,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["values:testserviceservice",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1747,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1697,"title":{},"body":{"index.html":{}}}],["via",{"_index":1725,"title":{},"body":{"index.html":{}}}],["view",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{}}}],["visibility",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["webkit",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["white",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["whitesmoke",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:35",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1431,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:87",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1077,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1602,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["write",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{}}}],["yes",{"_index":767,"title":{},"body":{"classes/FeedParams.html":{},"classes/Proposal.html":{}}}],["yourdate.setdate(yourdate.getdate",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{}}}],["yournexturl",{"_index":890,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":891,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["z0",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n \n  onNoClick(): void {\n    \n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            GetTeamService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { GetTeamService } from './service/get-team.service';\nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\nimport { from } from 'rxjs';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    GetTeamService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  authenticatedUser:string\n  constructor(private router:Router) { }\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        public id:number,\n        public comment:string,\n        public creationDate:Date,\n        public user:{\n            id:number,\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commentData\n                            \n                            \n                                    Public\n                                commentedUserId\n                            \n                            \n                                    Public\n                                commentId\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/comment/comment.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comment\n                    \n                \n                \n                    \n                        Type :         Comment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentedUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\nimport {Comment} from 'src/app/landing-page/comment'\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  @Input() comment:Comment;\n  public commentId;\n  public userName;\n  public commentData;\n  public commentedUserId:number;\n  @Input() userId:number;\n\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n     console.log(this.comment)\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n  }\n\n  deleteComment()\n  {\n\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                prop\n                            \n                            \n                                sentTeam\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                Teams\n                            \n                            \n                                teamVisibility\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, service: TestServiceService, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TestServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Create Proposal\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prop\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sentTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TestServiceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TestServiceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n  sentTeam=[]\n  Teams:{}[]=[]\n  userId:string\n  teamVisibility=true\n  dialogTitle:string=\"Create Proposal\"\n  id:number=null\n  values:TestServiceService;\n  public tit \n  public descrip\n  public prop\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feed.html":{"url":"classes/Feed.html","title":"class - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(posts: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        posts\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            posts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Feed {\n    constructor(\n        public posts:{}\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canUpdate\n                            \n                            \n                                commentError\n                            \n                            \n                                    Public\n                                comments\n                            \n                            \n                                    Public\n                                commentsMessage\n                            \n                            \n                                    Public\n                                commentVisibility\n                            \n                            \n                                    Public\n                                hasLiked\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                new_comment\n                            \n                            \n                                    Public\n                                noComments\n                            \n                            \n                                    Public\n                                numberLikes\n                            \n                            \n                                postCommentError\n                            \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                            \n                                type\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        post\n                    \n                \n                \n                    \n                        Type :         Post\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentsMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Comments\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasLiked\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            new_comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noComments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberLikes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  @Input() post:Post;\n  public new_comment:string;\n  public canUpdate=false;\n  public numberLikes:number;\n  public comments:Comment[]=[];\n  public noComments:boolean=true;\n  public height:number;\n  public commentVisibility=false;\n  public commentsMessage=\"Comments\";\n  commentError:string;\n  postCommentError:string;\n  @Output() update=new EventEmitter;\n  @Output() share=new EventEmitter;\n  @Output() deleteProposal=new EventEmitter;\n  @Input() userId:number;\n  @Input() type:string;\n  public hasLiked=false;\n  constructor(public proposalWork:ProposalService) { }\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          alert(\"Some error has occured sending the comment please try again.\")\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n \n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    constructor(\n    public startDate:Date,\n    public endDate:Date,\n    public page:string,\n    public size:string,\n    public userId?,\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                eDate\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                newEdate\n                            \n                            \n                                    Public\n                                typePost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/filter/filter.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sDate\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eDate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newEdate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typePost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\nexport class FilterComponent implements OnInit {\n  @Input()\n  public sDate\n  public newEdate\n  public eDate\n  public data:Date[]\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n public message;\n\n  constructor() { \n  \n  }\n\n  ngOnInit(): void {\n  \n  }\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n  processFilter()\n  { \n    //  eeDate:Date = this.eDate;\n    //  eeDate\n\n    //  yourDate.setDate(yourDate.getDate() + 1);\n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sendResetLink: SendResetLinkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sendResetLink\n                                                  \n                                                        \n                                                                        SendResetLinkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SendResetLinkService } from './../service/send-reset-link.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\n// export class MyErrorStateMatcher implements ErrorStateMatcher {\n//   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n//     const isSubmitted = form && form.submitted;\n//     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n//   }\n// }\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n// matcher=new MyErrorStateMatcher\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private sendResetLink: SendResetLinkService ) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.sendResetLink.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n         this.error=\"Email id doesnot exists. Please try again!\"\n      \n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetProposalsService {\n  allUrl=\"http://localhost:8080/feed/all\"\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  teamUrl=\"http://localhost:8080/feed/team\"\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  yourUrl=\"http://localhost:8080/feed/create\"\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(private _http:HttpClient) { }\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetTeamService.html":{"url":"injectables/GetTeamService.html","title":"injectable - GetTeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetTeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/get-team.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/get-team.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/get-team.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { teamList } from './../teamList';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetTeamService {\n\n  constructor(private http:HttpClient) {}\n\n   getTeam():Observable{\n    console.log(\"inside GetTeam\")\n    return this.http.get(\"http://localhost:8080/getTeam\")\n    \n    // return resp\n}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n                \n              \n              \n               -->\n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                                                           -->                                        Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        public description: string,\n        public id: number,\n        public teams:[],\n        public title: string,\n        public upvotesCount: number,\n        public user: {\n            id: number,\n            name: string,\n            email: string,\n            teams:{\n                id:number,\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                deleteUrl\n                            \n                            \n                                    Public\n                                sentTeams\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deleteUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sentTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  public sentTeams:{}[]\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  private deleteUrl=\"http://localhost:8080/proposal/delete\"\n  constructor(private http:HttpClient) { }\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n  constructor(private http:HttpClient) { }\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { GetTeamService } from './../service/get-team.service';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, NgModule, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog, MatDialogModule, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\n\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n\n  ngOnInit(): void {\n   \n    \n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> {this.teams=data\n      this.filteredTeams=this.teams.slice();\n    }\n    \n    );\n    \n  }\n\n \n\n  get f() { return this.registerForm.controls; }\n\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n\n//   filteredOptions=[];\n// selectedUser: any;\n//   filterUsers() {\n//     this.filteredOptions = this.teams.filter(\n//       item => item.value.toLowerCase().includes(this.selectedTeam.toLowerCase())\n//     );\n//     console.log(this.filteredOptions);\n//   }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":\n{\n    \"name\":this.registerForm.value.team\n}\n   , \"user\":\n{\n    \"name\": this.registerForm.value.userName,\n    \"email\": this.registerForm.value.email,\n    \"password\" :this.registerForm.value.password\n\n}\n    }\n\n    }\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          console.log(data1);\n          if(data1==\"Email Id already exists !!\"){\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n            this.responseDialog()\n          }\n          else{\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n        },\n        (error)=>{\n          if(error.status==200){\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n          else{\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n          }\n        }\n      );\n\n\n}\n// handle(responce){\n//   console.log(responce)\n//   console.log(responce.mesaage)\n//   this.message=responce.message\n// }\n\n\n\n\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, validateToken: ValidateTokenService, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateToken\n                                                  \n                                                        \n                                                                        ValidateTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ValidateTokenService } from './../service/validate-token.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private validateToken: ValidateTokenService,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.validateToken.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n      this.validToken=false;\n       }\n     );\n    \n  }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/reset_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SendResetLinkService.html":{"url":"injectables/SendResetLinkService.html","title":"injectable - SendResetLinkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SendResetLinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/send-reset-link.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/send-reset-link.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/send-reset-link.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/send-reset-link.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendResetLinkService {\n\n  constructor(public http: HttpClient) { }\n\n  resetLink(data){\n    console.log(\"inside forgetPassword\")\n    return this.http.post(\"http://localhost:8080/forgot_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                sentTeam\n                            \n                            \n                                Teams\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(team)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sentTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  sentTeam=[]\n  Teams:{}[]=[]\n\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n  updateForm: FormGroup;\n    \n\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  // socialMedia(data){\n  //   console.log(\"inside socialMedia(Frontend)\")\n  //   return this.http.post(\"http://localhost:8080/getSocialInfo\",data[\"data1\"],{responseType:'text' as 'json'})\n  // }\n\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        // this.username = res[\"name\"];\n        this.registerSuccessfulLogin();\n      }\n      // ,\n      // (error)=>{\n      //   console.log(\"error------\",error['error']);\n      //   //team page\n      //   this.transferDataService.emitData(error['error'])\n      //   this.router.navigate(['/team']);\n  \n      // }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit ,Input} from '@angular/core';\nimport { GetTeamService } from './../service/get-team.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    // this.transferDataService.subscriber.subscribe(data => {\n    //   console.log(\"Is data this?----->\",data);\n    //   this.userData=data\n    // });\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up!\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       }\n     );\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/test-service.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/test-service.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n\n  constructor() { }\n  form: FormGroup = new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  });\n  \n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n  //observer = new Subject();\n//  public subscriber = this.observer.asObservable();\n\n  emitData(data) {\n    console.log(\"inside service-------\",data);\n    this.userData = data;\n   // this.observer.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        public id:number,\n        public name:string,\n        public email:string,\n        public team:{\n            id:number,\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n    \n    \n    // return resp\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n/*  define methods here\n  getAll() {\n    return this.http.get(`${config.apiUrl}/users`);\n}\n\nregister(user) {\n    return this.http.post(`${config.apiUrl}/users/register`, user);\n}\n\ndelete(id) {\n    return this.http.delete(`${config.apiUrl}/users/${id}`);\n}*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateTokenService.html":{"url":"injectables/ValidateTokenService.html","title":"injectable - ValidateTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/validate-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/validate-token.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/validate-token.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateTokenService {\n\n  constructor(private http: HttpClient) { }\n\n  tokenVerification(data){\n    console.log(\"inside tokenVerification\")\n    return this.http.post(\"http://localhost:8080/validate_token\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n  }\n}\n\n// $2a$10$liD/Pd76Qod0CtiFE1nfg.ruHB56kRGFxOCQTEaJk24oayaBl\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/feed.ts\n            \n            class\n            Feed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                33 %\n                (13/39)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/get-team.service.ts\n            \n            injectable\n            GetTeamService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/send-reset-link.service.ts\n            \n            injectable\n            SendResetLinkService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/validate-token.service.ts\n            \n            injectable\n            ValidateTokenService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
