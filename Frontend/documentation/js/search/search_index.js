var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.264,1,0.823]],["body/components/ApiResponseComponent.html",[0,0.469,1,1.402,2,1.304,3,0.217,4,0.189,5,1.088,6,1.088,7,1.088,8,1.088,9,0.189,10,5.435,11,3.652,12,3.09,13,0.402,14,2.943,15,3.963,16,1.088,17,2.129,18,1.891,19,1.665,20,3.04,21,1.468,22,5.546,23,1.468,24,4.9,25,0.305,26,0.845,27,1.253,28,1.216,29,3.394,30,4.718,31,0.961,32,5.937,33,0.613,34,3.632,35,6.2,36,0.629,37,3.632,38,0.668,39,0.023,40,0.375,41,0.563,42,0.668,43,3.632,44,1.229,45,4.9,46,4.169,47,0.713,48,1.157,49,3.632,50,4.9,51,4.9,52,3.632,53,2.417,54,3.328,55,0.588,56,3.632,57,1.673,58,1.154,59,2.466,60,0.402,61,0.217,62,0.012,63,3.632,64,1.157,65,3.632,66,3.632,67,3.632,68,3.632,69,4.9,70,0.966,71,1.468,72,1.468,73,1.088,74,1.778,75,1.088,76,3.632,77,1.088,78,0.857,79,1.088,80,0.857,81,1.088,82,0.857,83,0.966,84,1.468,85,0.807,86,1.088,87,0.857,88,1.088,89,0.857,90,1.088,91,0.857,92,1.025,93,1.088,94,0.807,95,1.088,96,0.807,97,0.857,98,1.088,99,0.807,100,1.088,101,0.857,102,0.857,103,1.088,104,0.807,105,1.088,106,0.807,107,0.857,108,1.088,109,0.857,110,1.025,111,0.807,112,0.713,113,1.088,114,1.088,115,0.012,116,0.016,117,0.012]],["title/components/AppComponent.html",[0,0.264,78,0.823]],["body/components/AppComponent.html",[0,0.499,1,1.037,2,1.476,3,0.262,4,0.228,5,1.315,6,1.315,7,1.315,8,1.315,9,0.228,13,0.486,16,1.315,17,2.169,18,1.927,19,1.101,21,1.662,23,1.662,39,0.023,40,0.375,55,0.527,60,0.486,61,0.262,62,0.014,70,1.168,71,1.662,72,1.662,73,1.315,74,1.914,75,1.315,77,1.315,78,1.508,79,1.315,80,1.037,81,1.315,82,1.037,83,1.168,84,1.662,85,0.976,86,1.315,87,1.037,88,1.315,89,1.037,90,1.315,91,1.037,92,1.24,93,1.315,94,0.976,95,1.315,96,0.976,97,1.037,98,1.315,99,0.976,100,1.315,101,1.037,102,1.037,103,1.315,104,0.976,105,1.315,106,0.976,107,1.037,108,1.315,109,1.037,110,1.24,111,0.976,112,0.862,113,1.315,114,1.315,115,0.014,116,0.018,117,0.014,118,3.736,119,4.72,120,3.442,121,2.111,122,6.081,123,5.547]],["title/modules/AppModule.html",[124,2.366,125,2.366]],["body/modules/AppModule.html",[1,1.346,3,0.154,4,0.134,9,0.134,11,1.471,18,0.685,19,0.645,39,0.024,55,0.87,57,1.186,60,0.285,61,0.154,62,0.008,70,0.685,78,1.532,80,1.346,82,1.346,85,1.267,87,1.346,89,1.346,91,1.346,92,0.727,94,1.267,96,1.267,97,1.394,99,1.267,101,1.346,102,0.608,104,1.267,106,1.267,107,0.906,109,1.346,111,1.267,115,0.008,116,0.012,117,0.008,124,1.747,125,4.941,126,1.597,127,1.747,128,3.902,129,3.451,130,4.324,131,1.936,132,2.189,133,2.189,134,2.189,135,2.189,136,2.189,137,3.537,138,3.259,139,3.259,140,3.259,141,3.02,142,3.259,143,2.812,144,3.02,145,3.02,146,3.264,147,1.747,148,2.573,149,3.264,150,2.189,151,1.747,152,2.189,153,1.936,154,1.747,155,2.605,156,1.936,157,1.936,158,3.836,159,3.264,160,1.936,161,2.605,162,2.573,163,2.573,164,2.189,165,3.836,166,2.573,167,3.836,168,2.573,169,2.189,170,2.189,171,1.936,172,1.747,173,2.886,174,3.264,175,1.768,176,3.836,177,4.586,178,2.189,179,3.836,180,2.573,181,1.471,182,3.836,183,2.573,184,3.836,185,2.573,186,3.836,187,2.189,188,4.586,189,2.573,190,3.836,191,2.573,192,3.836,193,2.573,194,1.597,195,1.936,196,3.836,197,1.111,198,1.747,199,1.747,200,2.189,201,3.836,202,2.189,203,1.936,204,1.936,205,2.573,206,2.573,207,1.111,208,1.936,209,2.189,210,3.836,211,2.573,212,2.573,213,3.836,214,2.573,215,3.836,216,2.573,217,3.836,218,2.189,219,3.836,220,2.573,221,1.936,222,2.573,223,1.936,224,1.597,225,2.189,226,1.747,227,2.189,228,3.836,229,1.936,230,1.597,231,1.471,232,1.747,233,2.189,234,3.836,235,5.083,236,2.38,237,2.193,238,1.655,239,3.264,240,1.936,241,1.936,242,2.573,243,1.457,244,1.294,245,3.836,246,3.836,247,2.573,248,2.573,249,2.573,250,2.573,251,2.573,252,1.186,253,2.573,254,2.573]],["title/modules/AppRoutingModule.html",[124,2.366,137,2.162]],["body/modules/AppRoutingModule.html",[3,0.287,4,0.25,9,0.25,39,0.023,55,0.85,60,0.531,61,0.287,62,0.015,85,1.067,94,1.067,96,1.067,97,1.134,99,1.067,104,1.067,106,1.067,107,1.134,111,1.067,115,0.015,116,0.019,117,0.015,126,2.979,131,3.613,137,3.639,149,4.086,161,3.982,164,4.086,169,4.086,170,4.086,187,4.086,199,3.261,200,4.086,225,4.086,232,3.261,233,4.086,255,4.802,256,4.802,257,4.3,258,5.865,259,2.072,260,2.745,261,7.032,262,4.802,263,4.802,264,4.802,265,4.802,266,4.802,267,4.802,268,4.802,269,4.802,270,4.802,271,4.802]],["title/injectables/AuthorizationService.html",[272,0.641,273,2.366]],["body/injectables/AuthorizationService.html",[3,0.262,4,0.228,9,0.228,13,0.485,25,0.368,26,0.955,28,1.253,31,1.087,33,0.613,36,0.648,38,0.807,39,0.023,40,0.296,41,0.562,42,0.807,47,1.253,48,1.035,55,0.665,60,0.485,61,0.262,62,0.014,64,1.035,115,0.014,116,0.018,117,0.014,121,1.669,238,2.392,259,1.892,272,1.02,273,4.336,274,1.669,275,3.73,276,5.542,277,3.067,278,4.17,279,4.17,280,4.17,281,4.17,282,4.805,283,6.385,284,3.73,285,3.65,286,5.542,287,4.384,288,3.65,289,2.43,290,5.542,291,1.1,292,2.392,293,4.384,294,4.715,295,1.269,296,1.892,297,4.384,298,1.775,299,3.73,300,4.384,301,4.384,302,4.384,303,1.478,304,4.384,305,4.384]],["title/classes/Comment.html",[62,0.011,306,1.992]],["body/classes/Comment.html",[3,0.262,4,0.229,9,0.229,13,0.487,25,0.37,26,0.957,27,1.395,28,1.09,33,0.614,36,0.669,38,0.809,39,0.023,40,0.375,41,0.713,42,0.809,61,0.262,62,0.014,115,0.014,116,0.018,117,0.014,244,2.27,289,1.674,291,1.203,295,1.377,306,4.081,307,2.17,308,2.905,309,3.742,310,3.31,311,6.393,312,3.31,313,2.465,314,4.476,315,3.776,316,4.398,317,4.398,318,5.29,319,4.398,320,4.725,321,4.398,322,4.179,323,4.398,324,5.553,325,3.771,326,4.398,327,4.398,328,2.987]],["title/components/CommentComponent.html",[0,0.264,80,0.823]],["body/components/CommentComponent.html",[0,0.481,1,0.777,2,1.219,3,0.196,4,0.171,5,0.986,6,0.986,7,0.986,8,0.986,9,0.171,13,0.364,16,0.986,17,2.105,18,1.87,19,0.825,21,1.372,23,1.372,25,0.277,27,1.118,28,1.034,31,0.899,33,0.364,36,0.578,39,0.023,40,0.356,41,0.465,44,1.428,47,0.899,48,1.244,55,0.55,58,1.674,60,0.364,61,0.196,62,0.011,64,1.464,70,0.876,71,1.372,72,1.372,73,0.986,74,1.706,75,0.986,77,0.986,78,0.777,79,0.986,80,1.464,81,0.986,82,0.777,83,0.876,84,1.372,85,0.731,86,0.986,87,1.531,88,0.986,89,0.777,90,0.986,91,0.777,92,0.929,93,0.986,94,0.731,95,0.986,96,0.731,97,0.777,98,0.986,99,0.731,100,0.986,101,0.777,102,0.777,103,0.986,104,0.731,105,0.986,106,0.731,107,0.777,108,0.986,109,0.777,110,0.929,111,0.731,112,0.646,113,0.986,114,0.986,115,0.011,116,0.015,117,0.011,243,1.046,277,1.977,278,2.476,291,0.789,292,1.977,306,3.636,308,2.675,313,1.333,329,2.8,330,2.842,331,3.534,332,3.447,333,3.897,334,1.456,335,5.268,336,4.58,337,4.846,338,1.921,339,3.447,340,2.81,341,3.447,342,4.58,343,3.291,344,2.842,345,3.447,346,3.291,347,4.58,348,3.291,349,4.58,350,4.58,351,3.897,352,3.897,353,2.618,354,3.291,355,2.842,356,3.897,357,3.291,358,3.291,359,3.269,360,3.291,361,2.8,362,3.578,363,5.268,364,3.291,365,2.8,366,2.476,367,3.291,368,3.291,369,3.291,370,3.291,371,3.291,372,3.291,373,2.476,374,3.291,375,3.291,376,3.291,377,3.291,378,3.897,379,1.744,380,1.881,381,2.235,382,2.476,383,2.8,384,3.291,385,3.447,386,1.623,387,2.235,388,2.8,389,3.291,390,1.744,391,2.427,392,1.42]],["title/components/CreateProposalComponent.html",[0,0.264,82,0.823]],["body/components/CreateProposalComponent.html",[0,0.477,1,0.753,2,1.192,3,0.19,4,0.166,5,0.955,6,0.955,7,0.955,8,0.955,9,0.166,13,0.573,14,2.064,16,0.955,17,2.097,18,1.863,19,0.799,21,1.342,23,1.342,25,0.268,26,0.772,27,1.263,28,0.626,31,0.879,36,0.57,39,0.023,40,0.303,41,0.324,44,1.123,47,0.626,48,0.753,55,0.622,57,1.469,58,1.646,59,2.165,60,0.353,61,0.19,62,0.01,64,1.519,70,0.848,71,1.342,72,1.342,73,0.955,74,1.683,75,0.955,77,0.955,78,0.753,79,0.955,80,0.753,81,0.955,82,1.326,83,1.712,84,1.342,85,0.708,86,0.955,87,0.753,88,0.955,89,0.753,90,0.955,91,0.753,92,0.9,93,0.955,94,0.708,95,0.955,96,0.708,97,1.223,98,0.955,99,0.708,100,0.955,101,0.753,102,0.753,103,0.955,104,0.708,105,0.955,106,0.708,107,0.753,108,0.955,109,0.753,110,0.9,111,0.708,112,0.626,113,0.955,114,0.955,115,0.01,116,0.014,117,0.01,171,4.454,172,4.019,181,3.384,244,1.511,277,1.933,291,0.772,292,1.933,295,0.666,308,2.554,320,4.78,330,2.78,334,1.424,338,1.895,340,2.21,344,2.78,355,3.486,392,1.376,393,2.399,394,2.497,395,5.618,396,4.48,397,4.407,398,3.812,399,5.18,400,5.18,401,3.189,402,4.48,403,2.561,404,4.48,405,3.189,406,3.189,407,3.486,408,3.189,409,2.713,410,2.165,411,2.713,412,3.189,413,2.165,414,3.189,415,3.189,416,2.713,417,1.075,418,2.713,419,3.189,420,3.189,421,3.189,422,3.189,423,5.18,424,3.189,425,3.189,426,3.189,427,3.189,428,3.189,429,3.189,430,3.189,431,3.189,432,3.189,433,1.978,434,3.189,435,5.618,436,4.78,437,3.812,438,5.222,439,4.48,440,4.48,441,3.812,442,4.48,443,3.812,444,2.561,445,3.812,446,1.823,447,2.713,448,3.189,449,2.713,450,3.189]],["title/components/ErrorComponent.html",[0,0.264,85,0.774]],["body/components/ErrorComponent.html",[0,0.485,1,0.948,2,1.394,3,0.24,4,0.209,5,1.202,6,1.202,7,1.202,8,1.202,9,0.209,13,0.444,16,1.202,17,2.151,18,1.911,19,1.006,21,1.569,23,1.569,25,0.337,26,0.903,33,0.444,36,0.407,39,0.023,40,0.354,41,0.407,48,0.948,53,2.583,54,3.556,55,0.482,58,1.852,60,0.444,61,0.24,62,0.013,64,1.236,70,1.068,71,1.569,72,1.569,73,1.202,74,1.85,75,1.202,77,1.202,78,0.948,79,1.202,80,0.948,81,1.202,82,0.948,83,1.068,84,1.569,85,1.373,86,1.202,87,0.948,88,1.202,89,0.948,90,1.202,91,0.948,92,1.133,93,1.202,94,0.892,95,1.202,96,0.892,97,0.948,98,1.202,99,0.892,100,1.202,101,0.948,102,0.948,103,1.202,104,0.892,105,1.202,106,0.892,107,0.948,108,1.202,109,0.948,110,1.133,111,0.892,112,0.788,113,1.202,114,1.202,115,0.013,116,0.017,117,0.013,291,0.903,295,0.839,331,3.249,334,1.664,338,1.354,451,3.415,452,5.237,453,5.237,454,5.237,455,5.237,456,2.847,457,5.829,458,5.237,459,5.452,460,1.438,461,1.438,462,2.583,463,4.014,464,4.456,465,5.237,466,2.994,467,4.456]],["title/components/FeedComponent.html",[0,0.264,87,0.823]],["body/components/FeedComponent.html",[0,0.385,1,0.409,2,0.749,3,0.103,4,0.09,5,0.518,6,0.518,7,0.518,8,0.518,9,0.09,13,0.499,14,1.888,16,0.518,17,1.901,18,1.689,19,0.434,21,0.843,23,0.843,25,0.145,26,0.485,27,1.132,28,0.804,31,0.804,33,0.453,36,0.632,38,0.83,39,0.024,40,0.344,41,0.539,42,0.83,44,1.592,47,1.107,48,1.363,55,0.611,58,1.13,60,0.191,61,0.103,62,0.006,64,1.414,70,0.46,71,0.843,72,0.843,73,0.518,74,1.227,75,0.518,77,0.518,78,0.409,79,0.518,80,0.664,81,0.518,82,0.409,83,0.946,84,0.843,85,0.384,86,0.518,87,1.141,88,0.518,89,0.409,90,0.518,91,0.409,92,0.488,93,0.518,94,0.384,95,0.518,96,0.384,97,1.064,98,0.518,99,0.384,100,0.518,101,0.409,102,0.409,103,0.518,104,0.384,105,0.518,106,0.384,107,0.409,108,0.518,109,0.664,110,1.592,111,0.384,112,0.339,113,0.518,114,0.518,115,0.006,116,0.009,117,0.006,140,2.911,161,1.175,173,1.302,207,2.584,208,1.302,224,1.074,244,1.52,277,1.768,280,1.302,289,1.354,291,1.073,292,1.768,306,3.519,308,2.715,313,2.222,330,1.746,331,2.542,332,3.993,333,2.394,334,0.894,338,1.382,339,2.117,340,1.388,341,2.117,344,2.542,345,4.505,351,4.11,352,4.11,353,1.609,355,3.293,356,1.472,359,2.998,361,3.026,365,1.472,366,3.083,379,2.171,380,2.033,381,1.175,382,2.676,383,3.486,386,2.512,387,2.415,388,1.472,390,0.917,391,0.917,392,0.747,394,2.204,403,2.342,407,1.074,413,1.175,433,3.499,441,1.472,456,2.712,462,1.754,468,1.472,469,4.515,470,3.556,471,2.814,472,4.097,473,4.831,474,4.097,475,4.831,476,2.814,477,1.746,478,3.486,479,2.394,480,2.394,481,4.831,482,2.394,483,1.73,484,1.73,485,1.639,486,1.73,487,1.73,488,4.11,489,1.73,490,1.73,491,1.73,492,2.814,493,2.814,494,3.486,495,2.814,496,1.73,497,3.486,498,3.486,499,3.486,500,1.73,501,2.542,502,2.814,503,2.394,504,1.73,505,1.297,506,2.814,507,2.117,508,2.814,509,2.814,510,1.73,511,2.394,512,1.73,513,3.486,514,3.486,515,1.73,516,1.472,517,1.73,518,2.394,519,2.814,520,1.472,521,1.73,522,4.097,523,3.556,524,2.814,525,1.73,526,2.814,527,2.394,528,1.911,529,2.814,530,1.73,531,1.73,532,1.074,533,1.73,534,1.302,535,1.73,536,1.73,537,1.73,538,1.73,539,1.73,540,1.73,541,1.73,542,1.73,543,1.73,544,1.73,545,1.73,546,1.73,547,1.73,548,1.73,549,1.73,550,1.73,551,1.559,552,1.73,553,1.73,554,1.73,555,3.556,556,1.73,557,1.73,558,1.73,559,1.73,560,1.73,561,1.73,562,1.73,563,1.73,564,1.73,565,4.097,566,4.097,567,2.814,568,1.73,569,1.73,570,1.73,571,2.117,572,2.171,573,2.814,574,2.224,575,2.394,576,1.73,577,1.73,578,1.73,579,1.73,580,1.73,581,1.73,582,2.814,583,2.814,584,2.577,585,1.73,586,1.472,587,1.884,588,1.884,589,1.73,590,1.73,591,1.73,592,1.73,593,2.814,594,4.097,595,1.911,596,2.814,597,1.73,598,1.73,599,2.814,600,2.814,601,1.73,602,1.73,603,1.73,604,1.73,605,1.472,606,1.73,607,1.175,608,2.814,609,1.302,610,1.73,611,1.73,612,2.814,613,2.814,614,2.814,615,2.814,616,2.814,617,2.394,618,2.814,619,2.814,620,2.814,621,2.394,622,1.884,623,1.491,624,2.394,625,2.542,626,2.814,627,2.171,628,1.73,629,1.73,630,2.117,631,2.676,632,1.302,633,2.676,634,1.73,635,1.302,636,2.814,637,1.884,638,1.73,639,0.989,640,1.73,641,2.676,642,1.472,643,1.73,644,1.472,645,1.472,646,1.73,647,1.175,648,1.73,649,1.73,650,1.73,651,1.73,652,1.302,653,2.814,654,1.73,655,2.814,656,2.394,657,1.388,658,1.73,659,2.117,660,1.472,661,1.73,662,1.73,663,1.73,664,1.73,665,1.73,666,1.73,667,1.73,668,1.73,669,2.814,670,1.73,671,1.73,672,0.989,673,1.73,674,1.73,675,2.814,676,1.73,677,1.73,678,1.73]],["title/classes/FeedParams.html",[62,0.011,679,2.162]],["body/classes/FeedParams.html",[3,0.255,4,0.222,9,0.222,13,0.472,25,0.358,26,0.939,27,1.417,33,0.664,36,0.689,38,0.785,39,0.023,40,0.288,41,0.663,42,1.202,61,0.255,62,0.017,64,1.286,115,0.014,116,0.017,117,0.014,231,3.613,277,2.35,291,0.939,292,2.728,295,1.395,307,2.104,314,4.535,340,3.348,344,3.379,353,2.438,627,3.349,679,3.379,680,5.847,681,3.628,682,3.209,683,6.678,684,6.531,685,5.775,686,4.265,687,4.265,688,4.098,689,4.265,690,5.377,691,4.265,692,4.265,693,4.265,694,4.265,695,4.265,696,4.265,697,4.265,698,4.265,699,4.265]],["title/components/FilterComponent.html",[0,0.264,89,0.823]],["body/components/FilterComponent.html",[0,0.422,1,0.645,2,1.067,3,0.163,4,0.142,5,0.818,6,0.818,7,0.818,8,0.818,9,0.142,13,0.302,16,0.818,17,2.055,18,1.826,19,1.191,21,1.201,23,1.201,25,0.23,27,1.143,28,0.932,31,0.787,33,0.302,36,0.566,38,0.503,39,0.024,40,0.321,41,0.277,42,0.503,44,1.312,47,1.027,48,1.316,53,1.978,55,0.628,58,1.274,60,0.302,61,0.163,62,0.009,64,1.458,70,0.727,71,1.201,72,1.201,73,0.818,74,1.567,75,0.818,77,0.818,78,0.645,79,0.818,80,0.645,81,0.818,82,0.645,83,0.727,84,1.201,85,0.607,86,0.818,87,0.645,88,0.818,89,1.375,90,0.818,91,0.645,92,0.771,93,0.818,94,0.607,95,0.818,96,0.607,97,1.488,98,0.818,99,0.607,100,0.818,101,0.645,102,0.645,103,0.818,104,0.607,105,0.818,106,0.607,107,0.645,108,0.818,109,0.645,110,0.771,111,0.607,112,0.932,113,0.818,114,0.818,115,0.009,116,0.013,117,0.009,207,2.802,218,2.324,230,4.029,231,3.53,243,0.868,288,3.33,291,1.004,292,2.665,308,2.514,314,4.544,330,2.487,334,1.274,338,0.921,341,3.017,345,3.937,353,2.991,355,3.246,359,1.695,366,2.055,380,1.561,392,2.05,437,4.041,446,1.561,505,1.847,513,3.411,532,1.695,534,2.055,574,1.347,622,2.516,623,2.772,624,2.324,625,2.487,647,1.855,657,1.347,690,3.411,700,2.324,701,4.749,702,4.009,703,5.232,704,5.232,705,5.232,706,4.009,707,4.009,708,2.731,709,2.731,710,3.411,711,4.009,712,5.253,713,3.017,714,2.731,715,3.411,716,4.009,717,5.825,718,2.731,719,5.232,720,5.232,721,2.722,722,4.009,723,4.009,724,2.731,725,4.009,726,3.017,727,2.731,728,2.731,729,2.731,730,2.731,731,2.731,732,2.731,733,2.731,734,2.731,735,2.731,736,2.731,737,2.731,738,4.009,739,2.731,740,2.731,741,2.731,742,2.731,743,2.731,744,2.731,745,4.749,746,2.324,747,2.731,748,2.731,749,2.731,750,2.731,751,2.731,752,3.017,753,2.731,754,2.731,755,4.009,756,2.124,757,2.731,758,2.947,759,2.731,760,2.731,761,2.731,762,2.731]],["title/components/ForgetPasswordComponent.html",[0,0.264,91,0.823]],["body/components/ForgetPasswordComponent.html",[0,0.445,1,0.741,2,1.179,3,0.187,4,0.163,5,0.94,6,0.94,7,0.94,8,0.94,9,0.163,13,0.347,16,0.94,17,2.093,18,1.859,19,0.787,21,1.327,23,1.327,25,0.264,28,0.616,31,0.87,33,0.347,36,0.45,39,0.023,40,0.3,44,1.399,47,0.87,48,1.213,55,0.617,58,1.632,60,0.347,61,0.187,62,0.01,64,1.482,70,0.835,71,1.327,72,1.327,73,0.94,74,1.763,75,0.94,77,0.94,78,0.741,79,0.94,80,0.741,81,0.94,82,0.741,83,0.835,84,1.327,85,0.698,86,0.94,87,0.741,88,0.94,89,0.741,90,0.94,91,1.317,92,1.865,93,0.94,94,0.698,95,0.94,96,0.698,97,0.741,98,0.94,99,0.698,100,0.94,101,0.741,102,1.539,103,0.94,104,0.698,105,0.94,106,0.698,107,1.539,108,0.94,109,0.741,110,0.886,111,0.698,112,0.616,113,0.94,114,0.94,115,0.01,116,0.014,117,0.01,141,2.348,175,1.447,181,2.534,226,3.488,240,2.363,241,2.363,243,1.408,244,2.117,252,2.042,291,1.053,295,0.926,298,1.272,334,1.408,338,1.882,359,2.75,444,2.534,456,2.712,462,1.549,505,2.042,572,1.664,574,2.753,584,1.795,587,2.348,588,2.348,607,2.132,609,2.363,721,3.01,763,4.37,764,2.671,765,3.01,766,3.01,767,3.789,768,3.398,769,5.137,770,4.432,771,3.789,772,3.14,773,3.01,774,2.534,775,3.462,776,3.14,777,4.824,778,1.795,779,3.335,780,3.01,781,4.199,782,4.432,783,4.432,784,2.348,785,3.335,786,1.948,787,3.14,788,3.14,789,3.14,790,3.14,791,3.14,792,3.14,793,1.664,794,2.363,795,3.14,796,3.14,797,3.14,798,1.948,799,2.363,800,3.14,801,4.432,802,4.432,803,3.14,804,2.671,805,2.363,806,1.795,807,3.771,808,2.75,809,4.432,810,4.432,811,4.432]],["title/injectables/GetProposalsService.html",[138,1.992,272,0.641]],["body/injectables/GetProposalsService.html",[3,0.159,4,0.138,9,0.138,13,0.294,19,1.638,25,0.223,26,0.677,28,1.132,31,0.771,33,0.435,36,0.67,38,1.098,39,0.024,40,0.403,41,0.716,42,1.098,47,1.282,55,0.661,60,0.294,61,0.159,62,0.008,64,0.628,112,1.132,115,0.008,116,0.013,117,0.008,121,1.012,138,2.246,197,1.147,207,2.819,272,0.723,274,1.012,288,3.734,295,1.205,296,1.147,298,1.076,303,1.945,313,2.091,340,2.547,353,3.15,394,0.952,460,2.066,461,2.066,466,3.734,528,3.917,551,2.422,607,3.174,679,4.261,682,2,685,4.393,752,5.399,812,5.665,813,2.261,814,2.438,815,3.343,816,3.929,817,3.929,818,3.929,819,3.929,820,3.929,821,3.929,822,3.929,823,3.929,824,3.929,825,3.929,826,3.929,827,3.929,828,2.658,829,2.306,830,3.929,831,2.658,832,2.658,833,2.658,834,5.558,835,5.558,836,3.929,837,6.533,838,3.638,839,3.734,840,2.658,841,2.658,842,2.658,843,2.658,844,6.364,845,2.658,846,2.658,847,2.658,848,2.658,849,2.658,850,2.658,851,3.929,852,2.658,853,2.658,854,3.929,855,2.658,856,5.164,857,2.658,858,3.929,859,2.658,860,1.311,861,2.261,862,2.658,863,2.658,864,2.658,865,2.658,866,2.658,867,2.658,868,2.658,869,2.658,870,2.658,871,2.658,872,2.658,873,2.658,874,2.658,875,3.929,876,2.658,877,2.658,878,2.658,879,2.658,880,3.343,881,2.658,882,2.658,883,2.658]],["title/components/HomeComponent.html",[0,0.264,94,0.774]],["body/components/HomeComponent.html",[0,0.426,1,0.661,2,1.086,3,0.167,4,0.146,5,0.839,6,0.839,7,0.839,8,0.839,9,0.146,13,0.533,16,0.839,17,2.062,18,1.832,19,0.702,21,1.223,23,1.223,25,0.343,26,0.704,27,1.153,33,0.31,36,0.414,39,0.023,40,0.326,41,0.414,48,0.661,55,0.49,58,1.531,60,0.31,61,0.167,62,0.009,64,1.138,70,0.745,71,1.223,72,1.223,73,0.839,74,1.586,75,0.839,77,0.839,78,0.661,79,0.839,80,0.661,81,0.839,82,0.661,83,0.745,84,1.223,85,0.622,86,0.839,87,0.661,88,0.839,89,0.661,90,0.839,91,0.661,92,0.791,93,0.839,94,1.176,95,0.839,96,0.622,97,0.661,98,0.839,99,0.622,100,0.839,101,0.661,102,0.661,103,0.839,104,0.622,105,0.839,106,0.622,107,0.661,108,0.839,109,0.661,110,0.791,111,0.622,112,0.549,113,0.839,114,0.839,115,0.009,116,0.013,117,0.013,120,2.533,203,2.107,238,2.285,259,1.208,288,1.601,291,0.913,292,1.762,298,1.134,334,1.297,338,0.944,378,2.382,380,3.218,381,1.902,382,2.107,386,2.899,387,1.902,390,2.983,391,1.484,392,2.429,394,1.462,446,3.218,447,4.789,488,4.789,595,3.272,622,3.459,623,1.484,625,3.764,627,2.553,631,3.072,632,3.072,637,3.414,641,2.107,644,2.382,647,4.375,652,3.072,656,2.382,657,2.014,659,2.107,672,2.334,746,2.382,756,2.805,758,1.737,884,2.382,885,4.505,886,4.818,887,4.083,888,4.083,889,4.083,890,2.772,891,2.8,892,3.984,893,3.984,894,2.612,895,5.295,896,2.8,897,3.984,898,2.382,899,2.8,900,2.8,901,2.382,902,2.8,903,2.8,904,3.072,905,3.072,906,2.533,907,2.8,908,2.8,909,2.382,910,2.8,911,3.272,912,2.8,913,2.382,914,2.8,915,2.8,916,3.473,917,2.8,918,2.8,919,2.983,920,2.533,921,2.382,922,2.382,923,2.107,924,6.067,925,1.737,926,2.8,927,1.902,928,1.737,929,1.737,930,4.083,931,2.8,932,2.382,933,2.8,934,2.382,935,4.083,936,5.29,937,4.818,938,2.8,939,2.8,940,5.629,941,5.295,942,2.8,943,2.8,944,2.8,945,2.8,946,3.473,947,2.8,948,2.8,949,2.8,950,2.8,951,2.8,952,4.083,953,4.083,954,6.218,955,2.8,956,2.8,957,2.8,958,2.8,959,2.8,960,2.8,961,2.8,962,2.8,963,2.8,964,2.8,965,2.8,966,2.8,967,2.8,968,2.382,969,2.8,970,2.8,971,2.8,972,2.8,973,2.8]],["title/interceptors/HttpInterceptorService.html",[974,2.964,975,2.622]],["body/interceptors/HttpInterceptorService.html",[3,0.266,4,0.231,9,0.231,13,0.492,25,0.374,31,1.098,33,0.619,36,0.568,38,1.029,39,0.024,40,0.378,41,0.621,42,1.029,47,0.873,55,0.771,60,0.492,61,0.266,62,0.014,115,0.014,116,0.018,117,0.014,144,3.577,156,3.348,197,1.92,243,1.414,260,2.544,272,1.029,282,3.348,289,2.129,291,0.767,303,1.887,334,1.414,485,2.578,551,1.694,595,3.022,838,3.498,860,2.195,975,4.209,976,4.45,977,5.206,978,3.786,979,5.594,980,4.45,981,4.45,982,6.119,983,5.594,984,6.42,985,6.119,986,6.42,987,4.45,988,4.45,989,5.594,990,4.45,991,5.594,992,2.544,993,4.45,994,4.45,995,4.45,996,4.45,997,3.786,998,4.45,999,4.45,1000,3.022,1001,4.45,1002,4.45,1003,4.45,1004,4.45]],["title/components/LandingPageComponent.html",[0,0.264,96,0.774]],["body/components/LandingPageComponent.html",[0,0.241,1,0.349,2,1.19,3,0.088,4,0.077,5,0.442,6,0.442,7,0.442,8,0.442,9,0.077,13,0.163,14,2.294,16,0.442,17,1.837,18,1.632,19,1.613,21,0.739,23,0.739,25,0.348,26,0.425,27,1.101,28,0.977,29,1.411,31,0.73,33,0.273,36,0.657,38,0.874,39,0.024,40,0.35,41,0.6,42,0.874,44,1.679,47,1.254,48,1.415,55,0.71,57,0.68,58,1.011,60,0.163,61,0.088,62,0.005,64,1.415,70,0.393,71,0.739,72,0.739,73,0.442,74,1.114,75,0.442,77,0.442,78,0.349,79,0.442,80,0.349,81,0.442,82,0.583,83,0.989,84,0.739,85,0.328,86,0.442,87,0.583,88,0.442,89,0.583,90,0.442,91,0.349,92,0.417,93,0.442,94,0.328,95,0.442,96,0.826,97,1.261,98,0.442,99,0.328,100,0.442,101,0.349,102,0.349,103,0.442,104,0.328,105,0.442,106,0.328,107,0.349,108,0.442,109,0.583,110,0.898,111,0.328,112,0.812,113,0.442,114,0.442,115,0.005,116,0.008,117,0.008,119,2.1,120,0.916,138,1.819,139,2.126,161,1.003,172,1.003,173,1.858,199,4.417,204,3.113,207,2.149,208,1.111,209,1.256,224,0.916,230,2.307,231,3.136,236,0.916,237,0.844,238,0.637,243,0.785,244,0.833,259,0.637,273,2.525,277,2.149,278,1.858,285,2.846,288,1.411,291,0.818,292,2.049,294,1.256,295,0.516,298,1.288,299,1.256,308,2.807,314,2.161,334,0.785,338,1.254,353,3.468,379,0.782,380,0.844,381,1.676,386,1.569,387,1.003,390,2.192,392,1.786,394,2.05,417,1.801,433,2.307,446,1.819,449,1.256,456,2.294,460,0.884,461,0.884,462,0.728,469,2.1,477,1.532,478,2.1,482,2.1,497,1.256,498,3.164,499,2.1,501,1.532,505,2.903,507,1.111,511,2.1,514,2.1,528,2.525,532,0.916,551,0.94,571,2.394,572,0.782,574,1.834,584,1.411,586,1.256,587,1.97,588,0.782,595,1.003,605,1.256,621,2.1,622,1.308,623,1.308,625,1.974,627,1.308,630,1.111,631,1.111,633,1.111,635,1.111,637,1.686,639,0.844,641,1.858,642,1.256,645,1.256,647,2.525,652,1.111,657,1.569,659,1.858,660,1.256,679,0.916,682,1.111,688,1.111,713,1.858,752,4.128,756,0.782,758,0.916,768,1.218,778,2.163,779,1.858,806,2.126,814,0.916,815,2.1,835,4.956,839,2.365,861,3.806,885,1.256,905,1.858,919,0.782,920,0.916,921,1.256,922,3.164,923,1.111,934,1.256,946,2.1,1005,1.256,1006,3.182,1007,2.469,1008,2.469,1009,3.719,1010,3.719,1011,2.469,1012,3.719,1013,3.164,1014,2.798,1015,3.719,1016,2.469,1017,3.719,1018,4.137,1019,2.469,1020,3.719,1021,2.469,1022,2.469,1023,1.476,1024,2.798,1025,2.307,1026,2.469,1027,2.161,1028,1.476,1029,1.858,1030,1.476,1031,4.137,1032,1.476,1033,1.476,1034,1.476,1035,1.476,1036,1.476,1037,1.476,1038,1.476,1039,1.476,1040,1.476,1041,1.256,1042,1.476,1043,2.469,1044,1.476,1045,1.476,1046,4.137,1047,1.476,1048,1.476,1049,1.476,1050,1.476,1051,1.476,1052,1.476,1053,1.476,1054,1.476,1055,1.476,1056,1.476,1057,1.476,1058,3.182,1059,1.858,1060,2.469,1061,2.469,1062,2.469,1063,1.476,1064,2.469,1065,1.476,1066,2.469,1067,3.719,1068,2.469,1069,1.476,1070,2.307,1071,3.719,1072,2.469,1073,2.469,1074,2.469,1075,1.476,1076,1.476,1077,2.469,1078,2.469,1079,2.469,1080,1.858,1081,2.469,1082,2.469,1083,1.476,1084,2.469,1085,2.469,1086,1.476,1087,2.469,1088,4.137,1089,1.476,1090,1.476,1091,2.1,1092,1.476,1093,1.476,1094,1.476,1095,1.476,1096,1.476,1097,1.476,1098,1.476,1099,1.476,1100,1.476,1101,1.476,1102,1.476,1103,1.476,1104,1.476,1105,1.476,1106,1.476,1107,1.476,1108,1.476,1109,1.476,1110,1.476,1111,1.476,1112,1.476,1113,1.476,1114,1.476,1115,1.476,1116,1.476,1117,2.469,1118,1.476,1119,1.476,1120,1.476,1121,1.476,1122,1.476,1123,1.476,1124,1.476,1125,1.476,1126,1.476,1127,1.476,1128,1.476,1129,1.256,1130,1.476,1131,1.476,1132,3.719,1133,1.256,1134,1.476,1135,1.476,1136,1.476,1137,1.476,1138,3.182,1139,3.182,1140,3.182,1141,2.394,1142,1.476,1143,1.476,1144,1.476,1145,1.476,1146,1.476,1147,1.476,1148,1.476,1149,1.476,1150,1.476,1151,1.476,1152,1.476,1153,1.476,1154,1.476,1155,1.476,1156,1.476,1157,1.476,1158,1.476,1159,3.182,1160,3.719,1161,1.476,1162,3.182,1163,1.476,1164,1.476,1165,1.476,1166,1.476,1167,1.476,1168,1.476,1169,1.476,1170,1.476,1171,1.476,1172,1.476,1173,1.476,1174,1.476,1175,1.476,1176,1.476,1177,1.476,1178,1.676,1179,1.476,1180,2.469,1181,2.469,1182,1.476,1183,1.476,1184,3.182,1185,1.476,1186,1.476,1187,1.476,1188,1.476,1189,2.469,1190,1.476,1191,1.476,1192,1.476,1193,1.476,1194,2.469,1195,2.469,1196,2.469,1197,2.469,1198,2.469,1199,1.858,1200,1.476,1201,2.469,1202,1.256,1203,1.476,1204,1.476,1205,2.469,1206,1.476,1207,1.476,1208,1.256,1209,1.476,1210,1.476,1211,1.256,1212,1.476,1213,2.469,1214,1.476,1215,1.476,1216,1.476,1217,1.476,1218,1.476,1219,1.476,1220,1.476,1221,1.476,1222,1.476,1223,1.476,1224,1.256,1225,1.476,1226,1.476,1227,1.476,1228,1.476]],["title/components/LoginComponent.html",[0,0.264,99,0.774]],["body/components/LoginComponent.html",[0,0.397,1,0.438,2,0.792,3,0.111,4,0.096,5,0.555,6,0.555,7,0.555,8,0.555,9,0.096,13,0.205,14,2.414,15,1.846,16,0.555,17,1.928,18,1.713,19,0.934,21,0.891,23,0.891,25,0.156,26,0.513,27,1.028,28,0.837,29,1.06,31,0.837,33,0.329,36,0.627,38,0.341,39,0.024,40,0.316,41,0.506,42,0.341,44,1.069,47,0.837,48,1.177,53,1.468,54,2.021,55,0.72,57,0.854,58,1.184,59,1.259,60,0.205,61,0.222,62,0.01,64,1.361,70,0.493,71,0.891,72,0.891,73,0.555,74,1.278,75,0.555,77,0.555,78,0.438,79,0.555,80,0.438,81,0.555,82,0.438,83,0.493,84,0.891,85,0.412,86,0.555,87,0.438,88,0.555,89,0.438,90,0.555,91,0.703,92,0.84,93,0.555,94,0.412,95,0.555,96,0.412,97,0.438,98,0.555,99,0.948,100,0.555,101,0.438,102,1.459,103,0.555,104,0.412,105,0.555,106,0.412,107,1.237,108,0.555,109,0.438,110,0.523,111,0.412,112,0.364,113,0.555,114,0.555,115,0.01,116,0.01,117,0.006,120,3.094,142,2.131,143,2.304,144,2.26,147,2.897,150,1.577,151,3.558,152,1.577,153,1.395,154,1.259,155,1.259,156,1.395,175,0.854,178,1.577,226,1.259,227,1.577,236,2.312,237,3.212,238,2.778,239,1.577,243,1.356,252,2.414,259,0.8,260,1.701,277,1.284,284,1.577,285,2.85,289,1.624,291,1.181,295,0.779,298,2.206,303,0.625,334,1.184,338,0.625,379,0.982,386,1.468,391,1.577,392,1.284,394,1.066,456,1.717,459,3.974,460,1.335,461,1.335,462,0.915,466,1.701,477,2.647,485,1.371,501,1.846,505,2.298,571,1.395,572,0.982,574,1.839,584,1.06,587,0.982,588,0.982,622,0.982,623,0.982,627,0.982,633,1.395,637,0.982,639,1.06,657,0.915,672,1.06,726,2.239,756,0.982,758,1.15,765,2.021,766,2.897,767,2.897,768,2.96,773,2.021,774,2.85,775,1.846,778,1.728,780,2.021,784,2.26,785,3.21,786,1.15,793,1.577,794,1.395,798,1.15,806,1.06,807,2.532,808,2.647,890,2.531,892,2.239,893,3.21,894,2.687,905,2.239,906,1.846,916,1.577,919,2.642,920,1.15,925,1.15,927,1.259,928,1.846,929,1.846,936,1.577,1000,2.021,1024,3.21,1025,2.898,1029,2.805,1070,1.846,1141,3.752,1211,1.577,1229,1.577,1230,3.727,1231,2.976,1232,3.727,1233,4.671,1234,3.727,1235,4.266,1236,2.976,1237,3.727,1238,2.805,1239,4.266,1240,4.266,1241,3.629,1242,2.976,1243,1.854,1244,2.976,1245,2.532,1246,1.854,1247,2.976,1248,5.447,1249,2.976,1250,4.986,1251,3.172,1252,2.976,1253,2.976,1254,2.976,1255,2.976,1256,2.976,1257,4.266,1258,2.976,1259,2.976,1260,2.239,1261,1.854,1262,4.986,1263,4.905,1264,2.647,1265,5.447,1266,1.854,1267,2.976,1268,1.854,1269,2.976,1270,2.976,1271,2.976,1272,2.021,1273,1.854,1274,2.897,1275,1.854,1276,1.854,1277,3.699,1278,2.976,1279,1.854,1280,2.532,1281,2.976,1282,2.976,1283,1.854,1284,1.854,1285,1.854,1286,3.515,1287,1.854,1288,2.647,1289,1.854,1290,1.577,1291,2.976,1292,2.976,1293,2.976,1294,1.854,1295,1.854,1296,2.976,1297,1.854,1298,2.976,1299,1.854,1300,1.854,1301,1.854,1302,1.854,1303,1.854,1304,1.854,1305,1.577,1306,1.854,1307,1.854,1308,1.854,1309,1.395,1310,1.395,1311,1.854,1312,1.854,1313,1.854,1314,1.854,1315,1.854,1316,1.854,1317,1.854,1318,1.854,1319,1.854,1320,1.854,1321,1.854,1322,1.854,1323,1.854,1324,1.854,1325,1.854,1326,1.854,1327,1.854,1328,1.854,1329,4.266,1330,4.266,1331,1.854,1332,3.727,1333,3.727,1334,1.854,1335,1.854,1336,1.854,1337,1.854,1338,1.854,1339,1.854,1340,2.976,1341,1.854,1342,2.976,1343,2.976,1344,1.854,1345,1.854,1346,1.577,1347,1.395]],["title/components/PasswordSpecsComponent.html",[0,0.264,101,0.823]],["body/components/PasswordSpecsComponent.html",[0,0.483,1,0.932,2,1.379,3,0.236,4,0.205,5,1.183,6,1.183,7,1.183,8,1.183,9,0.205,13,0.437,16,1.183,17,2.147,18,1.908,19,0.99,21,1.552,23,1.552,33,0.437,39,0.023,40,0.35,48,0.932,55,0.474,58,1.838,60,0.437,61,0.236,62,0.013,64,1.223,70,1.051,71,1.552,72,1.552,73,1.183,74,1.839,75,1.183,77,1.183,78,0.932,79,1.183,80,0.932,81,1.183,82,0.932,83,1.051,84,1.552,85,0.877,86,1.183,87,0.932,88,1.183,89,0.932,90,1.183,91,0.932,92,1.115,93,1.183,94,0.877,95,1.183,96,0.877,97,0.932,98,1.183,99,0.877,100,1.183,101,1.449,102,1.67,103,1.183,104,0.877,105,1.183,106,0.877,107,0.932,108,1.183,109,0.932,110,1.115,111,0.877,112,0.775,113,1.183,114,1.183,115,0.013,116,0.017,117,0.013,181,2.962,194,2.45,313,2.098,334,1.646,338,1.332,436,4.408,438,4.408,464,4.408,808,3.215,1202,4.408,1348,3.36,1349,3.36,1350,5.181,1351,4.619,1352,5.181,1353,5.782,1354,5.181,1355,5.181,1356,5.181,1357,6.139,1358,5.181,1359,5.181,1360,5.181,1361,5.181,1362,5.181,1363,5.181]],["title/classes/Post.html",[62,0.011,207,1.503]],["body/classes/Post.html",[3,0.235,4,0.205,9,0.205,13,0.737,25,0.331,26,0.892,27,1.407,28,1.016,33,0.573,36,0.676,38,0.726,39,0.023,40,0.415,41,0.701,42,0.726,61,0.235,62,0.013,112,1.134,115,0.013,116,0.017,117,0.013,207,2.952,244,2.328,289,1.501,291,1.199,295,1.483,307,1.945,313,2.817,315,3.585,318,5.394,322,4.617,325,2.678,328,2.678,407,4.135,417,2.28,528,2.678,768,2.553,839,2.959,1364,3.355,1365,6.371,1366,3.943,1367,3.943,1368,3.943,1369,3.943,1370,3.943,1371,3.895,1372,3.943,1373,3.943,1374,5.176,1375,3.943]],["title/injectables/PostProposalService.html",[139,1.992,272,0.641]],["body/injectables/PostProposalService.html",[3,0.218,4,0.19,9,0.19,13,0.404,19,1.755,25,0.307,26,0.848,27,0.717,28,0.966,31,0.966,33,0.545,36,0.65,38,1.024,39,0.024,40,0.376,41,0.65,42,1.024,47,1.168,48,1.162,55,0.715,60,0.404,61,0.218,62,0.012,64,1.162,83,1.584,110,1.807,115,0.012,116,0.016,117,0.012,121,1.392,139,2.814,197,1.578,207,2.823,244,1.66,272,0.906,274,1.392,295,1.163,296,1.578,298,2.758,303,1.877,313,1.994,340,2.428,394,2.53,417,1.233,433,3.054,460,1.993,461,1.993,466,3.659,505,2.743,532,4.058,551,2.266,607,2.483,778,1.994,829,2.745,838,3.659,860,1.804,880,4.188,1129,4.188,1376,3.111,1377,4.923,1378,4.923,1379,4.923,1380,4.923,1381,4.923,1382,1.937,1383,4.923,1384,1.937,1385,3.656,1386,3.656,1387,5.954,1388,3.656,1389,3.656,1390,3.656,1391,3.656,1392,3.656,1393,3.656,1394,3.656,1395,3.656,1396,3.656,1397,3.656,1398,3.656,1399,2.483,1400,3.656,1401,3.656,1402,3.656,1403,3.656,1404,3.656,1405,3.656,1406,3.656,1407,3.656,1408,3.656,1409,3.656,1410,3.656]],["title/classes/Proposal.html",[62,0.011,394,1.248]],["body/classes/Proposal.html",[3,0.25,4,0.218,9,0.218,13,0.771,25,0.352,26,0.927,27,1.403,28,0.821,33,0.694,36,0.674,38,0.77,39,0.023,40,0.283,41,0.702,42,1.094,61,0.25,62,0.02,115,0.013,116,0.017,117,0.013,244,2.309,277,2.566,295,1.445,307,2.064,313,2.542,315,3.689,340,3.334,355,2.596,394,2.561,407,4.248,417,2.333,418,3.56,551,2.471,688,3.149,839,3.399,1371,4.474,1411,3.56,1412,4.184,1413,4.184,1414,4.184,1415,4.184,1416,4.184,1417,4.184,1418,4.184,1419,4.184,1420,4.184,1421,4.184,1422,4.184]],["title/injectables/ProposalService.html",[140,1.992,272,0.641]],["body/injectables/ProposalService.html",[3,0.15,4,0.131,9,0.131,13,0.682,25,0.211,26,0.649,31,0.739,33,0.417,36,0.674,38,1.109,39,0.023,40,0.407,41,0.674,42,1.109,44,1.652,47,1.293,55,0.603,60,0.278,61,0.15,62,0.008,115,0.008,116,0.012,117,0.008,121,0.956,140,2.154,197,1.084,207,2.168,244,2.371,272,0.693,274,0.956,277,2.601,279,3.78,280,4.535,289,2.548,291,0.974,295,1.311,296,1.084,303,1.976,306,3.691,308,2.889,313,2.876,332,3.78,337,3.206,340,3.378,344,3.739,394,2.505,403,2.154,460,2.098,461,2.098,466,3.768,479,3.206,480,3.206,485,1.736,503,3.206,516,2.138,518,5.341,520,2.138,551,2.485,617,3.206,710,3.206,778,1.526,829,2.655,838,3.947,860,1.239,992,1.436,1382,1.331,1384,1.997,1399,1.706,1423,2.138,1424,4.521,1425,3.768,1426,3.768,1427,3.768,1428,3.768,1429,3.768,1430,3.768,1431,3.768,1432,3.768,1433,3.768,1434,3.768,1435,3.768,1436,2.513,1437,2.513,1438,2.513,1439,2.513,1440,2.513,1441,2.513,1442,2.513,1443,2.513,1444,5.023,1445,4.521,1446,2.513,1447,2.513,1448,2.513,1449,5.023,1450,2.513,1451,3.768,1452,2.513,1453,2.513,1454,2.513,1455,2.513,1456,2.513,1457,2.513,1458,2.513,1459,2.513,1460,2.513,1461,2.513,1462,2.513,1463,2.513,1464,2.513,1465,2.513,1466,2.513,1467,2.513,1468,2.513,1469,2.513,1470,2.513,1471,2.513,1472,2.513,1473,2.513,1474,2.513,1475,2.513,1476,2.513,1477,2.513,1478,2.513,1479,2.513,1480,2.513,1481,2.513,1482,2.513,1483,2.513,1484,2.513]],["title/components/RegisterComponent.html",[0,0.264,104,0.774]],["body/components/RegisterComponent.html",[0,0.348,1,0.685,2,0.772,3,0.218,4,0.093,5,0.868,6,0.538,7,0.538,8,0.538,9,0.093,11,1.026,13,0.199,14,2.117,15,2.598,16,0.538,17,1.916,18,1.702,19,0.727,20,1.799,21,0.868,23,0.868,25,0.151,26,0.5,27,0.902,28,0.716,29,1.658,31,0.569,33,0.199,36,0.592,39,0.024,40,0.349,41,0.37,44,1.431,46,2.467,47,1.056,48,1.16,53,1.799,55,0.667,57,0.827,58,1.159,60,0.199,61,0.107,62,0.006,64,1.312,70,0.478,71,0.868,72,0.868,73,0.538,74,1.376,75,0.538,77,0.538,78,0.424,79,0.538,80,0.424,81,0.538,82,0.424,83,0.971,84,0.868,85,0.399,86,0.538,87,0.424,88,0.538,89,0.424,90,0.538,91,0.424,92,0.507,93,0.538,94,0.399,95,0.538,96,0.399,97,0.424,98,0.538,99,0.399,100,0.538,101,0.685,102,1.448,103,0.538,104,0.93,105,0.538,106,0.399,107,0.424,108,0.538,109,0.424,110,0.507,111,0.399,112,1.218,113,0.538,114,0.538,115,0.006,116,0.009,117,0.006,120,1.799,145,1.536,155,1.219,157,1.351,175,0.827,181,2.956,194,1.114,195,1.351,198,1.219,221,3.151,229,1.351,238,1.251,243,0.921,244,0.606,252,1.929,259,0.775,260,1.658,285,2.085,291,1.006,295,0.606,298,1.174,303,1.23,334,0.921,338,1.412,359,1.114,362,1.219,379,0.951,380,1.026,385,1.351,386,1.43,390,2.435,391,2.218,392,2.232,417,1.925,444,2.394,446,2.085,456,2.265,460,1.038,461,2.044,462,1.43,477,2.598,485,1.336,501,1.799,505,1.929,572,1.536,574,3.127,584,1.026,587,1.932,588,2.435,622,1.536,623,1.536,625,2.598,627,0.951,632,1.351,635,2.182,637,0.951,639,1.026,657,0.886,672,1.658,713,2.182,715,2.467,721,1.969,756,1.932,765,1.969,767,1.969,768,2.742,771,2.843,773,1.969,774,3.077,775,3.69,778,1.696,780,2.477,784,1.932,786,1.114,793,2.435,794,1.351,798,1.114,804,2.467,805,1.351,806,1.658,808,2.598,839,2.394,893,2.182,894,2.065,897,4.295,906,1.799,909,1.528,911,1.969,913,1.528,919,2.218,920,1.114,923,1.351,925,1.114,927,1.219,928,1.114,929,1.114,932,1.528,1014,3.151,1025,1.799,1070,2.598,1133,1.528,1178,1.969,1224,1.528,1260,2.182,1264,3.049,1272,1.969,1274,2.477,1277,3.337,1286,3.151,1288,2.598,1347,2.182,1351,2.182,1485,1.528,1486,3.647,1487,2.9,1488,3.647,1489,3.647,1490,3.103,1491,4.914,1492,3.151,1493,1.795,1494,2.9,1495,1.795,1496,2.9,1497,2.9,1498,1.795,1499,3.698,1500,2.9,1501,2.9,1502,2.9,1503,3.562,1504,1.795,1505,1.795,1506,2.467,1507,1.795,1508,2.182,1509,2.182,1510,2.182,1511,2.9,1512,1.795,1513,2.9,1514,2.9,1515,1.795,1516,1.795,1517,1.795,1518,2.263,1519,1.795,1520,2.745,1521,1.219,1522,1.528,1523,1.528,1524,1.795,1525,1.528,1526,1.528,1527,1.528,1528,1.528,1529,1.528,1530,1.351,1531,1.351,1532,1.528,1533,1.795,1534,1.351,1535,3.151,1536,2.745,1537,1.795,1538,1.795,1539,3.562,1540,2.9,1541,1.795,1542,1.795,1543,1.795,1544,1.528,1545,1.528,1546,1.528,1547,1.528,1548,1.528,1549,2.9,1550,1.795,1551,1.795,1552,1.528,1553,1.528,1554,1.528,1555,1.528,1556,2.9,1557,1.795,1558,1.795,1559,1.795,1560,1.795,1561,1.528,1562,1.795,1563,1.528,1564,3.103,1565,1.795,1566,1.528,1567,1.528,1568,1.795,1569,1.795,1570,1.795,1571,1.795,1572,1.528,1573,2.467,1574,2.467,1575,2.467,1576,2.467,1577,2.745,1578,3.103,1579,2.467,1580,1.795,1581,1.795,1582,1.795,1583,1.219,1584,4.181,1585,4.05,1586,2.9,1587,2.467,1588,2.467,1589,3.562,1590,3.562,1591,2.182,1592,2.467,1593,2.9,1594,2.9,1595,2.9,1596,2.9,1597,1.528,1598,1.528,1599,1.528,1600,1.528,1601,1.528,1602,1.795,1603,2.9,1604,3.647,1605,1.795,1606,1.795,1607,1.795,1608,1.795,1609,1.795,1610,1.795,1611,1.795]],["title/components/ResetLinkComponent.html",[0,0.264,106,0.774]],["body/components/ResetLinkComponent.html",[0,0.404,1,0.877,2,0.989,3,0.267,4,0.128,5,0.739,6,0.739,7,0.739,8,0.739,9,0.128,11,1.41,13,0.273,14,2.46,15,3.087,16,0.739,17,2.025,18,1.799,19,1.248,20,2.305,21,1.113,23,1.113,25,0.207,26,0.64,27,0.484,28,0.484,29,2.124,30,3.161,31,0.729,33,0.273,36,0.569,39,0.024,40,0.251,41,0.377,44,1.502,47,0.976,48,1.26,53,1.833,54,2.523,55,0.719,57,1.136,58,1.421,60,0.273,61,0.147,62,0.008,64,1.448,70,0.656,71,1.113,72,1.113,73,0.739,74,1.68,75,0.739,77,0.739,78,0.582,79,0.739,80,0.582,81,0.739,82,0.582,83,0.656,84,1.113,85,0.548,86,0.739,87,0.582,88,0.739,89,0.582,90,0.739,91,0.582,92,0.696,93,0.739,94,0.548,95,0.739,96,0.548,97,0.582,98,0.739,99,0.548,100,0.739,101,0.877,102,1.638,103,0.739,104,0.548,105,0.739,106,1.106,107,1.638,108,0.739,109,0.582,110,0.696,111,0.548,112,0.484,113,0.739,114,0.739,115,0.008,116,0.012,117,0.008,141,1.969,175,1.136,181,2.124,194,1.53,195,1.856,198,1.675,232,3.954,240,1.856,241,1.856,243,1.581,259,1.064,260,2.124,291,0.858,295,0.515,298,1.81,334,1.181,338,1.678,379,1.307,386,1.217,390,2.369,391,1.307,392,1.603,433,2.305,444,2.845,456,2.06,460,0.883,461,1.912,462,1.217,477,3.087,485,1.712,505,1.712,572,1.307,574,2.872,587,1.307,588,1.307,609,1.856,622,1.307,623,1.307,627,1.307,637,1.307,639,1.41,657,1.217,672,1.41,756,1.307,758,1.53,765,2.523,771,3.379,773,2.523,774,2.845,775,3.087,777,4.222,784,2.369,786,1.53,793,1.969,798,2.774,799,2.796,806,1.41,808,2.305,834,3.161,898,2.098,901,2.098,919,2.828,925,1.53,928,1.53,929,1.53,1025,2.305,1070,3.087,1178,2.523,1263,3.161,1274,3.379,1277,2.523,1286,3.744,1288,2.305,1346,2.098,1351,2.796,1492,3.744,1503,3.161,1506,3.161,1508,2.796,1509,2.796,1510,2.796,1520,3.364,1521,1.675,1522,2.098,1525,2.098,1526,2.098,1528,2.098,1529,2.098,1530,1.856,1531,1.856,1534,1.856,1535,1.856,1536,1.856,1539,2.098,1544,2.098,1545,2.098,1546,2.098,1547,2.098,1548,2.098,1552,2.098,1553,2.098,1577,1.856,1585,2.796,1588,3.161,1589,4.234,1590,4.234,1591,2.796,1592,3.161,1612,4.954,1613,2.098,1614,4.471,1615,3.716,1616,4.471,1617,2.466,1618,2.466,1619,3.716,1620,4.976,1621,3.716,1622,2.466,1623,2.466,1624,3.716,1625,2.466,1626,2.466,1627,2.466,1628,2.466,1629,3.804,1630,2.098,1631,2.466,1632,3.716,1633,2.466,1634,2.466,1635,2.466,1636,3.716,1637,2.466,1638,2.466,1639,2.466,1640,2.466,1641,2.466,1642,2.466,1643,2.466,1644,2.466,1645,3.716,1646,2.466,1647,2.466,1648,2.466,1649,2.466]],["title/injectables/ResetPasswordService.html",[141,1.846,272,0.641]],["body/injectables/ResetPasswordService.html",[3,0.217,4,0.189,9,0.189,13,0.686,25,0.305,26,0.845,27,0.961,28,1.253,31,0.961,33,0.542,36,0.629,38,1.093,39,0.023,40,0.401,41,0.497,42,1.093,44,1.601,47,1.088,55,0.588,60,0.402,61,0.217,62,0.012,102,1.568,107,1.402,115,0.012,116,0.016,117,0.012,121,1.382,141,2.596,197,1.567,243,1.557,244,2.002,272,0.902,274,1.382,277,2.115,289,2.111,291,1.101,296,1.567,303,1.87,331,3.04,403,2.801,413,2.466,456,2.258,467,5.051,485,2.556,507,3.687,551,2.26,767,3.328,768,3.151,777,3.687,778,1.984,779,3.687,781,3.687,829,3.275,1091,4.169,1264,3.963,1272,3.328,1288,3.04,1382,1.924,1384,3.285,1629,5.786,1630,4.718,1650,5.435,1651,3.09,1652,4.9,1653,5.546,1654,3.632,1655,4.9,1656,3.632,1657,4.9,1658,4.9,1659,4.9,1660,4.9,1661,4.9,1662,3.632,1663,5.937,1664,4.9,1665,4.9,1666,4.169,1667,4.9,1668,3.632,1669,4.9,1670,4.9,1671,4.9,1672,3.632,1673,4.173,1674,3.632,1675,4.718,1676,4.718,1677,3.632,1678,3.632,1679,3.632]],["title/components/ShareProposalComponent.html",[0,0.264,109,0.823]],["body/components/ShareProposalComponent.html",[0,0.465,1,0.834,2,1.279,3,0.211,4,0.184,5,1.057,6,1.057,7,1.057,8,1.057,9,0.184,13,0.391,14,1.627,16,1.057,17,2.122,18,1.885,19,0.885,21,1.44,23,1.44,25,0.297,27,0.693,28,0.693,31,0.943,36,0.358,39,0.023,40,0.325,44,1.205,47,0.693,48,1.135,55,0.704,57,1.627,58,1.737,59,2.398,60,0.391,61,0.211,62,0.011,64,1.45,70,0.939,71,1.44,72,1.44,73,1.057,74,1.758,75,1.057,77,1.057,78,0.834,79,1.057,80,0.834,81,1.057,82,0.834,83,0.939,84,1.44,85,0.784,86,1.057,87,1.291,88,1.057,89,0.834,90,1.057,91,0.834,92,0.997,93,1.057,94,0.784,95,1.057,96,0.784,97,0.834,98,1.057,99,0.784,100,1.057,101,0.834,102,0.834,103,1.057,104,0.784,105,1.057,106,0.784,107,0.834,108,1.057,109,1.496,110,1.91,111,0.784,112,1.151,113,1.057,114,1.057,115,0.011,116,0.015,117,0.011,174,3.004,175,2.215,223,3.618,224,2.983,231,2.748,243,1.528,252,1.627,303,1.844,308,2.075,330,2.983,331,2.983,334,1.528,338,1.979,393,2.657,394,2.362,397,4.651,398,4.09,403,2.748,409,3.004,413,2.398,416,3.004,417,1.621,443,4.09,444,2.748,445,4.09,494,4.09,501,2.983,527,4.09,784,2.547,793,1.871,894,1.742,1371,4.416,1583,3.265,1680,4.807,1681,3.531,1682,3.531,1683,3.531,1684,3.531,1685,3.531,1686,3.531,1687,3.531,1688,3.531,1689,4.807,1690,4.807,1691,4.807,1692,3.531,1693,4.807,1694,3.531,1695,4.807,1696,3.531,1697,3.531,1698,3.531,1699,3.531]],["title/injectables/SocialMediaAuthService.html",[142,1.992,272,0.641]],["body/injectables/SocialMediaAuthService.html",[3,0.202,4,0.176,9,0.176,13,0.375,25,0.285,26,0.805,27,1.227,28,0.917,31,0.917,33,0.375,36,0.681,38,0.984,39,0.024,40,0.362,41,0.585,42,0.984,44,1.171,47,1.282,48,1.103,55,0.726,60,0.375,61,0.202,62,0.011,83,1.243,97,1.103,112,0.917,115,0.011,116,0.015,117,0.011,121,1.289,142,2.671,143,2.985,151,4.703,154,2.3,197,1.462,237,3.058,238,2.016,252,1.561,259,1.462,272,0.86,274,1.289,281,3.516,285,3.665,291,1.2,292,2.489,295,1.339,296,1.462,298,1.892,303,2.11,362,4.109,373,2.549,460,1.213,461,1.213,551,1.289,726,3.516,766,3.173,778,1.892,805,4.34,814,2.899,829,2.845,890,2.3,894,1.671,992,1.936,1000,2.3,1199,4.34,1241,3.975,1251,3.633,1264,2.899,1309,4.025,1310,2.549,1382,1.795,1384,3.056,1499,3.516,1583,3.173,1673,2.549,1700,5.766,1701,2.882,1702,3.516,1703,4.551,1704,3.975,1705,4.907,1706,4.907,1707,4.907,1708,4.673,1709,3.975,1710,3.387,1711,3.387,1712,3.387,1713,3.387,1714,3.387,1715,4.673,1716,3.387,1717,4.673,1718,5.767,1719,3.387,1720,3.387,1721,2.882,1722,2.882,1723,2.882,1724,3.387,1725,2.882,1726,3.387,1727,3.387,1728,2.882,1729,2.882,1730,2.882,1731,3.975]],["title/components/TeamComponent.html",[0,0.264,111,0.774]],["body/components/TeamComponent.html",[0,0.345,1,0.9,2,1.014,3,0.152,4,0.133,5,0.764,6,0.764,7,0.764,8,0.764,9,0.133,11,1.458,14,2.714,15,2.365,16,0.764,17,2.035,18,1.808,19,0.956,20,2.365,21,1.142,23,1.142,25,0.214,26,0.657,27,1.115,28,0.895,29,1.458,31,0.748,33,0.422,36,0.671,38,0.469,39,0.024,40,0.426,41,0.598,42,0.469,44,1.269,47,0.895,48,1.195,53,2.251,55,0.727,57,1.176,58,1.45,60,0.282,61,0.152,62,0.008,70,0.679,71,1.142,72,1.142,73,0.764,74,1.622,75,0.764,77,0.764,78,0.602,79,0.764,80,0.602,81,0.764,82,0.602,83,1.214,84,1.142,85,0.567,86,0.764,87,0.602,88,0.764,89,0.602,90,0.764,91,0.602,92,0.72,93,0.764,94,0.567,95,0.764,96,0.567,97,0.602,98,0.764,99,0.567,100,0.764,101,0.602,102,0.9,103,0.764,104,0.567,105,0.764,106,0.567,107,0.602,108,0.764,109,0.602,110,0.72,111,1.125,112,1.34,113,0.764,114,0.764,115,0.008,116,0.012,117,0.008,143,2.672,145,2.682,153,1.92,154,1.732,155,1.732,157,1.92,175,1.176,198,1.732,230,2.365,236,1.583,237,1.458,238,1.969,243,1.211,252,2.332,259,1.101,260,1.458,285,3.602,291,0.933,295,0.796,298,2.05,303,0.86,334,1.211,338,1.707,379,1.352,386,1.258,390,2.019,391,2.019,392,1.645,417,1.285,444,2.893,456,1.756,460,1.634,461,1.634,462,1.258,505,1.756,572,1.352,574,2.672,584,1.458,587,1.352,588,2.417,637,1.352,639,1.458,657,1.258,672,1.458,721,2.588,756,1.352,768,1.258,771,3.437,774,1.458,775,3.14,778,1.543,780,3.098,784,2.417,786,1.583,793,1.352,798,1.583,799,1.92,806,1.458,894,1.88,897,3.808,906,2.365,919,2.682,920,1.583,925,1.583,927,1.732,928,1.583,929,1.583,1024,3.808,1025,3.361,1029,3.433,1070,2.365,1178,1.732,1238,3.433,1260,2.868,1272,2.588,1274,1.732,1310,1.92,1490,3.882,1492,3.808,1509,2.868,1510,2.868,1520,4.276,1523,3.882,1527,3.882,1530,1.92,1531,1.92,1532,2.17,1534,1.92,1535,1.92,1536,1.92,1554,2.17,1555,2.17,1561,2.17,1563,2.17,1564,2.17,1566,2.17,1567,2.17,1572,2.17,1573,3.243,1574,3.243,1575,3.243,1576,3.243,1577,2.868,1578,3.243,1579,3.243,1584,3.243,1585,2.868,1587,3.243,1597,2.17,1598,2.17,1599,2.17,1600,2.17,1601,2.17,1666,3.243,1732,2.17,1733,4.562,1734,3.811,1735,4.562,1736,4.562,1737,2.551,1738,3.811,1739,2.551,1740,2.551,1741,2.551,1742,2.551,1743,2.551,1744,2.551,1745,2.551,1746,2.551,1747,2.551,1748,2.551,1749,2.551,1750,2.551,1751,2.551,1752,2.551,1753,2.551,1754,2.17,1755,2.551,1756,2.551,1757,2.551,1758,2.551,1759,2.551,1760,2.551,1761,2.551,1762,3.811,1763,2.551,1764,2.551]],["title/classes/Teams.html",[62,0.011,417,1.175]],["body/classes/Teams.html",[3,0.306,4,0.266,9,0.266,25,0.431,26,1.051,27,1.37,33,0.675,36,0.661,38,0.943,39,0.023,40,0.465,41,0.661,42,0.943,61,0.306,62,0.016,115,0.016,116,0.019,117,0.016,244,2.196,295,1.36,307,2.528,312,3.857,313,2.637,325,3.48,328,3.48,417,2.057,1765,4.36,1766,5.125,1767,5.125,1768,5.125]],["title/injectables/TeamsService.html",[272,0.641,1027,2.366]],["body/injectables/TeamsService.html",[3,0.293,4,0.256,9,0.256,25,0.413,26,1.025,31,1.167,33,0.544,36,0.649,38,0.905,39,0.023,40,0.332,41,0.604,42,0.905,47,0.965,55,0.798,60,0.544,61,0.293,62,0.016,115,0.016,116,0.019,117,0.016,121,1.872,197,2.122,272,1.095,274,1.872,295,1.027,296,2.122,303,1.658,417,2.007,460,1.761,461,1.761,466,3.401,829,3.156,838,3.401,860,2.426,992,2.811,1014,4.814,1027,4.04,1382,2.605,1384,2.605,1399,3.339,1769,4.183,1770,5.95,1771,4.917,1772,4.917,1773,4.917,1774,4.917,1775,4.917]],["title/injectables/TestServiceService.html",[272,0.641,410,2.366]],["body/injectables/TestServiceService.html",[0,0.439,3,0.282,4,0.245,9,0.245,13,0.695,33,0.744,36,0.479,39,0.024,55,0.696,60,0.522,61,0.282,62,0.015,64,1.37,112,0.926,115,0.015,116,0.019,117,0.015,121,1.795,175,2.174,243,2.138,272,1.068,274,1.795,296,2.036,308,2.503,394,1.689,407,3.898,410,3.939,417,1.956,774,3.846,784,3.328,785,4.727,793,2.499,839,2.697,911,3.203,1251,3.203,1290,4.013,1776,4.935,1777,4.013,1778,5.801,1779,4.717,1780,5.801,1781,4.717,1782,6.282,1783,4.717,1784,4.717,1785,4.717,1786,4.717]],["title/injectables/TransferDataService.html",[143,1.718,272,0.641]],["body/injectables/TransferDataService.html",[2,1.581,3,0.293,4,0.255,9,0.255,25,0.412,26,1.024,28,1.373,31,1.166,36,0.603,38,0.903,39,0.023,40,0.332,41,0.498,42,0.903,44,1.49,47,0.963,48,1.159,55,0.713,60,0.543,61,0.293,62,0.016,115,0.016,116,0.019,117,0.016,121,1.868,143,2.932,272,0.903,274,1.868,551,1.868,860,2.421,1238,4.81,1288,3.687,1721,5.056,1754,4.176,1787,5.438,1788,4.176,1789,5.943,1790,5.943,1791,4.908,1792,5.943,1793,4.908,1794,4.908,1795,4.908]],["title/classes/User.html",[62,0.011,291,0.6]],["body/classes/User.html",[3,0.263,4,0.229,9,0.229,13,0.487,25,0.37,26,0.958,27,1.395,28,0.864,33,0.615,36,0.669,38,0.811,39,0.023,40,0.467,41,0.708,42,0.811,61,0.263,62,0.014,112,1.37,115,0.014,116,0.018,117,0.014,244,2.271,291,1.219,295,1.478,307,2.173,310,3.315,312,3.315,313,2.467,315,3.779,318,5.292,322,4.583,325,3.775,328,3.775,768,3.322,1305,3.748,1796,3.748,1797,4.405,1798,4.405,1799,4.405,1800,4.405,1801,4.405]],["title/injectables/UserLoginService.html",[144,1.846,272,0.641]],["body/injectables/UserLoginService.html",[3,0.199,4,0.173,9,0.173,13,0.511,25,0.28,26,0.797,27,1.296,31,0.907,33,0.511,36,0.686,38,1.054,39,0.024,40,0.387,41,0.632,42,1.054,44,1.159,47,1.277,48,1.092,55,0.637,60,0.369,61,0.199,62,0.011,97,1.092,102,1.656,115,0.011,116,0.015,117,0.011,121,1.27,144,2.45,197,1.44,238,1.996,252,1.537,272,0.851,274,1.27,281,3.48,282,2.51,289,1.76,291,1.139,292,1.996,295,1.471,296,1.44,303,2.1,362,4.419,373,3.48,460,1.195,461,1.195,485,2.131,551,2.02,778,1.873,814,2.869,829,3.071,890,2.266,894,1.646,904,3.48,906,2.869,992,1.907,997,2.838,1000,2.266,1199,4.312,1251,3.891,1309,3.993,1382,1.768,1384,3.188,1508,4.312,1702,3.48,1703,4.515,1704,3.934,1705,4.875,1706,4.875,1707,3.934,1709,3.934,1722,2.838,1723,2.838,1725,2.838,1728,2.838,1729,2.838,1730,2.838,1731,3.934,1802,5.129,1803,2.838,1804,4.624,1805,4.624,1806,3.336,1807,4.624,1808,3.336,1809,4.624,1810,3.934,1811,3.336,1812,3.336,1813,3.336,1814,4.624,1815,3.336,1816,3.336,1817,3.336,1818,3.336,1819,3.336,1820,3.336,1821,3.336,1822,3.336,1823,3.336,1824,4.624,1825,3.336,1826,3.336]],["title/injectables/UserRegisterService.html",[145,1.846,272,0.641]],["body/injectables/UserRegisterService.html",[3,0.254,4,0.221,9,0.221,13,0.602,20,3.375,25,0.358,28,1.067,31,1.067,33,0.602,36,0.608,38,1.001,39,0.023,40,0.368,41,0.432,42,1.001,44,1.584,47,1.31,53,2.683,55,0.758,60,0.471,61,0.254,62,0.014,112,1.067,115,0.014,116,0.017,117,0.014,121,1.621,145,2.882,197,1.837,221,4.093,272,1.001,274,1.621,289,2.071,291,0.938,296,1.837,303,2.022,403,3.11,485,2.507,551,2.071,778,2.203,781,4.093,814,3.375,829,3.22,838,3.11,860,2.1,904,4.093,992,2.434,1013,5.374,1264,3.375,1382,2.256,1384,3.347,1399,2.891,1499,4.093,1518,3.375,1583,3.694,1673,4.093,1675,3.622,1676,3.622,1702,4.093,1802,4.753,1810,4.628,1827,3.622,1828,5.44,1829,4.258,1830,5.44,1831,4.258,1832,5.44,1833,4.258,1834,5.44,1835,4.258,1836,4.258,1837,4.258,1838,4.258,1839,4.258]],["title/coverage.html",[1840,4.053]],["body/coverage.html",[0,0.533,1,0.841,9,0.185,10,3.032,11,2.037,12,3.032,39,0.023,41,0.362,62,0.021,78,0.841,80,0.841,82,0.841,85,0.792,87,0.841,89,0.841,91,0.841,94,0.792,96,0.792,99,0.792,101,0.841,104,0.792,106,0.792,109,0.841,111,0.792,115,0.011,116,0.015,117,0.011,118,3.032,138,2.037,139,2.037,140,2.037,141,1.888,142,2.037,143,1.758,144,1.888,145,1.888,151,2.42,171,2.682,172,2.42,194,2.211,199,2.42,207,1.538,223,2.682,224,2.211,226,2.42,232,2.42,243,1.132,272,1.259,273,2.42,275,3.032,288,2.037,291,0.614,306,2.037,308,2.892,309,3.032,329,3.032,385,2.682,393,3.64,394,1.276,410,2.42,417,1.202,446,4.025,451,3.032,468,3.032,532,2.211,679,2.211,680,3.032,681,3.032,700,3.032,763,3.032,764,3.032,812,3.032,813,3.032,884,3.032,911,4.412,919,1.888,974,3.032,975,2.682,977,3.032,978,3.032,1005,3.032,1027,2.42,1229,3.032,1277,4.001,1347,2.682,1348,3.032,1349,3.032,1364,3.032,1376,3.032,1411,3.032,1423,3.032,1485,3.032,1518,2.211,1521,2.42,1612,3.032,1613,3.032,1650,3.032,1651,3.032,1700,3.032,1701,3.032,1732,3.032,1765,3.032,1769,3.032,1776,3.032,1777,3.032,1787,3.032,1788,3.032,1796,3.032,1802,3.64,1803,3.032,1827,3.032,1840,3.032,1841,3.564,1842,3.564,1843,3.564,1844,3.564,1845,5.891,1846,3.564,1847,3.032,1848,5.493,1849,3.564,1850,3.564,1851,4.838,1852,3.564,1853,3.564,1854,5.493,1855,5.493,1856,4.838,1857,3.564,1858,3.564,1859,3.564,1860,3.564,1861,3.564,1862,3.564,1863,3.564,1864,3.564,1865,3.564,1866,3.564,1867,3.564,1868,3.564,1869,4.838,1870,3.564,1871,3.564,1872,3.564,1873,3.564,1874,3.564,1875,3.564,1876,3.032,1877,3.564,1878,3.564,1879,3.564,1880,3.564,1881,3.032,1882,4.838,1883,3.032,1884,4.116,1885,5.891,1886,3.032,1887,4.116,1888,3.032,1889,3.032,1890,3.564,1891,3.564]],["title/dependencies.html",[127,2.847,1892,2.905]],["body/dependencies.html",[39,0.023,60,0.548,115,0.016,116,0.019,117,0.016,127,3.364,129,3.728,159,5.085,160,4.497,175,2.283,202,5.085,203,3.728,204,3.728,229,4.497,230,3.708,231,2.832,236,3.074,237,2.832,238,2.138,259,2.138,534,3.728,860,2.444,1208,4.215,1893,4.954,1894,6.016,1895,4.954,1896,5.976,1897,4.954,1898,4.954,1899,4.954,1900,4.215,1901,4.954,1902,4.954,1903,4.954,1904,4.954,1905,4.954,1906,4.954,1907,4.954,1908,4.954,1909,4.954,1910,4.954,1911,4.954,1912,4.954,1913,4.954]],["title/miscellaneous/functions.html",[1059,3.155,1914,1.973]],["body/miscellaneous/functions.html",[25,0.458,38,1.003,39,0.021,40,0.368,42,1.003,44,1.366,102,1.493,115,0.017,116,0.02,117,0.017,339,4.101,1059,4.101,1245,4.637,1521,4.294,1591,4.101,1847,4.637,1914,3.701,1915,5.45,1916,5.45,1917,6.324,1918,5.45,1919,5.45,1920,5.45]],["title/index.html",[25,0.244,279,2.186,1921,2.905]],["body/index.html",[0,0.478,4,0.248,18,1.271,39,0.019,40,0.323,115,0.015,116,0.019,117,0.015,147,3.243,243,1.518,411,4.064,575,4.064,712,5.6,766,3.969,892,3.594,968,4.973,1041,4.064,1141,4.399,1280,4.064,1894,4.064,1900,5.374,1922,4.776,1923,5.845,1924,4.776,1925,6.317,1926,4.776,1927,4.776,1928,6.752,1929,6.958,1930,4.776,1931,4.776,1932,4.776,1933,4.776,1934,4.776,1935,4.776,1936,4.776,1937,4.776,1938,4.776,1939,6.317,1940,6.317,1941,4.776,1942,6.752,1943,4.776,1944,4.776,1945,4.776,1946,4.776,1947,4.064,1948,5.845,1949,6.582,1950,5.845,1951,4.776,1952,4.776,1953,4.776,1954,4.776,1955,6.317,1956,4.776,1957,4.776,1958,4.776]],["title/modules.html",[126,2.956]],["body/modules.html",[39,0.021,115,0.018,116,0.021,117,0.018,125,3.802,126,3.474,137,3.474,160,4.213,1959,5.598,1960,5.598,1961,6.423,1962,5.598,1963,5.598]],["title/overview.html",[1964,4.053]],["body/overview.html",[1,1.389,2,1.089,39,0.023,70,1.089,78,1.588,80,1.389,82,1.389,85,1.307,87,1.389,89,1.389,91,1.389,94,1.307,96,1.307,99,1.307,101,1.389,104,1.307,106,1.307,107,0.967,109,1.389,111,1.307,115,0.013,116,0.017,117,0.013,124,2.78,125,5.034,126,2.54,127,2.78,128,3.483,129,3.081,130,3.483,131,3.081,132,3.483,133,3.483,134,3.483,135,3.483,136,3.483,137,3.651,138,3.364,139,3.364,140,3.364,141,3.118,142,3.364,143,2.903,144,3.118,145,3.118,146,4.513,147,2.78,257,2.78,274,1.558,307,2.02,630,3.081,1876,3.483,1964,3.483,1965,4.094,1966,4.094,1967,4.094]],["title/routes.html",[257,3.235]],["body/routes.html",[39,0.021,115,0.018,116,0.021,117,0.018,257,3.875]],["title/classes/teamList.html",[62,0.011,1518,2.162]],["body/classes/teamList.html",[3,0.324,4,0.282,9,0.282,13,0.6,27,1.065,33,0.6,39,0.022,40,0.367,41,0.551,61,0.324,62,0.017,64,1.281,112,1.065,115,0.017,116,0.02,117,0.017,289,2.066,295,1.134,307,2.677,310,4.747,417,1.83,1518,3.914,1881,4.618,1968,5.428]],["title/miscellaneous/variables.html",[1080,3.155,1914,1.973]],["body/miscellaneous/variables.html",[25,0.436,39,0.023,41,0.687,115,0.017,116,0.02,117,0.017,252,2.389,289,2.338,315,3.217,460,2.344,461,2.344,894,3.029,1080,3.902,1883,4.411,1884,5.756,1886,4.411,1887,4.411,1888,5.225,1889,5.225,1914,3.521,1947,5.225,1969,6.142,1970,5.185,1971,5.185,1972,5.185,1973,5.185]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":959,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{}}}],["1/1",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":442,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1894,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":446,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1205,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["100px",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":391,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["11",{"_index":1965,"title":{},"body":{"overview.html":{}}}],["12/12",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1646,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["13",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1203,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["16",{"_index":1876,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["17/17",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1em",{"_index":1204,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1fr",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":382,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["2/12",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["2/15",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200",{"_index":1219,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["200px",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["23/26",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["236",{"_index":946,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["23px",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["250px",{"_index":1177,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["25px",{"_index":1649,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["3",{"_index":1068,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3.1.2",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["30)),new",{"_index":1123,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["300",{"_index":1215,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["30px",{"_index":932,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["33",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["380px",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":956,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1764,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1224,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["400px",{"_index":1178,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":388,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":437,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["5/5",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["500",{"_index":441,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":1211,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["50px",{"_index":934,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["5px",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":948,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":1186,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["60px",{"_index":935,"title":{},"body":{"components/HomeComponent.html":{}}}],["62",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["7",{"_index":1966,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["75",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["75px",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1967,"title":{},"body":{"overview.html":{}}}],["80",{"_index":385,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["83",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["9.1.0",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":755,"title":{},"body":{"components/FilterComponent.html":{}}}],["92",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["936da5,#58482e",{"_index":951,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":831,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":869,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_teams",{"_index":1008,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["_teams:teams",{"_index":1109,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["absolute",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acces",{"_index":1270,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroute",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":114,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["adding",{"_index":710,"title":{},"body":{"components/FilterComponent.html":{},"injectables/ProposalService.html":{}}}],["address",{"_index":807,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":690,"title":{},"body":{"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["af4261",{"_index":939,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"error",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":572,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"there",{"_index":1140,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["align",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":816,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":864,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allowing",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{}}}],["allurl",{"_index":817,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":863,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["along",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{}}}],["already",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["amd",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":1900,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":534,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["angular/compiler",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["angular/material/datepicker",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":57,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":954,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1645,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["api's",{"_index":815,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":78,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["application/json",{"_index":999,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["applied",{"_index":716,"title":{},"body":{"components/FilterComponent.html":{}}}],["appmodule",{"_index":125,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":137,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["arguments",{"_index":1030,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["arial",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrangement",{"_index":492,"title":{},"body":{"components/FeedComponent.html":{}}}],["array",{"_index":839,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{}}}],["artifacts",{"_index":1943,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["auth.service.ts",{"_index":1701,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:12",{"_index":1719,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:13",{"_index":1720,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:15",{"_index":1708,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:26",{"_index":1716,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:36",{"_index":1710,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:40",{"_index":1714,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:44",{"_index":1713,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:49",{"_index":1712,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:55",{"_index":1711,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth_token",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{}}}],["authenticate",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["authenticateduser",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":297,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authentication",{"_index":1269,"title":{},"body":{"components/LoginComponent.html":{}}}],["authenticationservice",{"_index":982,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["autho",{"_index":1009,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["autho:authorizationservice",{"_index":1125,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorization",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorization.service",{"_index":1104,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorizationservice",{"_index":273,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["authreq",{"_index":995,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":1029,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["autologin",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1934,"title":{},"body":{"index.html":{}}}],["available",{"_index":1963,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":1043,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["background",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1819,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["based",{"_index":1494,"title":{},"body":{"components/RegisterComponent.html":{}}}],["basic",{"_index":1000,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["basis",{"_index":1085,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["between",{"_index":1792,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["black",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["block",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["boolean",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":789,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":379,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":746,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom:1",{"_index":1223,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["box",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["browse",{"_index":1961,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":389,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":757,"title":{},"body":{"components/FilterComponent.html":{}}}],["build",{"_index":1942,"title":{},"body":{"index.html":{}}}],["button",{"_index":488,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":947,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":835,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["called",{"_index":1046,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["calls",{"_index":505,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["cancel",{"_index":1363,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate=false",{"_index":537,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":464,"title":{},"body":{"components/ErrorComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":758,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":926,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1935,"title":{},"body":{"index.html":{}}}],["changed",{"_index":719,"title":{},"body":{"components/FilterComponent.html":{}}}],["changes",{"_index":1064,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["character",{"_index":1360,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":438,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1280,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{}}}],["checked",{"_index":1271,"title":{},"body":{"components/LoginComponent.html":{}}}],["checking",{"_index":1444,"title":{},"body":{"injectables/ProposalService.html":{}}}],["checks",{"_index":501,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["child",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":62,"title":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":307,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":378,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1925,"title":{},"body":{"index.html":{}}}],["clicks",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{}}}],["clip",{"_index":940,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":445,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closes",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["closing",{"_index":1071,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cluster_appmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1937,"title":{},"body":{"index.html":{}}}],["color",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["color:#3f51b5",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#8b8a8a",{"_index":1226,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["color:#e9ebee",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":384,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["commendid",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment",{"_index":306,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":81,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":531,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":326,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":80,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror:string",{"_index":544,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["comments:comment",{"_index":539,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":543,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":473,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":542,"title":{},"body":{"components/FeedComponent.html":{}}}],["communicate",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"overview.html":{}}}],["conditions",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"miscellaneous/functions.html":{}}}],["confirmpass",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1632,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after2____\",this.user",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"data",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"date\",this.edate",{"_index":737,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"in",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":1673,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["console.log(\"response",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"test",{"_index":1753,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1409,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1404,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":799,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(error.status",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1726,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(this.comment",{"_index":368,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data",{"_index":1166,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1687,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.newfeed",{"_index":1174,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1696,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.type",{"_index":1158,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1756,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1475,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":828,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(authenticationservice",{"_index":980,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(authservice",{"_index":1023,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["constructor(description",{"_index":1366,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(formbuilder",{"_index":1737,"title":{},"body":{"components/TeamComponent.html":{}}}],["constructor(http",{"_index":1382,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(id",{"_index":312,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":992,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(proposalwork",{"_index":483,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{}}}],["constructor(router",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(startdate",{"_index":686,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(userid",{"_index":1413,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1202,"title":{},"body":{"components/LandingPageComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["contains",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{}}}],["content",{"_index":998,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuation",{"_index":1670,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["continue",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["control",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{}}}],["control.dirty",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["control.invalid",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{}}}],["control.touched",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{}}}],["controlname",{"_index":1920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controls",{"_index":1081,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["count",{"_index":961,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1840,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatain",{"_index":1500,"title":{},"body":{"components/RegisterComponent.html":{}}}],["create",{"_index":83,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1704,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1709,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["created",{"_index":528,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{}}}],["createproposalcomponent",{"_index":82,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":773,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["createurl",{"_index":1377,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1396,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creation",{"_index":320,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{}}}],["creationdate",{"_index":311,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":327,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["crimson",{"_index":761,"title":{},"body":{"components/FilterComponent.html":{}}}],["current",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/ProposalService.html":{}}}],["currently",{"_index":1497,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cursor",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserRegisterService.html":{}}}],["data)=>console.log(data",{"_index":1183,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data.id=id",{"_index":1401,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1406,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1408,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1788,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:13",{"_index":1791,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1793,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":875,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":880,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":798,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["data:date",{"_index":734,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1639,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data:{name:this.user.id,post:post,teams:this._teams",{"_index":1187,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data:{prop:post.teams,teams:this._teams",{"_index":1179,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data=new",{"_index":1120,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data={\"data1",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1634,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":795,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1675,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["database",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["date",{"_index":314,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["date(),\"0\",\"3",{"_index":1124,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[0",{"_index":1154,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[1",{"_index":1156,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(this.startdate.setdate(this.startdate.getdate",{"_index":1122,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dateplusone",{"_index":703,"title":{},"body":{"components/FilterComponent.html":{}}}],["day",{"_index":711,"title":{},"body":{"components/FilterComponent.html":{}}}],["deals",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["declarations",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["default",{"_index":460,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":318,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["defines",{"_index":310,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/teamList.html":{}}}],["delay",{"_index":958,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["deletecomment",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1436,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1481,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1424,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1431,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1438,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1483,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1425,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1469,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":482,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["deleteproposal(1",{"_index":1044,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal(id",{"_index":1037,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal=new",{"_index":548,"title":{},"body":{"components/FeedComponent.html":{}}}],["deletes",{"_index":1039,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleting",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["deletion",{"_index":499,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["delproposal",{"_index":474,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":127,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["description:string",{"_index":1421,"title":{},"body":{"classes/Proposal.html":{}}}],["destroying",{"_index":1047,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["destroys",{"_index":294,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["destroysession",{"_index":1010,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["details",{"_index":1508,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/UserLoginService.html":{}}}],["dev",{"_index":1931,"title":{},"body":{"index.html":{}}}],["development",{"_index":1927,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog",{"_index":1127,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialog:matdialog,public",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{}}}],["dialogref",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1180,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["different",{"_index":861,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["differentiating",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":962,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1941,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1945,"title":{},"body":{"index.html":{}}}],["disable:boolean",{"_index":790,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["dislike",{"_index":1449,"title":{},"body":{"injectables/ProposalService.html":{}}}],["disliking",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["display:none",{"_index":1212,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["displayed",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["displaying",{"_index":1506,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["displays",{"_index":1350,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["dist",{"_index":1944,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1835,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":804,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1804,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1807,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1828,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1830,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":955,"title":{},"body":{"components/HomeComponent.html":{}}}],["during",{"_index":1051,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dynamic",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":810,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1952,"title":{},"body":{"index.html":{}}}],["earlier",{"_index":1282,"title":{},"body":{"components/LoginComponent.html":{}}}],["edate",{"_index":733,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1361,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":768,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["emit",{"_index":725,"title":{},"body":{"components/FilterComponent.html":{}}}],["emitdata",{"_index":1789,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1790,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emiting",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{}}}],["emits",{"_index":513,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["emitted",{"_index":1067,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["emitter",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["enables",{"_index":765,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["end",{"_index":712,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":683,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":697,"title":{},"body":{"classes/FeedParams.html":{}}}],["endmessage",{"_index":1117,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["enetered",{"_index":455,"title":{},"body":{"components/ErrorComponent.html":{}}}],["enter",{"_index":775,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["entered",{"_index":467,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["enters",{"_index":1278,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment",{"_index":1884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":456,"title":{},"body":{"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{}}}],["error'},{'name",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":457,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":458,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.status!=406",{"_index":1139,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["error/error.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorcomponent",{"_index":85,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandling",{"_index":1011,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errorhandling(error",{"_index":1048,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errormessage",{"_index":459,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{}}}],["errorstatematcher",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{}}}],["etc",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{}}}],["evenr",{"_index":1035,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["event",{"_index":1031,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["eventemitter",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["example",{"_index":278,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/LandingPageComponent.html":{}}}],["execute",{"_index":1950,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1834,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["existing",{"_index":1503,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["exists",{"_index":805,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["expired",{"_index":1671,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":729,"title":{},"body":{"components/FilterComponent.html":{}}}],["false",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{}}}],["feature",{"_index":522,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["feed'},{'name",{"_index":88,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":470,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":471,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed/feed.component",{"_index":1100,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feed/share",{"_index":1102,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feedcomponent",{"_index":87,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":679,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["feedparams(new",{"_index":1121,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fetch",{"_index":1496,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fetching",{"_index":1664,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["field",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["fields",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1936,"title":{},"body":{"index.html":{}}}],["fill",{"_index":447,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":90,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":701,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":702,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter/filter.component",{"_index":1099,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["filtercomponent",{"_index":89,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtered",{"_index":1513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filteredteams",{"_index":1488,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filters",{"_index":1084,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fixed",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["flag",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["flag=false",{"_index":1693,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1689,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["flex:1",{"_index":1209,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["following",{"_index":1355,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":386,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1690,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":92,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1677,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["forgetpasswordcomponent",{"_index":91,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform:formgroup",{"_index":787,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgotten",{"_index":783,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":774,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{}}}],["formarray",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":785,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1685,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1783,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1781,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":784,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1682,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":1042,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["function",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1059,"title":{"miscellaneous/functions.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1954,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1939,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1924,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1091,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["getall",{"_index":1012,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getallnextpost",{"_index":822,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":832,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":872,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":823,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":840,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":870,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1432,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1440,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1479,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1426,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1465,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1491,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1433,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1442,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1477,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1427,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1468,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":727,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1705,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposals",{"_index":1026,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposals:getproposalsservice",{"_index":1128,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposalsservice",{"_index":138,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gets",{"_index":1058,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getteam",{"_index":1013,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/UserRegisterService.html":{}}}],["getteam():observable",{"_index":1838,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["getteamnextpost",{"_index":824,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":842,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":877,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":825,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":845,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":874,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1014,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1774,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getting",{"_index":279,"title":{"index.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/ProposalService.html":{}}}],["getyour",{"_index":1015,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getyournextpost",{"_index":826,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":847,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":882,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":827,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":849,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":879,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1957,"title":{},"body":{"index.html":{}}}],["google",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["gradient(#f3ec78",{"_index":938,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":950,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":943,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1962,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":944,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":748,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["group",{"_index":1778,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["h1",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{}}}],["handle",{"_index":452,"title":{},"body":{"components/ErrorComponent.html":{}}}],["handled",{"_index":1036,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["handlelogin",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{}}}],["handles",{"_index":814,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["handling",{"_index":1412,"title":{},"body":{"classes/Proposal.html":{}}}],["happened",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":550,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["headers",{"_index":997,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":390,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:500px",{"_index":1218,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:50px",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:55px",{"_index":1222,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:60px",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["height:auto",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":541,"title":{},"body":{"components/FeedComponent.html":{}}}],["hello",{"_index":1195,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["help",{"_index":1955,"title":{},"body":{"index.html":{}}}],["helps",{"_index":1663,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["here",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["hidden",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["hide",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["home',component:homecomponent",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":94,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1101,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hostlisteners",{"_index":1021,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote",{"_index":1228,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote&nbsp",{"_index":1200,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["html",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":1384,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["http://localhost:4200",{"_index":1933,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1820,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1458,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1454,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1451,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":851,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":858,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":854,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1390,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1453,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1392,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1393,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1772,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1460,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1456,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1462,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":1399,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":829,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclientmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":990,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":986,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":991,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":989,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":975,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":984,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1640,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":325,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1422,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1405,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":301,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["if((this.newfeed.length>0",{"_index":1163,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(array.isarray(data",{"_index":1152,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data!=null",{"_index":563,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":564,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data===\"allpost",{"_index":1144,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"teampost",{"_index":1146,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"yourpost",{"_index":1148,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(error.status!=200",{"_index":571,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["if(error.status==200",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["if(error.status==202",{"_index":1637,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["if(error.status==302",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==404",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["if(flag",{"_index":1694,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1699,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1698,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(result",{"_index":1181,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(team.id==item.id",{"_index":1692,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.innerwidth",{"_index":1193,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.loginform.valid",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.menuvisibility",{"_index":1190,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.post.user.id==this.userid",{"_index":556,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":743,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":747,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.type.includes(\"allpost",{"_index":1167,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"teampost",{"_index":1169,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"yourpost",{"_index":1171,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(user!=null",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["ignore",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"classes/teamList.html":{}}}],["image:linear",{"_index":942,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":930,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["incase",{"_index":782,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["include",{"_index":844,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["includes",{"_index":836,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["incorrect",{"_index":453,"title":{},"body":{"components/ErrorComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["information",{"_index":726,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["initial",{"_index":1061,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["initialiseformgroup",{"_index":1785,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["initializes",{"_index":1502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inject",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/LoginComponent.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["injectable",{"_index":272,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1795,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"overview.html":{}}}],["innerwidth",{"_index":1108,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["input",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["input,output,eventemitter",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":485,"title":{},"body":{"components/FeedComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["intercept",{"_index":979,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":983,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":974,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":978,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:15",{"_index":987,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":981,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":976,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{}}}],["intialization",{"_index":508,"title":{},"body":{"components/FeedComponent.html":{}}}],["invalid",{"_index":1274,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{}}}],["iserrorstate(control",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{}}}],["islogin",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":65,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":788,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{}}}],["isuserloggedin",{"_index":1706,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1695,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["iteration",{"_index":960,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1676,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["json.parse(this.authenticateduser",{"_index":304,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["jsonpipe",{"_index":533,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1951,"title":{},"body":{"index.html":{}}}],["key",{"_index":1782,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":97,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["landingpagecomponent",{"_index":96,"title":{"components/LandingPageComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["later",{"_index":806,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lato",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":756,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["left:5",{"_index":1225,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["legend",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1362,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1357,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":933,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["liked",{"_index":503,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["likesetup",{"_index":475,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":523,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":937,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":777,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["link'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1614,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1615,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1613,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:102",{"_index":1618,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:19",{"_index":1626,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:25",{"_index":1625,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:48",{"_index":1617,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:85",{"_index":1623,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:93",{"_index":1622,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link/reset",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"injectables/UserRegisterService.html":{}}}],["literal",{"_index":315,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":1281,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedin",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{}}}],["login.service.ts",{"_index":1803,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:12",{"_index":1817,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1818,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1816,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:16",{"_index":1805,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:29",{"_index":1808,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1806,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:43",{"_index":1815,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:47",{"_index":1813,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:53",{"_index":1812,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:59",{"_index":1811,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":99,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["logins",{"_index":1809,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["loginservice",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":1199,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["logs",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{}}}],["long",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1358,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":811,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["makes",{"_index":834,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/ResetLinkComponent.html":{}}}],["mandatory",{"_index":435,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["manner",{"_index":495,"title":{},"body":{"components/FeedComponent.html":{}}}],["map",{"_index":1722,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matbuttonmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["matches",{"_index":1919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":1025,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1683,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matdividermodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":730,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":440,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{}}}],["menu",{"_index":1088,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menubutton=false",{"_index":1107,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menuvisibility=true",{"_index":1106,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["message",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ErrorComponent.html":{},"components/FilterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{}}}],["message=null",{"_index":1105,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["minimum",{"_index":436,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1914,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":964,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":124,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":126,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1956,"title":{},"body":{"index.html":{}}}],["morepost=true",{"_index":1118,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["moz",{"_index":953,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":952,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1628,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1758,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":328,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1932,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":753,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":439,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":1445,"title":{},"body":{"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":536,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":732,"title":{},"body":{"components/FilterComponent.html":{}}}],["newfeed",{"_index":1110,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["next",{"_index":985,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1003,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1004,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1929,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":1292,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["ngoninit",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments:boolean=true",{"_index":540,"title":{},"body":{"components/FeedComponent.html":{}}}],["non",{"_index":1210,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["none",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":963,"title":{},"body":{"components/HomeComponent.html":{}}}],["not.a",{"_index":526,"title":{},"body":{"components/FeedComponent.html":{}}}],["notified",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{}}}],["now",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["null",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":313,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes:number",{"_index":538,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":289,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1129,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{}}}],["observable",{"_index":838,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["occured",{"_index":462,"title":{},"body":{"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["ok",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["ondelete",{"_index":476,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":509,"title":{},"body":{"components/FeedComponent.html":{}}}],["onfilter",{"_index":1016,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onfilter(data",{"_index":1062,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["oninit",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":728,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onresize",{"_index":1077,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onscroll",{"_index":1017,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onsubmit",{"_index":771,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["opacity:20",{"_index":1206,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["open",{"_index":514,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialog",{"_index":477,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":511,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare",{"_index":478,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare(post",{"_index":1074,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["opened",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["opens",{"_index":1070,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":529,"title":{},"body":{"components/FeedComponent.html":{}}}],["out",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":366,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["overview",{"_index":1964,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1892,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["padding:number",{"_index":1116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page",{"_index":292,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["page'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1006,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1007,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1005,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:111",{"_index":1054,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:123",{"_index":1056,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:137",{"_index":1083,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:154",{"_index":1063,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:175",{"_index":1065,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:199",{"_index":1075,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:223",{"_index":1069,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:259",{"_index":1086,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:271",{"_index":1076,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:292",{"_index":1033,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:301",{"_index":1049,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:317",{"_index":1045,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:333",{"_index":1038,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:35",{"_index":1089,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:37",{"_index":1093,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":1098,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1097,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:59",{"_index":1028,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:65",{"_index":1090,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:67",{"_index":1095,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:69",{"_index":1094,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:71",{"_index":1092,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:78",{"_index":1057,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:88",{"_index":1055,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:99",{"_index":1053,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/comment",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":309,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:11",{"_index":319,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:13",{"_index":323,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":316,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:7",{"_index":321,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:9",{"_index":317,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:32",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:38",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:46",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:59",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":468,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:133",{"_index":500,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:146",{"_index":517,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:173",{"_index":521,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:206",{"_index":515,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:213",{"_index":512,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:221",{"_index":510,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:234",{"_index":496,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:52",{"_index":490,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:55",{"_index":489,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:58",{"_index":487,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:61",{"_index":486,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:67",{"_index":484,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:74",{"_index":530,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:80",{"_index":504,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:89",{"_index":525,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:99",{"_index":491,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":700,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:105",{"_index":718,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:114",{"_index":724,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:51",{"_index":708,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:73",{"_index":709,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:82",{"_index":714,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1423,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:14",{"_index":1459,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1455,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1463,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1461,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:26",{"_index":1457,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:29",{"_index":1452,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:32",{"_index":1435,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:45",{"_index":1446,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:54",{"_index":1450,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:63",{"_index":1448,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:73",{"_index":1443,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:81",{"_index":1441,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:89",{"_index":1437,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:98",{"_index":1439,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1776,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":698,"title":{},"body":{"classes/FeedParams.html":{}}}],["page=0",{"_index":1114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pagination",{"_index":837,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["param",{"_index":551,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":682,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["params.ts",{"_index":681,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:11",{"_index":689,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:14",{"_index":691,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:17",{"_index":692,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:2",{"_index":687,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:20",{"_index":695,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:23",{"_index":694,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":693,"title":{},"body":{"classes/FeedParams.html":{}}}],["parent",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["parentfunction",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":367,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":707,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":736,"title":{},"body":{"components/FilterComponent.html":{}}}],["particular",{"_index":494,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["password",{"_index":102,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/functions.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1641,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["password.component.css",{"_index":769,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":770,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":764,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:37",{"_index":772,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":776,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1651,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:13",{"_index":1672,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:21",{"_index":1662,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:31",{"_index":1656,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:40",{"_index":1668,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:8",{"_index":1654,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":101,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{}}}],["per",{"_index":493,"title":{},"body":{"components/FeedComponent.html":{}}}],["person",{"_index":1194,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["photo",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1823,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":574,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1647,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["position:fixed",{"_index":1213,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["post",{"_index":207,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["post.description",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":535,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:postproposalservice",{"_index":1126,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postbutton",{"_index":1220,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postcomment",{"_index":479,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":516,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":580,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1470,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror:string",{"_index":545,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1428,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1464,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1434,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1447,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1474,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1429,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1467,"title":{},"body":{"injectables/ProposalService.html":{}}}],["posted",{"_index":324,"title":{},"body":{"classes/Comment.html":{}}}],["posting",{"_index":518,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike",{"_index":480,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":520,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1472,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1430,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1466,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1380,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1385,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1403,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":139,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":752,"title":{},"body":{"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["present",{"_index":1665,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["private",{"_index":298,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["process",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["processfilter",{"_index":704,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1946,"title":{},"body":{"index.html":{}}}],["production",{"_index":1947,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1923,"title":{},"body":{"index.html":{}}}],["prop",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{}}}],["proposal",{"_index":394,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.component.css",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:23",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:31",{"_index":1681,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:38",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:41",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:47",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.service",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.service.ts",{"_index":1376,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:15",{"_index":1391,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:17",{"_index":1394,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:19",{"_index":1383,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:29",{"_index":1389,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:39",{"_index":1386,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposalerror:string",{"_index":1111,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["proposalid",{"_index":519,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposals",{"_index":469,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service.ts",{"_index":813,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:17",{"_index":853,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:19",{"_index":852,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:21",{"_index":857,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:23",{"_index":855,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":859,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:27",{"_index":830,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:37",{"_index":841,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:46",{"_index":833,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:55",{"_index":846,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:67",{"_index":843,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:77",{"_index":850,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:89",{"_index":848,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":140,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":1922,"title":{},"body":{"index.html":{}}}],["proposalwork",{"_index":472,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":552,"title":{},"body":{"components/FeedComponent.html":{}}}],["propose",{"_index":1201,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["propsal",{"_index":396,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["protractor",{"_index":1953,"title":{},"body":{"index.html":{}}}],["provide",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":296,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["provider",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["put",{"_index":1619,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["radius",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1958,"title":{},"body":{"index.html":{}}}],["real",{"_index":497,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["receive",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{}}}],["recieved",{"_index":1050,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirects",{"_index":1718,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["refreshs",{"_index":1073,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["register",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register',component:registercomponent",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register.component.css",{"_index":1486,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1487,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1827,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:10",{"_index":1829,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:22",{"_index":1831,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:31",{"_index":1833,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":104,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":781,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["registerform",{"_index":1489,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1707,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1814,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["registraion",{"_index":1511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":1499,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["reload",{"_index":575,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":448,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["removing",{"_index":1040,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["req",{"_index":988,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":996,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":994,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1620,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["requests",{"_index":1702,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["require",{"_index":1889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":808,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["res",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["reset",{"_index":107,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["resetlink",{"_index":1652,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink(data",{"_index":1655,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink/:token",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":106,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1616,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetlinkservice",{"_index":791,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword",{"_index":1630,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1661,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":141,"title":{"injectables/ResetPasswordService.html":{}},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{},"overview.html":{}}}],["resize",{"_index":1018,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resp",{"_index":1837,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["response",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{}}}],["response'},{'name",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":22,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:13",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:26",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1492,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["responsible",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{}}}],["responsive",{"_index":1087,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resposible",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"classes/Proposal.html":{}}}],["result",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":573,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":303,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["returned",{"_index":1387,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["rgb(211",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(236",{"_index":1227,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rgb(238",{"_index":945,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":380,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["root'},{'name",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":299,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["routermodule",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":257,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1928,"title":{},"body":{"index.html":{}}}],["running",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["runs",{"_index":1066,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rxjs",{"_index":860,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1723,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["same",{"_index":507,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["sans",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["saved",{"_index":1621,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["saying",{"_index":1510,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["sbsi",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1938,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["scrollable",{"_index":1216,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["scrolling",{"_index":1052,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sdate",{"_index":731,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1208,"title":{},"body":{"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["searching",{"_index":1514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selectapi",{"_index":1019,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selectapi(data",{"_index":1082,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selected",{"_index":713,"title":{},"body":{"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["selected(team",{"_index":1697,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1490,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selection",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":705,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":754,"title":{},"body":{"components/FilterComponent.html":{}}}],["seletion",{"_index":720,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":759,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":721,"title":{},"body":{"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["senddata",{"_index":706,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":723,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddate",{"_index":722,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sends",{"_index":779,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["sent",{"_index":809,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1395,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1930,"title":{},"body":{"index.html":{}}}],["server",{"_index":1141,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["service",{"_index":778,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["service.service",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1777,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:8",{"_index":1779,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/reset",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["service/social",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["service/transfer",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["session",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{}}}],["sessionstorage.clear",{"_index":305,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1731,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1730,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1728,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["set",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["sets",{"_index":1078,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["setting",{"_index":1659,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["setup",{"_index":1060,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["share",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":547,"title":{},"body":{"components/FeedComponent.html":{}}}],["shared",{"_index":1371,"title":{},"body":{"classes/Post.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{}}}],["shareproposal",{"_index":1381,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1388,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1400,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":109,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1378,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1398,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["sharing",{"_index":1680,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["shine",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["showing",{"_index":1509,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["showmenu",{"_index":1020,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["shown",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["shows",{"_index":1810,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["sign",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{}}}],["signed",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":699,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":1024,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialloginmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1715,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauthservice",{"_index":142,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{},"overview.html":{}}}],["socialuser",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{}}}],["solid",{"_index":383,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":449,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{}}}],["spacing",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1359,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1351,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs",{"_index":1352,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1353,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1354,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1349,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs/password",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:12",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:19",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:29",{"_index":293,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1847,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":451,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:12",{"_index":463,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":680,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/forget",{"_index":763,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":812,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:13",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:16",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":308,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:114",{"_index":1268,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:138",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:169",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1283,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1276,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1285,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1275,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":1287,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:63",{"_index":1279,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":1273,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:79",{"_index":1284,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:99",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1348,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":532,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1364,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:11",{"_index":1370,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:13",{"_index":1372,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:15",{"_index":1373,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:17",{"_index":1375,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1367,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1368,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:9",{"_index":1369,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1411,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:12",{"_index":1419,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:13",{"_index":1418,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:14",{"_index":1415,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:15",{"_index":1417,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:16",{"_index":1416,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:2",{"_index":1414,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1485,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:104",{"_index":1495,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:122",{"_index":1493,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:134",{"_index":1504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":1517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:33",{"_index":1516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:36",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:45",{"_index":1512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:62",{"_index":1505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:72",{"_index":1507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":1498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1612,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":977,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1650,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1700,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1787,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1802,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1732,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:18",{"_index":1744,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:19",{"_index":1748,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1743,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1747,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1746,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1750,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1749,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1738,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:32",{"_index":1742,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1745,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:40",{"_index":1741,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:48",{"_index":1739,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:62",{"_index":1740,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1881,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1769,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1771,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1770,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1765,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1766,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1767,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1768,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.ts",{"_index":1796,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:11",{"_index":1798,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:13",{"_index":1801,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1797,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":1799,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:9",{"_index":1800,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":717,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":684,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":696,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate=new",{"_index":1119,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["started",{"_index":1921,"title":{"index.html":{}},"body":{}}],["state",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["store",{"_index":1072,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stored",{"_index":1041,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["stores",{"_index":1288,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/TransferDataService.html":{}}}],["string",{"_index":295,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["string?,array",{"_index":1150,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stroke",{"_index":949,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1794,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submission",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/RegisterComponent.html":{}}}],["submit",{"_index":444,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":780,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["successful",{"_index":1286,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["successfully",{"_index":1832,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["successmessage",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{}}}],["sucessfull",{"_index":1624,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1644,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["such",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{}}}],["support",{"_index":1959,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1960,"title":{},"body":{"modules.html":{}}}],["system",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["table",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":290,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["tap",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":112,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["team',component:teamcomponent",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team's",{"_index":856,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["team.component.css",{"_index":1733,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1734,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":443,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team/team.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":111,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1735,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":685,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":1518,"title":{"classes/teamList.html":{}},"body":{"components/RegisterComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1736,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamname:string",{"_index":1968,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":818,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":866,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":1096,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams",{"_index":417,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teams.service",{"_index":1103,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams:any",{"_index":1751,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teams:teamsservice",{"_index":1130,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teamsservice",{"_index":1027,"title":{"injectables/TeamsService.html":{}},"body":{"components/LandingPageComponent.html":{},"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":819,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":865,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility=true",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1949,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":1780,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["testserviceservice",{"_index":410,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":760,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":873,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":871,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":878,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":876,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":883,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":881,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._teams=data",{"_index":1136,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":300,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":993,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1002,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.signout",{"_index":1762,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":558,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":557,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":370,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":372,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":376,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":374,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":369,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":375,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":562,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":576,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":371,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":560,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":561,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":566,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":569,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":555,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":565,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1822,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":741,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.enddate=new",{"_index":1155,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.page=this.page.tostring",{"_index":1160,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.post.description",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1691,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.data.startdate=new",{"_index":1153,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(createproposalcomponent",{"_index":1185,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialog.open(shareproposalcomponent",{"_index":1176,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialogref.close",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.disable=false",{"_index":802,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.disable=true",{"_index":796,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.edate",{"_index":739,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":744,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.endmessage",{"_index":1162,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.error=\"email",{"_index":803,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":801,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errorhandling(error",{"_index":1138,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed",{"_index":1151,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed=this.feed.concat(this.newfeed",{"_index":1173,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":792,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1786,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getall",{"_index":1145,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallnextpost(this.data).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1168,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallposts(this.data).subscribe((data)=>this.feed=data,(error",{"_index":1137,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamnextpost(this.data,this.user.team.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1170,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamposts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error",{"_index":1142,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyournextpost(this.data,this.user.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1172,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyourposts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error",{"_index":1143,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteam",{"_index":1147,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteams",{"_index":1133,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getyour",{"_index":1149,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":579,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":568,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":567,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":1839,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1821,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1775,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgotpassword",{"_index":1678,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1836,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validatetoken",{"_index":1679,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1724,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1407,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1482,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1484,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1480,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1478,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1471,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1476,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1473,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1402,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1410,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/resetpassword",{"_index":1674,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":800,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":554,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginsuccess",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menuvisibility=false",{"_index":1191,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.menuvisibility=true",{"_index":1192,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.message",{"_index":745,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"this",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.morepost=true",{"_index":1161,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.msg=\"your",{"_index":1643,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":582,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":738,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":740,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newfeed",{"_index":1175,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.nocomments=false",{"_index":570,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":577,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.page",{"_index":1165,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page=0",{"_index":1159,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page==0)&&this.morepost",{"_index":1164,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":377,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":751,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1824,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.post.postproposal(result,this.user.id).subscribe",{"_index":1188,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.post.shareproposal(result,post.id).subscribe",{"_index":1182,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.prop",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":434,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalerror",{"_index":1189,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":559,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":578,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":581,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1727,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1825,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.res.message",{"_index":1729,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.res=res",{"_index":1725,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1631,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetlinkservice.resetlink(data).subscribe",{"_index":797,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1642,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.tokenverification(data).subscribe",{"_index":1635,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resize",{"_index":1134,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.responsedialog",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":302,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/welcome",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.sdate,this.newedate",{"_index":742,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selectapi(this.type",{"_index":1132,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.senddata(this.data",{"_index":749,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":750,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1688,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.share.emit(this.post",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.socialmedia",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.submitted",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.teamform",{"_index":1755,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1763,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1757,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.getteams().subscribe",{"_index":1135,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.teams=data",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1633,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.type=data",{"_index":1157,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.update.emit(post",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":553,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1684,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user.email",{"_index":1197,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.name",{"_index":1196,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.team.name",{"_index":1198,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user=this.autho.authorization",{"_index":1131,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.userdata",{"_index":1754,"title":{},"body":{"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1760,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1759,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1752,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1761,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":373,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.userservice.getteam().subscribe",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validtoken=false",{"_index":1638,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1636,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["those",{"_index":527,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["three",{"_index":506,"title":{},"body":{"components/FeedComponent.html":{}}}],["time",{"_index":498,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["timer",{"_index":1660,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["timing",{"_index":957,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":400,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1420,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1629,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["tokenverification",{"_index":1653,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tokenverification(data",{"_index":1667,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tools",{"_index":762,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["total",{"_index":502,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1721,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{}}}],["transferdataservice",{"_index":143,"title":{"injectables/TransferDataService.html":{}},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"overview.html":{}}}],["transferdataservice:transferdataservice",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":929,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":941,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["tslib",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":549,"title":{},"body":{"components/FeedComponent.html":{}}}],["type=\"teampost",{"_index":1113,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["typepost=\"teampost",{"_index":735,"title":{},"body":{"components/FilterComponent.html":{}}}],["types",{"_index":862,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["udata",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{}}}],["unique",{"_index":322,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["unit",{"_index":1948,"title":{},"body":{"index.html":{}}}],["unlike",{"_index":524,"title":{},"body":{"components/FeedComponent.html":{}}}],["up",{"_index":1272,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["update=new",{"_index":546,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":481,"title":{},"body":{"components/FeedComponent.html":{}}}],["updated",{"_index":1666,"title":{},"body":{"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{}}}],["updateform",{"_index":1686,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1379,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1397,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updation",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["uppercase",{"_index":1356,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["upvotes",{"_index":1374,"title":{},"body":{"classes/Post.html":{}}}],["upvotescount",{"_index":1365,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":466,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1773,"title":{},"body":{"injectables/TeamsService.html":{}}}],["urls",{"_index":454,"title":{},"body":{"components/ErrorComponent.html":{}}}],["use",{"_index":1940,"title":{},"body":{"index.html":{}}}],["used",{"_index":1657,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["user",{"_index":291,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["user:user",{"_index":1112,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["user_name_session_attribute_name",{"_index":1703,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":365,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":144,"title":{"injectables/UserLoginService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/UserLoginService.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":145,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["usevalue",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":767,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["validates",{"_index":1918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validating",{"_index":1669,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["validation",{"_index":1501,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validations",{"_index":715,"title":{},"body":{"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":786,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":794,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":793,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1784,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken:boolean",{"_index":1627,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":461,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1079,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["values:testserviceservice",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1277,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1080,"title":{"miscellaneous/variables.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":1658,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["verifies",{"_index":1717,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["version",{"_index":1926,"title":{},"body":{"index.html":{}}}],["via",{"_index":766,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/SocialMediaAuthService.html":{},"index.html":{}}}],["view",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["visibility",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["want",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["webkit",{"_index":936,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":387,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["welcome",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["whether",{"_index":403,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/UserRegisterService.html":{}}}],["white",{"_index":381,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["whitesmoke",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["widows",{"_index":1217,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width",{"_index":392,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:100",{"_index":1221,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:24",{"_index":1214,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:35",{"_index":450,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1648,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:70px",{"_index":1207,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:87",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["width:number",{"_index":1115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window",{"_index":1034,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1001,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1826,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["window.location.reload",{"_index":1184,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize",{"_index":1022,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize(event",{"_index":1032,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["write",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{}}}],["wrong",{"_index":465,"title":{},"body":{"components/ErrorComponent.html":{}}}],["x",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["yes",{"_index":688,"title":{},"body":{"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"classes/Proposal.html":{}}}],["yournexturl",{"_index":820,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":868,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":821,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":867,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["z0",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n    \n        Description\n    \n    \n        This is a dialog box component \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:26\n                \n            \n\n\n            \n                \n                    This method closes the Dialog Box on submission\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                        message to be displayed in the dialog box \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n/**This is a dialog box component */\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n\n  /**message to be displayed in the dialog box */\n  msg:any\n\n  /**@ignore */\n  islogin:boolean=true;\n\n  /**@constructor */\n  constructor(\n    /**@ignore */\n    public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data \n    }\n\n /** This method closes the Dialog Box on submission*/\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the parent component of the application \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**This is the parent component of the application */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nResetPasswordService\n\nResetPasswordService\n\nAppModule -->\n\nResetPasswordService->AppModule\n\n\n\n\n\nSocialMediaAuthService\n\nSocialMediaAuthService\n\nAppModule -->\n\nSocialMediaAuthService->AppModule\n\n\n\n\n\nTransferDataService\n\nTransferDataService\n\nAppModule -->\n\nTransferDataService->AppModule\n\n\n\n\n\nUserLoginService\n\nUserLoginService\n\nAppModule -->\n\nUserLoginService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            ResetPasswordService\n                        \n                        \n                            SocialMediaAuthService\n                        \n                        \n                            TransferDataService\n                        \n                        \n                            UserLoginService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SocialMediaAuthService } from './service/social-media-auth.service';\nimport { TransferDataService } from './service/transfer-data.service';\nimport { UserLoginService } from './service/user-login.service';\n\nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\n\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\nimport { ResetPasswordService } from './service/reset-password.service';\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    UserLoginService,\n    TransferDataService,\n    ResetPasswordService,\n    SocialMediaAuthService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n            \n                Description\n            \n            \n                AuthorizationService deals with the session \n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            like getting data from session and deleting session\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:19\n                \n            \n\n\n            \n                \n                    function returns the session data as object and if there is no session takes user to login page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:29\n                \n            \n\n\n            \n                \n                    this function destroys the session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:12\n                            \n                        \n\n                \n                    \n                        user object as a string\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n/** AuthorizationService deals with the session \n * @example\n * like getting data from session and deleting session\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  /**user object as a string*/\n  authenticatedUser:string\n  constructor(\n    /**@ignore */\n    private router:Router) { }\n  /**\n   * function returns the session data as object and if there is no session takes user to login page\n  */\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  /**\n   * this function destroys the session\n  */\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n            \n                Description\n            \n            \n                defines the comment object \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:9\n                            \n                        \n\n                \n                    \n                        define string type comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:11\n                            \n                        \n\n                \n                    \n                        define the date of creation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the comment (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:13\n                            \n                        \n\n                \n                    \n                        define user data that posted the comment\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        /**define id of the comment (unique) */\n        public id:number,\n        /**define string type comment*/\n        public comment:string,\n        /**define the date of creation*/\n        public creationDate:Date,\n        /**define user data that posted the comment*/\n        public user:{\n            /**define id of the user*/\n            id:number,\n            /**define name of the user */\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n    \n        Description\n    \n    \n        CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:32\n                            \n                        \n                \n                    \n                        UserId of the user from the current session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:38\n                            \n                        \n                \n                    \n                        This the emitter to the FeedComponent\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:46\n                \n            \n\n\n            \n                \n                    This method is resposible for the comment data to show on the Page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\n\nimport {Comment} from 'src/app/landing-page/comment'\n/**\n * CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  /**@ignore */\n  @Input() comment:Comment;\n\n  /**@ignore */\n  public commentId;\n\n  /**@ignore */\n  public userName;\n\n  /**@ignore */\n  public commentData;\n\n  /**@ignore */\n  public commentedUserId:number;\n\n  /** UserId of the user from the current session \n   * @example\n   * Input from the FeedComponent\n   */\n  @Input() userId:number;\n\n  /** \n   * This the emitter to the FeedComponent\n   */\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n \n  /**@ignore */\n  constructor() { }\n\n  /**\n   * This method is resposible for the comment data to show on the Page.\n   */\n  ngOnInit(): void {\n\n     console.log(this.comment)\n\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n\n  }\n  /**\n   * This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n   */\n  deleteComment()\n  {\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n\n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:41\n                            \n                        \n\n                \n                    \n                        This is the description of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:38\n                            \n                        \n\n                \n                    \n                        This is the Title of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:23\n                            \n                        \n\n                \n                    \n                        This is the Id of user from Current Session.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n/**\n * This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n */\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n\n  /**@ignore */\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n  /** This is the Id of user from Current Session.*/\n  userId:string\n\n  /**@ignore */\n  teamVisibility=true\n\n  /**@ignore */\n  dialogTitle:string=\"Create Proposal\"\n\n  /**@ignore */\n  id:number=null\n\n  /**@ignore */\n  values:TestServiceService;\n\n  /** This is the Title of proposal*/\n  public tit \n\n  /**This is the description of proposal*/\n  public descrip\n\n  /**@ignore */\n  public prop\n\n  /**This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal */\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        This component is responsible to handle incorrect URLs enetered by the user \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                        message to be displayed in case of wrong url entered \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**This component is responsible to handle incorrect URLs enetered by the user */\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  /**message to be displayed in case of wrong url entered */\n  errorMessage = \"Some Error Occured\"\n\n  /**@ignore */\n  constructor() { }\n\n  /**@ignore */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n    \n        Description\n    \n    \n        This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor of the FeedComponent \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the ProposalService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:61\n                            \n                        \n                \n                    \n                        Input from the current Session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:58\n                            \n                        \n                \n                    \n                        EventEmitter for the delete button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:55\n                            \n                        \n                \n                    \n                        EventEmitter for the Share button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:52\n                            \n                        \n                \n                    \n                        EventEmitter for the Update button on the Proposals \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:99\n                \n            \n\n\n            \n                \n                    This method is Resposible for the arrangement of the comments as per a particular manner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:234\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the proposal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:133\n                \n            \n\n\n            \n                \n                    This method checks total number of like on a post and whether a user with current session has liked it or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:80\n                \n            \n\n\n            \n                \n                    calls three methods in the same component on intialization -\nupdateApproval(),   likeSetup(),     commentsSetup()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:221\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the comment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is the id of the comment which user wants to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:213\n                \n            \n\n\n            \n                \n                    This method emits the proposal which a user want to update and open a update dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is an object of a proposal\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:206\n                \n            \n\n\n            \n                \n                    This method emits the Post to which user want to open a share dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:146\n                \n            \n\n\n            \n                \n                    This method is resposible for posting a comment on a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is proposalId of the proposal to which a user want to post a comment.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:173\n                \n            \n\n\n            \n                \n                    This method is resposible for the feature of liking a Proposal and Unlike feature too.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:89\n                \n            \n\n\n            \n                \n                    This method checks whether user can Update a particular proposal or not.A user can those Proposal \nthat are created by a user not others.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:74\n                            \n                        \n\n                \n                    \n                        Instance of the ProposalService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n/**\n * This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  /**@ignore */\n  @Input() post:Post;\n\n  /**@ignore */\n  public new_comment:string;\n\n  /**@ignore */\n  public canUpdate=false;\n\n  /**@ignore */\n  public numberLikes:number;\n\n  /**@ignore */\n  public comments:Comment[]=[];\n\n  /**@ignore */\n  public noComments:boolean=true;\n\n  /**@ignore */\n  public height:number;\n\n  /**@ignore */\n  public commentVisibility=false;\n\n  /**@ignore */\n  public commentsMessage=\"Comments\";\n\n  /**@ignore */\n  commentError:string;\n\n  /**@ignore */\n  postCommentError:string;\n\n  /** EventEmitter for the Update button on the Proposals */\n  @Output() update=new EventEmitter;\n\n  /**EventEmitter for the Share button on the Proposals */\n  @Output() share=new EventEmitter;\n\n  /**EventEmitter for the delete button on the Proposals */\n  @Output() deleteProposal=new EventEmitter;\n\n  /**Input from the current Session */\n  @Input() userId:number;\n\n  /**@ignore */\n  @Input() type:string;\n\n  /**@ignore */\n  public hasLiked=false;\n\n  /**\n   * Constructor of the FeedComponent \n   * @constructor\n   * @param proposalWork Instance of the ProposalService\n   */\n  constructor(public proposalWork:ProposalService) { }\n\n  /** \n   * calls three methods in the same component on intialization -\n   * updateApproval(),   likeSetup(),     commentsSetup()\n  */\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n  /**This method checks whether user can Update a particular proposal or not.A user can those Proposal \n   * that are created by a user not others.\n  */\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n  /**This method is Resposible for the arrangement of the comments as per a particular manner.\n  */\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n  /**This method checks total number of like on a post and whether a user with current session has liked it or not\n  */\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  /**\n   * This method is resposible for posting a comment on a post\n   * @param {number} id This is proposalId of the proposal to which a user want to post a comment.\n   */\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          alert(\"Some error has occured sending the comment please try again.\")\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n/**\n * This method is resposible for the feature of liking a Proposal and Unlike feature too.\n */\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n  /**\n   * This method emits the Post to which user want to open a share dialog.\n   */\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n  /**\n   * This method emits the proposal which a user want to update and open a update dialog\n   * @param {object} post this is an object of a proposal\n   */\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the comment.\n   * @param {number} commentId this is the id of the comment which user wants to delete.\n   */\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the proposal.\n   */\n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n\n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n    font-weight: bold;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n            \n                Description\n            \n            \n                this is the feed Params class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:11\n                            \n                        \n\n                \n                    \n                        endDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n                \n                    \n                        startDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:23\n                            \n                        \n\n                \n                    \n                        This is the teamId of the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:20\n                            \n                        \n\n                \n                    \n                        This is the userId from Current session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    /**\n     * @constructor\n     */\n    constructor(\n    /** startDate of the advanced filter*/\n    public startDate:Date,\n\n    /** endDate of the advanced filter*/\n    public endDate:Date,\n\n    /** @ignore */\n    public page:string,\n\n    /** @ignore */\n    public size:string,\n\n    /** This is the userId from Current session */\n    public userId?,\n\n    /**This is the teamId of the user */\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n    \n        Description\n    \n    \n        FilterComponent is the child component of the landing-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:51\n                            \n                        \n                \n                    \n                        This is the EventEmitter emits to Landing-page\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:73\n                \n            \n\n\n            \n                \n                    This function is resposible for adding a day to a end Date user selected\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:82\n                \n            \n\n\n            \n                \n                    This function is resposible for the Validations applied on the start date and end date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:105\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this function send the data to sendDate method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:114\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this method emit the information to the landing-page\nand landing-page calls the api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n  \n/**\n * FilterComponent is the child component of the landing-page.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\n\nexport class FilterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  @Input()\n  public sDate\n\n  /**\n   * @ignore\n   */\n  public newEdate\n\n  /**\n   * @ignore\n   */\n  public eDate\n\n  /**\n   * @ignore\n   */\n  public data:Date[]\n\n  /**\n   * @ignore\n   */\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n  /**\n   * This is the EventEmitter emits to Landing-page\n   */\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n\n /**\n   * @ignore\n   */ \n public message;\n  /**\n   * @ignore\n   */ \n  constructor() { \n  \n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  \n  }\n\n  /**\n   * This function is resposible for adding a day to a end Date user selected\n   */\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n\n  /**\n   * This function is resposible for the Validations applied on the start date and end date.\n   */\n  processFilter()\n  { \n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  /**\n   * As user changed the seletion on the select post this function send the data to sendDate method.\n   */\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n  /**\n   * As user changed the seletion on the select post this method emit the information to the landing-page\n   * and landing-page calls the api\n   */\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n    \n        Description\n    \n    \n        This component enables user to reset password via valid email id \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:37\n                \n            \n\n\n            \n                \n                    This method creates a form with a input field to enter email of user \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:46\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ResetPasswordService } from './../service/reset-password.service';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n/**This component enables user to reset password via valid email id */\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\nexport class ForgetPasswordComponent implements OnInit {\n\n/**@ignore */\nforgetPasswordForm:FormGroup;\n\n/**@ignore */\ndata: string;\n\n/**@ignore */\nerror: string;\n\n/**@ignore */\nisSubmit : boolean=true;\n\n/**@ignore */\ndisable:boolean =false\n\n  /**@ignore */\n  constructor(\n    /**@ignore */\n    private resetLinkService: ResetPasswordService) {\n   \n   }\n\n   /**This method creates a form with a input field to enter email of user */\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n    });\n    \n  }\n/**\n * This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n */\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.disable=true\n    this.resetLinkService.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n         \n        \n       },\n       (error)=>{\n        if(error.status==200){\n          this.error=\"Reset link has been send to your email.\"\n          \n          \n        }\n        else if(error.status==406){\n          this.disable=false\n          this.error=\"Email id doesnot exists. Please try again!\"\n        }\n        else{\n          this.disable=false\n          alert(\"Some error has occured! please try again later.\")\n        }\n       }\n     );\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit  '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n            \n                Description\n            \n            \n                handles all type of feed api's\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:46\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts includes pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:37\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:67\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:55\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:89\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:77\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get created type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:19\n                            \n                        \n\n                \n                    \n                        get all posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:17\n                            \n                        \n\n                \n                    \n                        get all posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:23\n                            \n                        \n\n                \n                    \n                        get team's posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:21\n                            \n                        \n\n                \n                    \n                        get team's posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                        get created type posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:25\n                            \n                        \n\n                \n                    \n                        get created type posts url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n/**\n * handles all type of feed api's\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Proposal to get different types of posts\n*/\nexport class GetProposalsService {\n  /**get all posts url*/\n  allUrl=\"http://localhost:8080/feed/all\"\n  /**get all posts url include pagination*/\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  /**get team's posts url*/\n  teamUrl=\"http://localhost:8080/feed/team\"\n  /**get team's posts url include pagination*/\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  /**get created type posts url*/\n  yourUrl=\"http://localhost:8080/feed/create\"\n  /**get created type posts url include pagination*/\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(\n    /**@ignore*/\n    private _http:HttpClient) { }\n  /**\n   * This function makes a post api call to get all posts\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  /**\n   * This function makes a post api call to get all posts includes pagination\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get team type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get created type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the home page of application \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:13\n                            \n                        \n\n                \n                    \n                        Flag which is set true when user clicks on login button \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                        Flag which is set true when user clicks on register button\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n/**This component is the home page of application */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  /**Flag which is set true when user clicks on login button */\n  public islogin:boolean;\n\n  /** Flag which is set true when user clicks on register button*/\n  public isregister:boolean;\n\n  /**@ignore */\n  constructor(\n    /**@ignore */\n    private activatedRoute:ActivatedRoute) { }\n\n  /**@ignore */\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    } \n  }\n  \n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                                             ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object UserLoginService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    /**@constructor\n   * @param authenticationService This is the instance of object UserLoginService\n  */\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n    \n        Description\n    \n    \n        Landing page parent to feed, and filter components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _teams\n                            \n                            \n                                    Public\n                                autho\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                feed\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                destroySession\n                            \n                            \n                                errorHandling\n                            \n                            \n                                getAll\n                            \n                            \n                                getTeam\n                            \n                            \n                                getTeams\n                            \n                            \n                                getYour\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                onScroll\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                resize\n                            \n                            \n                                selectApi\n                            \n                            \n                                showMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: SocialAuthService, autho: AuthorizationService, router: Router, post: PostProposalService, dialog: MatDialog, getProposals: GetProposalsService, teams: TeamsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autho\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        post\n                                                  \n                                                        \n                                                                        PostProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getProposals\n                                                  \n                                                        \n                                                                        GetProposalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                        TeamsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:292\n                \n            \n\n\n            \n                \n                    window resize evenr handled\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProposal(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:333\n                \n            \n\n\n            \n                \n                    This method deletes a proposal in real time by removing it from the array stored on frontend and also sending an api call to backend at the same time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            deleteProposal(1)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroySession\n                        \n                        \n                    \n                \n            \n            \n                \ndestroySession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:317\n                \n            \n\n\n            \n                \n                    This method destroys a session when called\n\n\n                    \n                        Example :\n                        \n                            destroySession()\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns to Home page of the application after destroying session\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorHandling\n                        \n                        \n                    \n                \n            \n            \n                \nerrorHandling(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:301\n                \n            \n\n\n            \n                \n                    This method handles the error that is recieved during scrolling api calls\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:99\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:111\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:88\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to Team posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYour\n                        \n                        \n                    \n                \n            \n            \n                \ngetYour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:123\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:78\n                \n            \n\n\n            \n                \n                    gets the session data and calls functions to setup the initial view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilter\n                        \n                        \n                    \n                \n            \n            \n                \nonFilter(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:154\n                \n            \n\n\n            \n                \n                    This method is called when filter components sends a data to filter feed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls select api function to select which feed api to call or changes the date to filter api feed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:175\n                \n            \n\n\n            \n                \n                    This method runs when a scroll event is emitted\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        returns new 3 proposals every time scroll event is emitted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:223\n                \n            \n\n\n            \n                \n                    This method opens a Create proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to store proposal and refreshs the page\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:199\n                \n            \n\n\n            \n                \n                    This method opens a Share proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to update teams of a proposal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:271\n                \n            \n\n\n            \n                \n                    This method is called by OnResize() and sets values of different variables that controls the padding and width\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectApi\n                        \n                        \n                    \n                \n            \n            \n                \nselectApi(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:137\n                \n            \n\n\n            \n                \n                    This method filters the api calls on the basis of which type is selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls different service methods to call different post api's\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMenu\n                        \n                        \n                    \n                \n            \n            \n                \nshowMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:259\n                \n            \n\n\n            \n                \n                    This method checks the responsive filter menu is open or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Teams[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:35\n                            \n                        \n\n                \n                    \n                        teams array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autho\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        session generation and deletion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:37\n                            \n                        \n\n                \n                    \n                        feed array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PostProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:69\n                            \n                        \n\n                \n                    \n                        posts proposal and update proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:45\n                            \n                        \n\n                \n                    \n                        type of feed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:43\n                            \n                        \n\n                \n                    \n                        User session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FilterComponent } from './filter/filter.component';\nimport { FeedComponent } from './feed/feed.component';\n\nimport { SocialAuthService } from 'angularx-social-login';\nimport { Component, OnInit ,HostListener, NgModule} from '@angular/core';\nimport { GetProposalsService } from '../get-proposals.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { CreateProposalComponent } from './create-proposal/create-proposal.component';\nimport { ShareProposalComponent } from './feed/share-proposal/share-proposal.component';\nimport {PostProposalService} from 'src/app/post-proposal.service'\nimport { FeedParams } from '../feed-params';\nimport {TeamsService} from '../teams.service'\nimport {Teams} from '../teams'\nimport {Router} from '@angular/router'\nimport {User} from '../user';\nimport {AuthorizationService} from '../authorization.service';\n/**Landing page parent to feed, and filter components*/\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css'],\n \n})\n\nexport class LandingPageComponent implements OnInit {\n/**@ignore */\n  message=null;\n  /**@ignore */\n  menuVisibility=true;\n  /**@ignore */\n  menuButton=false;\n  /**@ignore */\n  innerWidth;\n  /**teams array */\n  _teams:Teams[];\n  /**feed array */\n  feed=[];\n  /**@ignore */\n  newFeed=[];\n  /**@ignore */\n  proposalError:string;\n  /**User session */\n  user:User;\n  /**type of feed */\n  type=\"teamPost\";\n  /**@ignore */\n  page=0;\n  /**@ignore */\n  width:number;\n  /**@ignore */\n  padding:number;\n  /**@ignore */\n  endMessage=\"\";\n  /**@ignore */\n  morePost=true;\n  /**@ignore */\n  startDate=new Date()\n  /**@ignore */\n  data=new FeedParams(new Date(this.startDate.setDate(this.startDate.getDate()-30)),new Date(),\"0\",\"3\")\n  \n  constructor(\n    /**@ignore */\n    private authService: SocialAuthService,\n    /**session generation and deletion*/\n    public autho:AuthorizationService,\n    /**@ignore */\n    public router:Router,\n    /**posts proposal and update proposal*/\n    public post:PostProposalService,\n    /**@ignore */\n    public dialog:MatDialog,\n    /**gets all the posts from the backend*/\n    private getProposals:GetProposalsService,\n    /**teams objects api call*/\n    private teams:TeamsService) { }\n    \n/**gets the session data and calls functions to setup the initial view*/\n  ngOnInit(): void {\n    this.user=this.autho.authorization()\n    this.selectApi(this.type)\n    this.getTeams()\n    this.resize()\n  }\n\n/**\n  * This method calls a service method that is an api call to Team posts\n  */ \n  getTeams(){\n    this.teams.getTeams().subscribe(\n      (data)=>{\n        this._teams=data\n      }\n    );\n  }\n\n  /**\n  * This method calls a service method that is an api call to all posts\n  */ \n  getAll(){\n    this.getProposals.getAllPosts(this.data).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200 && error.status!=406){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n/**\n * This method calls a service method that is an api call to all created posts\n */ \n  getTeam(){\n    this.getProposals.getTeamPosts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200 && error.status!=406){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method calls a service method that is an api call to all created posts\n */ \n  getYour(){\n    this.getProposals.getYourPosts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200 && error.status!=406){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method filters the api calls on the basis of which type is selected\n * @param {string}\n * @returns Calls different service methods to call different post api's\n */ \n  selectApi(data){\n    if(data===\"allPost\"){\n      this.getAll()\n    }\n    else if(data===\"teamPost\"){\n      this.getTeam()\n    }\n    else if(data===\"yourPost\"){\n      this.getYour()\n    }\n  }\n\n  /**\n * This method is called when filter components sends a data to filter feed\n * @param {string?,array?}\n * @returns Calls select api function to select which feed api to call or changes the date to filter api feed\n */ \n  onFilter(data){\n    this.feed=[]\n    if(Array.isArray(data)){\n      this.data.startDate=new Date(data[0])\n      this.data.endDate=new Date(data[1])\n    }\n    else{\n      this.type=data;\n      console.log(this.type)\n    }\n    this.page=0\n    this.data.page=this.page.toString()\n    this.selectApi(this.type)\n    this.morePost=true\n    this.endMessage=\"\"\n  }\n\n  /**\n * This method runs when a scroll event is emitted\n * @returns returns new 3 proposals every time scroll event is emitted\n */ \n  onScroll(){\n    if((this.newFeed.length>0 || this.page==0)&&this.morePost){\n      this.page++\n      this.data.page=this.page.toString()\n      console.log(this.data)\n      if(this.type.includes(\"allPost\")){\n        this.getProposals.getAllNextPost(this.data).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"teamPost\")){\n        this.getProposals.getTeamNextPost(this.data,this.user.team.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"yourPost\")){\n        this.getProposals.getYourNextPost(this.data,this.user.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }      \n      this.feed=this.feed.concat(this.newFeed)\n      console.log(this.newFeed)\n      this.newFeed=[]\n    }\n  }\n\n/**\n * This method opens a Share proposal dialog\n * @returns After closing calls an api to update teams of a proposal\n */ \n  openDialogshare(post){\n    let dialogRef = this.dialog.open(ShareProposalComponent, {\n      height: '250px',\n      width: '400px',\n      data:{prop:post.teams,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result =>{\n      if(result){\n        this.post.shareProposal(result,post.id).subscribe(\n          (data)=>console.log(data),\n          (error)=>{\n            if(error.status==200){\n              window.location.reload()\n            }\n          })\n      }\n    })\n\n  }\n\n/**\n * This method opens a Create proposal dialog\n * @returns After closing calls an api to store proposal and refreshs the page\n */ \n  openDialog(post?){\n    let dialogRef = this.dialog.open(CreateProposalComponent, {\n      height: '400px',\n      width: '600px',\n      data:{name:this.user.id,post:post,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.post.postProposal(result,this.user.id).subscribe(\n          (data)=>{\n            this.selectApi(this.type)\n            this.page=0\n            this.data.page=this.page.toString()\n            window.location.reload()\n            this.proposalError=\"\"\n          },\n          (error)=>{\n            if(error.status==200){\n              this.selectApi(this.type)\n              this.page=0\n              this.data.page=this.page.toString()\n              window.location.reload()\n              this.proposalError=\"\"\n            }\n            else{\n              alert(\"Some error has occured! please try again later.\")\n            }\n          }\n        ) \n      }\n    });\n  }\n  \n/**\n * This method checks the responsive filter menu is open or not\n */\n  showMenu(){\n    if(this.menuVisibility){\n      this.menuVisibility=false\n    }\n    else{\n      this.menuVisibility=true\n    }\n  }\n  \n  /**\n * This method is called by OnResize() and sets values of different variables that controls the padding and width\n */\n  resize(){\n    if(this.innerWidth item.id != id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n        \n        \n        \n        \n            person\n        \n        \n            Hello, {{this.user.name}}\n            Email : {{this.user.email}}\n            Team  : {{this.user.team.name}}\n            Logout\n        \n    \n    \n        \n        \n            \n                \n            \n            \n                \n                    \n                         how_to_vote&nbsp;\n                        Propose an improvement...\n                    \n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                    {{this.endMessage}}\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .contain{\n    overflow-x: hidden;\n    width: 100%;\n    ;\n}\n.endMessage{\n    font-size: 15px;\n    text-align: center;\n    color: black;\n}\n.header{\n    height:60px;\n    margin-bottom: 1em;\n    position: fixed;\n    z-index: 1000;\n}\n.menu{\n    opacity:20%;\n    width:70px;\n}\n.search-results {\n    height: 100%;\n}\n.space{\n    flex:1 1 auto;\n}\n.non-scroll{\n    overflow-y: hidden;\n    height: 500px;\n    display:none;\n    position:fixed;\n    z-index: 1000;\n}\n\n\n.filter{\n    background-color: white; \n    position:fixed;\n    width:24%;\n    z-index: 300;\n    height: 100%;\n}\n.scrollable{\n    widows: 50%;\n    height:500px;\n}\n.feed{\n    margin-right: 2%;\n    background-color: white;\n    z-index: 200;\n}\n.postButton{\n    width:100%;\n    height:55px;\n    margin-bottom:1%;\n    font-weight: 400;\n    font-size: 20px;\n    border-radius: 50px;\n    padding-left:5%;\n    text-align: left;\n    color:#8b8a8a;\n    background-color: rgb(236, 236, 236);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                                            person                            Hello, {{this.user.name}}            Email : {{this.user.email}}            Team  : {{this.user.team.name}}            Logout                                                                                                                                                 how_to_vote                         Propose an improvement...                                                                                                                                                                                                            {{this.endMessage}}                                        '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        This component enables user to login to application \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                socialData\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:66\n                            \n                        \n\n                \n                    \n                            Creates a login form with email amd password fields \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:99\n                \n            \n\n\n            \n                \n                    You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:138\n                \n            \n\n\n            \n                \n                    This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:169\n                \n            \n\n\n            \n                \n                    This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:114\n                \n            \n\n\n            \n                \n                    This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n                \n                    \n                        message to be displayed for invalid credentials \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        This variable set true when user enters valid login credentials \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:63\n                            \n                        \n\n                \n                    \n                        Flag to check if user has logged in earlier via social media\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                        instance of login form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n                \n                    \n                        This variable is set true on successful login \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n                \n                    \n                        this variable stores user data when loggedin via social media \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:53\n                            \n                        \n\n                \n                    \n                        This variable stores user data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\n// export interface DialogData {\n//   email: string; \n// }\n\n\n// export class MyErrorStateMatcher implements ErrorStateMatcher {\n//   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n//     const isSubmitted = form && form.submitted;\n//     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n//   }\n// }\n\n/**This component enables user to login to application */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  // check:boolean=false\n  // email:string;\n  /**instance of login form */\n  loginForm: FormGroup;\n\n  /**This variable set true when user enters valid login credentials */\n  invalidLogin = false\n\n  /**This variable is set true on successful login */\n  loginSuccess=false;\n\n\n  // successMessage: string;\n\n  /**message to be displayed for invalid credentials */\n  errorMessage = \"Invalid Credentials\"\n\n  /**This variable stores user data */\n  userData;\n\n  /**this variable stores user data when loggedin via social media */\n  socialData;\n  // uData\n\n  /**@ignore */\n  private user: SocialUser;\n\n  /**Flag to check if user has logged in earlier via social media*/\n  private loggedIn: boolean;\n\n  /**@ignore */\n  public res\n\n  /**Creates a login form with email amd password fields */\n  constructor(\n    /**@ignore */\n    private router: Router,\n    /**@ignore */\n    private transferDataService:TransferDataService,\n    /**@ignore */\n   private socialMediaAuth:SocialMediaAuthService,\n   /**@ignore */\n    public dialog: MatDialog,\n    /**@ignore */\n    public loginService:UserLoginService,\n    /**@ignore */\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  /**@ignore */\n  // matcher = new MyErrorStateMatcher()\n\n  /**@ignore */\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          // this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              // this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n    });\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n                \n                  Password is required\n                \n                \n              \n              \n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                  Password is required                                                                                                    Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n    \n        Description\n    \n    \n        This component displays the  required specifications for the password field \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**This component displays the  required specifications for the password field */\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  /**@ignore */\n  constructor() { }\n\n  /**@ignore */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n            \n                Description\n            \n            \n                The object type of a post that is created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n                \n                    \n                        define description of a post (string)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:9\n                            \n                        \n\n                \n                    \n                        define id of the post (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:11\n                            \n                        \n\n                \n                    \n                        define teams array that its shared to \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:13\n                            \n                        \n\n                \n                    \n                        define title of the post (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:15\n                            \n                        \n\n                \n                    \n                        define number of upvotes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:17\n                            \n                        \n\n                \n                    \n                        define the user data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        /**define description of a post (string)*/\n        public description: string,\n        /**define id of the post (unique) */\n        public id: number,\n        /**define teams array that its shared to */\n        public teams:[],\n        /**define title of the post (string) */\n        public title: string,\n        /**define number of upvotes */\n        public upvotesCount: number,\n        /**define the user data */\n        public user: {\n            /**define id of the user (unique) */\n            id: number,\n            /**define name of the user */\n            name: string,\n            /**define email of the user */\n            email: string,\n            /**define team the user is in */\n            teams:{\n                /**define id of the team (unique) */\n                id:number,\n                /**define name of the team (string) */\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is the post-proposal service \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:39\n                \n            \n\n\n            \n                \n                    calls a post api to create proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable is returned of type void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:29\n                \n            \n\n\n            \n                \n                    share proposal calls a post api to share proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable is returned \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:15\n                            \n                        \n\n                \n                    \n                        a url to create proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:19\n                            \n                        \n\n                \n                    \n                        url to share proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        url to update proposal api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n/** This is the post-proposal service */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  /**@ignore */\n  public sentTeams:{}[]\n  /**\n   * a url to create proposal api\n  */\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  /**url to update proposal api*/\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  /**url to share proposal api*/\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  constructor(\n    /**@ignore */\n    private http:HttpClient) { }\n  /**\n   * share proposal calls a post api to share proposal api\n   * @param {objects of teams}\n   * @param {number}\n   * @returns an observable is returned \n  */\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  /**\n   * calls a post api to create proposal api\n   * @param {objects of post}\n   * @param {number}\n   * @returns an observable is returned of type void\n  */\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n            \n                Description\n            \n            \n                This is a proposal class resposible for handling proposal data \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:2\n                            \n                        \n\n                \n                    \n                            this is the constructor of proposal class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the UserId from session.\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the title of the Proposal.\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the description of the Proposal.\n\n                                                        \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the array of teams to which it shared.\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                This is the Proposal id. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:14\n                            \n                        \n\n                \n                    \n                        This is the description of the Proposal.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:16\n                            \n                        \n\n                \n                    \n                        This is the Proposal id. \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:15\n                            \n                        \n\n                \n                    \n                        This is the array of teams to which it shared.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:13\n                            \n                        \n\n                \n                    \n                        This is the title of the Proposal.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:12\n                            \n                        \n\n                \n                    \n                        This is the UserId from session.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    /**\n     * this is the constructor of proposal class\n     * @param userId This is the UserId from session.\n     * @param title This is the title of the Proposal.\n     * @param description This is the description of the Proposal.\n     * @param teams This is the array of teams to which it shared.\n     * @param {number} id This is the Proposal id. \n     */\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is Proposal Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:89\n                \n            \n\n\n            \n                \n                    This is the method for deleting a comment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:98\n                \n            \n\n\n            \n                \n                    This is the method for deleting a proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:81\n                \n            \n\n\n            \n                \n                    This is the method for getting all comments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:73\n                \n            \n\n\n            \n                \n                    This is the method for checking whether a user liked a post or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:45\n                \n            \n\n\n            \n                \n                    This is the method for posting a comment to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the comment user wants to post.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:63\n                \n            \n\n\n            \n                \n                    This is the method for posting a dislike to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:54\n                \n            \n\n\n            \n                \n                    This is the method for posting a like to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:29\n                            \n                        \n\n                \n                    \n                        Url for deleting comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                        Url for deleting a proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url for getting all comments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:26\n                            \n                        \n\n                \n                    \n                        Url for checking user has upvoted or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        Url for adding Comment \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:23\n                            \n                        \n\n                \n                    \n                        Url for Posting disLike\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:20\n                            \n                        \n\n                \n                    \n                        Url for Posting Like\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n/**\n * This is Proposal Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n\n  /**Url for adding Comment */\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n\n  /**Url for getting all comments*/\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n\n  /**Url for Posting Like*/\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n\n  /**Url for Posting disLike*/\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n\n  /**Url for checking user has upvoted or not*/\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n\n  /**Url for deleting comment*/\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n\n  /**Url for deleting a proposal*/\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http:HttpClient) { }\n\n  /**This is the method for posting a comment to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {string} new_comment This is the comment user wants to post.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n\n  /**This is the method for posting a like to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for posting a dislike to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n\n  /**This is the method for checking whether a user liked a post or not.\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for getting all comments\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a comment\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a proposal\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        This component enables user to register to the application \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                registerForm\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getTeams\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:122\n                \n            \n\n\n            \n                \n                    This method returns error message based on email field validations.\n\n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:104\n                \n            \n\n\n            \n                \n                    This Method calls the Get Team Service to fetch the list of teams currently in the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:85\n                \n            \n\n\n            \n                \n                    Creates a registration form with creatain validation checks.\nInitializes a array of existing teams in the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:134\n                \n            \n\n\n            \n                \n                    This method calls the User Register Service to send data to register a user into the system.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:62\n                \n            \n\n\n            \n                \n                    This method opens dialog box displaying required specifications for the password field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:72\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the details, showing the response saying if the registraion was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:45\n                            \n                        \n\n                \n                    \n                        List of filtered teams while searching \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n                \n                    \n                        This variable stores instance of registration form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:33\n                            \n                        \n\n                \n                    \n                        This variable stores the team selected by user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n                \n                    \n                        This variable is set true on successful submission of registration form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:36\n                            \n                        \n\n                \n                    \n                        Array of all existing teams in database \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog} from '@angular/material/dialog';\n\n/**This component enables user to register to the application */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  /**@ignore */\n  message: any;\n\n  /**This variable stores instance of registration form */\n  registerForm: FormGroup;\n\n  /**@ignore */\n  loading = false;\n\n  /**This variable is set true on successful submission of registration form */\n  submitted = false;\n\n  /**This variable stores the team selected by user */\n  selectedTeam: string='';\n\n  /**Array of all existing teams in database */\n  teams:teamList[]\n\n  /**@ignore */\n  hide=true\n\n  /**@ignore */\n  hide1=true\n  \n  /**List of filtered teams while searching */\n  public filteredTeams;\n\n /**@ignore */\n  constructor(\n    /**@ignore */\n    private formBuilder: FormBuilder,\n    /**@ignore */\n    public dialog: MatDialog,\n    /**@ignore */\n    private userService: UserRegisterService,\n    /**@ignore */\n    public router: Router,\n  ) { }\n\n/**\n * This method opens dialog box displaying required specifications for the password field.\n */\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n/**\n * This Method opens a Dialog Box, after you submit the details, showing the response saying if the registraion was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n/**\n * Creates a registration form with creatain validation checks.\n * \n * Initializes a array of existing teams in the database.\n */\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n\n  this.getTeams();\n  }\n\n/**\n * This Method calls the Get Team Service to fetch the list of teams currently in the database.\n */\n  getTeams(){\n    this.userService.getTeam().subscribe(\n      (data)=> {this.teams=data\n        this.filteredTeams=this.teams.slice();\n      },\n      (error)=>{\n       if(error.status==404){\n        this.filteredTeams=this.teams.slice();\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      }); \n  }\n  \n  /**\n   * This method returns error message based on email field validations.\n   */\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n/**\n * This method calls the User Register Service to send data to register a user into the system.\n */\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":{\n          \"name\":this.registerForm.value.team}\n      ,\"user\":{\n        \"name\": this.registerForm.value.userName,\n        \"email\": this.registerForm.value.email,\n        \"password\" :this.registerForm.value.password}\n      }\n\n    }\n\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n        },\n        (error)=>{\n          if(error.status==200){\n            console.log(error.status)\n            this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n         \n          }\n          else if(error.status==302){\n            this.message=\"This email Id already exists, Please try again!\"\n            this.responseDialog()\n            this.loading=false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n}\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n    \n        Description\n    \n    \n        This component enables user to reset password \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:48\n                \n            \n\n\n            \n                \n                    This method creates a form for password reset \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:102\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:93\n                \n            \n\n\n            \n                \n                    This method opens a dialog box displaying required specifications for the password field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:85\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:25\n                            \n                        \n\n                \n                    \n                        Message to be displayed on successful password reset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n                \n                    \n                        This variable stores instance of reset password form \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n/**This component enables user to reset password */\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  /**This variable stores instance of reset password form */\n  resetLinkForm: FormGroup\n\n  /**@ignore */\n  validToken:boolean;\n\n  /**Message to be displayed on successful password reset */\n  msg:string=\"reset sucessfull!\"\n\n  /**@ignore */\n  token\n\n  /**@ignore */\n  hide=true;\n\n  /**@ignore */\n  hide1=true;\n  \n/**@ignore */\n  constructor(\n    /**@ignore */\n    public dialog: MatDialog,\n    /**@ignore */\n    private activatedRoute:ActivatedRoute,\n    /**@ignore */\n    private resetPassword: ResetPasswordService,\n    /**@ignore */\n    private formBuilder: FormBuilder,) { }\n\n  /**This method creates a form for password reset */\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.resetPassword.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n        if(error.status==202){\n          this.validToken=true;\n        }\n        else if(error.status==406){\n          this.validToken=false;\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      \n       }\n     );\n    \n  }\n/**\n * This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n/** This method opens a dialog box displaying required specifications for the password field.*/\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n/** \n * This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n*/\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is responsible for reset password \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                            \n                                resetPassword\n                            \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:31\n                \n            \n\n\n            \n                \n                    This method is used for verification of valid email id entered by the user, \ngeneration of the token link and setting up the timer for the same.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email registered email of the user who wants to reset the password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:21\n                \n            \n\n\n            \n                \n                    This method helps in fetching the token from the database and sends an error if token is not present in the database.\nstores the updated password in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new password entered by the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:40\n                \n            \n\n\n            \n                \n                    This method helps in validating the token whether the session is in continuation or expired \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the token \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:13\n                            \n                        \n\n                \n                    \n                        This is the instance of object HttpClient\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/**This service is responsible for reset password */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(public http: HttpClient) { }\n\n  /**\n   * This method helps in fetching the token from the database and sends an error if token is not present in the database.\n\t * stores the updated password in the database\n\t * @param data new password entered by the user\n   */\n \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/resetPassword\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n /**\n   * This method is used for verification of valid email id entered by the user, \n\t * generation of the token link and setting up the timer for the same.\n   * @param data email registered email of the user who wants to reset the password.\n   */\nresetLink(data){\n  console.log(\"inside forgetPassword\")\n  return this.http.post(\"http://localhost:8080/forgotPassword\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n/**\n * This method helps in validating the token whether the session is in continuation or expired \n * @param data Id of the token \n */\ntokenVerification(data){\n  console.log(\"inside tokenVerification\")\n  return this.http.post(\"http://localhost:8080/validateToken\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:31\n                \n            \n\n\n            \n                \n                    This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n/**\n * This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n */\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n\n  /**@ignore */\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n\n  /**@ignore */\n  updateForm: FormGroup;\n    \n   /**\n   * This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n   */\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n\n  /**@ignore */\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n            \n                Description\n            \n            \n                This service handles http requests when user login via social media \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:26\n                \n            \n\n\n            \n                \n                    This method verifies that the user exists in our database or not.\n if the user already exists then it returns all the information of that user and redirects to landing page.\n else user redirects to create team page for registration.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n/**This service handles http requests when user login via social media */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  /**\n   * This method verifies that the user exists in our database or not.\n   \t * if the user already exists then it returns all the information of that user and redirects to landing page.\n   \t * else user redirects to create team page for registration.\n   * @param data \n   */\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        this.registerSuccessfulLogin();\n      }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:62\n                \n            \n\n\n            \n                \n                    This method calls the User Register Service to send data to register a user into the system.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:40\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the team name, showing the response saying if the team was updated or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n   \n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n/**\n * This Method opens a Dialog Box, after you submit the team name, showing the response saying if the team was updated or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.userService.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n/**\n * This method calls the User Register Service to send data to register a user into the system.\n */\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up! Now please login again to continue.\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       },\n       (error)=>{\n        if(error.status==200){\n         \n          this.message=\"You have been signed up! Now please login again to continue.\"\n          this.responseDialog()\n          this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       \n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      });\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n            \n                Description\n            \n            \n                This is the form Group of component \n\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:8\n                            \n                        \n\n                \n                    \n                            This is the Constructor for testService\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n/** This is the form Group of component */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n  /**\n   * This is the Constructor for testService\n  */\n  constructor() { }\n  /**@ignore */\n  form: FormGroup = new FormGroup({\n  /**This is the key of form */ key: new FormControl(null),\n  /**This is the form title */  title: new FormControl(' ',[Validators.required]),\n  /**This is the Description */  description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n  /**This is the teams array */  teams: new FormControl(),\n  });\n  \n  /**@ignore */\n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:13\n                \n            \n\n\n            \n                \n                    This method stores data to transfer data between components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n\n/**\n * This method stores data to transfer data between components.\n * @param data \n */\n  emitData(data) {\n    this.userData = data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n            \n                Description\n            \n            \n                defines the user data type\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:11\n                            \n                        \n\n                \n                    \n                        define email of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the user (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:9\n                            \n                        \n\n                \n                    \n                        define name of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:13\n                            \n                        \n\n                \n                    \n                        define team the user is in \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        /**define id of the user (unique) */\n        public id:number,\n        /**define name of the user (string) */\n        public name:string,\n        /**define email of the user (string) */\n        public email:string,\n        /**define team the user is in */\n        public team:{\n            /**define id of the team (unique) */\n            id:number,\n            /**define name of the team (string) */\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n            \n                Description\n            \n            \n                This service handles http requests for login process \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:29\n                \n            \n\n\n            \n                \n                    \nThis method returns all details of user when the user logins into the system and shows that details on the landing page.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n/**This service handles http requests for login process */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http: HttpClient) {\n\n  }\n/**\n * * This method returns all details of user when the user logins into the system and shows that details on the landing page.\n * @param username \n * @param password \n */\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n            \n                Description\n            \n            \n                This service handles http requests for registration process \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:22\n                \n            \n\n\n            \n                \n                    This method returns the response message which shows whether the user has successfully registered or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:31\n                \n            \n\n\n            \n                \n                    This method returns list of the team which are already exist in our database.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { teamList } from './../teamList';\nimport {Observable} from 'rxjs';\n\n/**This service handles http requests for registration process */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http:HttpClient) {\n    \n   }\n/**\n * This method returns the response message which shows whether the user has successfully registered or not.\n * @param data \n */\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n // return resp\n}\n/**\n * This method returns list of the team which are already exist in our database.\n */\ngetTeam():Observable{\n  console.log(\"inside GetTeam\")\n  return this.http.get(\"http://localhost:8080/getTeam\")\n  \n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n                    This method validates if inputs of password and confirm password fields matches  \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nResetPasswordService\n\nResetPasswordService\n\nAppModule -->\n\nResetPasswordService->AppModule\n\n\n\n\n\nSocialMediaAuthService\n\nSocialMediaAuthService\n\nAppModule -->\n\nSocialMediaAuthService->AppModule\n\n\n\n\n\nTransferDataService\n\nTransferDataService\n\nAppModule -->\n\nTransferDataService->AppModule\n\n\n\n\n\nUserLoginService\n\nUserLoginService\n\nAppModule -->\n\nUserLoginService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n            \n                Description\n            \n            \n                Defines the teams object \n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n\n  /**@ignore */\n    constructor(\n      /**Defines team name of type string */\n      public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
