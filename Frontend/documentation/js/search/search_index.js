var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.417,1,0.996]],["body/components/ApiResponseComponent.html",[0,0.632,1,1.633,2,1.537,3,0.172,4,0.15,5,1.165,6,1.165,7,1.165,8,1.165,9,0.15,10,5.752,11,3.941,12,2.92,13,1.165,14,2.236,15,2.014,16,1.959,17,4.064,18,1.458,19,5.46,20,1.458,21,4.748,22,0.172,23,0.549,24,1.154,25,1.808,26,3.223,27,4.064,28,3.277,29,4.673,30,0.629,31,5.903,32,0.438,33,3.412,34,3.931,35,0.465,36,4.748,37,0.341,38,0.02,39,0.311,40,0.353,41,0.341,42,3.412,43,0.513,44,1.183,45,2.597,46,3.613,47,3.412,48,3.412,49,1.452,50,0.896,51,0.896,52,1.229,53,3.412,54,0.613,55,3.412,56,0.588,57,2.001,58,2.597,59,1.863,60,1.452,61,1.105,62,2.001,63,0.341,64,0.172,65,0.027,66,3.412,67,3.412,68,3.412,69,3.412,70,3.412,71,3.412,72,4.064,73,1.048,74,1.621,75,1.621,76,1.165,77,2.015,78,1.165,79,3.412,80,1.165,81,0.944,82,1.165,83,0.944,84,1.165,85,0.944,86,1.165,87,1.621,88,0.896,89,1.165,90,0.944,91,1.165,92,0.944,93,1.165,94,0.85,95,0.994,96,1.165,97,0.896,98,1.165,99,0.944,100,1.048,101,1.165,102,0.806,103,1.165,104,0.944,105,0.944,106,1.165,107,0.896,108,1.165,109,0.896,110,0.806,111,1.165,112,0.944,113,1.165,114,0.896,115,0.994,116,1.165,117,1.165,118,0.009,119,0.013,120,0.009]],["title/components/AppComponent.html",[0,0.417,81,0.996]],["body/components/AppComponent.html",[0,0.699,1,1.151,2,1.757,3,0.21,4,0.183,5,1.421,6,1.421,7,1.421,8,1.421,9,0.183,13,1.421,14,2.285,15,2.058,16,1.213,18,1.667,20,1.667,22,0.21,23,0.628,35,0.293,38,0.02,39,0.309,40,0.237,50,1.093,51,1.093,54,0.748,56,0.448,63,0.415,64,0.21,65,0.032,73,1.278,74,1.853,75,1.853,76,1.421,77,2.185,78,1.421,80,1.421,81,1.771,82,1.421,83,1.151,84,1.421,85,1.151,86,1.421,87,1.853,88,1.093,89,1.421,90,1.151,91,1.421,92,1.151,93,1.421,94,1.037,95,1.213,96,1.421,97,1.093,98,1.421,99,1.151,100,1.278,101,1.421,102,0.983,103,1.421,104,1.151,105,1.151,106,1.421,107,1.093,108,1.421,109,1.093,110,0.983,111,1.421,112,1.151,113,1.421,114,1.093,115,1.213,116,1.421,117,1.421,118,0.011,119,0.015,120,0.011,121,3.563,122,1.757,123,6.041,124,5.428,125,3.543,126,4.646,127,4.162]],["title/modules/AppModule.html",[128,2.486,129,2.486]],["body/modules/AppModule.html",[1,1.564,3,0.12,4,0.105,9,0.105,11,1.396,15,0.659,16,0.694,38,0.021,56,0.801,58,1.812,60,1.013,63,0.238,64,0.12,65,0.019,73,0.731,81,1.814,83,1.564,85,1.564,88,1.485,90,1.564,92,1.564,94,1.409,95,0.694,97,1.485,99,1.564,100,1.808,102,1.336,104,1.564,105,0.659,107,1.485,109,1.485,110,0.862,112,1.564,114,1.485,118,0.006,119,0.01,120,0.006,128,1.643,129,5.145,130,1.509,131,1.643,132,3.796,133,3.376,134,4.255,135,1.812,136,2.038,137,2.038,138,2.038,139,2.038,140,2.038,141,3.583,142,3.583,143,3.088,144,3.583,145,3.317,146,3.088,147,3.123,148,1.396,149,2.381,150,3.123,151,1.812,152,1.812,153,1.396,154,1.812,155,3.648,156,3.123,157,1.812,158,2.518,159,2.381,160,2.381,161,3.648,162,2.381,163,3.648,164,2.381,165,2.038,166,2.038,167,1.812,168,1.812,169,3.123,170,2.312,171,1.553,172,3.648,173,4.435,174,1.509,175,2.518,176,1.643,177,1.396,178,2.518,179,1.643,180,3.648,181,2.381,182,2.777,183,2.038,184,1.142,185,4.435,186,2.381,187,3.648,188,2.381,189,3.648,190,2.381,191,1.509,192,1.812,193,3.648,194,0.858,195,1.643,196,1.812,197,2.038,198,3.648,199,2.038,200,1.812,201,2.038,202,2.381,203,2.381,204,1.396,205,2.038,206,2.381,207,3.648,208,2.381,209,2.381,210,3.648,211,2.381,212,3.648,213,2.381,214,3.648,215,2.038,216,3.648,217,2.381,218,2.381,219,2.381,220,1.812,221,1.643,222,2.038,223,1.396,224,1.643,225,3.648,226,1.812,227,1.643,228,1.812,229,1.643,230,2.038,231,3.648,232,4.972,233,2.14,234,1.992,235,1.992,236,2.518,237,2.381,238,1.436,239,1.467,240,3.648,241,3.648,242,2.381,243,2.381,244,2.381,245,2.381,246,2.381,247,0.957,248,2.381,249,2.381]],["title/modules/AppRoutingModule.html",[128,2.486,141,2.282]],["body/modules/AppRoutingModule.html",[3,0.238,4,0.208,9,0.208,38,0.021,56,0.783,58,3.599,63,0.472,64,0.238,65,0.037,88,1.241,97,1.241,99,1.308,100,1.452,102,1.117,107,1.241,109,1.241,110,1.117,114,1.241,118,0.013,119,0.016,120,0.013,130,2.996,135,3.599,141,3.731,150,4.048,158,4.064,165,4.048,166,4.048,183,4.048,196,3.599,197,4.048,222,4.048,229,3.264,230,4.048,250,4.729,251,4.729,252,4.426,253,4.064,254,2.012,255,2.415,256,7.215,257,4.729,258,4.729,259,4.729,260,4.729,261,4.729,262,4.729,263,4.729,264,4.729,265,4.729,266,4.729]],["title/injectables/AuthorizationService.html",[267,0.477,268,2.741]],["body/injectables/AuthorizationService.html",[3,0.244,4,0.213,9,0.213,22,0.244,23,0.692,30,0.793,32,0.447,35,0.477,37,0.484,38,0.02,39,0.276,40,0.34,41,0.484,43,0.9,44,1.208,54,0.871,56,0.644,63,0.484,64,0.244,65,0.038,118,0.013,119,0.016,120,0.013,122,1.569,254,2.063,267,0.793,268,4.551,269,1.569,270,4.149,271,4.551,272,5.152,273,6.77,274,4.149,275,3.697,276,5.98,277,4.848,278,4.848,279,1.746,280,4.848,281,1.489,282,4.848,283,4.848,284,4.848,285,4.848,286,1.273,287,4.848,288,4.848]],["title/classes/Comment.html",[65,0.028,289,2.112]],["body/classes/Comment.html",[3,0.234,4,0.205,9,0.205,22,0.234,23,0.675,24,1.327,32,0.538,35,0.484,37,0.465,38,0.02,39,0.265,40,0.409,41,0.465,54,1.144,64,0.234,65,0.036,118,0.013,119,0.016,120,0.013,239,2.56,289,4.112,290,2.101,291,3.362,292,3.985,293,6.674,294,2.225,295,3.544,296,2.873,297,4.846,298,3.053,299,4.656,300,4.656,301,4.656,302,4.656,303,4.656,304,4.025,305,4.656,306,4.656,307,3.214]],["title/components/CommentComponent.html",[0,0.417,83,0.996]],["body/components/CommentComponent.html",[0,0.612,1,0.889,2,1.474,3,0.162,4,0.141,5,1.098,6,1.098,7,1.098,8,1.098,9,0.141,13,1.098,14,2.22,15,1.999,16,0.937,18,1.399,20,1.399,22,0.162,23,0.527,24,1.253,25,0.937,30,0.604,32,0.487,35,0.481,38,0.02,39,0.301,40,0.327,43,0.685,44,1.317,56,0.49,61,1.712,63,0.321,64,0.162,65,0.025,73,0.988,74,1.554,75,1.554,76,1.098,77,1.963,78,1.098,80,1.098,81,0.889,82,1.098,83,1.591,84,1.098,85,0.889,86,1.098,87,1.554,88,0.844,89,1.098,90,0.889,91,1.098,92,0.889,93,1.098,94,0.801,95,0.937,96,1.098,97,0.844,98,1.098,99,0.889,100,0.988,101,1.098,102,0.76,103,1.098,104,0.889,105,0.889,106,1.098,107,0.844,108,1.098,109,0.844,110,0.76,111,1.098,112,0.889,113,1.098,114,0.844,115,0.937,116,1.098,117,1.098,118,0.009,119,0.012,120,0.009,238,1.041,289,3.696,291,3.343,296,2.055,308,2.752,309,1.474,310,5.287,311,4.554,312,6.07,313,4.554,314,4.526,315,4.189,316,4.922,317,1.963,318,3.466,319,2.326,320,3.466,321,4.554,322,4.554,323,3.215,324,3.215,325,3.466,326,3.215,327,3.215,328,3.215,329,3.215,330,3.215,331,3.215,332,3.215,333,3.215,334,2.885,335,3.215,336,3.215,337,2.752,338,2.447,339,3.215,340,3.215,341,3.215,342,3.215,343,3.215,344,3.215,345,2.447,346,3.215,347,3.215,348,3.215,349,3.215,350,3.898,351,1.886,352,2.037,353,2.447,354,2.447,355,2.752,356,3.215,357,3.898,358,1.756,359,2.447,360,2.752,361,3.215,362,1.886,363,2.487,364,1.368]],["title/components/CreateProposalComponent.html",[0,0.417,85,0.996]],["body/components/CreateProposalComponent.html",[0,0.55,1,0.737,2,1.286,3,0.134,4,0.117,5,0.91,6,0.91,7,0.91,8,0.91,9,0.117,13,0.91,14,2.164,15,1.949,16,0.777,18,1.22,20,1.22,22,0.134,23,0.46,24,1.251,25,1.641,30,0.527,32,0.246,35,0.487,37,0.266,38,0.02,39,0.27,40,0.372,41,0.266,43,0.401,44,0.664,45,2.029,46,2.029,50,1.478,51,1.478,52,0.96,54,0.714,56,0.511,60,1.134,61,1.538,62,1.563,63,0.266,64,0.134,65,0.021,73,0.819,74,1.356,75,1.356,76,0.91,77,1.797,78,0.91,80,0.91,81,0.737,82,0.91,83,0.737,84,0.91,85,1.456,86,2.193,87,1.356,88,0.7,89,0.91,90,0.737,91,0.91,92,0.737,93,0.91,94,0.664,95,0.777,96,0.91,97,0.7,98,0.91,99,0.737,100,0.819,101,0.91,102,0.63,103,0.91,104,0.737,105,0.737,106,0.91,107,0.7,108,0.91,109,0.7,110,0.63,111,0.91,112,0.737,113,0.91,114,0.7,115,0.777,116,0.91,117,0.91,118,0.007,119,0.011,120,0.007,125,2.33,167,5.299,168,5.299,177,3.302,239,1.597,291,3.338,296,1.203,298,1.278,309,1.286,317,1.797,319,2.03,364,1.134,365,2.029,366,2.527,367,4.066,368,3.401,369,4.75,370,2.426,371,3.973,372,5.631,373,4.066,374,3.088,375,2.021,376,3.973,377,4.75,378,3.973,379,2.029,380,2.277,381,3.886,382,2.666,383,2.666,384,4.75,385,2.666,386,2.666,387,1.456,388,2.666,389,2.282,390,2.282,391,2.282,392,2.282,393,2.666,394,2.666,395,2.282,396,2.282,397,2.282,398,2.666,399,1.456,400,2.666,401,2.666,402,2.282,403,2.666,404,2.666,405,2.666,406,2.666,407,2.666,408,2.666,409,2.666,410,2.666,411,2.666,412,2.666,413,2.666,414,2.666,415,2.666,416,2.029,417,2.666,418,5.265,419,4.506,420,3.401,421,5.054,422,3.973,423,3.973,424,3.401,425,3.973,426,3.401,427,2.33,428,3.401,429,1.84,430,2.282,431,2.666,432,2.666,433,2.666]],["title/interfaces/DialogData.html",[57,2.112,434,2.112]],["body/interfaces/DialogData.html",[0,0.552,3,0.135,4,0.118,9,0.118,14,0.825,15,0.743,16,0.783,18,0.825,20,0.825,22,0.135,23,0.462,24,0.857,26,1.467,30,0.356,34,1.702,38,0.021,39,0.153,40,0.153,44,0.995,49,1.7,52,1.719,54,0.949,56,0.755,57,2.343,59,1.467,60,2.031,61,1.294,62,1.575,63,0.268,64,0.24,65,0.031,94,0.669,95,0.783,102,0.635,105,1.32,110,0.944,118,0.011,119,0.011,120,0.007,148,2.343,153,1.575,170,1.702,171,1.7,174,1.702,175,1.854,176,1.854,177,1.575,178,1.854,179,1.854,223,1.575,224,1.854,233,2.798,234,2.886,235,3.234,236,1.854,238,1.711,247,2.125,253,1.854,254,1.143,255,2.041,275,2.606,281,0.825,286,0.705,294,2.179,309,1.294,317,0.917,364,1.143,366,1.08,370,2.041,374,2.343,380,1.916,387,2.886,434,1.575,435,2.686,436,1.854,437,3.025,438,1.372,439,1.854,440,1.702,441,1.575,442,2.044,443,2.532,444,2.044,445,1.575,446,2.288,447,2.699,448,1.467,449,1.854,450,2.758,451,2.758,452,2.758,453,1.467,454,1.854,455,2.758,456,4.022,457,2.532,458,2.044,459,2.343,460,3.041,461,2.044,462,2.044,463,2.044,464,2.044,465,2.044,466,2.044,467,2.044,468,2.044,469,1.854,470,2.044,471,2.044,472,2.044,473,2.044,474,1.854,475,1.575,476,3.293,477,1.702,478,2.044,479,2.044,480,2.886,481,2.044,482,1.702,483,1.702,484,2.044,485,2.044,486,1.854,487,2.044,488,1.916,489,1.702,490,2.044,491,2.044,492,4.022,493,2.044,494,2.758,495,2.044,496,1.575,497,2.044,498,2.044,499,2.044,500,1.854,501,2.044,502,2.044,503,3.041,504,2.044,505,3.293,506,2.044,507,1.702,508,3.023,509,2.044,510,2.044,511,2.044,512,2.044,513,2.044,514,2.044,515,2.044,516,2.044,517,2.044,518,3.041,519,2.044,520,2.044,521,1.854,522,1.854,523,3.041,524,2.044,525,3.041,526,3.631,527,1.702,528,1.854,529,2.044,530,2.044,531,2.044,532,2.044,533,2.044,534,2.044,535,2.044,536,3.631,537,3.631,538,3.041,539,1.467,540,3.041,541,2.758,542,3.041,543,1.916,544,1.854,545,1.854,546,1.854,547,1.854,548,2.532,549,2.044,550,1.575,551,2.044,552,2.044,553,2.044,554,2.044,555,2.044,556,2.044,557,1.702,558,1.854,559,1.854,560,1.854,561,2.044,562,1.575,563,2.044,564,2.044]],["title/components/ErrorComponent.html",[0,0.417,88,0.945]],["body/components/ErrorComponent.html",[0,0.68,1,1.089,2,1.694,3,0.198,4,0.173,5,1.344,6,1.344,7,1.344,8,1.344,9,0.173,13,1.344,14,2.272,15,2.046,16,1.148,18,1.608,20,1.608,22,0.198,23,0.606,30,0.694,32,0.542,35,0.414,38,0.02,39,0.298,40,0.224,43,0.593,44,1.304,50,1.034,51,1.034,54,0.708,56,0.424,61,1.903,63,0.393,64,0.198,65,0.031,73,1.21,74,1.787,75,1.787,76,1.344,77,2.139,78,1.344,80,1.344,81,1.089,82,1.344,83,1.089,84,1.344,85,1.089,86,1.344,87,1.787,88,1.645,89,1.344,90,1.089,91,1.344,92,1.089,93,1.344,94,0.981,95,1.148,96,1.344,97,1.034,98,1.344,99,1.089,100,1.21,101,1.344,102,0.93,103,1.344,104,1.089,105,1.089,106,1.344,107,1.034,108,1.344,109,1.034,110,0.93,111,1.344,112,1.089,113,1.344,114,1.034,115,1.148,116,1.344,117,1.344,118,0.011,119,0.014,120,0.011,309,1.694,317,2.139,474,4.501,543,3.003,565,3.371,566,5.879,567,5.234,568,5.234,569,3.938,570,4.48]],["title/classes/Feed.html",[65,0.028,571,2.112]],["body/classes/Feed.html",[3,0.266,4,0.232,9,0.232,22,0.266,23,0.729,24,1.209,32,0.581,35,0.444,37,0.527,38,0.02,39,0.301,40,0.405,41,0.527,64,0.266,65,0.041,118,0.014,119,0.017,120,0.014,290,2.384,298,3.227,571,3.694,572,4.522,573,5.966,574,5.283,575,5.283,576,5.283]],["title/components/FeedComponent.html",[0,0.417,90,0.996]],["body/components/FeedComponent.html",[0,0.413,1,0.473,2,0.908,3,0.086,4,0.075,5,0.584,6,0.584,7,0.584,8,0.584,9,0.075,13,0.584,14,2,15,1.801,16,0.499,18,0.862,20,0.862,22,0.086,23,0.325,24,1.248,25,1.203,30,0.372,32,0.158,35,0.49,37,0.455,38,0.021,39,0.294,40,0.377,41,0.455,43,0.866,44,1.468,49,0.728,50,1.285,51,1.285,52,0.616,54,0.819,56,0.557,61,1.155,63,0.171,64,0.086,65,0.013,73,0.525,74,0.958,75,0.958,76,0.584,77,1.409,78,0.584,80,0.584,81,0.473,82,0.584,83,0.776,84,0.584,85,0.473,86,1.218,87,0.958,88,0.449,89,0.584,90,1.142,91,0.584,92,0.473,93,0.584,94,0.426,95,0.499,96,0.584,97,0.449,98,0.584,99,0.473,100,0.525,101,0.584,102,0.404,103,0.584,104,0.473,105,0.473,106,0.584,107,0.449,108,0.584,109,0.449,110,0.404,111,0.584,112,0.776,113,1.671,114,0.449,115,0.499,116,0.584,117,0.584,118,0.005,119,0.008,120,0.005,125,1.003,145,2.42,158,1.181,169,1.464,204,3.032,205,1.464,221,1.181,239,1.128,247,1.434,289,3.166,291,3.343,296,2.333,309,0.908,314,2.402,317,1.409,318,2.135,319,1.433,320,2.135,325,3.935,334,2.615,337,1.464,338,3.141,351,2.42,352,2.26,353,1.302,354,2.715,355,3.533,358,2.673,359,2.135,360,1.464,362,2.092,363,0.934,364,0.728,366,0.688,399,0.934,416,2.135,424,1.464,543,2.884,558,1.181,562,1.645,570,3.053,571,1.645,577,1.464,578,3.567,579,2.806,580,2.806,581,2.806,582,5.589,583,2.806,584,2.806,585,2.806,586,2.402,587,2.806,588,2.806,589,2.806,590,3.567,591,4.127,592,4.127,593,4.127,594,2.806,595,4.127,596,2.402,597,2.402,598,4.127,599,2.806,600,1.711,601,2.806,602,1.711,603,1.711,604,1.711,605,1.711,606,1.711,607,1.711,608,1.711,609,1.711,610,1.711,611,1.711,612,2.806,613,1.711,614,2.806,615,1.711,616,1.711,617,1.464,618,1.711,619,1.464,620,1.711,621,1.711,622,1.711,623,1.711,624,1.711,625,1.711,626,1.711,627,1.711,628,1.711,629,1.711,630,1.711,631,1.711,632,1.711,633,1.711,634,1.181,635,1.711,636,1.302,637,1.711,638,1.711,639,1.711,640,1.711,641,1.711,642,1.711,643,1.711,644,1.711,645,1.711,646,1.711,647,1.711,648,1.711,649,1.711,650,1.711,651,1.711,652,1.711,653,1.711,654,1.711,655,1.711,656,3.567,657,1.711,658,1.711,659,1.711,660,1.711,661,1.711,662,1.711,663,1.711,664,1.711,665,1.711,666,4.127,667,4.127,668,2.806,669,1.711,670,1.711,671,1.711,672,2.806,673,3.567,674,2.806,675,2.488,676,2.402,677,1.711,678,1.711,679,1.711,680,1.711,681,1.711,682,1.711,683,2.806,684,2.806,685,3.9,686,1.711,687,1.711,688,1.711,689,3.053,690,3.053,691,1.711,692,1.711,693,1.711,694,1.711,695,2.806,696,4.127,697,1.778,698,2.806,699,1.711,700,1.711,701,2.806,702,2.806,703,1.711,704,1.711,705,1.711,706,1.711,707,1.711,708,1.711,709,1.711,710,1.181,711,2.806,712,1.711,713,1.711,714,1.711,715,2.806,716,2.806,717,2.806,718,2.806,719,2.806,720,2.806,721,2.806,722,2.806,723,2.806,724,2.806,725,2.806,726,2.092,727,1.645,728,2.402,729,2.848,730,2.806,731,2.42,732,1.711,733,1.711,734,2.402,735,3.053,736,1.302,737,3.053,738,1.711,739,1.464,740,2.806,741,2.092,742,1.711,743,1.084,744,1.711,745,3.053,746,1.711,747,1.711,748,1.711,749,1.711,750,1.302,751,1.711,752,1.711,753,1.711,754,1.711,755,1.464,756,2.806,757,1.711,758,2.806,759,2.402,760,1.532,761,1.711,762,2.402,763,1.711,764,1.711,765,1.711,766,1.711,767,1.711,768,1.711,769,1.711,770,1.711,771,1.711,772,1.711,773,2.806,774,1.711,775,1.711,776,1.003,777,1.711,778,1.711,779,2.806,780,1.711,781,1.711,782,1.711]],["title/classes/FeedParams.html",[65,0.028,783,2.486]],["body/classes/FeedParams.html",[3,0.224,4,0.195,9,0.195,22,0.224,23,0.655,24,1.345,32,0.522,35,0.496,37,0.443,38,0.02,39,0.253,40,0.386,41,0.676,54,1.245,64,0.224,65,0.035,118,0.012,119,0.015,120,0.012,290,2.004,297,5.272,319,3.461,731,3.847,783,3.906,784,6.1,785,3.802,786,6.56,787,5.615,788,6.23,789,5.8,790,4.442,791,4.442,792,4.845,793,4.442,794,4.442,795,4.442,796,4.442,797,4.442,798,4.442,799,4.442,800,4.442,801,4.442,802,4.442]],["title/components/FilterComponent.html",[0,0.417,92,0.996]],["body/components/FilterComponent.html",[0,0.549,1,0.735,2,1.284,3,0.134,4,0.117,5,0.908,6,0.908,7,0.908,8,0.908,9,0.117,13,0.908,14,2.163,15,1.948,16,0.775,18,1.218,20,1.218,22,0.134,23,0.459,24,1.25,25,1.382,28,3.629,30,0.526,32,0.437,35,0.479,37,0.265,38,0.021,39,0.27,40,0.27,41,0.265,43,0.846,44,1.469,50,0.698,51,0.698,54,0.478,56,0.566,61,1.284,63,0.265,64,0.134,65,0.021,73,0.817,74,1.354,75,1.354,76,0.908,77,1.795,78,0.908,80,0.908,81,0.735,82,0.908,83,0.735,84,0.908,85,0.735,86,0.908,87,1.354,88,0.698,89,0.908,90,0.735,91,0.908,92,1.455,93,0.908,94,0.662,95,0.775,96,0.908,97,0.698,98,0.908,99,0.735,100,0.817,101,0.908,102,0.628,103,0.908,104,0.735,105,0.735,106,0.908,107,0.698,108,0.908,109,0.698,110,0.628,111,0.908,112,0.735,113,0.908,114,0.698,115,1.382,116,0.908,117,0.908,118,0.007,119,0.011,120,0.007,204,3.584,215,2.276,227,4.218,228,4.781,238,0.861,291,3.286,297,4.887,309,1.284,317,1.795,318,3.018,320,3.018,325,3.018,334,1.685,338,2.023,352,1.685,364,2.018,420,4.06,429,1.835,571,3.084,573,3.395,634,1.835,636,2.023,675,1.452,697,1.685,726,2.782,727,3.084,728,2.276,729,2.737,750,2.023,760,1.452,803,2.276,804,4.743,805,3.966,806,4.743,807,4.743,808,3.966,809,5.258,810,5.258,811,5.258,812,3.966,813,4.743,814,3.966,815,3.966,816,2.659,817,2.659,818,2.659,819,2.659,820,2.659,821,2.659,822,3.966,823,2.659,824,2.659,825,2.659,826,2.659,827,2.659,828,2.659,829,2.659,830,2.659,831,2.659,832,2.659,833,2.659,834,2.659,835,2.659,836,2.659,837,3.966,838,3.966,839,2.659,840,2.659,841,2.659,842,2.659,843,2.659,844,2.659,845,2.659,846,2.659,847,4.743,848,2.276,849,5.258,850,4.501,851,2.659,852,2.659,853,2.659,854,2.659,855,2.659,856,3.966,857,2.659,858,2.659,859,3.966,860,2.326,861,2.659,862,3.274,863,2.659,864,2.659,865,2.659,866,2.659]],["title/components/ForgetPasswordComponent.html",[0,0.417,94,0.897]],["body/components/ForgetPasswordComponent.html",[0,0.566,1,0.774,2,1.334,3,0.141,4,0.123,5,0.956,6,0.956,7,0.956,8,0.956,9,0.123,13,0.956,14,2.18,15,1.963,16,0.816,18,1.265,20,1.265,22,0.141,23,0.477,25,1.425,30,0.546,32,0.258,34,1.774,35,0.449,37,0.279,38,0.021,39,0.278,40,0.327,41,0.279,43,0.736,44,1.343,49,1.191,50,0.735,51,0.735,52,1.008,54,0.969,56,0.619,59,1.529,60,1.191,61,1.583,63,0.279,64,0.141,65,0.022,72,3.526,73,0.86,74,1.406,75,1.406,76,0.956,77,1.962,78,0.956,80,0.956,81,0.774,82,0.956,83,0.774,84,0.956,85,0.774,86,0.956,87,1.406,88,0.735,89,0.956,90,0.774,91,0.956,92,0.774,93,0.956,94,1.343,95,1.929,96,0.956,97,0.735,98,0.956,99,0.774,100,0.86,101,0.956,102,0.661,103,0.956,104,0.774,105,1.719,106,0.956,107,0.735,108,0.956,109,0.735,110,1.507,111,0.956,112,0.774,113,0.956,114,0.735,115,0.816,116,0.956,117,0.956,118,0.008,119,0.011,120,0.008,171,1.191,174,1.774,182,2.13,223,3.817,238,1.334,239,2.31,247,1.125,281,0.86,294,1.334,309,1.334,317,1.841,374,2.416,380,1.342,427,2.416,437,3.381,446,2.344,447,2.105,448,1.529,450,1.932,451,1.932,452,1.932,488,1.342,489,1.774,508,2.61,539,1.529,543,2.882,548,2.61,550,2.416,675,2.67,689,2.396,690,2.396,710,1.932,867,5.571,868,2.396,869,4.889,870,4.12,871,4.12,872,4.889,873,5.392,874,3.721,875,2.799,876,3.721,877,4.12,878,4.12,879,2.799,880,2.799,881,2.799,882,5.319,883,4.12,884,5.392,885,4.12,886,4.12,887,2.799,888,2.799,889,2.799,890,2.799,891,2.799,892,2.799,893,2.799,894,2.799,895,2.799,896,2.799,897,1.932,898,2.799,899,2.799,900,2.799,901,2.799,902,2.396,903,2.396,904,2.61,905,3.136,906,3.526,907,3.136,908,4.12,909,4.12,910,4.12]],["title/injectables/GetProposalsService.html",[142,2.282,267,0.477]],["body/injectables/GetProposalsService.html",[3,0.166,4,0.145,9,0.145,22,0.166,23,0.536,25,1.852,30,0.614,32,0.304,35,0.498,37,0.651,38,0.021,39,0.371,40,0.402,41,0.651,43,0.956,50,1.668,51,1.668,54,1.141,56,0.659,63,0.329,64,0.166,65,0.026,118,0.009,119,0.013,120,0.009,122,1.067,142,2.936,184,1.58,194,1.187,267,0.614,269,1.067,279,1.187,281,1.012,286,1.668,319,2.97,571,3.143,710,3.698,783,4.871,789,4.976,911,6.083,912,2.821,913,4.633,914,4.633,915,4.633,916,4.633,917,4.633,918,4.633,919,4.633,920,4.633,921,4.633,922,4.633,923,4.633,924,4.633,925,3.295,926,2.154,927,4.633,928,3.295,929,3.295,930,3.295,931,4.025,932,3.295,933,3.295,934,3.295,935,3.295,936,3.295,937,3.295,938,3.295,939,3.295,940,3.295,941,3.295,942,4.633,943,3.295,944,3.295,945,4.633,946,3.295,947,3.295,948,4.633,949,3.295,950,3.295,951,3.295,952,3.295,953,3.295,954,3.295,955,3.295,956,3.295,957,3.295,958,3.295,959,3.295,960,3.295,961,3.295,962,3.295,963,4.633,964,3.295,965,3.295,966,3.295,967,3.295,968,3.966,969,3.295,970,3.295,971,3.295]],["title/injectables/GetTeamService.html",[143,1.967,267,0.477]],["body/injectables/GetTeamService.html",[3,0.248,4,0.216,9,0.216,22,0.248,30,0.801,32,0.454,35,0.426,37,0.492,38,0.021,39,0.28,40,0.28,41,0.492,43,0.741,56,0.733,63,0.492,64,0.248,65,0.038,118,0.013,119,0.016,120,0.013,122,1.595,143,3.298,184,2.362,194,1.774,267,0.801,269,1.595,279,1.774,281,1.513,286,1.585,926,2.626,931,3.542,972,5.59,973,4.217,974,5.181,975,2.097,976,4.927,977,2.097,978,4.927,979,3.826,980,3.121,981,4.927,982,2.69,983,4.927,984,4.217]],["title/components/HomeComponent.html",[0,0.417,97,0.945]],["body/components/HomeComponent.html",[0,0.534,1,0.702,2,1.24,3,0.128,4,0.111,5,0.866,6,0.866,7,0.866,8,0.866,9,0.111,13,0.866,14,2.148,15,1.935,16,0.74,18,1.176,20,1.176,22,0.193,23,0.443,24,1.042,27,3.278,30,0.508,32,0.234,35,0.389,37,0.253,38,0.021,39,0.292,40,0.262,41,0.253,43,0.576,44,1.149,49,1.63,56,0.412,61,1.493,63,0.253,64,0.128,65,0.02,73,0.779,74,1.307,75,1.307,76,0.866,77,1.754,78,0.866,80,0.866,81,0.702,82,0.866,83,0.702,84,0.866,85,0.702,86,0.866,87,1.307,88,0.666,89,0.866,90,0.702,91,0.866,92,0.702,93,0.866,94,0.632,95,0.74,96,0.866,97,1.349,98,0.866,99,0.702,100,0.779,101,0.866,102,0.6,103,0.866,104,0.702,105,0.702,106,0.866,107,0.666,108,0.866,109,0.666,110,0.6,111,0.866,112,0.702,113,0.866,114,0.666,115,0.74,116,0.866,117,0.866,118,0.007,119,0.01,120,0.01,200,1.931,235,2.091,254,1.08,281,0.779,309,1.24,317,1.754,350,2.172,352,3.493,353,1.931,354,1.931,358,3.166,359,1.931,362,3.234,363,1.386,364,2.346,366,1.54,429,3.805,430,4.719,521,2.643,522,2.643,697,2.922,726,3.849,727,1.488,729,4.153,731,2.705,735,3.278,736,2.915,741,3.789,745,2.172,750,4.917,755,3.278,759,2.172,760,2.091,762,2.172,776,2.246,848,2.172,860,3.013,862,1.752,985,2.172,986,3.83,987,4.612,988,3.83,989,3.83,990,5.137,991,2.538,992,4.397,993,3.83,994,2.538,995,2.538,996,2.538,997,2.538,998,2.538,999,2.172,1000,2.538,1001,2.538,1002,2.538,1003,3.278,1004,3.83,1005,2.538,1006,2.538,1007,2.172,1008,2.538,1009,3.183,1010,2.538,1011,2.172,1012,2.538,1013,2.538,1014,3.278,1015,2.538,1016,2.538,1017,3.493,1018,2.643,1019,2.538,1020,2.538,1021,2.172,1022,6.018,1023,1.608,1024,2.538,1025,1.752,1026,1.608,1027,1.608,1028,3.83,1029,2.538,1030,2.172,1031,2.538,1032,2.538,1033,2.643,1034,2.538,1035,3.83,1036,5.302,1037,4.612,1038,2.538,1039,2.538,1040,5.514,1041,5.137,1042,2.538,1043,2.538,1044,2.538,1045,2.538,1046,3.83,1047,2.538,1048,2.538,1049,2.538,1050,2.538,1051,2.538,1052,2.538,1053,3.83,1054,3.83,1055,6.195,1056,2.538,1057,2.538,1058,2.538,1059,2.172,1060,2.538,1061,2.538,1062,2.538,1063,2.538,1064,2.538,1065,2.538,1066,2.538,1067,2.538,1068,2.538,1069,2.538,1070,2.172,1071,2.538,1072,2.538,1073,2.538,1074,2.538,1075,2.538]],["title/interceptors/HttpInterceptorService.html",[1076,3.083,1077,2.741]],["body/interceptors/HttpInterceptorService.html",[3,0.222,4,0.194,9,0.194,22,0.222,30,0.747,32,0.407,35,0.397,37,0.563,38,0.021,39,0.321,40,0.353,41,0.563,43,0.664,56,0.705,63,0.441,64,0.222,65,0.034,118,0.012,119,0.015,120,0.012,184,2.116,194,1.59,238,1.429,255,2.255,267,0.747,272,3.359,281,1.356,286,1.48,294,1.429,309,1.429,453,3.574,454,3.046,496,2.588,697,2.796,931,3.643,1077,4.29,1078,4.414,1079,5.317,1080,3.778,1081,5.638,1082,4.414,1083,4.414,1084,5.638,1085,5.638,1086,6.545,1087,6.212,1088,6.545,1089,4.414,1090,4.414,1091,5.638,1092,4.414,1093,5.638,1094,4.414,1095,4.414,1096,4.414,1097,4.414,1098,3.778,1099,4.414,1100,4.414,1101,4.414,1102,4.414,1103,4.414,1104,4.414]],["title/components/LoginComponent.html",[0,0.417,102,0.851]],["body/components/LoginComponent.html",[0,0.522,1,0.465,2,0.896,3,0.085,4,0.074,5,0.574,6,0.574,7,0.574,8,0.574,9,0.074,13,0.574,14,1.993,15,1.795,16,1.028,18,0.85,20,0.85,22,0.085,23,0.32,24,0.998,26,0.919,30,0.542,32,0.155,34,1.066,35,0.472,37,0.168,38,0.021,39,0.257,40,0.325,41,0.168,43,0.679,44,1.279,49,1.739,50,1.185,51,1.185,52,1.27,54,0.811,56,0.692,57,0.986,59,0.919,60,1.5,61,1.141,62,0.986,63,0.168,64,0.177,65,0.022,73,0.517,74,0.945,75,0.945,76,0.574,77,1.395,78,0.574,80,0.574,81,0.465,82,0.574,83,0.465,84,0.574,85,0.465,86,0.574,87,0.945,88,0.442,89,0.574,90,0.465,91,0.574,92,0.465,93,0.574,94,0.689,95,0.807,96,0.574,97,0.442,98,0.574,99,0.465,100,0.517,101,0.574,102,0.965,103,0.574,104,0.465,105,1.656,106,0.574,107,0.442,108,0.574,109,0.442,110,1.213,111,0.574,112,0.465,113,0.574,114,0.442,115,0.49,116,0.574,117,0.574,118,0.008,119,0.008,120,0.005,148,2.396,153,0.986,170,1.066,171,1.178,174,1.066,175,1.161,176,1.161,177,0.986,178,1.161,179,1.161,223,0.986,224,1.161,233,2.068,234,2.466,235,2.803,236,1.161,238,1.462,247,2.064,253,1.161,254,0.716,255,1.414,274,1.44,275,2.652,281,0.517,286,0.442,294,2.18,309,1.141,317,1.395,351,0.986,358,1.511,363,1.511,364,1.178,366,1.113,370,2.622,374,2.396,380,2.165,387,2.466,434,0.986,436,1.161,437,3.163,438,2.307,439,1.161,440,1.066,441,2.068,442,1.28,443,2.234,444,1.28,445,0.986,446,1.959,447,2.087,448,0.919,449,1.161,450,1.91,451,1.91,452,1.91,453,2.231,454,1.161,455,2.82,456,3.907,457,2.234,458,1.28,459,1.623,460,2.106,461,1.28,462,1.28,463,1.28,464,1.28,465,1.28,466,2.106,467,2.683,468,1.28,469,1.161,470,2.683,471,2.683,472,1.28,473,2.683,474,3.116,475,1.623,476,3.352,477,2.234,478,2.683,479,2.683,480,2.838,481,2.683,482,2.234,483,1.066,484,1.28,485,1.28,486,2.433,487,1.28,488,1.327,489,1.066,490,2.683,491,2.106,492,4.081,493,2.106,494,2.82,495,2.106,496,1.623,497,2.106,498,2.106,499,2.106,500,1.91,501,2.106,502,2.106,503,3.109,504,2.106,505,3.352,506,2.106,507,1.753,508,3.077,509,3.109,510,1.28,511,1.28,512,1.28,513,1.28,514,1.28,515,1.28,516,1.28,517,2.106,518,3.696,519,2.106,520,2.106,521,1.91,522,1.91,523,3.109,524,2.106,525,3.109,526,4.081,527,1.753,528,2.82,529,1.28,530,1.28,531,1.28,532,1.28,533,1.28,534,1.28,535,1.28,536,2.683,537,2.683,538,2.106,539,0.919,540,2.106,541,1.91,542,2.106,543,1.327,544,1.161,545,1.161,546,1.161,547,1.161,548,2.588,549,2.106,550,1.623,551,3.109,552,1.28,553,1.28,554,1.28,555,1.28,556,1.28,557,1.066,558,1.161,559,1.91,560,1.91,561,2.106,562,2.396,563,1.28,564,1.28,675,2.231,726,0.986,727,0.986,731,0.986,737,1.44,741,0.986,743,1.066,760,0.919,776,0.986,860,0.986,862,1.161,904,2.588,905,3.109,906,3.497,907,3.109,1014,1.44,1017,3.077,1018,1.161,1023,1.066,1025,1.161,1026,1.753,1027,1.753,1036,1.44,1105,2.369,1106,4.085,1107,2.767,1108,2.767,1109,2.767,1110,1.682,1111,1.682,1112,1.682,1113,1.682,1114,1.682,1115,1.682,1116,1.682,1117,1.682,1118,1.682,1119,1.682,1120,1.682,1121,1.682,1122,1.682,1123,1.682,1124,1.682,1125,1.682,1126,1.682,1127,1.682,1128,1.682,1129,1.682,1130,2.767,1131,2.767,1132,1.682,1133,1.682,1134,1.44,1135,1.44]],["title/classes/MyErrorStateMatcher.html",[65,0.028,457,2.282]],["body/classes/MyErrorStateMatcher.html",[0,0.541,3,0.131,4,0.114,9,0.114,14,0.798,15,0.718,16,0.757,18,0.798,20,0.798,22,0.131,24,0.84,26,1.418,30,0.62,34,1.645,35,0.183,37,0.259,38,0.021,39,0.222,40,0.148,41,0.259,43,0.391,44,0.971,49,1.99,52,1.684,54,0.7,56,0.751,57,1.523,59,1.418,60,1.99,61,1.261,62,1.523,63,0.259,64,0.235,65,0.03,94,0.647,95,0.757,102,0.614,105,1.294,110,0.921,118,0.011,119,0.011,120,0.007,148,2.285,153,1.523,170,1.645,171,1.658,174,1.645,175,1.792,176,1.792,177,1.523,178,1.792,179,1.792,223,1.523,224,1.792,233,2.743,234,2.838,235,3.193,236,1.792,238,1.682,247,2.089,253,1.792,254,1.105,255,1.99,275,2.554,281,0.798,286,0.682,290,1.172,294,2.164,309,1.514,317,0.887,364,1.105,366,1.044,370,1.99,374,2.285,380,1.868,387,3.407,434,1.523,436,1.792,437,2.389,438,1.327,439,1.792,440,1.645,441,1.523,442,1.976,443,2.469,444,1.976,445,1.523,446,2.242,447,2.987,448,1.418,449,1.792,450,3.587,451,3.587,452,3.228,453,1.418,454,1.792,455,2.689,456,3.955,457,2.963,458,2.965,459,3.048,460,2.965,461,1.976,462,2.965,463,1.976,464,1.976,465,1.976,466,1.976,467,1.976,468,1.976,469,1.792,470,1.976,471,1.976,472,1.976,473,1.976,474,1.792,475,1.523,476,3.228,477,1.645,478,1.976,479,1.976,480,2.845,481,1.976,482,1.645,483,1.645,484,1.976,485,1.976,486,1.792,487,1.976,488,1.868,489,1.645,490,1.976,491,1.976,492,3.955,493,1.976,494,2.689,495,1.976,496,1.523,497,1.976,498,1.976,499,1.976,500,1.792,501,1.976,502,1.976,503,2.965,504,1.976,505,3.228,506,1.976,507,1.645,508,2.963,509,1.976,510,1.976,511,1.976,512,1.976,513,1.976,514,1.976,515,1.976,516,1.976,517,1.976,518,2.965,519,1.976,520,1.976,521,1.792,522,1.792,523,2.965,524,1.976,525,2.965,526,3.559,527,1.645,528,1.792,529,1.976,530,1.976,531,1.976,532,1.976,533,1.976,534,1.976,535,1.976,536,3.559,537,3.559,538,2.965,539,1.418,540,2.965,541,2.689,542,2.965,543,1.868,544,1.792,545,1.792,546,1.792,547,1.792,548,2.469,549,1.976,550,1.523,551,1.976,552,1.976,553,1.976,554,1.976,555,1.976,556,1.976,557,1.645,558,1.792,559,1.792,560,1.792,561,1.976,562,1.523,563,1.976,564,1.976,1136,3.897,1137,2.597]],["title/components/PasswordSpecsComponent.html",[0,0.417,104,0.996]],["body/components/PasswordSpecsComponent.html",[0,0.661,1,1.03,2,1.632,3,0.187,4,0.164,5,1.271,6,1.271,7,1.271,8,1.271,9,0.164,13,1.271,14,2.259,15,2.034,16,1.085,18,1.548,20,1.548,22,0.187,30,0.668,32,0.527,35,0.355,38,0.02,39,0.287,43,0.56,44,1.256,56,0.401,61,1.85,63,0.372,64,0.187,65,0.029,73,1.144,74,1.721,75,1.721,76,1.271,77,2.091,78,1.271,80,1.271,81,1.03,82,1.271,83,1.03,84,1.271,85,1.03,86,1.271,87,1.721,88,0.978,89,1.271,90,1.03,91,1.271,92,1.03,93,1.271,94,0.928,95,1.085,96,1.271,97,0.978,98,1.271,99,1.03,100,1.144,101,1.271,102,0.88,103,1.271,104,1.694,105,1.977,106,1.271,107,0.978,108,1.271,109,0.978,110,0.88,111,1.271,112,1.03,113,1.271,114,0.978,115,1.085,116,1.271,117,1.271,118,0.01,119,0.014,120,0.01,191,3.621,296,2.275,309,1.632,317,2.091,419,4.315,421,4.315,1138,4.892,1139,3.187,1140,5.041,1141,5.715,1142,5.041,1143,3.724,1144,3.724,1145,5.041,1146,5.041,1147,5.041,1148,5.041,1149,6.124,1150,5.041,1151,5.041,1152,5.041,1153,5.041,1154,5.041,1155,5.041,1156,5.041]],["title/classes/Post.html",[65,0.028,204,2.112]],["body/classes/Post.html",[3,0.219,4,0.191,9,0.191,22,0.219,23,0.645,24,1.342,32,0.514,35,0.494,37,0.433,38,0.02,39,0.317,40,0.408,41,0.433,54,1.298,64,0.219,65,0.034,118,0.012,119,0.015,120,0.012,125,3.946,204,3.271,239,2.768,290,1.959,294,2.178,296,3.233,298,2.955,304,2.996,307,2.996,375,2.93,437,2.218,1033,4.489,1157,3.716,1158,6.728,1159,4.341,1160,4.341,1161,4.341,1162,4.341,1163,4.341,1164,4.341,1165,4.341,1166,4.341]],["title/injectables/PostProposalService.html",[144,2.282,267,0.477]],["body/injectables/PostProposalService.html",[3,0.196,4,0.171,9,0.171,22,0.196,23,0.601,24,1.05,25,1.514,30,0.689,32,0.359,35,0.489,37,0.584,38,0.021,39,0.333,40,0.388,41,0.584,43,0.782,50,1.637,51,1.637,54,1.121,56,0.671,63,0.389,64,0.196,65,0.03,118,0.011,119,0.014,120,0.011,122,1.261,144,3.292,184,1.867,194,1.403,239,2.089,267,0.689,269,1.261,279,1.403,281,1.196,286,1.535,298,1.867,319,2.654,366,2.089,480,3.677,634,4.844,710,2.688,926,2.35,931,3.047,968,4.447,975,1.657,977,1.657,980,2.468,1167,3.334,1168,5.196,1169,5.196,1170,5.846,1171,5.196,1172,5.196,1173,5.196,1174,5.196,1175,5.196,1176,3.895,1177,3.895,1178,3.895,1179,3.895,1180,3.895,1181,3.895,1182,3.334,1183,3.895,1184,3.895,1185,3.895,1186,3.895,1187,3.895,1188,3.895,1189,3.895,1190,3.895,1191,3.895,1192,3.895,1193,3.895,1194,3.895,1195,3.895,1196,3.895,1197,3.895,1198,3.895,1199,3.895,1200,3.895,1201,3.895,1202,3.895]],["title/classes/Proposal.html",[65,0.028,366,1.448]],["body/classes/Proposal.html",[3,0.23,4,0.201,9,0.201,22,0.23,23,0.667,24,1.338,32,0.531,35,0.492,37,0.456,38,0.02,39,0.26,40,0.411,41,0.63,54,1.299,64,0.23,65,0.036,118,0.012,119,0.016,120,0.012,125,3.886,239,2.664,290,2.06,296,2.847,298,3.025,319,3.223,366,2.316,375,2.908,402,3.908,792,3.908,1033,4.574,1203,3.908,1204,4.566,1205,4.566,1206,4.566,1207,4.566,1208,4.566,1209,4.566,1210,4.566,1211,4.566,1212,4.566,1213,4.566]],["title/injectables/ProposalService.html",[145,2.112,267,0.477]],["body/injectables/ProposalService.html",[3,0.158,4,0.137,9,0.137,22,0.158,23,0.517,30,0.592,32,0.289,35,0.5,37,0.656,38,0.021,39,0.374,40,0.404,41,0.656,43,0.967,50,1.688,51,1.688,54,1.202,56,0.612,63,0.312,64,0.158,65,0.024,118,0.009,119,0.012,120,0.009,122,1.013,145,2.62,184,1.501,194,1.127,239,2.585,267,0.592,269,1.013,279,1.127,281,0.961,286,1.688,289,2.62,291,3.421,296,3.296,316,3.824,319,3.358,586,3.824,596,3.824,597,3.824,617,2.679,619,2.679,926,2.094,931,3.856,975,1.332,977,1.332,980,1.983,1182,2.679,1214,2.679,1215,5.209,1216,4.467,1217,4.467,1218,4.467,1219,4.467,1220,4.467,1221,4.467,1222,4.467,1223,4.467,1224,4.467,1225,4.467,1226,4.467,1227,3.13,1228,3.13,1229,3.13,1230,3.13,1231,3.13,1232,3.13,1233,3.13,1234,3.13,1235,3.13,1236,3.13,1237,3.13,1238,3.13,1239,4.467,1240,3.13,1241,3.13,1242,3.13,1243,3.13,1244,3.13,1245,3.13,1246,3.13,1247,3.13,1248,3.13,1249,3.13,1250,3.13,1251,3.13,1252,3.13,1253,3.13,1254,3.13,1255,3.13,1256,3.13,1257,3.13,1258,3.13,1259,3.13,1260,3.13,1261,3.13,1262,3.13,1263,3.13,1264,3.13,1265,3.13,1266,3.13,1267,3.13,1268,3.13,1269,3.13,1270,3.13,1271,3.13]],["title/components/RegisterComponent.html",[0,0.417,107,0.945]],["body/components/RegisterComponent.html",[0,0.405,1,0.76,2,0.889,3,0.176,4,0.073,5,0.937,6,0.569,7,0.569,8,0.569,9,0.073,11,0.977,13,0.569,14,1.989,15,1.791,16,0.8,18,0.843,20,0.843,22,0.084,23,0.318,24,0.995,25,0.486,26,1.499,28,2.417,30,0.364,32,0.253,35,0.461,37,0.166,38,0.021,39,0.304,40,0.304,41,0.166,43,0.676,44,1.119,50,1.179,51,1.596,52,1.463,54,0.73,56,0.614,59,0.91,60,0.709,61,1.134,63,0.166,64,0.084,65,0.013,73,0.512,74,0.937,75,0.937,76,0.569,77,1.534,78,0.569,80,0.569,81,0.461,82,0.569,83,0.461,84,0.569,85,0.461,86,1.196,87,0.937,88,0.437,89,0.569,90,0.461,91,0.569,92,0.461,93,0.569,94,0.415,95,0.486,96,0.569,97,0.437,98,0.569,99,0.461,100,0.512,101,0.569,102,0.394,103,0.569,104,0.76,105,1.651,106,0.569,107,1.066,108,0.569,109,0.437,110,0.394,111,0.569,112,0.461,113,0.569,114,0.437,115,1.703,116,0.569,117,0.569,118,0.005,119,0.007,120,0.005,143,2.218,146,2.218,151,1.268,152,1.268,153,0.977,154,1.268,158,1.15,171,0.709,177,2.054,182,1.268,191,1.056,192,1.268,195,1.15,226,1.268,238,0.889,239,1.408,247,1.806,254,0.709,255,1.403,275,3.114,286,1.066,294,1.134,309,0.889,315,1.15,317,1.387,334,1.056,351,0.977,352,1.056,357,1.426,358,1.499,362,2.635,363,2.218,364,2.175,370,2.295,375,1.168,380,2.154,427,1.61,429,2.417,437,2.469,445,2.998,446,1.679,447,0.851,448,0.91,459,1.61,475,2.054,480,1.789,488,2.154,489,1.056,507,1.74,527,1.74,539,0.91,543,1.947,550,2.054,562,2.382,675,3.26,685,1.426,726,1.61,727,1.61,729,2.803,731,0.977,736,1.268,739,2.35,741,0.977,743,1.056,760,0.91,776,1.61,860,2.054,874,2.803,897,1.15,902,2.35,903,2.998,904,3.782,905,2.09,907,2.09,974,2.09,979,2.219,1003,3.477,1007,1.426,1009,1.895,1011,1.426,1017,2.573,1018,1.15,1021,1.426,1023,1.056,1025,1.15,1026,1.056,1027,1.056,1030,1.426,1135,2.35,1272,1.426,1273,3.502,1274,2.746,1275,3.502,1276,3.477,1277,3.477,1278,2.998,1279,3.502,1280,2.998,1281,4.834,1282,3.091,1283,2.746,1284,3.502,1285,1.426,1286,2.219,1287,2.746,1288,1.666,1289,1.666,1290,1.666,1291,1.666,1292,1.666,1293,1.666,1294,1.666,1295,1.666,1296,1.666,1297,1.666,1298,1.666,1299,1.666,1300,1.666,1301,1.666,1302,1.666,1303,1.666,1304,1.666,1305,1.666,1306,1.15,1307,1.426,1308,1.666,1309,1.426,1310,1.426,1311,1.426,1312,1.426,1313,2.09,1314,1.268,1315,1.268,1316,1.426,1317,1.666,1318,1.268,1319,3.091,1320,2.665,1321,1.666,1322,1.666,1323,3.477,1324,2.746,1325,1.666,1326,1.426,1327,1.666,1328,1.426,1329,1.426,1330,1.426,1331,1.426,1332,1.426,1333,2.746,1334,1.666,1335,1.666,1336,1.426,1337,1.426,1338,1.426,1339,1.426,1340,1.666,1341,1.666,1342,1.666,1343,1.666,1344,1.666,1345,1.666,1346,1.666,1347,1.666,1348,1.666,1349,1.666,1350,1.426,1351,1.666,1352,1.666,1353,1.426,1354,1.666,1355,1.426,1356,2.665,1357,1.666,1358,1.426,1359,1.426,1360,1.666,1361,1.666,1362,1.666,1363,1.666,1364,1.426,1365,1.666,1366,3.502,1367,2.746,1368,3.477,1369,2.665,1370,2.35,1371,2.35,1372,2.35,1373,1.666,1374,1.666,1375,1.666,1376,1.666,1377,4.138,1378,4.066,1379,2.746,1380,2.35,1381,3.477,1382,3.477,1383,2.35,1384,2.746,1385,2.746,1386,2.746,1387,2.746,1388,1.426,1389,1.426,1390,1.426,1391,1.426,1392,1.426,1393,1.666,1394,2.746,1395,1.666,1396,3.502,1397,1.666,1398,1.666,1399,1.666,1400,1.666,1401,1.666,1402,1.666,1403,1.666]],["title/components/ResetLinkComponent.html",[0,0.417,109,0.945]],["body/components/ResetLinkComponent.html",[0,0.487,1,0.946,2,1.107,3,0.212,4,0.096,5,0.747,6,0.747,7,0.747,8,0.747,9,0.096,11,1.284,13,0.747,14,2.097,15,1.889,16,1.386,17,2.926,18,1.05,20,1.05,22,0.11,23,0.396,24,0.614,25,0.638,26,1.867,29,2.926,30,0.453,32,0.202,35,0.453,37,0.219,38,0.021,39,0.239,40,0.293,41,0.219,43,0.715,44,1.285,49,0.932,50,1.104,51,1.499,52,1.231,54,0.393,56,0.654,59,1.196,60,0.932,61,1.362,63,0.219,64,0.11,65,0.017,73,0.672,74,1.167,75,1.167,76,0.747,77,1.866,78,0.747,80,0.747,81,0.606,82,0.747,83,0.606,84,0.747,85,0.606,86,0.747,87,1.167,88,0.575,89,0.747,90,0.606,91,0.747,92,0.606,93,0.747,94,0.545,95,0.638,96,0.747,97,0.575,98,0.747,99,0.606,100,0.672,101,0.747,102,0.517,103,0.747,104,0.946,105,1.824,106,0.747,107,0.575,108,0.747,109,1.248,110,1.589,111,0.747,112,0.606,113,0.747,114,0.575,115,0.638,116,0.747,117,0.747,118,0.006,119,0.009,120,0.006,171,0.932,191,1.387,192,1.666,195,1.511,229,4.497,238,1.539,254,0.932,255,1.746,294,1.107,309,1.107,317,1.623,351,1.284,358,1.196,362,2.467,363,1.196,364,1.455,370,2.792,379,1.666,380,2.472,399,1.196,416,2.602,427,2.788,445,3.349,446,2.017,447,1.118,448,1.196,475,2.788,476,2.36,480,2.428,488,1.639,508,2.166,539,2.297,541,2.36,543,1.639,548,3.012,559,2.36,560,2.36,562,2.788,675,2.985,726,1.284,727,1.284,731,1.284,741,1.284,743,1.387,760,1.196,776,1.284,860,1.284,862,1.511,874,3.281,882,4.678,897,2.36,904,3.012,992,4.414,999,1.874,1017,3.267,1023,1.387,1026,1.387,1027,1.387,1134,1.874,1276,4.069,1277,4.069,1282,3.618,1306,1.511,1307,1.874,1309,1.874,1310,1.874,1311,1.874,1312,1.874,1313,2.602,1314,1.666,1315,1.666,1318,1.666,1319,1.666,1320,1.666,1323,1.874,1328,1.874,1329,1.874,1330,1.874,1331,1.874,1332,1.874,1336,1.874,1337,1.874,1369,1.666,1378,2.602,1381,4.069,1382,4.069,1383,2.926,1404,5.577,1405,1.874,1406,4.207,1407,3.419,1408,4.207,1409,5.157,1410,3.419,1411,4.207,1412,3.281,1413,3.601,1414,3.281,1415,3.419,1416,2.189,1417,2.189,1418,3.419,1419,3.419,1420,4.754,1421,3.419,1422,3.419,1423,2.189,1424,3.419,1425,3.419,1426,2.189,1427,3.419,1428,3.419,1429,3.419,1430,2.189,1431,2.189,1432,3.419,1433,2.189,1434,2.189,1435,2.189,1436,2.189,1437,2.189,1438,2.189,1439,2.189,1440,2.189,1441,2.189,1442,2.189,1443,2.189,1444,3.419,1445,2.189,1446,2.189,1447,2.189,1448,2.189,1449,2.189,1450,2.189,1451,2.189,1452,2.189,1453,2.189,1454,2.189,1455,2.189,1456,3.419,1457,2.189,1458,2.189,1459,2.189,1460,2.189]],["title/injectables/ResetPasswordService.html",[267,0.477,1414,2.486]],["body/injectables/ResetPasswordService.html",[3,0.243,4,0.212,9,0.212,22,0.243,23,0.69,24,1.071,25,1.407,30,0.79,32,0.445,35,0.456,37,0.595,38,0.02,39,0.339,40,0.339,41,0.595,43,0.726,56,0.642,63,0.482,64,0.243,65,0.038,118,0.013,119,0.016,120,0.013,122,1.562,194,1.738,267,0.79,269,1.562,279,1.738,286,1.267,399,2.635,926,2.792,975,2.054,977,2.876,982,2.635,1413,5.539,1414,4.115,1461,5.785,1462,4.131,1463,4.826,1464,5.963,1465,4.826,1466,4.826,1467,4.826,1468,3.331,1469,3.057]],["title/injectables/SendResetLinkService.html",[267,0.477,876,2.486]],["body/injectables/SendResetLinkService.html",[3,0.241,4,0.21,9,0.21,22,0.241,23,0.686,24,1.065,25,1.394,30,0.786,32,0.441,35,0.454,37,0.592,38,0.02,39,0.337,40,0.337,41,0.592,43,0.72,56,0.638,63,0.477,64,0.241,65,0.037,110,1.592,118,0.013,119,0.016,120,0.013,122,1.548,194,1.722,267,0.786,269,1.548,279,1.722,286,1.255,399,2.612,876,4.092,926,2.785,975,2.035,977,2.867,982,2.612,1468,3.301,1469,3.03,1470,5.767,1471,4.093,1472,5.929,1473,4.782,1474,5.929,1475,4.782,1476,4.782,1477,4.782,1478,4.782]],["title/components/ShareProposalComponent.html",[0,0.417,112,0.996]],["body/components/ShareProposalComponent.html",[0,0.595,1,0.846,2,1.422,3,0.154,4,0.134,5,1.044,6,1.044,7,1.044,8,1.044,9,0.134,13,1.044,14,2.206,15,1.987,16,0.891,18,1.349,20,1.349,22,0.154,23,0.508,24,1.07,25,1.735,30,0.582,32,0.282,35,0.461,37,0.439,38,0.02,39,0.32,40,0.353,41,0.439,43,0.661,44,1.094,45,2.327,46,2.327,49,1.301,50,1.153,51,1.153,52,1.101,56,0.605,60,1.301,61,1.665,62,1.793,63,0.305,64,0.154,65,0.024,73,0.939,74,1.5,75,1.5,76,1.044,77,1.919,78,1.044,80,1.044,81,0.846,82,1.044,83,0.846,84,1.044,85,0.846,86,1.044,87,1.5,88,0.803,89,1.044,90,0.846,91,1.044,92,0.846,93,1.044,94,0.762,95,0.891,96,1.044,97,0.803,98,1.044,99,0.846,100,0.939,101,1.044,102,0.722,103,1.044,104,0.846,105,0.846,106,1.044,107,0.803,108,1.044,109,0.803,110,0.722,111,1.044,112,1.555,113,2.305,114,0.803,115,1.499,116,1.044,117,1.044,118,0.008,119,0.012,120,0.008,170,1.937,171,1.87,220,5.064,221,4.592,238,1.422,247,1.229,286,1.35,291,3.19,298,1.466,309,1.422,317,1.919,365,2.327,366,2.26,367,4.401,368,3.76,370,2.871,373,4.401,375,2.392,379,2.327,380,2.465,389,2.617,390,2.617,391,3.76,392,3.76,395,2.617,396,2.617,399,1.67,426,3.76,427,2.576,428,3.76,446,2.465,488,1.466,1350,3.76,1479,5.142,1480,4.393,1481,4.393,1482,3.058,1483,3.058,1484,3.058,1485,3.058,1486,3.058,1487,3.058,1488,3.058,1489,4.393,1490,4.393,1491,4.393,1492,3.058,1493,4.393,1494,3.058,1495,3.058,1496,3.058,1497,3.058]],["title/injectables/SocialMediaAuthService.html",[267,0.477,441,2.112]],["body/injectables/SocialMediaAuthService.html",[3,0.166,4,0.145,9,0.145,22,0.166,23,0.536,24,1.141,25,0.96,30,0.614,32,0.304,35,0.484,37,0.535,38,0.021,39,0.305,40,0.331,41,0.535,43,0.956,44,1.154,49,1.402,50,0.865,51,0.865,52,1.187,54,1.173,56,0.659,63,0.329,64,0.166,65,0.026,115,0.96,118,0.009,119,0.013,120,0.009,122,1.067,194,1.187,234,1.8,247,1.325,254,1.402,267,0.614,269,1.067,271,3.526,275,3.564,279,1.187,281,1.012,286,1.713,294,1.983,315,4.228,345,3.526,387,2.926,438,3.129,440,2.088,441,2.717,443,4.437,480,2.367,482,3.395,483,2.088,496,1.933,528,3.198,543,1.58,544,2.274,545,2.274,546,2.274,547,2.274,787,2.821,926,2.337,975,1.402,977,1.972,982,2.53,1469,2.088,1498,5.939,1499,2.821,1500,4.587,1501,3.966,1502,4.976,1503,4.976,1504,4.976,1505,4.976,1506,4.633,1507,3.966,1508,3.295,1509,3.295,1510,3.295,1511,3.295,1512,3.295,1513,5.359,1514,3.295,1515,3.295,1516,3.295,1517,3.295,1518,2.821,1519,2.821,1520,3.295,1521,3.295,1522,3.295,1523,2.821,1524,3.295,1525,3.295,1526,3.295,1527,2.821,1528,2.821,1529,2.821,1530,3.966]],["title/components/TeamComponent.html",[0,0.417,114,0.945]],["body/components/TeamComponent.html",[0,0.514,1,1.012,2,1.184,3,0.12,4,0.105,5,0.816,6,0.816,7,0.816,8,0.816,9,0.105,11,1.401,13,0.816,14,2.128,15,1.917,16,1.066,18,1.123,20,1.123,22,0.12,23,0.423,24,1.017,25,1.295,26,1.305,28,3.068,30,0.485,32,0.337,35,0.473,37,0.238,38,0.021,39,0.346,40,0.335,41,0.238,43,0.669,44,1.241,50,1.167,51,1.167,52,1.317,54,0.657,56,0.671,60,1.017,61,1.439,63,0.238,64,0.12,65,0.019,73,0.734,74,1.249,75,1.249,76,0.816,77,1.833,78,0.816,80,0.816,81,0.661,82,0.816,83,0.661,84,0.816,85,0.661,86,1.517,87,1.249,88,0.627,89,0.816,90,0.661,91,0.816,92,0.661,93,0.816,94,0.595,95,0.696,96,0.816,97,0.627,98,0.816,99,0.661,100,0.734,101,0.816,102,0.564,103,0.816,104,0.661,105,1.012,106,0.816,107,0.627,108,0.816,109,0.627,110,0.564,111,0.816,112,0.661,113,0.816,114,1.307,115,1.975,116,0.816,117,0.816,118,0.007,119,0.01,120,0.007,143,2.72,146,2.72,151,1.818,152,1.818,153,1.401,154,1.818,171,1.017,195,1.649,227,2.525,233,1.401,234,1.305,235,1.305,238,1.184,247,2.002,254,1.017,255,1.22,275,3.473,286,0.627,294,0.773,309,1.184,317,1.7,334,1.514,351,1.401,358,1.305,362,2.145,363,1.998,364,1.557,370,2.742,375,1.557,380,2.574,427,2.145,437,1.22,438,2.742,439,1.649,440,1.514,445,3.456,446,2.131,447,1.22,448,1.305,455,3.437,459,1.401,475,1.401,477,2.816,480,2.742,483,1.514,486,3.068,488,1.145,507,2.318,527,1.514,539,1.305,550,2.607,557,1.514,675,1.998,741,1.401,743,1.514,760,1.305,776,1.401,860,1.401,874,3.437,897,1.649,904,3.155,974,2.784,1017,3.155,1018,1.649,1023,1.514,1025,1.649,1026,1.514,1027,1.514,1278,3.804,1280,3.804,1282,3.79,1285,2.045,1286,2.816,1313,1.818,1314,1.818,1315,1.818,1316,2.045,1318,1.818,1319,1.818,1320,1.818,1338,2.045,1339,2.045,1353,2.045,1355,2.045,1356,1.818,1358,2.045,1359,2.045,1364,2.045,1368,2.045,1369,1.818,1370,2.045,1371,2.045,1372,2.045,1377,3.131,1378,2.784,1380,3.131,1388,2.045,1389,2.045,1390,2.045,1391,2.045,1392,2.045,1531,2.045,1532,4.445,1533,3.658,1534,4.445,1535,3.804,1536,3.658,1537,2.389,1538,2.389,1539,2.389,1540,2.389,1541,2.389,1542,2.389,1543,2.389,1544,2.389,1545,2.389,1546,2.389,1547,2.389,1548,2.389,1549,2.389,1550,2.389,1551,2.389,1552,2.389,1553,2.389,1554,2.389,1555,2.389,1556,2.389,1557,2.389,1558,2.389,1559,2.389,1560,2.389,1561,2.389,1562,2.389,1563,2.389,1564,2.389]],["title/classes/Teams.html",[65,0.028,375,1.533]],["body/classes/Teams.html",[3,0.258,4,0.225,9,0.225,22,0.258,23,0.716,24,1.29,32,0.571,35,0.469,37,0.512,38,0.02,39,0.402,40,0.378,41,0.512,54,1.194,64,0.258,65,0.04,118,0.014,119,0.017,120,0.014,239,2.672,290,2.314,295,3.904,296,2.999,304,3.54,307,3.54,375,2.634,1565,4.39,1566,5.129,1567,5.129,1568,5.129]],["title/injectables/TeamsService.html",[267,0.477,1569,2.741]],["body/injectables/TeamsService.html",[3,0.245,4,0.214,9,0.214,22,0.245,23,0.694,30,0.795,32,0.449,35,0.458,37,0.486,38,0.02,39,0.277,40,0.341,41,0.486,43,0.733,50,1.278,51,1.278,54,0.875,56,0.73,63,0.486,64,0.245,65,0.038,118,0.013,119,0.016,120,0.013,122,1.577,184,2.335,194,1.754,267,0.795,269,1.577,279,1.754,281,1.496,286,1.278,375,2.552,500,4.139,926,2.612,931,3.517,975,2.072,977,2.072,980,3.086,1569,4.564,1570,4.168,1571,6.497,1572,5.996,1573,4.87,1574,4.87,1575,4.87,1576,4.87,1577,4.87]],["title/injectables/TestServiceService.html",[267,0.477,381,2.486]],["body/injectables/TestServiceService.html",[3,0.226,4,0.198,9,0.198,22,0.226,23,0.66,30,0.756,32,0.578,35,0.442,38,0.02,40,0.256,43,0.677,44,1.12,50,1.181,51,1.181,56,0.614,63,0.449,64,0.226,65,0.035,115,1.311,118,0.012,119,0.016,120,0.012,122,1.456,125,3.675,171,1.914,238,2.353,267,0.756,269,1.456,279,1.62,291,3.16,366,1.808,375,2.428,381,3.938,387,2.456,446,3.261,447,3.55,449,3.104,459,3.675,488,2.736,1009,3.104,1033,3.938,1578,5.641,1579,3.85,1580,6.591,1581,4.498,1582,4.498,1583,6.267,1584,5.706,1585,5.706,1586,4.498,1587,4.498,1588,4.498]],["title/injectables/TransferDataService.html",[267,0.477,438,1.84]],["body/injectables/TransferDataService.html",[3,0.248,4,0.216,9,0.216,22,0.248,23,0.699,24,0.885,25,1.904,30,0.801,35,0.426,37,0.492,38,0.021,39,0.28,40,0.28,41,0.492,43,0.741,44,1.227,56,0.65,63,0.492,64,0.248,65,0.038,118,0.013,119,0.016,120,0.013,122,1.595,184,2.362,238,1.595,267,0.653,269,1.595,374,2.889,438,3.085,477,4.138,557,3.121,982,2.69,1589,5.59,1590,4.217,1591,6.039,1592,6.039,1593,4.927,1594,4.927,1595,6.039,1596,4.927,1597,4.927,1598,4.927,1599,4.927,1600,4.927]],["title/classes/User.html",[65,0.028,294,1.166]],["body/classes/User.html",[3,0.238,4,0.207,9,0.207,22,0.238,23,0.68,24,1.329,32,0.542,35,0.486,37,0.471,38,0.02,39,0.393,40,0.41,41,0.471,54,1.264,64,0.238,65,0.037,115,2.011,118,0.013,119,0.016,120,0.013,239,2.575,290,2.129,294,1.904,295,3.591,296,2.89,298,3.071,304,4.058,307,4.058,437,3.425,469,3.256,1601,4.039,1602,4.718,1603,4.718,1604,4.718,1605,4.718,1606,4.718]],["title/injectables/UserLoginService.html",[267,0.477,453,1.967]],["body/injectables/UserLoginService.html",[3,0.168,4,0.147,9,0.147,22,0.168,23,0.541,24,1.221,30,0.62,32,0.308,35,0.49,37,0.584,38,0.021,39,0.333,40,0.363,41,0.584,43,0.96,44,1.166,49,1.422,50,0.877,51,0.877,52,1.204,54,1.305,56,0.581,63,0.334,64,0.168,65,0.026,105,1.992,118,0.009,119,0.013,120,0.009,122,1.082,194,1.204,247,1.344,267,0.62,269,1.082,271,3.561,272,2.543,279,1.204,281,1.026,286,1.675,294,1.993,315,4.522,345,3.561,387,3.195,453,2.555,482,3.421,496,1.96,926,2.352,975,1.422,977,1.991,1098,2.861,1500,4.622,1501,4.005,1502,5.007,1503,5.007,1504,5.007,1505,4.005,1507,4.005,1518,2.861,1519,2.861,1523,2.861,1527,2.861,1528,2.861,1529,2.861,1530,4.005,1607,5.343,1608,2.861,1609,4.679,1610,4.679,1611,3.342,1612,4.679,1613,3.342,1614,3.342,1615,3.342,1616,3.342,1617,4.679,1618,3.342,1619,3.342,1620,3.342,1621,3.342,1622,3.342,1623,3.342,1624,3.342,1625,3.342,1626,3.342,1627,4.679,1628,3.342,1629,3.342]],["title/injectables/UserRegisterService.html",[146,1.967,267,0.477]],["body/injectables/UserRegisterService.html",[3,0.249,4,0.217,9,0.217,22,0.249,25,1.439,30,0.802,32,0.455,35,0.426,37,0.604,38,0.021,39,0.344,40,0.281,41,0.604,43,0.743,56,0.651,63,0.493,64,0.249,65,0.039,118,0.013,119,0.016,120,0.013,122,1.599,146,3.303,194,1.779,267,0.802,269,1.599,279,1.779,281,1.517,286,1.588,926,2.628,975,2.101,977,2.101,980,3.129,982,2.697,984,4.227,1468,3.408,1469,3.129,1607,4.975,1630,4.227,1631,6.048,1632,4.938,1633,6.048,1634,4.938,1635,4.938,1636,4.938]],["title/injectables/UserService.html",[267,0.477,1286,2.282]],["body/injectables/UserService.html",[3,0.253,4,0.221,9,0.221,30,0.667,32,0.464,35,0.355,37,0.502,38,0.021,39,0.286,40,0.286,41,0.502,56,0.659,63,0.502,64,0.253,65,0.039,118,0.014,119,0.017,120,0.014,122,1.629,194,1.812,267,0.811,269,1.629,279,1.812,281,1.546,286,1.73,294,1.629,926,2.757,975,2.141,977,2.603,1286,3.876,1356,3.83,1637,4.307,1638,5.032,1639,5.032,1640,5.032,1641,5.032,1642,5.032,1643,5.032,1644,5.032,1645,5.032]],["title/injectables/ValidateTokenService.html",[267,0.477,1412,2.486]],["body/injectables/ValidateTokenService.html",[3,0.249,4,0.217,9,0.217,22,0.249,25,1.439,30,0.802,32,0.455,35,0.426,37,0.604,38,0.021,39,0.344,40,0.281,41,0.604,43,0.743,56,0.651,63,0.493,64,0.249,65,0.039,118,0.013,119,0.016,120,0.013,122,1.599,194,1.779,267,0.802,269,1.599,279,1.779,281,1.517,286,1.296,926,2.739,975,2.101,977,2.574,982,2.697,1412,4.174,1468,3.408,1469,3.129,1646,5.596,1647,4.227,1648,6.538,1649,4.938,1650,6.048,1651,4.938,1652,4.938,1653,4.938]],["title/coverage.html",[1654,4.218]],["body/coverage.html",[0,0.824,1,0.853,9,0.135,10,2.64,11,1.809,12,2.64,38,0.021,40,0.175,57,1.809,65,0.052,81,0.853,83,0.853,85,0.853,88,0.81,90,0.853,92,0.853,94,0.768,97,0.81,99,0.853,102,0.729,104,0.853,107,0.81,109,0.81,110,0.729,112,0.853,114,0.81,118,0.008,119,0.012,120,0.008,121,2.64,142,1.954,143,1.684,144,1.954,145,1.809,146,1.684,167,2.347,168,2.347,191,1.954,196,2.347,204,1.809,220,2.347,221,2.129,223,1.809,229,2.129,238,0.999,267,0.938,268,2.347,270,2.64,289,1.809,291,3.197,292,2.64,294,0.999,308,2.64,365,3.364,366,1.24,375,1.313,381,2.129,434,1.809,436,3.566,438,1.575,441,1.809,443,1.954,453,1.684,457,1.954,565,2.64,571,1.809,572,2.64,577,2.64,634,2.129,783,2.129,784,2.64,785,2.64,803,2.64,867,2.64,868,2.64,876,2.129,911,2.64,912,2.64,972,2.64,973,2.64,979,1.954,985,2.64,1009,5.203,1059,2.64,1076,2.64,1077,2.347,1079,2.64,1080,2.64,1138,2.64,1139,2.64,1157,2.64,1167,2.64,1203,2.64,1214,2.64,1272,2.64,1286,1.954,1306,2.129,1404,2.64,1405,2.64,1412,2.129,1414,2.129,1461,2.64,1462,2.64,1470,2.64,1471,2.64,1498,2.64,1499,2.64,1531,2.64,1565,2.64,1569,2.347,1570,2.64,1578,2.64,1579,2.64,1589,2.64,1590,2.64,1601,2.64,1607,3.364,1608,2.64,1630,2.64,1637,2.64,1646,2.64,1647,2.64,1654,2.64,1655,3.084,1656,3.084,1657,3.084,1658,5.167,1659,5.643,1660,3.084,1661,2.64,1662,5.974,1663,6.216,1664,6.549,1665,3.084,1666,3.084,1667,4.421,1668,5.167,1669,4.421,1670,4.421,1671,3.084,1672,4.421,1673,3.084,1674,3.084,1675,3.084,1676,3.084,1677,3.084,1678,3.084,1679,3.084,1680,3.084,1681,3.084,1682,3.084,1683,2.64,1684,2.64,1685,5.643,1686,3.784,1687,2.64,1688,3.784,1689,2.64,1690,2.64,1691,3.084,1692,3.084]],["title/dependencies.html",[131,2.992,1693,3.001]],["body/dependencies.html",[38,0.021,63,0.491,118,0.013,119,0.016,120,0.013,131,3.392,133,3.741,156,5.162,157,4.59,171,2.092,184,2.357,199,5.162,200,3.741,201,4.207,226,4.59,227,4.162,228,3.741,233,2.883,234,2.684,235,2.684,254,2.092,636,3.741,1694,4.915,1695,6.22,1696,4.915,1697,6.031,1698,4.915,1699,4.915,1700,4.915,1701,4.207,1702,4.915,1703,4.915,1704,4.915,1705,4.915,1706,4.915,1707,4.915,1708,4.915,1709,4.915,1710,4.915,1711,4.915,1712,4.915,1713,4.915,1714,4.915,1715,4.915]],["title/miscellaneous/functions.html",[1716,2.071,1717,3.71]],["body/miscellaneous/functions.html",[22,0.285,37,0.565,38,0.019,39,0.322,41,0.565,118,0.015,119,0.018,120,0.015,1306,4.529,1661,4.848,1716,3.909,1717,4.848,1718,5.664,1719,5.664,1720,6.563,1721,5.664]],["title/index.html",[22,0.151,1722,3.001,1723,3.001]],["body/index.html",[0,0.74,4,0.206,15,1.299,38,0.016,39,0.267,118,0.013,119,0.016,120,0.013,126,4.021,148,2.755,238,1.521,397,4.021,505,4.047,676,4.021,850,5.73,1070,5.019,1105,4.021,1695,4.021,1701,5.472,1724,5.864,1725,4.697,1726,6.393,1727,4.697,1728,4.697,1729,6.89,1730,7.128,1731,4.697,1732,4.697,1733,4.697,1734,4.697,1735,4.697,1736,4.697,1737,4.697,1738,4.697,1739,4.697,1740,6.393,1741,6.393,1742,4.697,1743,6.89,1744,4.697,1745,4.697,1746,4.697,1747,4.697,1748,4.697,1749,4.697,1750,4.021,1751,5.864,1752,6.695,1753,5.864,1754,5.864,1755,4.697,1756,4.697,1757,4.697,1758,4.697,1759,6.393,1760,4.697,1761,4.697,1762,4.697]],["title/modules.html",[130,3.122]],["body/modules.html",[38,0.018,118,0.016,119,0.018,120,0.016,129,3.962,130,3.637,141,3.637,157,4.369,1763,5.741,1764,5.741,1765,6.614,1766,5.741,1767,5.741]],["title/overview.html",[1768,4.218]],["body/overview.html",[1,1.641,2,1.299,38,0.02,73,1.232,81,1.901,83,1.641,85,1.641,88,1.558,90,1.641,92,1.641,94,1.478,97,1.558,99,1.641,102,1.402,104,1.641,107,1.558,109,1.558,110,0.948,112,1.641,114,1.558,118,0.011,119,0.014,120,0.011,128,2.769,129,5.278,130,2.542,131,2.769,132,3.435,133,3.054,134,3.435,135,3.054,136,3.435,137,3.435,138,3.435,139,3.435,140,3.435,141,3.759,142,3.759,143,3.24,144,3.759,145,3.48,146,3.24,147,4.536,148,2.353,252,2.769,269,1.299,290,1.811,434,2.353,697,2.542,734,3.435,1326,3.435,1768,3.435,1769,4.013,1770,4.013,1771,4.013]],["title/routes.html",[252,3.401]],["body/routes.html",[38,0.018,118,0.016,119,0.018,120,0.016,252,4.061]],["title/classes/teamList.html",[65,0.028,979,2.282]],["body/classes/teamList.html",[3,0.27,4,0.236,9,0.236,22,0.27,23,0.735,24,1.142,32,0.494,35,0.448,37,0.535,38,0.019,39,0.305,40,0.362,41,0.535,54,1.217,64,0.27,65,0.042,118,0.015,119,0.017,120,0.015,290,2.42,399,2.929,979,4.027,1535,5.798,1683,4.59,1772,5.363,1773,5.363,1774,5.363,1775,5.363]],["title/miscellaneous/variables.html",[1716,2.071,1776,3.71]],["body/miscellaneous/variables.html",[22,0.262,38,0.02,40,0.395,50,1.756,51,1.756,52,2.249,118,0.014,119,0.017,120,0.014,247,2.093,298,2.495,494,4.309,1684,4.455,1686,5.937,1687,4.455,1688,4.455,1689,5.344,1690,5.344,1716,3.592,1750,5.344,1776,4.455,1777,6.244,1778,5.205,1779,5.205,1780,5.205,1781,5.205]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1400,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"overview.html":{}}}],["1/9",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1695,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["100px",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["11",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1457,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["15",{"_index":1770,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1769,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1fr",{"_index":1398,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1394,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200px",{"_index":1403,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":773,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{}}}],["23",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["236",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["23px",{"_index":775,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{}}}],["25px",{"_index":1460,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["2a$10$lid/pd76qod0ctife1nfg.ruhb56krgfxocqteajk24oayabl",{"_index":1653,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["3.1.2",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["380px",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1399,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["4/23",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1564,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1395,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400px",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1392,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["50",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["500",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":564,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["5px",{"_index":777,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["65",{"_index":779,"title":{},"body":{"components/FeedComponent.html":{}}}],["70",{"_index":759,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["75",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1402,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1771,"title":{},"body":{"overview.html":{}}}],["80",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["9",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{},"overview.html":{}}}],["9.1.0",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":859,"title":{},"body":{"components/FilterComponent.html":{}}}],["936da5,#58482e",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":957,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["absolute",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1385,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acces",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["accessors",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["address",{"_index":906,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":856,"title":{},"body":{"components/FilterComponent.html":{}}}],["af4261",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["alert(\"error",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{}}}],["align",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":913,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":952,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allowing",{"_index":561,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["allurl",{"_index":914,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":951,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["along",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["already",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":1701,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["angular/compiler",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/grid",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/menu",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1456,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["application/json",{"_index":1100,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["appmodule",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["arial",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":1744,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1424,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["auth.service",{"_index":444,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1499,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1515,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1516,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1506,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:24",{"_index":1514,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1508,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:47",{"_index":1512,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:51",{"_index":1511,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:56",{"_index":1510,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:62",{"_index":1509,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth_token",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticate",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticateduser",{"_index":271,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authentication",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticationservice",{"_index":1084,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authorization",{"_index":272,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorizationservice",{"_index":268,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authreq",{"_index":1096,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["autologin",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1735,"title":{},"body":{"index.html":{}}}],["available",{"_index":1767,"title":{},"body":{"modules.html":{}}}],["background",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1622,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["basic",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["black",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["block",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":893,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":774,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":848,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["box",{"_index":560,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["browse",{"_index":1765,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":861,"title":{},"body":{"components/FilterComponent.html":{}}}],["build",{"_index":1743,"title":{},"body":{"index.html":{}}}],["button",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":780,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["calls",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["cancel",{"_index":1156,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate",{"_index":580,"title":{},"body":{"components/FeedComponent.html":{}}}],["canupdate=false",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1151,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":862,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1736,"title":{},"body":{"index.html":{}}}],["character",{"_index":1153,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checked",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checks",{"_index":549,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":65,"title":{"classes/Comment.html":{},"classes/Feed.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":290,"title":{},"body":{"classes/Comment.html":{},"classes/Feed.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":273,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1726,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["cluster_appmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1738,"title":{},"body":{"index.html":{}}}],["color",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["color:#3f51b5",{"_index":756,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#e9ebee",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":772,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":778,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":757,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1397,"title":{},"body":{"components/RegisterComponent.html":{}}}],["comment",{"_index":289,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":310,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":311,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":305,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":769,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":83,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":312,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid",{"_index":313,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror",{"_index":581,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenterror:string",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":314,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":582,"title":{},"body":{"components/FeedComponent.html":{}}}],["comments:comment",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{}}}],["communicate",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1387,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1383,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1444,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after2____\",this.user",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"date\",this.edate",{"_index":836,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["console.log(\"in",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":982,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["console.log(\"is",{"_index":1551,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"response",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"results\",this.userdata",{"_index":556,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1554,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1201,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1196,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":897,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":558,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1524,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(responce",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(responce.mesaage",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.comment",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1487,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.filteredoptions",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1495,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1556,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1262,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1082,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(description",{"_index":1159,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":379,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(getteam",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":975,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(id",{"_index":295,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(posts",{"_index":574,"title":{},"body":{"classes/Feed.html":{}}}],["constructor(private",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(proposalwork",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(router",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(sendresetlink",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(startdate",{"_index":790,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1772,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1204,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1146,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["contains",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["content",{"_index":1099,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1654,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1501,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1507,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createproposalcomponent",{"_index":85,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createurl",{"_index":1168,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1188,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creationdate",{"_index":293,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":306,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["crimson",{"_index":865,"title":{},"body":{"components/FilterComponent.html":{}}}],["cursor",{"_index":764,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["data.id=id",{"_index":1193,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1198,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1200,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":440,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1590,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1593,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1594,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":963,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":968,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1450,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1446,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":895,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1468,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["database",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["dateplusone",{"_index":809,"title":{},"body":{"components/FilterComponent.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["delay",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{}}}],["delete(id",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["deletecomment",{"_index":316,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1227,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1268,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1215,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1222,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1229,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1270,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1216,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1256,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteproposal=new",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteurl",{"_index":1169,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleteurl=\"http://localhost:8080/proposal/delete",{"_index":1191,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleting",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{}}}],["delproposal",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":369,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["description:string",{"_index":1212,"title":{},"body":{"classes/Proposal.html":{}}}],["details",{"_index":1427,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["dev",{"_index":1732,"title":{},"body":{"index.html":{}}}],["development",{"_index":1728,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":370,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog,public",{"_index":400,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":57,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogtitle",{"_index":371,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1742,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1747,"title":{},"body":{"index.html":{}}}],["disliking",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":781,"title":{},"body":{"components/FeedComponent.html":{}}}],["dist",{"_index":1746,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1635,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":902,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1609,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1612,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1631,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1633,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":909,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1756,"title":{},"body":{"index.html":{}}}],["edate",{"_index":806,"title":{},"body":{"components/FilterComponent.html":{}}}],["eedate",{"_index":841,"title":{},"body":{"components/FilterComponent.html":{}}}],["eedate:date",{"_index":840,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1154,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":437,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emitdata",{"_index":1591,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1592,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["end",{"_index":850,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":786,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":800,"title":{},"body":{"classes/FeedParams.html":{}}}],["enter",{"_index":904,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["environment",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["error'},{'name",{"_index":89,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":566,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":567,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["errorcomponent",{"_index":88,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":452,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["etc",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eventemitter",{"_index":325,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["execute",{"_index":1753,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1421,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["exists",{"_index":903,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{}}}],["f",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{}}}],["false",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":571,"title":{"classes/Feed.html":{}},"body":{"classes/Feed.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["feed'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":578,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":579,"title":{},"body":{"components/FeedComponent.html":{}}}],["feedcomponent",{"_index":90,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":783,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["field",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1737,"title":{},"body":{"index.html":{}}}],["fill",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":804,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":805,"title":{},"body":{"components/FilterComponent.html":{}}}],["filtercomponent",{"_index":92,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredoptions",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filteredteams",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filterusers",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fixed",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1749,"title":{},"body":{"index.html":{}}}],["flag=false",{"_index":1493,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1489,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["following",{"_index":1147,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1490,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1477,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["forgetpasswordcomponent",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":892,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgotten",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":449,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":445,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1388,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1486,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1584,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1587,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1483,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1717,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1758,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1401,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1740,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1725,"title":{},"body":{"index.html":{}}}],["getall",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["getallnextpost",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":960,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":958,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1223,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1231,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1266,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1217,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1252,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getf",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1224,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1233,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1264,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1218,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1255,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1502,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposalsservice",{"_index":142,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{},"overview.html":{}}}],["getteam",{"_index":974,"title":{},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["getteam():observable",{"_index":981,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["getteamnextpost",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":965,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":962,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1571,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1576,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteamservice",{"_index":143,"title":{"injectables/GetTeamService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":1722,"title":{"index.html":{}},"body":{}}],["getyournextpost",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":970,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":940,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":967,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1761,"title":{},"body":{"index.html":{}}}],["google",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1766,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":852,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1396,"title":{},"body":{"components/RegisterComponent.html":{}}}],["h1",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["handle(responce",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handlelogin",{"_index":551,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["happened",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{}}}],["headers",{"_index":1098,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:50px",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:60px",{"_index":763,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:auto",{"_index":767,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{}}}],["help",{"_index":1759,"title":{},"body":{"index.html":{}}}],["here",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{}}}],["hidden",{"_index":762,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["hide",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["home',component:homecomponent",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":97,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":977,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["http://localhost:4200",{"_index":1734,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1623,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1245,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1241,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1239,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":942,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":948,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":945,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1180,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1182,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1184,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1186,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1574,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1247,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1243,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1249,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":980,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["httpclientmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1092,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1088,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1093,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1091,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1077,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1086,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1451,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":304,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1213,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1197,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(data!=null",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data1==\"email",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status!=200",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(error.status==200",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(flag",{"_index":1494,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1497,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1496,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(team.id==item.id",{"_index":1492,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.loginform.valid",{"_index":552,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.post.user.id==this.userid",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":845,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":851,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(user!=null",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["image:linear",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":309,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["incase",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["information",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["initialiseformgroup",{"_index":1580,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["injectable",{"_index":267,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1596,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"overview.html":{}}}],["input",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["input,output,eventemitter",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":318,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["intercept",{"_index":1081,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1085,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1076,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1080,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1089,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1083,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1078,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":434,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":435,"title":{},"body":{"interfaces/DialogData.html":{}}}],["invalid",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1136,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1503,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{}}}],["item.value.tolowercase().includes(this.selectedteam.tolowercase",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iteration",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1469,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["json.parse(this.authenticateduser",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["jsonpipe",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1755,"title":{},"body":{"index.html":{}}}],["key",{"_index":1583,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1393,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["landingpagecomponent",{"_index":99,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{}}}],["lato",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":860,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":782,"title":{},"body":{"components/FeedComponent.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1155,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1149,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":771,"title":{},"body":{"components/FeedComponent.html":{}}}],["likesetup",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["link'},{'name",{"_index":111,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1406,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1407,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1405,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:19",{"_index":1434,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1436,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1433,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1435,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1431,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:24",{"_index":1415,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:27",{"_index":1430,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:33",{"_index":1416,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:61",{"_index":1426,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:69",{"_index":1423,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:78",{"_index":1417,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.service",{"_index":891,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["link.service.ts",{"_index":1471,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["link.service.ts:10",{"_index":1476,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:12",{"_index":1475,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:8",{"_index":1473,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link/reset",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":298,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loggedin",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1608,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1620,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1621,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1619,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1610,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:21",{"_index":1613,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:31",{"_index":1611,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1618,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1616,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:45",{"_index":1615,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:51",{"_index":1614,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginservice",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1504,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["logs",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["long",{"_index":1378,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1150,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":910,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["makes",{"_index":1418,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["mandatory",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["map",{"_index":1518,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":761,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["matbuttonmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1384,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":380,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1484,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":396,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matdividermodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matgridlistmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matmenumodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":443,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["message:string",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["method",{"_index":548,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["minimum",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1716,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1760,"title":{},"body":{"index.html":{}}}],["moz",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1442,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":457,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1558,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":307,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1733,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":857,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":807,"title":{},"body":{"components/FilterComponent.html":{}}}],["next",{"_index":1087,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1103,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1104,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1730,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":451,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":317,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{}}}],["nocomments:boolean=true",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["none",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["notified",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["null",{"_index":387,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":296,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{}}}],["numberlikes:number",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["observer",{"_index":1597,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["occured",{"_index":570,"title":{},"body":{"components/ErrorComponent.html":{},"components/FeedComponent.html":{}}}],["ok",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onsubmit",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":758,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialog",{"_index":562,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialogshare",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{}}}],["opens",{"_index":559,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["out",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":320,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["overview",{"_index":1768,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1693,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":760,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{}}}],["page",{"_index":787,"title":{},"body":{"classes/FeedParams.html":{},"injectables/SocialMediaAuthService.html":{}}}],["page'},{'name",{"_index":101,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.ts",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["page/comment",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":292,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:1",{"_index":299,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:3",{"_index":302,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":300,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:5",{"_index":301,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:6",{"_index":303,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":308,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:10",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:11",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:12",{"_index":328,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:13",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:14",{"_index":324,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:17",{"_index":322,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:21",{"_index":327,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:29",{"_index":326,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:9",{"_index":323,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":577,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:117",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:148",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:152",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:156",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:16",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:166",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:17",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:18",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:19",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:20",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:21",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:22",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:23",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:24",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:25",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:26",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:27",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:28",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:29",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:30",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:31",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:32",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:33",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:34",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:41",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:50",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:83",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:92",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":803,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:14",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:15",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:16",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:17",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:18",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:26",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:27",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:33",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:36",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:41",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:65",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:71",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1214,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:10",{"_index":1242,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:11",{"_index":1250,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:12",{"_index":1248,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:13",{"_index":1244,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:14",{"_index":1240,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:15",{"_index":1226,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1235,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1238,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1237,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:27",{"_index":1234,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:30",{"_index":1232,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:33",{"_index":1228,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:37",{"_index":1230,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:9",{"_index":1246,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1578,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":801,"title":{},"body":{"classes/FeedParams.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":950,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["params.ts",{"_index":785,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:1",{"_index":791,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:3",{"_index":796,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:4",{"_index":793,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:5",{"_index":794,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:6",{"_index":795,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:7",{"_index":798,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":797,"title":{},"body":{"classes/FeedParams.html":{}}}],["parentfunction",{"_index":321,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1452,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":96,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:15",{"_index":889,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":887,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":888,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":1438,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1462,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1465,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1463,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1466,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":104,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{}}}],["photo",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1626,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":765,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1458,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["post",{"_index":204,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"classes/Post.html":{},"coverage.html":{}}}],["post.description",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1257,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenterror:string",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1219,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1251,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1225,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1236,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1261,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1220,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1254,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlike",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1259,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1221,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1253,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1173,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1176,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1195,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":144,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":573,"title":{},"body":{"classes/Feed.html":{},"components/FilterComponent.html":{}}}],["private",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["priyanka",{"_index":1425,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["process",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":810,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1748,"title":{},"body":{"index.html":{}}}],["production",{"_index":1750,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1724,"title":{},"body":{"index.html":{}}}],["prop",{"_index":372,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":366,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":87,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.component.css",{"_index":367,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":368,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":365,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:10",{"_index":382,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:11",{"_index":384,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:12",{"_index":390,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:13",{"_index":391,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:14",{"_index":394,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:15",{"_index":392,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:16",{"_index":386,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:17",{"_index":388,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:18",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:19",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:20",{"_index":385,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:21",{"_index":389,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:22",{"_index":383,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:35",{"_index":1482,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.service.ts",{"_index":1167,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:10",{"_index":1181,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:11",{"_index":1187,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:12",{"_index":1185,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:13",{"_index":1175,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:15",{"_index":1179,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:19",{"_index":1177,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:9",{"_index":1183,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposals.service",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["proposals.service.ts",{"_index":912,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:10",{"_index":944,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:11",{"_index":943,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:12",{"_index":947,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:13",{"_index":946,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:14",{"_index":949,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:15",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:18",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:22",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:31",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:35",{"_index":941,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:41",{"_index":939,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":145,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["protractor",{"_index":1757,"title":{},"body":{"index.html":{}}}],["provide",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":279,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["provider",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["put",{"_index":1419,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["radius",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1762,"title":{},"body":{"index.html":{}}}],["receive",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["register",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register',component:registercomponent",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register(user",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":1273,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1630,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:14",{"_index":1634,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:8",{"_index":1632,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["registerform",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1505,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1617,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["reload",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["req",{"_index":1090,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1097,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1095,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1420,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":907,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["res[\"name",{"_index":1525,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlink",{"_index":1472,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink(data",{"_index":1474,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink/:token",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":109,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1408,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetpassword",{"_index":1413,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1464,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":1414,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["resp",{"_index":984,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["response'},{'name",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["rgb(211",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(238",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["routermodule",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["routermodule.forroot(routes",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":252,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1729,"title":{},"body":{"index.html":{}}}],["running",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["rxjs",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1519,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sans",{"_index":1390,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["saved",{"_index":1422,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["saying",{"_index":1429,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sbsi",{"_index":1379,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1739,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sdate",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["select",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selected",{"_index":1480,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selected(team",{"_index":1481,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selecteduser",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selection",{"_index":1380,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":858,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":863,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":900,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["senddata",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{}}}],["sendresetlink",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendresetlinkservice",{"_index":876,"title":{"injectables/SendResetLinkService.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["sends",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sent",{"_index":908,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":373,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1170,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1391,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1731,"title":{},"body":{"index.html":{}}}],["server",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["service",{"_index":374,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TransferDataService.html":{}}}],["service.service",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1579,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":1586,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:17",{"_index":1582,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:7",{"_index":1581,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/get",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/reset",{"_index":1437,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service/send",{"_index":890,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["service/social",{"_index":442,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":439,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/validate",{"_index":1439,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["session",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sessionstorage.clear",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1530,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1529,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1527,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["share",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["shareproposal",{"_index":1174,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1178,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1192,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":112,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1171,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1190,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shine",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":766,"title":{},"body":{"components/FeedComponent.html":{}}}],["showing",{"_index":1428,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sign",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["signed",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":802,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1513,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(frontend",{"_index":1520,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":441,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["socialuser",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["spacing",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1152,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1145,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs",{"_index":1140,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":106,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1141,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1142,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1139,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1144,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1143,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":270,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:16",{"_index":278,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:7",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:9",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":565,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":568,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":569,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":784,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/feed.ts",{"_index":572,"title":{},"body":{"classes/Feed.html":{},"coverage.html":{}}}],["src/app/feed.ts:1",{"_index":575,"title":{},"body":{"classes/Feed.html":{}}}],["src/app/feed.ts:3",{"_index":576,"title":{},"body":{"classes/Feed.html":{}}}],["src/app/forget",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":911,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":291,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":436,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:111",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:134",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":1137,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:48",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:57",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:72",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:87",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1138,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1157,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:1",{"_index":1160,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:3",{"_index":1161,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1162,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:5",{"_index":1163,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:6",{"_index":1164,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1165,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:8",{"_index":1166,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1203,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:1",{"_index":1205,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:3",{"_index":1210,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:4",{"_index":1209,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:5",{"_index":1206,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:6",{"_index":1208,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:7",{"_index":1207,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1272,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:106",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:40",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:51",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:60",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:87",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1404,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/get",{"_index":972,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1079,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1461,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/send",{"_index":1470,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1498,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1589,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1607,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/service/validate",{"_index":1646,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1531,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1542,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1546,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1541,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1545,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1544,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1548,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:26",{"_index":1547,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:27",{"_index":1536,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1540,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:36",{"_index":1543,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:40",{"_index":1539,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:48",{"_index":1537,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:64",{"_index":1538,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1683,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1773,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1774,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1570,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1573,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1572,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1565,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1566,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1567,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1568,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.service.ts",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user.service.ts:7",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.ts",{"_index":1601,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":1602,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":1604,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1605,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":1603,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":1606,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":849,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":788,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":799,"title":{},"body":{"classes/FeedParams.html":{}}}],["started",{"_index":1723,"title":{"index.html":{}},"body":{}}],["state",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["stored",{"_index":1745,"title":{},"body":{"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["stroke",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1389,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1595,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submit",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":550,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["subscriber",{"_index":1598,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["successful",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["successmessage",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1432,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1455,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["such",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["support",{"_index":1763,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1764,"title":{},"body":{"modules.html":{}}}],["system",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["table",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["team',component:teamcomponent",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team.component.css",{"_index":1532,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1533,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["team.service.ts",{"_index":973,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["team.service.ts:13",{"_index":978,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team.service.ts:9",{"_index":976,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team/team.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":114,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1534,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":789,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":979,"title":{"classes/teamList.html":{}},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1535,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1775,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":915,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":954,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{}}}],["teams",{"_index":375,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams:any",{"_index":1549,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teamsservice",{"_index":1569,"title":{"injectables/TeamsService.html":{}},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":953,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility",{"_index":376,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["teamvisibility=true",{"_index":403,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1386,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1752,"title":{},"body":{"index.html":{}}}],["testserviceservice",{"_index":381,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":864,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":961,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":959,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":966,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":964,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":971,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":969,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1094,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1102,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1562,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1625,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":843,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.post.description",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1491,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":563,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":838,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":846,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.error=\"email",{"_index":901,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":899,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.filteredoptions",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":894,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1588,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getteam.getteam().subscribe",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.delete(`${config.apiurl}/users/${id",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":983,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["this.http.get(`${config.apiurl}/users",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1624,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1577,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgotpassword",{"_index":1478,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["this.http.post(\"http://localhost:8080/getsocialinfo\",data[\"data1\"],{responsetype:'text",{"_index":1521,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1636,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validate_token",{"_index":1652,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["this.http.post(`${config.apiurl}/users/register",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1522,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1199,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1269,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1271,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1267,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1265,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1258,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1263,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1260,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1194,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1202,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/reset_password",{"_index":1467,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":410,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":898,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform.get('email').value",{"_index":553,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe((result",{"_index":554,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.message",{"_index":847,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"email",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.message=responce.message",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.msg=\"your",{"_index":1454,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":837,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":839,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.nocomments=false",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.observer.asobservable",{"_index":1599,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.observer.next(data",{"_index":1600,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":855,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1627,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.postcommenterror=\"some",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.prop",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":417,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1526,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1628,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1528,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1523,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1443,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1453,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.responsedialog",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":547,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.router.navigate(['/welcome",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":844,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.data",{"_index":853,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":854,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sendresetlink.resetlink(data).subscribe",{"_index":896,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1488,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.share.emit(this.post",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1555,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1563,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1557,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.filter",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.teams=data",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1445,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":546,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.transferdataservice.subscriber.subscribe(data",{"_index":1550,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.update.emit(post",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1485,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata",{"_index":557,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1560,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1559,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1553,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=data",{"_index":1552,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":555,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1561,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validatetoken.tokenverification(data).subscribe",{"_index":1447,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=false",{"_index":1449,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1448,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["timing",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":377,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1211,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1409,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service",{"_index":1440,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service.ts",{"_index":1647,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["token.service.ts:12",{"_index":1651,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["token.service.ts:8",{"_index":1649,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification",{"_index":1648,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification(data",{"_index":1650,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tools",{"_index":866,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":776,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1517,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["transferdataservice",{"_index":438,"title":{"injectables/TransferDataService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{}}}],["transferdataservice:transferdataservice",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["tslib",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["typepost",{"_index":808,"title":{},"body":{"components/FilterComponent.html":{}}}],["typepost=\"teampost",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["udata",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unit",{"_index":1751,"title":{},"body":{"index.html":{}}}],["up",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{}}}],["update=new",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateform",{"_index":1479,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1172,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1189,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["uppercase",{"_index":1148,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{}}}],["upvotescount",{"_index":1158,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1575,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1741,"title":{},"body":{"index.html":{}}}],["user",{"_index":294,"title":{"classes/User.html":{}},"body":{"classes/Comment.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user_name_session_attribute_name",{"_index":1500,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":319,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":453,"title":{"injectables/UserLoginService.html":{}},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["username",{"_index":315,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":146,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1286,"title":{"injectables/UserService.html":{}},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":905,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validatetoken",{"_index":1411,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validatetokenservice",{"_index":1412,"title":{"injectables/ValidateTokenService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["validator",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":448,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1585,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1410,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1441,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":378,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["values:testserviceservice",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1776,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1727,"title":{},"body":{"index.html":{}}}],["via",{"_index":1754,"title":{},"body":{"index.html":{}}}],["view",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{}}}],["visibility",{"_index":1382,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1381,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":768,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["webkit",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["white",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["whitesmoke",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:35",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1459,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:87",{"_index":770,"title":{},"body":{"components/FeedComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1101,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1629,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["write",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{}}}],["yes",{"_index":792,"title":{},"body":{"classes/FeedParams.html":{},"classes/Proposal.html":{}}}],["yourdate.setdate(yourdate.getdate",{"_index":842,"title":{},"body":{"components/FilterComponent.html":{}}}],["yournexturl",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":956,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":955,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["z0",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n \n  onNoClick(): void {\n    \n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            GetTeamService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { GetTeamService } from './service/get-team.service';\nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\nimport { from } from 'rxjs';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    GetTeamService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  authenticatedUser:string\n  constructor(private router:Router) { }\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        public id:number,\n        public comment:string,\n        public creationDate:Date,\n        public user:{\n            id:number,\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commentData\n                            \n                            \n                                    Public\n                                commentedUserId\n                            \n                            \n                                    Public\n                                commentId\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/comment/comment.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comment\n                    \n                \n                \n                    \n                        Type :         Comment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentedUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\nimport {Comment} from 'src/app/landing-page/comment'\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  @Input() comment:Comment;\n  public commentId;\n  public userName;\n  public commentData;\n  public commentedUserId:number;\n  @Input() userId:number;\n\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n     console.log(this.comment)\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n  }\n\n  deleteComment()\n  {\n\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                prop\n                            \n                            \n                                sentTeam\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                Teams\n                            \n                            \n                                teamVisibility\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, service: TestServiceService, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TestServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Create Proposal\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prop\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sentTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TestServiceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TestServiceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n  sentTeam=[]\n  Teams:{}[]=[]\n  userId:string\n  teamVisibility=true\n  dialogTitle:string=\"Create Proposal\"\n  id:number=null\n  values:TestServiceService;\n  public tit \n  public descrip\n  public prop\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feed.html":{"url":"classes/Feed.html","title":"class - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(posts: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        posts\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            posts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Feed {\n    constructor(\n        public posts:{}\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canUpdate\n                            \n                            \n                                commentError\n                            \n                            \n                                    Public\n                                comments\n                            \n                            \n                                    Public\n                                commentsMessage\n                            \n                            \n                                    Public\n                                commentVisibility\n                            \n                            \n                                    Public\n                                hasLiked\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                new_comment\n                            \n                            \n                                    Public\n                                noComments\n                            \n                            \n                                    Public\n                                numberLikes\n                            \n                            \n                                postCommentError\n                            \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                            \n                                type\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        post\n                    \n                \n                \n                    \n                        Type :         Post\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentsMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Comments\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasLiked\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            new_comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noComments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberLikes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  @Input() post:Post;\n  public new_comment:string;\n  public canUpdate=false;\n  public numberLikes:number;\n  public comments:Comment[]=[];\n  public noComments:boolean=true;\n  public height:number;\n  public commentVisibility=false;\n  public commentsMessage=\"Comments\";\n  commentError:string;\n  postCommentError:string;\n  @Output() update=new EventEmitter;\n  @Output() share=new EventEmitter;\n  @Output() deleteProposal=new EventEmitter;\n  @Input() userId:number;\n  @Input() type:string;\n  public hasLiked=false;\n  constructor(public proposalWork:ProposalService) { }\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          this.postCommentError=\"Some error has occured sending the comment please try again.\"\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n \n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    constructor(\n    public startDate:Date,\n    public endDate:Date,\n    public page:string,\n    public size:string,\n    public userId?,\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                eDate\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                newEdate\n                            \n                            \n                                    Public\n                                typePost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/filter/filter.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sDate\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eDate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newEdate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typePost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\nexport class FilterComponent implements OnInit {\n  @Input()\n  public sDate\n  public newEdate\n  public eDate\n  public data:Date[]\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n public message;\n\n  constructor() { \n  \n  }\n\n  ngOnInit(): void {\n  \n  }\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n  processFilter()\n  { \n    //  eeDate:Date = this.eDate;\n    //  eeDate\n\n    //  yourDate.setDate(yourDate.getDate() + 1);\n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sendResetLink: SendResetLinkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sendResetLink\n                                                  \n                                                        \n                                                                        SendResetLinkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:35\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SendResetLinkService } from './../service/send-reset-link.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private sendResetLink: SendResetLinkService ) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n/**\n * This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n */\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.sendResetLink.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n         this.error=\"Email id doesnot exists. Please try again!\"\n      \n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetProposalsService {\n  allUrl=\"http://localhost:8080/feed/all\"\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  teamUrl=\"http://localhost:8080/feed/team\"\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  yourUrl=\"http://localhost:8080/feed/create\"\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(private _http:HttpClient) { }\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetTeamService.html":{"url":"injectables/GetTeamService.html","title":"injectable - GetTeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetTeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/get-team.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/get-team.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/get-team.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { teamList } from './../teamList';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetTeamService {\n\n  constructor(private http:HttpClient) {}\n\n   getTeam():Observable{\n    console.log(\"inside GetTeam\")\n    return this.http.get(\"http://localhost:8080/getTeam\")\n    \n    // return resp\n}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:72\n                \n            \n\n\n            \n                \n                    You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:111\n                \n            \n\n\n            \n                \n                    This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:134\n                \n            \n\n\n            \n                \n                    This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:87\n                \n            \n\n\n            \n                \n                    This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n                \n              \n              \n               -->\n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                                                           -->                                        Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        public description: string,\n        public id: number,\n        public teams:[],\n        public title: string,\n        public upvotesCount: number,\n        public user: {\n            id: number,\n            name: string,\n            email: string,\n            teams:{\n                id:number,\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                deleteUrl\n                            \n                            \n                                    Public\n                                sentTeams\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deleteUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sentTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  public sentTeams:{}[]\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  private deleteUrl=\"http://localhost:8080/proposal/delete\"\n  constructor(private http:HttpClient) { }\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n  constructor(private http:HttpClient) { }\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { GetTeamService } from './../service/get-team.service';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, NgModule, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog, MatDialogModule, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\n\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n\n  ngOnInit(): void {\n   \n    \n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> {this.teams=data\n      this.filteredTeams=this.teams.slice();\n    }\n    \n    );\n    \n  }\n\n \n\n  get f() { return this.registerForm.controls; }\n\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n\n//   filteredOptions=[];\n// selectedUser: any;\n//   filterUsers() {\n//     this.filteredOptions = this.teams.filter(\n//       item => item.value.toLowerCase().includes(this.selectedTeam.toLowerCase())\n//     );\n//     console.log(this.filteredOptions);\n//   }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":\n{\n    \"name\":this.registerForm.value.team\n}\n   , \"user\":\n{\n    \"name\": this.registerForm.value.userName,\n    \"email\": this.registerForm.value.email,\n    \"password\" :this.registerForm.value.password\n\n}\n    }\n\n    }\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          console.log(data1);\n          if(data1==\"Email Id already exists !!\"){\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n            this.responseDialog()\n          }\n          else{\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n        },\n        (error)=>{\n          if(error.status==200){\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n          else{\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n          }\n        }\n      );\n\n\n}\n// handle(responce){\n//   console.log(responce)\n//   console.log(responce.mesaage)\n//   this.message=responce.message\n// }\n\n\n\n\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, validateToken: ValidateTokenService, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateToken\n                                                  \n                                                        \n                                                                        ValidateTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:78\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:69\n                \n            \n\n\n            \n                \n                    ask Priyanka\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:61\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ValidateTokenService } from './../service/validate-token.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private validateToken: ValidateTokenService,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.validateToken.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n      this.validToken=false;\n       }\n     );\n    \n  }\n/**\n * This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n/** ask Priyanka*/\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n/** \n * This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n*/\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/reset_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SendResetLinkService.html":{"url":"injectables/SendResetLinkService.html","title":"injectable - SendResetLinkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SendResetLinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/send-reset-link.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/send-reset-link.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/send-reset-link.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/send-reset-link.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendResetLinkService {\n\n  constructor(public http: HttpClient) { }\n\n  resetLink(data){\n    console.log(\"inside forgetPassword\")\n    return this.http.post(\"http://localhost:8080/forgotPassword\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                sentTeam\n                            \n                            \n                                Teams\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(team)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sentTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  sentTeam=[]\n  Teams:{}[]=[]\n\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n  updateForm: FormGroup;\n    \n\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  // socialMedia(data){\n  //   console.log(\"inside socialMedia(Frontend)\")\n  //   return this.http.post(\"http://localhost:8080/getSocialInfo\",data[\"data1\"],{responseType:'text' as 'json'})\n  // }\n\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        // this.username = res[\"name\"];\n        this.registerSuccessfulLogin();\n      }\n      // ,\n      // (error)=>{\n      //   console.log(\"error------\",error['error']);\n      //   //team page\n      //   this.transferDataService.emitData(error['error'])\n      //   this.router.navigate(['/team']);\n  \n      // }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit ,Input} from '@angular/core';\nimport { GetTeamService } from './../service/get-team.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    // this.transferDataService.subscriber.subscribe(data => {\n    //   console.log(\"Is data this?----->\",data);\n    //   this.userData=data\n    // });\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up!\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       }\n     );\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/test-service.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/test-service.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n\n  constructor() { }\n  form: FormGroup = new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  });\n  \n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n  //observer = new Subject();\n//  public subscriber = this.observer.asObservable();\n\n  emitData(data) {\n    console.log(\"inside service-------\",data);\n    this.userData = data;\n   // this.observer.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        public id:number,\n        public name:string,\n        public email:string,\n        public team:{\n            id:number,\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n    \n    \n    // return resp\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n/*  define methods here\n  getAll() {\n    return this.http.get(`${config.apiUrl}/users`);\n}\n\nregister(user) {\n    return this.http.post(`${config.apiUrl}/users/register`, user);\n}\n\ndelete(id) {\n    return this.http.delete(`${config.apiUrl}/users/${id}`);\n}*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateTokenService.html":{"url":"injectables/ValidateTokenService.html","title":"injectable - ValidateTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/validate-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/validate-token.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/validate-token.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateTokenService {\n\n  constructor(private http: HttpClient) { }\n\n  tokenVerification(data){\n    console.log(\"inside tokenVerification\")\n    return this.http.post(\"http://localhost:8080/validate_token\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n  }\n}\n\n// $2a$10$liD/Pd76Qod0CtiFE1nfg.ruHB56kRGFxOCQTEaJk24oayaBl\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/feed.ts\n            \n            class\n            Feed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                17 %\n                (4/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/service/get-team.service.ts\n            \n            injectable\n            GetTeamService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/send-reset-link.service.ts\n            \n            injectable\n            SendResetLinkService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/validate-token.service.ts\n            \n            injectable\n            ValidateTokenService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
