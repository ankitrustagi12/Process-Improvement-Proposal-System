var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.359,1,0.945]],["body/components/ApiResponseComponent.html",[0,0.565,1,1.596,2,1.53,3,0.184,4,0.161,5,1.185,6,1.185,7,1.185,8,1.185,9,0.161,10,5.85,11,4.008,12,3.132,13,1.185,14,2.139,15,1.927,16,1.702,17,4.264,18,1.452,19,5.664,20,1.452,21,4.982,22,0.184,23,0.704,24,1.179,25,1.503,26,3.106,27,4.264,28,3.438,29,4.848,30,0.618,31,6.081,32,0.536,33,3.66,34,4.03,35,0.473,36,4.982,37,0.423,38,0.02,39,0.322,40,0.405,41,0.423,42,3.66,43,0.517,44,1.116,45,3.66,46,4.982,47,3.66,48,3.66,49,1.755,50,1.124,51,1.124,52,1.471,53,3.66,54,0.696,55,3.66,56,0.565,57,2.146,58,2.785,59,2.146,60,1.471,61,1.124,62,2.146,63,0.337,64,0.184,65,0.01,66,3.66,67,3.66,68,3.66,69,3.66,70,3.66,71,3.66,72,4.264,73,1.067,74,1.613,75,1.613,76,1.185,77,1.968,78,1.185,79,3.66,80,1.185,81,0.961,82,1.185,83,0.961,84,1.185,85,0.961,86,1.124,87,1.613,88,0.912,89,1.185,90,0.961,91,1.185,92,0.961,93,1.185,94,0.865,95,1.012,96,1.185,97,0.912,98,1.185,99,0.912,100,1.067,101,1.185,102,0.82,103,1.185,104,0.961,105,0.961,106,1.185,107,0.912,108,1.185,109,0.912,110,0.82,111,1.185,112,0.961,113,1.124,114,0.912,115,0.912,116,1.185,117,1.185,118,0.01,119,0.014,120,0.01]],["title/components/AppComponent.html",[0,0.359,81,0.945]],["body/components/AppComponent.html",[0,0.617,1,1.148,2,1.721,3,0.22,4,0.192,5,1.416,6,1.416,7,1.416,8,1.416,9,0.192,13,1.416,14,2.179,15,1.962,16,1.089,18,1.633,20,1.633,22,0.22,23,0.792,35,0.308,38,0.02,39,0.319,40,0.278,50,1.343,51,1.343,54,0.831,56,0.436,63,0.403,64,0.22,65,0.012,73,1.274,74,1.814,75,1.814,76,1.416,77,2.111,78,1.416,80,1.416,81,1.712,82,1.416,83,1.148,84,1.416,85,1.148,86,1.343,87,1.814,88,1.089,89,1.416,90,1.148,91,1.416,92,1.148,93,1.416,94,1.033,95,1.21,96,1.416,97,1.089,98,1.416,99,1.089,100,1.274,101,1.416,102,0.979,103,1.416,104,1.148,105,1.148,106,1.416,107,1.089,108,1.416,109,1.089,110,0.979,111,1.416,112,1.148,113,1.343,114,1.089,115,1.089,116,1.416,117,1.416,118,0.012,119,0.015,120,0.012,121,3.743,122,1.814,123,6.184,124,5.604,125,3.627,126,4.797,127,4.372]],["title/modules/AppModule.html",[128,2.486,129,2.486]],["body/modules/AppModule.html",[1,1.542,3,0.132,4,0.116,9,0.116,11,1.542,15,0.69,16,0.655,38,0.021,56,0.747,58,2.001,60,1.057,63,0.242,64,0.132,65,0.007,73,0.767,81,1.76,83,1.542,85,1.542,88,1.463,90,1.542,92,1.542,94,1.388,95,0.727,97,1.463,99,1.463,100,1.775,102,1.316,104,1.542,105,0.69,107,1.463,109,1.463,110,0.881,112,1.542,114,1.463,118,0.007,119,0.011,120,0.007,128,1.815,129,5.176,130,1.666,131,1.815,132,4.033,133,3.586,134,4.476,135,2.001,136,2.251,137,2.251,138,2.251,139,2.251,140,2.251,141,3.722,142,3.446,143,3.209,144,3.446,145,3.446,146,3.209,147,3.367,148,1.542,149,2.63,150,3.367,151,2.001,152,2.001,153,1.542,154,2.001,155,3.934,156,3.367,157,2.001,158,2.715,159,2.63,160,2.63,161,3.934,162,2.63,163,3.934,164,2.63,165,2.251,166,2.251,167,2.001,168,1.815,169,2.994,170,2.492,171,1.674,172,3.934,173,4.712,174,1.666,175,2.715,176,1.815,177,1.542,178,2.715,179,1.815,180,3.934,181,2.63,182,3.367,183,2.251,184,1.261,185,4.712,186,2.63,187,3.934,188,2.63,189,3.934,190,2.63,191,1.666,192,2.001,193,3.934,194,0.947,195,1.815,196,1.815,197,2.251,198,3.934,199,2.251,200,2.001,201,2.001,202,2.63,203,2.63,204,1.187,205,2.001,206,2.251,207,3.934,208,2.63,209,2.63,210,3.934,211,2.63,212,3.934,213,2.63,214,3.934,215,2.251,216,3.934,217,2.63,218,2.63,219,2.63,220,2.001,221,1.666,222,2.251,223,1.542,224,1.815,225,3.934,226,2.001,227,1.666,228,1.542,229,1.815,230,2.251,231,3.934,232,5.23,233,2.148,234,2.009,235,1.886,236,2.715,237,2.63,238,1.447,239,1.496,240,3.934,241,3.934,242,2.63,243,2.63,244,2.63,245,2.63,246,2.63,247,1.119,248,2.63,249,2.63]],["title/modules/AppRoutingModule.html",[128,2.486,141,2.282]],["body/modules/AppRoutingModule.html",[3,0.246,4,0.215,9,0.215,38,0.021,56,0.73,58,3.723,63,0.451,64,0.246,65,0.013,88,1.218,97,1.218,99,1.218,100,1.426,102,1.096,107,1.218,109,1.218,110,1.096,114,1.218,118,0.013,119,0.016,120,0.013,130,3.099,135,3.723,141,3.809,150,4.187,158,4.15,165,4.187,166,4.187,183,4.187,196,3.376,197,4.187,222,4.187,229,3.376,230,4.187,250,4.891,251,4.891,252,4.493,253,4.15,254,1.967,255,2.499,256,7.261,257,4.891,258,4.891,259,4.891,260,4.891,261,4.891,262,4.891,263,4.891,264,4.891,265,4.891,266,4.891]],["title/injectables/AuthorizationService.html",[267,0.477,268,2.486]],["body/injectables/AuthorizationService.html",[3,0.233,4,0.203,9,0.203,22,0.233,23,0.821,25,1.371,30,0.72,32,0.625,35,0.469,37,0.535,38,0.021,39,0.263,40,0.369,41,0.535,43,0.941,44,1.035,54,1.206,56,0.579,63,0.426,64,0.233,65,0.012,118,0.013,119,0.016,120,0.013,122,1.496,235,2.783,254,1.858,267,0.769,268,4.006,269,1.496,270,3.956,271,4.417,272,5.066,273,6.656,274,3.956,275,3.4,276,5.804,277,4.622,278,3.904,279,3.158,280,3.191,281,5.804,282,1.413,283,2.965,284,4.622,285,4.968,286,1.665,287,4.622,288,2.085,289,1.967,290,3.956,291,4.622,292,4.622,293,4.622,294,1.213,295,4.622,296,4.622]],["title/classes/Comment.html",[65,0.01,297,2.112]],["body/classes/Comment.html",[3,0.224,4,0.195,9,0.195,22,0.224,23,0.801,24,1.319,25,1.339,32,0.61,35,0.478,37,0.515,38,0.02,39,0.322,40,0.461,41,0.515,54,1.289,64,0.224,65,0.012,118,0.012,119,0.015,120,0.012,239,2.636,280,2.133,282,1.528,297,4.324,298,2.133,299,3.127,300,3.809,301,1.603,302,4.45,303,6.565,304,3.387,305,2.654,306,4.679,307,3.951,308,4.45,309,4.45,310,5.521,311,4.45,312,4.851,313,4.45,314,4.851,315,4.45,316,5.667,317,3.911,318,4.45,319,4.45,320,3.071]],["title/components/CommentComponent.html",[0,0.359,83,0.945]],["body/components/CommentComponent.html",[0,0.65,1,0.858,2,1.415,3,0.165,4,0.144,5,1.058,6,1.058,7,1.058,8,1.058,9,0.144,13,1.058,14,2.111,15,1.901,16,0.814,18,1.343,20,1.343,22,0.165,24,1.041,25,1.261,30,0.571,32,0.352,35,0.408,38,0.021,39,0.304,40,0.293,43,0.651,44,1.195,56,0.46,61,1.639,63,0.301,64,0.165,65,0.009,73,0.953,74,1.492,75,1.492,76,1.058,77,1.875,78,1.058,80,1.058,81,0.858,82,1.058,83,1.664,84,1.058,85,0.858,86,1.004,87,1.492,88,0.814,89,1.058,90,1.745,91,1.058,92,0.858,93,1.058,94,0.772,95,0.904,96,1.058,97,0.814,98,1.058,99,0.814,100,0.953,101,1.058,102,0.732,103,1.058,104,0.858,105,0.858,106,1.058,107,0.814,108,1.058,109,0.814,110,0.732,111,1.058,112,0.858,113,1.004,114,0.814,115,0.814,116,1.058,117,1.058,118,0.009,119,0.013,120,0.009,238,1.004,279,2.079,282,0.978,283,2.354,288,2.859,297,3.819,299,2.859,301,1.178,305,1.391,321,2.798,322,2.919,323,4.409,324,3.507,325,3.944,326,1.415,327,5.336,328,4.608,329,4.959,330,1.875,331,3.944,332,2.959,333,3.507,334,4.608,335,3.269,336,2.919,337,3.507,338,3.269,339,4.608,340,3.269,341,2.203,342,4.608,343,4.608,344,3.944,345,3.944,346,2.702,347,3.269,348,3.18,349,3.944,350,3.269,351,3.269,352,3.381,353,3.269,354,2.798,355,3.682,356,5.336,357,3.269,358,2.798,359,2.798,360,2.488,361,3.269,362,3.269,363,3.269,364,3.269,365,3.269,366,3.269,367,2.488,368,3.269,369,3.269,370,3.269,371,3.269,372,3.944,373,1.785,374,1.917,375,2.256,376,2.488,377,2.798,378,3.269,379,3.944,380,1.67,381,2.256,382,2.798,383,3.269,384,1.785,385,2.516,386,1.314]],["title/components/CreateProposalComponent.html",[0,0.359,85,0.945]],["body/components/CreateProposalComponent.html",[0,0.644,1,0.83,2,1.382,3,0.159,4,0.139,5,1.024,6,1.024,7,1.024,8,1.024,9,0.139,13,1.024,14,2.102,15,1.894,16,0.788,18,1.312,20,1.312,22,0.159,23,0.636,24,1.184,25,0.747,30,0.558,35,0.402,38,0.021,39,0.256,40,0.201,43,0.447,44,0.708,54,0.601,56,0.523,60,1.271,61,1.609,62,1.855,63,0.292,64,0.159,65,0.008,73,0.922,74,1.457,75,1.457,76,1.024,77,1.848,78,1.024,80,1.024,81,0.83,82,1.024,83,0.83,84,1.024,85,1.498,86,2.025,87,1.457,88,0.788,89,1.024,90,0.83,91,1.024,92,0.83,93,1.024,94,0.747,95,0.875,96,1.024,97,0.788,98,1.024,99,0.788,100,1.527,101,1.024,102,0.708,103,1.024,104,0.83,105,0.83,106,1.024,107,0.788,108,1.024,109,0.788,110,0.708,111,1.024,112,0.83,113,0.971,114,0.788,115,0.788,116,1.024,117,1.024,118,0.009,119,0.012,120,0.009,125,3.347,167,4.59,168,4.163,177,3.537,239,1.712,279,2.031,282,0.955,283,2.299,288,2.974,299,2.721,301,1.887,312,4.886,322,2.851,326,1.382,330,1.848,332,2.299,336,2.851,341,1.712,348,3.939,386,1.271,387,2.407,388,2.451,389,5.708,390,4.5,391,4.484,392,3.852,393,5.239,394,5.239,395,3.162,396,4.5,397,3.106,398,2.031,399,4.5,400,3.162,401,3.162,402,3.162,403,2.707,404,2.183,405,2.707,406,3.162,407,1.727,408,3.162,409,3.162,410,2.707,411,1.203,412,2.707,413,3.162,414,3.162,415,3.162,416,3.162,417,5.239,418,3.162,419,3.162,420,3.162,421,3.162,422,3.162,423,3.162,424,3.162,425,3.162,426,3.162,427,2.004,428,3.162,429,5.708,430,4.886,431,3.852,432,5.365,433,4.5,434,4.5,435,3.852,436,4.5,437,3.852,438,2.639,439,3.852,440,1.855,441,2.707,442,3.162,443,2.707,444,3.162]],["title/interfaces/DialogData.html",[57,2.112,445,2.112]],["body/interfaces/DialogData.html",[0,0.502,3,0.148,4,0.129,9,0.129,14,0.857,15,0.772,16,0.732,18,0.857,20,0.857,22,0.148,23,0.604,24,0.904,26,1.502,30,0.365,34,1.863,38,0.021,39,0.167,40,0.187,44,0.957,49,2.048,52,2.022,54,1.049,56,0.71,57,2.505,59,1.724,60,2.022,61,1.312,62,1.724,63,0.271,64,0.253,65,0.011,94,0.695,95,0.813,102,0.659,105,1.32,110,0.957,118,0.012,119,0.012,120,0.008,148,2.505,153,1.724,170,1.863,171,1.818,174,1.863,175,2.029,176,2.029,177,1.724,178,2.029,179,2.029,223,1.724,224,2.029,233,2.747,234,2.82,235,2.932,236,2.029,238,1.695,247,2.349,253,2.029,254,1.182,255,2.182,275,2.569,279,1.327,280,2.048,282,1.455,289,2.495,294,0.772,326,1.312,330,0.952,341,1.624,386,1.182,388,1.004,398,1.927,445,1.724,446,2.941,447,2.029,448,2.932,449,1.502,450,2.029,451,1.863,452,1.724,453,2.238,454,2.706,455,2.238,456,1.724,457,2.411,458,3.014,459,1.606,460,2.029,461,2.948,462,2.948,463,2.948,464,2.182,465,1.606,466,2.029,467,2.706,468,4.201,469,2.706,470,2.238,471,3.237,472,2.505,473,3.25,474,2.238,475,2.238,476,2.238,477,2.238,478,2.238,479,2.238,480,2.238,481,2.238,482,2.029,483,2.238,484,2.238,485,2.238,486,2.238,487,2.029,488,1.724,489,3.471,490,1.863,491,2.238,492,2.238,493,2.238,494,1.863,495,1.059,496,1.863,497,2.238,498,2.238,499,1.863,500,2.238,501,2.048,502,1.863,503,2.238,504,2.238,505,4.201,506,2.238,507,2.238,508,1.724,509,2.029,510,2.238,511,2.238,512,1.606,513,2.238,514,2.238,515,3.25,516,2.238,517,3.187,518,2.238,519,1.863,520,2.411,521,2.238,522,2.238,523,2.238,524,2.238,525,2.238,526,2.238,527,2.238,528,2.238,529,2.238,530,2.332,531,3.25,532,2.238,533,1.863,534,2.029,535,2.948,536,2.238,537,2.948,538,3.828,539,1.863,540,2.029,541,2.238,542,2.238,543,2.238,544,2.238,545,2.238,546,2.238,547,2.238,548,3.828,549,3.828,550,3.25,551,1.606,552,3.25,553,2.948,554,3.25,555,1.927,556,2.029,557,2.029,558,2.029,559,2.029,560,1.606,561,1.724,562,2.238,563,2.238,564,2.238,565,2.238,566,2.238,567,2.238,568,1.863,569,2.029,570,1.724,571,1.863,572,2.238,573,1.606,574,2.238,575,2.029]],["title/components/ErrorComponent.html",[0,0.359,88,0.897]],["body/components/ErrorComponent.html",[0,0.603,1,1.093,2,1.667,3,0.21,4,0.183,5,1.348,6,1.348,7,1.348,8,1.348,9,0.183,13,1.348,14,2.168,15,1.953,16,1.037,18,1.582,20,1.582,22,0.21,23,0.767,30,0.673,32,0.65,35,0.426,38,0.02,39,0.309,40,0.265,43,0.588,44,1.216,50,1.278,51,1.278,54,0.791,56,0.415,61,1.855,63,0.384,64,0.21,65,0.011,73,1.213,74,1.757,75,1.757,76,1.348,77,2.072,78,1.348,80,1.348,81,1.093,82,1.348,83,1.093,84,1.348,85,1.093,86,1.278,87,1.757,88,1.595,89,1.348,90,1.093,91,1.348,92,1.093,93,1.348,94,0.983,95,1.151,96,1.348,97,1.037,98,1.348,99,1.037,100,1.213,101,1.348,102,0.932,103,1.348,104,1.093,105,1.093,106,1.348,107,1.037,108,1.348,109,1.037,110,0.932,111,1.348,112,1.093,113,1.278,114,1.037,115,1.037,116,1.348,117,1.348,118,0.011,119,0.015,120,0.011,326,1.667,330,2.072,487,4.583,555,2.889,576,3.563,577,6.041,578,5.428,579,5.428,580,4.163,581,4.131]],["title/components/FeedComponent.html",[0,0.359,90,0.945]],["body/components/FeedComponent.html",[0,0.512,1,0.44,2,0.847,3,0.084,4,0.074,5,0.543,6,0.543,7,0.543,8,0.543,9,0.074,13,0.543,14,1.89,15,1.702,16,0.417,18,0.804,20,0.804,22,0.084,23,0.39,24,1.052,25,0.963,30,0.506,32,0.439,35,0.448,37,0.521,38,0.021,39,0.292,40,0.341,41,0.521,43,0.808,44,1.312,56,0.512,61,1.08,63,0.155,64,0.084,65,0.004,73,0.489,74,0.893,75,0.893,76,0.543,77,1.32,78,0.543,80,0.543,81,0.44,82,0.543,83,0.724,84,0.543,85,0.44,86,1.08,87,0.893,88,0.417,89,0.543,90,1.273,91,0.543,92,0.44,93,0.543,94,0.396,95,0.464,96,0.543,97,0.417,98,0.543,99,0.417,100,1.314,101,0.543,102,0.375,103,0.543,104,0.44,105,0.44,106,0.543,107,0.417,108,0.543,109,0.417,110,0.375,111,0.543,112,0.724,113,1.755,114,0.417,115,0.417,116,0.543,117,0.543,118,0.005,119,0.008,120,0.005,125,0.983,145,3.006,158,1.157,169,1.276,204,2.747,205,1.276,221,1.062,239,1.714,279,1.839,280,1.686,282,1.348,283,2.082,288,2.747,297,3.679,299,2.897,301,1.623,305,2.361,322,1.748,323,3.102,324,4.075,325,2.362,326,0.847,330,1.32,331,2.362,332,1.409,333,2.1,336,2.583,337,4.634,341,2.466,344,4.15,345,4.15,346,1.618,348,3.696,349,1.435,352,3.072,354,3.01,359,1.435,360,3.102,373,2.226,374,2.063,375,1.157,376,2.677,377,3.489,380,2.618,381,2.427,382,1.435,384,0.915,385,0.915,386,0.674,388,2.141,397,2.814,398,1.839,407,0.915,427,3.62,435,1.435,520,1.323,555,2.698,560,2.226,569,1.157,573,1.507,581,2.677,582,1.435,583,4.583,584,3.517,585,2.759,586,4.077,587,4.848,588,4.077,589,4.848,590,2.759,591,3.489,592,2.362,593,2.362,594,4.848,595,2.362,596,1.676,597,1.676,598,3.01,599,1.676,600,1.676,601,4.15,602,1.676,603,1.676,604,1.676,605,2.759,606,2.759,607,3.489,608,2.759,609,1.676,610,3.489,611,3.489,612,3.489,613,1.676,614,2.759,615,2.362,616,1.676,617,2.759,618,2.362,619,2.759,620,2.759,621,1.676,622,2.362,623,1.676,624,3.489,625,3.489,626,1.676,627,1.435,628,1.676,629,2.362,630,2.759,631,1.435,632,1.676,633,4.077,634,3.517,635,2.759,636,1.676,637,2.759,638,2.362,639,1.904,640,2.759,641,1.676,642,1.676,643,1.062,644,1.676,645,1.276,646,1.676,647,1.676,648,1.676,649,1.676,650,1.676,651,1.676,652,1.676,653,1.676,654,1.676,655,1.676,656,1.676,657,1.676,658,1.676,659,1.676,660,1.676,661,1.676,662,2.583,663,1.676,664,1.676,665,1.676,666,3.517,667,1.676,668,1.676,669,1.676,670,1.676,671,1.676,672,1.676,673,1.676,674,1.676,675,1.676,676,4.077,677,4.077,678,2.759,679,1.676,680,1.676,681,1.676,682,2.362,683,3.489,684,2.759,685,2.302,686,2.362,687,1.676,688,1.676,689,1.676,690,1.676,691,1.676,692,1.676,693,2.759,694,2.759,695,3.43,696,1.676,697,1.435,698,2.677,699,2.677,700,1.676,701,1.676,702,1.676,703,1.676,704,2.759,705,4.077,706,1.748,707,2.759,708,1.676,709,1.676,710,2.759,711,2.759,712,1.676,713,1.676,714,1.676,715,1.676,716,1.435,717,1.676,718,1.157,719,2.759,720,1.676,721,1.676,722,1.435,723,2.759,724,2.759,725,2.759,726,2.759,727,2.759,728,2.362,729,2.759,730,2.759,731,2.759,732,2.362,733,1.921,734,1.507,735,2.362,736,2.583,737,2.759,738,2.226,739,1.676,740,1.676,741,2.1,742,2.677,743,1.276,744,2.677,745,1.676,746,1.276,747,2.759,748,1.921,749,1.676,750,0.983,751,1.676,752,2.677,753,1.435,754,1.676,755,1.435,756,1.435,757,1.676,758,1.157,759,1.676,760,1.676,761,1.676,762,1.676,763,1.276,764,2.759,765,1.676,766,2.759,767,2.362,768,1.409,769,1.676,770,2.1,771,1.435,772,1.676,773,1.676,774,1.676,775,1.676,776,1.676,777,1.676,778,1.676,779,1.676,780,2.759,781,1.676,782,1.676,783,0.983,784,1.676,785,1.676,786,2.759,787,1.676,788,1.676,789,1.676]],["title/classes/FeedParams.html",[65,0.01,790,2.282]],["body/classes/FeedParams.html",[3,0.217,4,0.189,9,0.189,22,0.217,23,0.784,24,1.341,32,0.661,35,0.493,37,0.498,38,0.02,39,0.245,40,0.427,41,0.777,54,1.306,64,0.217,65,0.015,118,0.012,119,0.015,120,0.012,228,3.803,279,2.503,282,1.178,283,3.312,288,2.503,298,2.064,301,1.551,306,4.742,332,3.57,336,3.515,346,2.525,738,3.541,790,3.515,791,6.062,792,3.685,793,3.276,794,6.871,795,6.711,796,5.983,797,4.305,798,4.305,799,4.222,800,4.305,801,5.55,802,4.305,803,4.305,804,4.305,805,4.305,806,4.305,807,4.305,808,4.305,809,4.305,810,4.305]],["title/components/FilterComponent.html",[0,0.359,92,0.945]],["body/components/FilterComponent.html",[0,0.564,1,0.706,2,1.228,3,0.135,4,0.118,5,0.87,6,0.87,7,0.87,8,0.87,9,0.118,13,0.87,14,2.056,15,1.852,16,1.189,18,1.166,20,1.166,22,0.135,24,1.064,25,1.128,28,2.76,30,0.496,32,0.289,35,0.398,37,0.311,38,0.021,39,0.272,40,0.171,41,0.311,43,0.748,44,1.266,56,0.528,61,1.228,63,0.248,64,0.135,65,0.007,73,0.784,74,1.295,75,1.295,76,0.87,77,1.712,78,0.87,80,0.87,81,0.706,82,0.87,83,0.706,84,0.87,85,0.706,86,0.826,87,1.295,88,0.67,89,0.87,90,0.706,91,0.87,92,1.555,93,0.87,94,0.635,95,0.744,96,0.87,97,0.67,98,0.87,99,0.67,100,1.877,101,0.87,102,0.602,103,0.87,104,0.706,105,0.706,106,0.87,107,0.67,108,0.87,109,0.67,110,0.602,111,0.87,112,0.706,113,0.826,114,0.67,115,1.189,116,0.87,117,0.87,118,0.007,119,0.011,120,0.007,204,3.001,215,2.302,227,4.214,228,3.696,238,0.826,278,3.474,282,1.257,283,3.22,288,2.844,299,2.673,301,0.968,306,4.74,322,2.534,326,1.228,330,0.87,333,3.044,337,4.024,341,2.011,346,3.101,348,3.649,352,1.704,360,2.046,374,1.577,386,1.92,431,4.087,440,1.577,509,2.76,520,1.917,624,3.423,643,1.704,645,2.046,685,1.373,733,2.608,734,2.888,735,2.302,736,2.534,758,1.856,768,1.373,801,3.423,811,2.302,812,4.775,813,3.999,814,5.288,815,5.288,816,5.288,817,3.999,818,3.999,819,2.689,820,2.689,821,3.423,822,3.999,823,5.395,824,3.423,825,2.689,826,3.423,827,3.999,828,5.924,829,2.689,830,5.288,831,5.288,832,3.423,833,3.999,834,3.999,835,2.689,836,3.999,837,2.689,838,2.689,839,2.689,840,2.689,841,2.689,842,2.689,843,2.689,844,2.689,845,2.689,846,2.689,847,2.689,848,3.999,849,2.689,850,2.689,851,2.689,852,2.689,853,2.689,854,2.689,855,4.775,856,2.302,857,2.689,858,2.689,859,2.689,860,2.689,861,2.689,862,3.044,863,2.689,864,2.689,865,3.999,866,2.184,867,2.689,868,3.025,869,2.689,870,2.689,871,2.689,872,2.689]],["title/components/ForgetPasswordComponent.html",[0,0.359,94,0.851]],["body/components/ForgetPasswordComponent.html",[0,0.513,1,0.802,2,1.348,3,0.154,4,0.134,5,0.989,6,0.989,7,0.989,8,0.989,9,0.134,13,0.989,14,2.093,15,1.885,16,0.761,18,1.28,20,1.28,22,0.154,23,0.621,25,1.214,30,0.544,32,0.329,34,1.935,35,0.46,37,0.353,38,0.021,39,0.292,40,0.379,41,0.353,43,0.727,44,1.259,49,1.465,50,0.938,51,0.938,52,1.228,54,1.068,56,0.594,59,1.792,60,1.228,61,1.578,63,0.282,64,0.154,65,0.008,72,3.758,73,0.89,74,1.421,75,1.421,76,0.989,77,1.927,78,0.989,80,0.989,81,0.802,82,0.989,83,0.802,84,0.989,85,0.802,86,0.938,87,1.421,88,0.761,89,0.989,90,0.802,91,0.989,92,0.802,93,0.989,94,1.327,95,1.868,96,0.989,97,0.761,98,0.989,99,0.761,100,0.89,101,0.989,102,0.684,103,0.989,104,0.802,105,1.676,106,0.989,107,0.761,108,0.989,109,0.761,110,1.463,111,0.989,112,0.802,113,0.938,114,0.761,115,0.761,116,0.989,117,0.989,118,0.008,119,0.012,120,0.008,171,1.3,174,1.935,182,2.615,223,3.901,238,1.348,239,2.264,247,1.3,282,0.932,326,1.348,330,1.819,341,1.67,438,2.575,448,3.237,457,2.464,458,2.398,459,1.668,461,2.108,462,2.108,463,2.108,464,1.56,495,1.1,501,1.465,502,1.935,520,2.105,530,2.398,551,1.668,555,2.796,561,2.575,685,2.625,698,2.325,699,2.325,718,2.108,832,2.615,873,5.694,874,2.615,875,5.139,876,4.39,877,4.39,878,5.139,879,5.619,880,3.878,881,3.055,882,3.878,883,4.39,884,4.39,885,3.055,886,3.055,887,3.055,888,5.464,889,3.758,890,5.619,891,4.39,892,4.39,893,3.055,894,3.055,895,3.055,896,3.055,897,3.055,898,3.055,899,3.055,900,3.055,901,3.055,902,3.055,903,2.108,904,3.055,905,3.055,906,3.055,907,2.615,908,2.615,909,2.782,910,3.341,911,3.758,912,3.341,913,4.39,914,4.39,915,4.39]],["title/injectables/GetProposalsService.html",[142,2.112,267,0.477]],["body/injectables/GetProposalsService.html",[3,0.132,4,0.115,9,0.115,16,1.667,22,0.132,23,0.553,25,1.385,30,0.486,32,0.421,35,0.477,37,0.703,38,0.021,39,0.346,40,0.462,41,0.703,43,0.946,50,1.8,51,1.8,54,1.114,56,0.557,63,0.241,64,0.132,65,0.007,115,1.46,118,0.007,119,0.011,120,0.007,122,0.846,142,2.296,184,1.253,194,0.941,204,3.02,267,0.519,269,0.846,278,3.925,286,0.941,288,1.179,289,1.112,294,1.539,301,0.941,305,2.219,332,2.663,346,3.275,388,0.892,512,3.655,639,4.045,662,4.124,718,3.24,790,4.475,793,1.989,796,4.463,862,5.634,916,5.848,917,2.237,918,3.915,919,3.351,920,3.915,921,3.915,922,3.915,923,3.915,924,3.915,925,3.915,926,3.915,927,3.915,928,3.915,929,3.915,930,3.915,931,3.915,932,2.613,933,1.887,934,3.915,935,2.613,936,2.613,937,2.613,938,5.729,939,5.729,940,3.915,941,6.694,942,3.817,943,4.62,944,2.613,945,2.613,946,2.613,947,2.613,948,6.509,949,2.613,950,2.613,951,2.613,952,2.613,953,2.613,954,2.613,955,3.915,956,2.613,957,2.613,958,3.915,959,2.613,960,5.214,961,2.613,962,3.915,963,2.613,964,2.237,965,2.613,966,2.613,967,2.613,968,2.613,969,2.613,970,2.613,971,2.613,972,2.613,973,2.613,974,2.613,975,2.613,976,2.613,977,2.613,978,3.915,979,2.613,980,2.613,981,2.613,982,2.613,983,3.351,984,2.613,985,2.613,986,2.613]],["title/injectables/GetTeamService.html",[143,1.967,267,0.477]],["body/injectables/GetTeamService.html",[3,0.255,4,0.223,9,0.223,22,0.255,30,0.762,32,0.546,35,0.433,37,0.587,38,0.021,39,0.288,40,0.322,41,0.587,43,0.717,56,0.686,63,0.467,64,0.255,65,0.014,118,0.014,119,0.017,120,0.014,122,1.641,143,3.356,184,2.43,194,1.826,267,0.815,269,1.641,286,1.826,294,1.613,495,1.826,933,2.659,942,3.604,987,5.66,988,4.339,989,4.745,990,2.157,991,5.069,992,2.157,993,5.069,994,3.893,995,3.212,996,5.069,997,2.768,998,5.069,999,4.339]],["title/components/HomeComponent.html",[0,0.359,97,0.897]],["body/components/HomeComponent.html",[0,0.487,1,0.733,2,1.262,3,0.14,4,0.123,5,0.903,6,0.903,7,0.903,8,0.903,9,0.123,13,0.903,14,2.067,15,1.862,16,0.695,18,1.198,20,1.198,22,0.207,23,0.581,24,1.079,27,3.518,30,0.51,32,0.3,35,0.405,37,0.323,38,0.021,39,0.306,40,0.31,41,0.323,43,0.581,44,1.093,49,1.971,56,0.41,61,1.499,63,0.257,64,0.14,65,0.007,73,0.813,74,1.331,75,1.331,76,0.903,77,1.743,78,0.903,80,0.903,81,0.733,82,0.903,83,0.733,84,0.903,85,0.733,86,0.857,87,1.331,88,0.695,89,0.903,90,0.733,91,0.903,92,0.733,93,0.903,94,0.659,95,0.772,96,0.903,97,1.341,98,0.903,99,0.695,100,0.813,101,0.903,102,0.625,103,0.903,104,0.733,105,0.733,106,0.903,107,0.695,108,0.903,109,0.695,110,0.625,111,0.903,112,0.733,113,0.857,114,0.695,115,0.695,116,0.903,117,0.903,118,0.008,119,0.011,120,0.011,200,2.124,235,1.971,254,1.122,278,1.636,301,1.48,326,1.262,330,1.743,372,2.388,374,3.366,375,1.926,376,2.124,380,3.067,381,1.926,384,3.134,385,1.524,386,2.307,388,1.403,440,3.366,441,4.913,495,1.005,533,2.604,534,2.837,601,2.388,706,3.092,733,3.662,734,1.524,736,3.933,738,2.665,742,3.128,743,3.128,748,3.611,752,2.124,755,2.388,758,4.564,763,3.128,767,2.388,768,2.1,770,2.124,783,2.411,856,2.388,866,2.94,868,1.768,1000,2.388,1001,3.518,1002,4.88,1003,4.11,1004,4.11,1005,5.384,1006,2.79,1007,4.608,1008,4.11,1009,2.79,1010,2.79,1011,2.79,1012,2.79,1013,2.79,1014,2.388,1015,2.79,1016,2.79,1017,2.79,1018,3.518,1019,4.11,1020,2.79,1021,2.79,1022,2.388,1023,2.79,1024,3.368,1025,2.79,1026,2.388,1027,2.79,1028,2.79,1029,3.518,1030,2.79,1031,2.79,1032,3.366,1033,2.604,1034,2.388,1035,2.388,1036,2.124,1037,6.208,1038,1.768,1039,2.79,1040,1.926,1041,1.768,1042,1.768,1043,4.11,1044,2.79,1045,2.388,1046,2.79,1047,2.388,1048,4.11,1049,5.453,1050,4.88,1051,2.79,1052,2.79,1053,5.74,1054,5.384,1055,2.79,1056,2.79,1057,2.79,1058,2.79,1059,3.518,1060,2.79,1061,2.79,1062,2.79,1063,2.79,1064,2.79,1065,4.11,1066,4.11,1067,6.371,1068,2.79,1069,2.79,1070,2.79,1071,2.79,1072,2.79,1073,2.79,1074,2.79,1075,2.79,1076,2.79,1077,2.79,1078,2.79,1079,2.79,1080,2.79,1081,2.388,1082,2.79,1083,2.79,1084,2.79,1085,2.79,1086,2.79]],["title/interceptors/HttpInterceptorService.html",[1087,3.083,1088,2.741]],["body/interceptors/HttpInterceptorService.html",[3,0.232,4,0.202,9,0.202,22,0.232,30,0.718,32,0.496,35,0.408,37,0.67,38,0.021,39,0.329,40,0.403,41,0.67,43,0.651,56,0.664,63,0.425,64,0.232,65,0.012,118,0.013,119,0.016,120,0.013,184,2.208,194,1.659,238,1.414,255,2.352,267,0.768,272,3.504,282,0.977,294,1.52,326,1.414,465,3.63,466,3.178,495,1.659,508,2.7,706,2.917,942,3.715,1088,4.407,1089,4.605,1090,5.422,1091,3.941,1092,5.791,1093,4.605,1094,4.605,1095,5.791,1096,5.791,1097,6.647,1098,6.335,1099,6.647,1100,4.605,1101,4.605,1102,5.791,1103,4.605,1104,5.791,1105,4.605,1106,4.605,1107,4.605,1108,4.605,1109,3.941,1110,4.605,1111,4.605,1112,4.605,1113,4.605,1114,4.605,1115,4.605]],["title/components/LandingPageComponent.html",[0,0.359,99,0.897]],["body/components/LandingPageComponent.html",[0,0.314,1,0.377,2,1.378,3,0.072,4,0.063,5,0.465,6,0.465,7,0.465,8,0.465,9,0.063,13,0.465,14,1.824,15,1.643,16,1.629,18,0.707,20,0.707,22,0.208,23,0.343,24,1.023,25,1.186,26,1.239,30,0.459,32,0.261,35,0.467,37,0.553,38,0.021,39,0.297,40,0.383,41,0.553,43,0.925,44,1.368,50,0.745,51,0.745,54,0.461,56,0.601,60,0.577,61,0.967,63,0.132,64,0.072,65,0.004,73,0.418,74,0.785,75,0.785,76,0.465,77,1.198,78,0.465,80,0.465,81,0.377,82,0.465,83,0.377,84,0.465,85,0.637,86,1.136,87,0.785,88,0.358,89,0.465,90,0.637,91,0.465,92,0.637,93,0.465,94,0.339,95,0.397,96,0.465,97,0.358,98,0.465,99,0.922,100,1.575,101,0.465,102,0.322,103,0.465,104,0.377,105,0.377,106,0.465,107,0.358,108,0.465,109,0.358,110,0.322,111,0.465,112,0.637,113,0.967,114,0.358,115,1.03,116,0.465,117,0.465,118,0.004,119,0.007,120,0.007,142,1.846,144,2.17,158,0.991,168,0.991,169,1.846,196,4.6,201,3.147,204,2.265,205,1.093,206,1.229,221,0.91,227,2.344,228,3.261,233,0.784,234,0.733,235,0.688,238,0.745,239,0.922,254,0.577,268,2.554,275,2.564,278,1.422,279,2.265,282,1.014,283,2.44,285,1.229,288,2.756,289,1.34,290,1.229,299,3.007,301,0.517,306,2.173,326,0.745,330,1.198,341,2.606,346,3.629,358,2.076,373,0.784,374,0.842,375,1.674,380,1.608,381,0.991,384,2.258,386,1.662,388,1.986,398,2.265,411,2.056,427,2.344,440,1.846,443,1.229,448,1.163,464,1.89,467,2.344,499,1.537,517,1.995,520,3.061,530,2.952,533,1.537,535,0.991,555,2.155,560,1.324,570,2.17,573,1.324,575,0.991,581,1.093,583,2.076,591,2.076,595,2.076,610,1.229,611,3.167,612,2.076,618,1.229,622,2.076,625,2.076,639,2.554,643,0.91,662,1.537,682,2.695,683,1.229,685,1.89,695,1.846,697,1.229,698,2.816,699,1.093,706,0.91,716,1.229,732,2.076,733,1.324,734,1.324,736,1.995,738,1.324,741,1.093,742,1.093,744,1.093,746,1.093,748,1.719,750,0.842,752,1.846,753,1.229,756,1.229,758,2.554,763,1.093,768,1.608,770,1.846,771,1.229,790,0.91,793,1.093,799,1.093,824,2.076,862,4.231,866,0.784,868,0.91,889,2.076,919,2.076,939,5.071,943,2.854,964,3.84,989,2.554,1001,1.229,1032,0.842,1033,0.91,1034,1.229,1035,3.167,1036,1.093,1047,1.229,1059,2.076,1116,1.229,1117,2.425,1118,3.148,1119,2.425,1120,2.425,1121,3.7,1122,3.7,1123,2.425,1124,3.167,1125,3.167,1126,3.7,1127,2.425,1128,3.7,1129,4.135,1130,2.425,1131,3.7,1132,2.425,1133,2.425,1134,1.436,1135,2.425,1136,2.173,1137,1.436,1138,1.436,1139,4.135,1140,1.436,1141,1.436,1142,1.436,1143,1.436,1144,1.436,1145,1.436,1146,1.436,1147,1.436,1148,1.436,1149,1.229,1150,1.436,1151,2.425,1152,1.436,1153,1.436,1154,4.135,1155,1.436,1156,1.436,1157,1.436,1158,1.436,1159,1.436,1160,1.436,1161,1.436,1162,1.436,1163,3.148,1164,1.846,1165,2.425,1166,2.425,1167,2.425,1168,1.436,1169,2.425,1170,1.436,1171,2.425,1172,3.7,1173,2.425,1174,1.436,1175,3.7,1176,2.425,1177,2.425,1178,2.425,1179,1.436,1180,1.436,1181,2.425,1182,2.425,1183,2.425,1184,1.846,1185,2.425,1186,2.425,1187,1.436,1188,2.425,1189,2.425,1190,1.436,1191,2.425,1192,4.135,1193,1.436,1194,1.436,1195,2.425,1196,1.436,1197,1.436,1198,1.436,1199,1.436,1200,1.436,1201,1.436,1202,1.436,1203,1.436,1204,1.436,1205,1.436,1206,1.436,1207,1.436,1208,1.436,1209,1.436,1210,1.436,1211,1.436,1212,1.436,1213,1.436,1214,1.436,1215,1.436,1216,1.436,1217,1.436,1218,1.436,1219,1.436,1220,1.436,1221,2.425,1222,1.436,1223,1.436,1224,1.436,1225,1.436,1226,1.436,1227,1.436,1228,1.436,1229,1.436,1230,1.436,1231,1.436,1232,1.436,1233,1.229,1234,1.436,1235,1.436,1236,3.7,1237,1.436,1238,1.436,1239,1.436,1240,1.436,1241,1.436,1242,3.148,1243,3.148,1244,3.7,1245,1.436,1246,1.436,1247,1.436,1248,1.436,1249,1.436,1250,1.436,1251,1.436,1252,1.436,1253,1.436,1254,1.436,1255,1.436,1256,1.436,1257,1.436,1258,1.436,1259,1.436,1260,1.436,1261,1.436,1262,3.148,1263,3.7,1264,1.436,1265,3.148,1266,1.436,1267,1.436,1268,1.436,1269,1.436,1270,1.436,1271,1.436,1272,1.436,1273,1.436,1274,1.436,1275,1.436,1276,1.436,1277,1.436,1278,1.436,1279,1.436,1280,1.436,1281,1.674,1282,1.436,1283,2.425,1284,2.425,1285,1.436,1286,1.436,1287,3.148,1288,1.436,1289,1.436,1290,1.436,1291,1.436,1292,2.425,1293,1.436,1294,1.436,1295,1.436,1296,1.436,1297,2.425,1298,2.425,1299,2.425,1300,2.425,1301,2.425,1302,1.846,1303,1.436,1304,2.425,1305,1.229,1306,1.436,1307,1.436,1308,2.425,1309,1.436,1310,1.436,1311,1.229,1312,1.436,1313,1.436,1314,1.436,1315,2.425,1316,1.436,1317,1.436,1318,1.436,1319,1.436,1320,1.436,1321,1.436,1322,1.436,1323,1.436,1324,1.436,1325,1.436,1326,1.229,1327,1.436,1328,1.436,1329,1.436,1330,1.436]],["title/components/LoginComponent.html",[0,0.359,102,0.807]],["body/components/LoginComponent.html",[0,0.48,1,0.498,2,0.937,3,0.095,4,0.083,5,0.614,6,0.614,7,0.614,8,0.614,9,0.083,13,0.614,14,1.938,15,1.746,16,0.953,18,0.889,20,0.889,22,0.095,23,0.431,24,1.041,26,0.968,30,0.544,32,0.204,34,1.201,35,0.482,37,0.219,38,0.021,39,0.273,40,0.378,41,0.219,43,0.68,44,1.209,49,2.103,50,1.476,51,1.476,52,1.539,54,0.914,56,0.658,57,1.112,59,1.112,60,1.539,61,1.176,62,1.112,63,0.175,64,0.193,65,0.008,73,0.553,74,0.988,75,0.988,76,0.614,77,1.42,78,0.614,80,0.614,81,0.498,82,0.614,83,0.498,84,0.614,85,0.498,86,0.582,87,0.988,88,0.472,89,0.614,90,0.498,91,0.614,92,0.498,93,0.614,94,0.721,95,0.844,96,0.614,97,0.472,98,0.614,99,0.472,100,0.553,101,0.614,102,0.982,103,0.614,104,0.498,105,1.626,106,0.614,107,0.472,108,0.614,109,0.472,110,1.209,111,0.614,112,0.498,113,0.582,114,0.472,115,0.472,116,0.614,117,0.614,118,0.008,119,0.008,120,0.005,148,2.572,153,1.112,170,1.201,171,1.298,174,1.201,175,1.309,176,1.309,177,1.112,178,1.309,179,1.309,223,1.112,224,1.309,233,2.09,234,2.455,235,2.588,236,1.309,238,1.476,247,2.297,253,1.309,254,0.762,255,1.558,274,1.623,275,2.623,279,1.376,280,2.103,282,1.458,289,2.466,294,0.498,326,1.176,330,1.42,341,1.668,373,1.035,380,1.558,385,1.666,386,1.226,388,1.041,398,2.436,445,1.112,447,1.309,448,3.059,449,2.455,450,1.309,451,1.201,452,2.245,453,1.443,454,2.425,455,1.443,456,1.112,457,2.103,458,2.395,459,1.035,460,1.309,461,2.105,462,2.105,463,2.105,464,2.455,465,2.395,466,1.309,467,2.779,468,4.109,469,2.425,470,1.443,471,2.819,472,1.789,473,2.322,474,1.443,475,1.443,476,1.443,477,1.443,478,1.443,479,2.322,480,2.913,481,1.443,482,1.309,483,2.913,484,2.913,485,1.443,486,2.913,487,3.317,488,1.789,489,3.544,490,2.425,491,2.913,492,2.913,493,2.913,494,2.425,495,0.683,496,1.201,497,1.443,498,1.443,499,2.425,500,1.443,501,1.463,502,1.201,503,2.913,504,2.322,505,4.273,506,2.322,507,2.322,508,1.789,509,2.105,510,2.322,511,2.322,512,1.666,513,2.322,514,2.322,515,3.338,516,2.322,517,3.254,518,2.322,519,1.933,520,2.462,521,3.338,522,1.443,523,1.443,524,1.443,525,1.443,526,1.443,527,1.443,528,1.443,529,2.322,530,2.395,531,3.908,532,2.322,533,1.933,534,2.105,535,3.027,536,2.322,537,3.027,538,4.273,539,1.933,540,3.027,541,1.443,542,1.443,543,1.443,544,1.443,545,1.443,546,1.443,547,1.443,548,2.913,549,2.913,550,2.322,551,1.035,552,2.322,553,2.105,554,2.322,555,1.376,556,1.309,557,1.309,558,1.309,559,1.309,560,1.666,561,1.789,562,3.338,563,1.443,564,1.443,565,1.443,566,1.443,567,1.443,568,1.201,569,1.309,570,1.789,571,1.933,572,2.322,573,2.395,574,1.443,575,1.309,685,2.24,733,1.035,734,1.035,738,1.035,744,1.443,748,1.035,750,1.112,768,0.968,783,1.112,866,1.035,868,1.201,909,2.779,910,3.338,911,3.754,912,3.338,1029,1.623,1032,3.012,1033,1.201,1038,1.201,1040,1.309,1041,1.933,1042,1.933,1049,1.623,1331,2.611,1332,4.386,1333,3.051,1334,3.051,1335,3.051,1336,1.896,1337,1.896,1338,1.896,1339,1.896,1340,1.896,1341,1.896,1342,1.896,1343,1.896,1344,1.896,1345,1.896,1346,1.896,1347,1.896,1348,1.896,1349,1.896,1350,1.896,1351,1.896,1352,1.896,1353,1.896,1354,1.896,1355,1.896,1356,3.051,1357,3.051,1358,1.896,1359,1.896,1360,1.623,1361,1.623]],["title/classes/MyErrorStateMatcher.html",[65,0.01,469,2.282]],["body/classes/MyErrorStateMatcher.html",[0,0.493,3,0.143,4,0.125,9,0.125,14,0.831,15,0.748,16,0.71,18,0.831,20,0.831,22,0.143,24,0.888,26,1.456,30,0.613,34,1.806,35,0.201,37,0.33,38,0.021,39,0.238,40,0.181,41,0.33,43,0.403,44,0.935,49,2.369,52,1.986,54,0.794,56,0.706,57,1.672,59,1.672,60,1.986,61,1.282,62,1.672,63,0.263,64,0.249,65,0.011,94,0.673,95,0.789,102,0.639,105,1.297,110,0.935,118,0.011,119,0.011,120,0.008,148,2.449,153,1.672,170,1.806,171,1.777,174,1.806,175,1.967,176,1.967,177,1.672,178,1.967,179,1.967,223,1.672,224,1.967,233,2.698,234,2.778,235,2.9,236,1.967,238,1.671,247,2.315,253,1.967,254,1.146,255,2.133,275,2.524,279,1.286,280,2.002,282,1.446,289,2.464,294,0.748,298,1.367,326,1.517,330,0.923,341,1.588,386,1.146,388,0.973,398,1.884,445,1.672,447,1.967,448,2.369,449,1.456,450,1.967,451,1.806,452,1.672,453,2.169,454,2.645,455,2.169,456,1.672,457,2.369,458,3.304,459,1.557,460,1.967,461,3.754,462,3.754,463,3.41,464,2.133,465,1.557,466,1.967,467,2.645,468,4.139,469,3.13,470,3.178,471,3.759,472,3.19,473,3.178,474,2.169,475,3.178,476,2.169,477,2.169,478,2.169,479,2.169,480,2.169,481,2.169,482,1.967,483,2.169,484,2.169,485,2.169,486,2.169,487,1.967,488,1.672,489,3.41,490,1.806,491,2.169,492,2.169,493,2.169,494,1.806,495,1.027,496,1.806,497,2.169,498,2.169,499,1.806,500,2.169,501,2.002,502,1.806,503,2.169,504,2.169,505,4.139,506,2.169,507,2.169,508,1.672,509,1.967,510,2.169,511,2.169,512,1.557,513,2.169,514,2.169,515,3.178,516,2.169,517,3.13,518,2.169,519,1.806,520,2.369,521,2.169,522,2.169,523,2.169,524,2.169,525,2.169,526,2.169,527,2.169,528,2.169,529,2.169,530,2.28,531,3.178,532,2.169,533,1.806,534,1.967,535,2.882,536,2.169,537,2.882,538,3.76,539,1.806,540,1.967,541,2.169,542,2.169,543,2.169,544,2.169,545,2.169,546,2.169,547,2.169,548,3.76,549,3.76,550,3.178,551,1.557,552,3.178,553,2.882,554,3.178,555,1.884,556,1.967,557,1.967,558,1.967,559,1.967,560,1.557,561,1.672,562,2.169,563,2.169,564,2.169,565,2.169,566,2.169,567,2.169,568,1.806,569,1.967,570,1.672,571,1.806,572,2.169,573,1.557,574,2.169,575,1.967,1362,4.175,1363,2.851]],["title/components/PasswordSpecsComponent.html",[0,0.359,104,0.945]],["body/components/PasswordSpecsComponent.html",[0,0.588,1,1.039,2,1.613,3,0.199,4,0.174,5,1.282,6,1.282,7,1.282,8,1.282,9,0.174,13,1.282,14,2.157,15,1.943,16,0.986,18,1.531,20,1.531,22,0.199,30,0.651,32,0.635,35,0.37,38,0.02,39,0.299,43,0.56,44,1.177,56,0.395,61,1.81,63,0.365,64,0.199,65,0.011,73,1.154,74,1.7,75,1.7,76,1.282,77,2.032,78,1.282,80,1.282,81,1.039,82,1.282,83,1.039,84,1.282,85,1.039,86,1.216,87,1.7,88,0.986,89,1.282,90,1.039,91,1.282,92,1.039,93,1.282,94,0.935,95,1.095,96,1.282,97,0.986,98,1.282,99,0.986,100,1.154,101,1.282,102,0.887,103,1.282,104,1.648,105,1.895,106,1.282,107,0.986,108,1.282,109,0.986,110,0.887,111,1.282,112,1.039,113,1.216,114,0.986,115,0.986,116,1.282,117,1.282,118,0.011,119,0.014,120,0.011,191,3.735,305,2.235,326,1.613,330,2.032,430,4.496,432,4.496,1305,4.496,1364,5.045,1365,3.389,1366,5.253,1367,5.894,1368,5.253,1369,3.959,1370,3.959,1371,4.496,1372,5.253,1373,5.253,1374,6.278,1375,5.253,1376,5.253,1377,5.253,1378,5.253,1379,5.253,1380,5.253,1381,5.253]],["title/classes/Post.html",[65,0.01,204,1.625]],["body/classes/Post.html",[3,0.199,4,0.174,9,0.174,22,0.199,23,0.743,24,1.33,25,1.241,32,0.565,35,0.483,37,0.458,38,0.02,39,0.357,40,0.452,41,0.458,54,1.393,64,0.199,65,0.011,115,1.468,118,0.011,119,0.014,120,0.011,125,4.018,204,3.177,239,2.704,280,1.898,282,1.521,298,1.898,301,2.468,305,3.051,307,3.735,310,5.633,314,5.374,317,2.733,320,2.733,411,2.646,448,2.518,639,2.733,943,3.625,1382,3.389,1383,6.533,1384,3.959,1385,3.959,1386,3.959,1387,3.959,1388,3.959,1389,4.496,1390,3.959,1391,3.959,1392,5.253,1393,3.959]],["title/injectables/PostProposalService.html",[144,2.112,267,0.477]],["body/injectables/PostProposalService.html",[3,0.186,4,0.163,9,0.163,16,1.801,22,0.186,23,0.71,24,0.665,25,1.186,30,0.623,32,0.541,35,0.464,37,0.659,38,0.021,39,0.324,40,0.419,41,0.659,43,0.864,44,1.125,50,1.75,51,1.75,54,1.083,56,0.61,63,0.341,64,0.186,65,0.01,86,1.877,113,2.023,118,0.01,119,0.014,120,0.01,122,1.199,144,2.945,184,1.775,194,1.334,204,2.882,239,1.91,267,0.666,269,1.199,286,1.334,288,2.266,289,2.989,294,1.496,305,2.137,332,2.565,388,2.468,411,1.408,427,3.182,512,3.597,520,2.929,643,4.268,662,3.871,718,2.556,933,2.291,942,3.862,983,4.298,990,1.576,992,1.576,995,2.346,1233,4.298,1394,3.169,1395,5.022,1396,5.022,1397,5.022,1398,5.022,1399,5.022,1400,5.022,1401,3.703,1402,3.703,1403,6.11,1404,3.703,1405,3.703,1406,3.703,1407,3.703,1408,3.703,1409,3.703,1410,3.703,1411,3.703,1412,3.703,1413,3.703,1414,3.703,1415,3.703,1416,3.703,1417,3.703,1418,3.703,1419,3.703,1420,3.703,1421,3.703,1422,3.703,1423,3.703,1424,3.703,1425,3.703]],["title/classes/Proposal.html",[65,0.01,388,1.229]],["body/classes/Proposal.html",[3,0.239,4,0.208,9,0.208,22,0.239,23,0.834,24,1.344,32,0.635,35,0.497,37,0.549,38,0.02,39,0.27,40,0.463,41,0.743,54,1.384,64,0.239,65,0.013,118,0.013,119,0.016,120,0.013,125,3.94,239,2.555,298,2.274,301,2.42,305,2.733,307,4.068,332,3.28,388,2.014,411,2.628,412,4.06,799,3.61,1426,4.06,1427,4.744,1428,4.744,1429,4.744,1430,4.744,1431,4.744,1432,4.744,1433,4.744,1434,4.744,1435,4.744,1436,4.744]],["title/injectables/ProposalService.html",[145,2.112,267,0.477]],["body/injectables/ProposalService.html",[3,0.124,4,0.108,9,0.108,22,0.124,23,0.53,30,0.465,32,0.403,35,0.481,37,0.71,38,0.021,39,0.349,40,0.434,41,0.71,43,0.955,50,1.83,51,1.83,54,1.219,56,0.505,63,0.227,64,0.124,65,0.007,118,0.007,119,0.01,120,0.007,122,0.798,145,2.197,184,1.182,194,0.888,204,2.284,239,2.754,267,0.497,269,0.798,279,2.77,280,3.294,282,1.217,286,0.888,294,1.564,297,3.876,299,3.1,301,2.265,305,3.115,324,3.852,329,3.206,332,3.595,336,3.89,341,2.57,388,2.458,397,2.585,495,0.888,512,3.689,530,2.046,592,3.206,593,3.206,598,3.206,615,3.206,627,2.11,629,5.489,631,2.11,662,4.237,722,5.255,728,3.206,821,3.206,933,2.189,942,4.165,990,1.049,992,1.594,995,1.562,1437,2.11,1438,4.531,1439,3.746,1440,3.746,1441,3.746,1442,3.746,1443,3.746,1444,3.746,1445,3.746,1446,3.746,1447,3.746,1448,3.746,1449,3.746,1450,2.465,1451,2.465,1452,2.465,1453,2.465,1454,2.465,1455,2.465,1456,4.332,1457,2.465,1458,2.465,1459,5.061,1460,4.531,1461,2.465,1462,2.465,1463,2.465,1464,5.061,1465,2.465,1466,3.746,1467,2.465,1468,2.465,1469,2.465,1470,2.465,1471,2.465,1472,2.465,1473,2.465,1474,2.465,1475,2.465,1476,2.465,1477,2.465,1478,2.465,1479,2.465,1480,2.465,1481,2.465,1482,2.465,1483,2.465,1484,2.465,1485,2.465,1486,2.465,1487,2.465,1488,2.465,1489,2.465,1490,2.465,1491,2.465,1492,2.465,1493,2.465,1494,2.465,1495,2.465,1496,2.465,1497,2.465,1498,2.465,1499,2.465]],["title/components/RegisterComponent.html",[0,0.359,107,0.897]],["body/components/RegisterComponent.html",[0,0.373,1,0.778,2,0.91,3,0.188,4,0.08,5,0.96,6,0.592,7,0.592,8,0.592,9,0.08,11,1.073,13,0.592,14,1.925,15,1.734,16,0.738,18,0.864,20,0.864,22,0.092,23,0.419,24,1.029,25,0.432,26,1.514,28,3.672,30,0.368,32,0.319,35,0.465,37,0.212,38,0.021,39,0.315,40,0.352,41,0.212,43,0.752,44,1.057,50,1.45,51,1.915,52,1.727,54,0.817,56,0.587,60,0.736,61,1.148,63,0.169,64,0.092,65,0.005,73,0.533,74,0.96,75,0.96,76,0.592,77,1.528,78,0.592,80,0.592,81,0.48,82,0.592,83,0.48,84,0.592,85,0.48,86,1.148,87,0.96,88,0.456,89,0.592,90,0.48,91,0.592,92,0.48,93,0.592,94,0.432,95,0.506,96,0.592,97,0.456,98,0.592,99,0.456,100,0.533,101,0.592,102,0.41,103,0.592,104,0.778,105,1.661,106,0.592,107,1.07,108,0.592,109,0.456,110,0.41,111,0.592,112,0.48,113,0.562,114,0.456,115,1.498,116,0.592,117,0.592,118,0.005,119,0.008,120,0.005,143,2.346,146,2.346,151,1.393,152,1.393,153,1.073,154,1.393,171,0.779,177,3.12,191,1.159,192,1.393,195,1.263,226,1.393,238,0.91,239,1.421,247,2.009,254,0.736,255,1.514,275,3.004,282,0.793,289,1.59,294,0.981,326,0.91,330,1.391,341,1.127,352,1.159,355,1.263,373,0.999,374,1.073,379,1.566,380,1.514,384,2.578,385,2.346,386,2.139,398,2.583,411,1.634,438,1.738,440,2.191,448,2.656,456,3.12,457,1.791,459,0.999,464,2.411,472,2.963,488,2.191,501,2.263,502,1.159,519,1.878,537,2.046,539,1.878,551,0.999,555,2.5,560,1.619,561,2.191,570,2.519,571,2.722,573,2.346,685,3.133,695,1.393,733,1.619,734,1.619,736,2.722,738,0.999,743,1.393,746,2.256,748,0.999,750,1.073,768,0.935,783,1.738,826,2.537,866,2.04,880,2.965,903,1.263,907,2.537,908,3.198,909,3.886,910,2.256,912,3.269,943,2.046,989,2.046,994,2.367,1018,3.677,1022,1.566,1024,2.046,1026,1.566,1032,2.519,1033,1.159,1036,1.393,1038,1.159,1040,1.263,1041,1.159,1042,1.159,1045,1.566,1281,2.046,1326,1.566,1361,2.537,1371,2.537,1500,1.566,1501,3.736,1502,2.964,1503,3.736,1504,3.677,1505,3.677,1506,3.198,1507,3.736,1508,3.198,1509,5.053,1510,3.269,1511,1.566,1512,2.367,1513,2.964,1514,1.83,1515,2.964,1516,1.83,1517,2.964,1518,4.296,1519,2.964,1520,2.964,1521,2.964,1522,2.537,1523,1.83,1524,1.83,1525,4.296,1526,1.83,1527,2.964,1528,2.964,1529,1.83,1530,1.83,1531,1.83,1532,1.83,1533,1.83,1534,1.83,1535,1.83,1536,1.83,1537,1.83,1538,1.83,1539,1.83,1540,1.263,1541,1.566,1542,1.83,1543,1.566,1544,1.566,1545,1.566,1546,1.566,1547,1.393,1548,1.393,1549,1.566,1550,1.83,1551,1.393,1552,3.269,1553,2.844,1554,1.83,1555,1.83,1556,3.677,1557,2.964,1558,1.83,1559,1.83,1560,1.83,1561,1.566,1562,1.566,1563,1.566,1564,1.566,1565,1.566,1566,2.964,1567,1.83,1568,1.83,1569,1.566,1570,1.566,1571,1.566,1572,1.566,1573,1.83,1574,1.83,1575,1.83,1576,1.83,1577,1.566,1578,1.83,1579,1.566,1580,2.844,1581,1.83,1582,1.566,1583,1.566,1584,1.83,1585,1.83,1586,1.83,1587,1.83,1588,1.566,1589,1.83,1590,3.198,1591,2.964,1592,3.677,1593,2.844,1594,2.537,1595,2.537,1596,2.537,1597,4.325,1598,4.217,1599,2.964,1600,2.537,1601,3.677,1602,3.677,1603,2.537,1604,2.964,1605,2.964,1606,2.964,1607,2.964,1608,1.566,1609,1.566,1610,1.566,1611,1.566,1612,1.566,1613,1.83,1614,2.964,1615,3.736,1616,1.83,1617,1.83,1618,1.83,1619,1.83,1620,1.83,1621,1.83,1622,1.83]],["title/components/ResetLinkComponent.html",[0,0.359,109,0.897]],["body/components/ResetLinkComponent.html",[0,0.449,1,0.973,2,1.139,3,0.226,4,0.107,5,0.787,6,0.787,7,0.787,8,0.787,9,0.107,11,1.426,13,0.787,14,2.025,15,1.824,16,1.252,17,3.173,18,1.081,20,1.081,22,0.122,23,0.524,24,0.666,25,0.574,26,1.894,29,3.173,30,0.46,32,0.262,35,0.464,37,0.281,38,0.021,39,0.256,40,0.344,41,0.281,43,0.711,44,1.212,49,1.166,50,1.38,51,1.821,52,1.49,54,0.462,56,0.625,59,1.426,60,0.978,61,1.38,63,0.224,64,0.122,65,0.006,73,0.709,74,1.2,75,1.2,76,0.787,77,1.846,78,0.787,80,0.787,81,0.638,82,0.787,83,0.638,84,0.787,85,0.638,86,0.747,87,1.2,88,0.606,89,0.787,90,0.638,91,0.787,92,0.638,93,0.787,94,0.574,95,0.673,96,0.787,97,0.606,98,0.787,99,0.606,100,0.709,101,0.787,102,0.545,103,0.787,104,0.973,105,1.769,106,0.787,107,0.606,108,0.787,109,1.252,110,1.535,111,0.787,112,0.638,113,0.747,114,0.606,115,0.606,116,0.787,117,0.787,118,0.007,119,0.01,120,0.007,171,1.035,191,1.541,192,1.85,195,1.678,229,4.602,238,1.544,254,0.978,255,1.894,282,0.787,289,2.139,326,1.139,330,1.627,341,1.912,373,1.328,380,1.242,384,2.454,385,1.328,386,1.49,398,2.573,407,1.328,427,2.349,438,2.948,456,3.478,457,2.154,458,1.328,459,1.328,464,2.764,488,2.948,489,2.559,501,1.777,520,1.777,551,2.454,553,2.559,555,1.673,570,2.174,571,2.349,573,2.745,685,2.913,733,1.328,734,1.328,738,1.328,748,1.328,750,1.426,768,1.242,783,1.426,866,1.328,868,1.541,880,3.469,888,4.881,903,2.559,909,3.184,938,3.173,1007,4.631,1014,2.081,1032,3.173,1038,1.541,1041,1.541,1042,1.541,1281,2.559,1360,2.081,1504,4.302,1505,4.302,1510,3.825,1522,3.173,1540,1.678,1541,2.081,1543,2.081,1544,2.081,1545,2.081,1546,2.081,1547,1.85,1548,1.85,1551,1.85,1552,1.85,1553,1.85,1556,2.081,1561,2.081,1562,2.081,1563,2.081,1564,2.081,1565,2.081,1569,2.081,1570,2.081,1593,1.85,1598,2.821,1601,4.302,1602,4.302,1603,3.173,1623,5.707,1624,2.081,1625,4.493,1626,3.707,1627,4.493,1628,5.411,1629,3.707,1630,2.431,1631,4.493,1632,3.469,1633,3.846,1634,3.469,1635,3.707,1636,2.431,1637,2.431,1638,3.707,1639,5.026,1640,3.707,1641,2.431,1642,3.707,1643,3.707,1644,2.431,1645,3.707,1646,3.707,1647,3.707,1648,2.431,1649,2.431,1650,3.707,1651,2.431,1652,2.431,1653,2.431,1654,2.431,1655,2.431,1656,2.431,1657,2.431,1658,2.431,1659,2.431,1660,2.431,1661,2.431,1662,3.707,1663,2.431,1664,2.431,1665,2.431,1666,2.431,1667,2.431,1668,2.431,1669,2.431,1670,2.431,1671,2.431,1672,2.431,1673,2.431,1674,3.707,1675,2.431,1676,2.431,1677,2.431,1678,2.431]],["title/injectables/ResetPasswordService.html",[267,0.477,1634,2.486]],["body/injectables/ResetPasswordService.html",[3,0.251,4,0.219,9,0.219,22,0.251,23,0.859,24,1.092,25,1.176,30,0.754,32,0.536,35,0.462,37,0.703,38,0.021,39,0.346,40,0.387,41,0.703,43,0.704,56,0.607,63,0.459,64,0.251,65,0.013,118,0.014,119,0.017,120,0.014,122,1.612,194,1.793,267,0.806,269,1.612,286,1.793,294,1.307,407,2.719,933,2.817,990,2.119,992,2.908,997,2.719,1633,5.616,1634,4.195,1679,5.848,1680,4.261,1681,4.979,1682,6.078,1683,4.979,1684,4.979,1685,4.979,1686,3.436,1687,3.154]],["title/injectables/SendResetLinkService.html",[267,0.477,882,2.486]],["body/injectables/SendResetLinkService.html",[3,0.249,4,0.217,9,0.217,22,0.249,23,0.855,24,1.087,25,1.167,30,0.75,32,0.532,35,0.461,37,0.7,38,0.021,39,0.344,40,0.385,41,0.7,43,0.698,56,0.604,63,0.455,64,0.249,65,0.013,110,1.526,118,0.013,119,0.016,120,0.013,122,1.599,194,1.779,267,0.802,269,1.599,286,1.779,294,1.297,407,2.697,882,4.175,933,2.811,990,2.102,992,2.9,997,2.697,1686,3.409,1687,3.13,1688,5.832,1689,4.228,1690,6.049,1691,4.939,1692,6.049,1693,4.939,1694,4.939,1695,4.939,1696,4.939]],["title/components/ShareProposalComponent.html",[0,0.359,112,0.945]],["body/components/ShareProposalComponent.html",[0,0.626,1,0.924,2,1.49,3,0.177,4,0.155,5,1.14,6,1.14,7,1.14,8,1.14,9,0.155,13,1.14,14,2.13,15,1.918,16,0.877,18,1.414,20,1.414,22,0.177,24,0.633,25,0.832,30,0.602,35,0.248,38,0.021,39,0.276,43,0.498,44,1.087,52,1.416,56,0.597,60,1.416,61,1.705,62,2.065,63,0.325,64,0.177,65,0.009,73,1.026,74,1.571,75,1.571,76,1.14,77,1.937,78,1.14,80,1.14,81,0.924,82,1.14,83,0.924,84,1.14,85,0.924,86,1.082,87,1.571,88,0.877,89,1.14,90,1.457,91,1.14,92,0.924,93,1.14,94,0.832,95,0.974,96,1.14,97,0.877,98,1.14,99,0.877,100,1.026,101,1.14,102,0.789,103,1.14,104,0.924,105,0.924,106,1.14,107,0.877,108,1.14,109,0.877,110,0.789,111,1.14,112,1.703,113,2.136,114,0.877,115,1.49,116,1.14,117,1.14,118,0.01,119,0.013,120,0.01,170,2.231,171,2.065,220,3.693,221,3.074,228,2.846,238,1.49,247,1.498,288,2.831,294,1.457,299,2.189,301,1.268,322,3.074,323,3.693,326,1.49,330,1.937,341,1.845,387,2.68,388,2.312,391,4.752,392,4.153,397,3.349,398,1.589,403,3.014,407,1.923,410,3.014,411,1.845,437,4.153,438,2.846,439,4.153,457,2.326,501,1.688,560,2.65,607,4.153,638,4.153,1389,5.121,1590,4.153,1697,4.852,1698,3.521,1699,3.521,1700,3.521,1701,3.521,1702,3.521,1703,3.521,1704,3.521,1705,3.521,1706,4.852,1707,4.852,1708,4.852,1709,3.521,1710,4.852,1711,3.521,1712,4.852,1713,3.521,1714,3.521,1715,3.521,1716,3.521]],["title/injectables/SocialMediaAuthService.html",[267,0.477,452,2.112]],["body/injectables/SocialMediaAuthService.html",[3,0.178,4,0.156,9,0.156,22,0.178,23,0.689,24,1.168,25,0.838,30,0.605,32,0.382,35,0.491,37,0.645,38,0.021,39,0.317,40,0.382,41,0.645,43,0.919,44,1.092,49,1.7,50,1.089,51,1.089,52,1.426,54,1.266,56,0.628,63,0.327,64,0.178,65,0.009,115,0.883,118,0.01,119,0.013,120,0.01,122,1.148,194,1.277,234,1.811,247,1.509,254,1.426,267,0.646,269,1.148,271,3.711,275,3.402,282,1.335,283,1.811,286,1.277,289,2.075,294,1.748,355,4.342,367,3.711,449,3.213,451,2.247,452,2.859,454,4.493,471,3.268,494,3.53,495,1.277,496,2.247,508,2.08,540,3.365,555,1.6,556,2.447,557,2.447,558,2.447,559,2.447,933,2.412,990,1.509,992,2.075,997,2.663,1302,4.567,1687,2.247,1717,6.02,1718,3.035,1719,4.769,1720,4.173,1721,5.136,1722,5.136,1723,5.136,1724,4.876,1725,4.173,1726,3.546,1727,3.546,1728,3.546,1729,3.546,1730,3.546,1731,5.572,1732,3.546,1733,3.546,1734,3.546,1735,3.546,1736,3.035,1737,3.035,1738,3.546,1739,3.546,1740,3.546,1741,3.035,1742,3.546,1743,3.546,1744,3.546,1745,3.035,1746,3.035,1747,3.035,1748,4.173]],["title/components/TeamComponent.html",[0,0.359,114,0.897]],["body/components/TeamComponent.html",[0,0.471,1,1.035,2,1.211,3,0.133,4,0.116,5,0.854,6,0.854,7,0.854,8,0.854,9,0.116,11,1.547,13,0.854,14,2.051,15,1.847,16,0.982,18,1.149,20,1.149,22,0.133,23,0.557,24,1.057,25,1.115,26,1.348,28,3.258,30,0.489,32,0.424,35,0.482,37,0.305,38,0.021,39,0.357,40,0.388,41,0.305,43,0.667,44,1.173,50,1.45,51,1.45,52,1.585,54,0.75,56,0.64,60,1.061,61,1.45,63,0.243,64,0.133,65,0.007,73,0.769,74,1.276,75,1.276,76,0.854,77,1.815,78,0.854,80,0.854,81,0.693,82,0.854,83,0.693,84,0.854,85,0.693,86,1.45,87,1.276,88,0.657,89,0.854,90,0.693,91,0.854,92,0.693,93,0.854,94,0.623,95,0.73,96,0.854,97,0.657,98,0.854,99,0.657,100,0.769,101,0.854,102,0.591,103,0.854,104,0.693,105,1.035,106,0.854,107,0.657,108,0.854,109,0.657,110,0.591,111,0.854,112,0.693,113,0.81,114,1.305,115,1.719,116,0.854,117,0.854,118,0.007,119,0.011,120,0.007,143,2.861,146,2.861,151,2.008,152,2.008,153,1.547,154,2.008,171,1.123,195,1.821,227,2.498,233,1.441,234,1.348,235,1.265,238,1.211,247,2.229,254,1.061,255,1.348,275,3.332,282,0.56,289,2.386,294,0.693,326,1.211,330,1.696,352,1.671,373,1.441,380,1.348,384,2.153,385,2.153,386,1.585,398,2.53,411,1.5,438,2.312,448,1.265,449,2.864,450,1.821,451,1.671,456,3.575,457,2.263,458,1.441,459,1.441,464,2.864,467,3.319,472,1.547,488,1.547,490,2.991,496,1.671,499,2.991,501,1.265,519,2.498,539,1.671,551,1.441,561,2.769,568,1.671,685,2.014,748,1.441,750,1.547,768,1.348,783,1.547,866,1.441,880,3.615,903,1.821,909,3.319,989,2.721,1032,3.072,1033,1.671,1038,1.671,1040,1.821,1041,1.671,1042,1.671,1281,1.821,1506,4.041,1508,4.041,1510,3.986,1511,2.258,1512,2.991,1547,2.008,1548,2.008,1549,2.258,1551,2.008,1552,2.008,1553,2.008,1571,2.258,1572,2.258,1577,2.258,1579,2.258,1580,2.008,1582,2.258,1583,2.258,1588,2.258,1592,2.258,1593,2.008,1594,2.258,1595,2.258,1596,2.258,1597,3.375,1598,3.001,1600,3.375,1608,2.258,1609,2.258,1610,2.258,1611,2.258,1612,2.258,1749,2.258,1750,4.721,1751,3.943,1752,4.721,1753,4.041,1754,3.943,1755,2.638,1756,2.638,1757,2.638,1758,2.638,1759,2.638,1760,2.638,1761,2.638,1762,2.638,1763,2.638,1764,2.638,1765,2.638,1766,2.638,1767,2.638,1768,2.638,1769,2.638,1770,2.638,1771,2.638,1772,2.638,1773,2.638,1774,2.638,1775,2.638,1776,2.638,1777,2.638,1778,2.638,1779,2.638,1780,2.638,1781,2.638,1782,2.638]],["title/classes/Teams.html",[65,0.01,411,1.37]],["body/classes/Teams.html",[3,0.264,4,0.231,9,0.231,22,0.264,23,0.887,24,1.296,32,0.676,35,0.473,37,0.607,38,0.02,39,0.404,40,0.427,41,0.607,54,1.276,64,0.264,65,0.014,118,0.014,119,0.017,120,0.014,239,2.553,298,2.516,304,3.995,305,2.857,317,3.623,320,3.623,411,2.387,1783,4.493,1784,5.249,1785,5.249,1786,5.249]],["title/injectables/TeamsService.html",[267,0.477,1136,2.486]],["body/injectables/TeamsService.html",[3,0.253,4,0.22,9,0.22,22,0.253,23,0.863,30,0.757,32,0.54,35,0.464,37,0.581,38,0.021,39,0.286,40,0.389,41,0.581,43,0.709,50,1.541,51,1.541,54,0.954,56,0.684,63,0.463,64,0.253,65,0.013,118,0.014,119,0.017,120,0.014,122,1.625,184,2.406,194,1.807,267,0.81,269,1.625,286,1.807,294,1.317,411,2.323,495,1.807,512,3.335,933,2.647,942,3.582,990,2.136,992,2.136,995,3.179,1125,5.635,1136,4.215,1787,4.295,1788,6.108,1789,5.018,1790,5.018,1791,5.018,1792,5.018,1793,5.018]],["title/injectables/TestServiceService.html",[267,0.477,404,2.486]],["body/injectables/TestServiceService.html",[3,0.236,4,0.206,9,0.206,22,0.236,23,0.827,30,0.726,32,0.687,35,0.45,38,0.021,40,0.298,43,0.662,44,1.049,50,1.438,51,1.438,56,0.584,63,0.432,64,0.236,65,0.013,115,1.166,118,0.013,119,0.016,120,0.013,122,1.516,125,3.744,171,1.992,238,2.246,267,0.776,269,1.516,286,1.686,299,3.017,301,2.108,388,1.598,404,4.039,411,2.226,457,3.3,458,3.834,460,3.231,471,2.746,472,3.744,501,2.805,1024,3.231,1794,5.724,1795,4.007,1796,6.687,1797,4.682,1798,4.682,1799,6.383,1800,5.852,1801,5.852,1802,4.682,1803,4.682,1804,4.682]],["title/injectables/TransferDataService.html",[267,0.477,449,1.84]],["body/injectables/TransferDataService.html",[3,0.255,4,0.223,9,0.223,22,0.255,23,0.869,24,0.911,25,1.562,30,0.762,35,0.433,37,0.587,38,0.021,39,0.288,40,0.322,41,0.587,43,0.717,44,1.135,56,0.613,63,0.467,64,0.255,65,0.014,118,0.014,119,0.017,120,0.014,122,1.641,184,2.43,238,1.557,267,0.672,269,1.641,449,3.139,490,4.19,530,2.768,568,3.212,997,2.768,1805,5.66,1806,4.339,1807,6.145,1808,6.145,1809,5.069,1810,5.069,1811,6.145,1812,5.069,1813,5.069,1814,5.069,1815,5.069,1816,5.069]],["title/classes/User.html",[65,0.01,282,0.764]],["body/classes/User.html",[3,0.246,4,0.214,9,0.214,22,0.246,23,0.849,24,1.335,32,0.647,35,0.491,37,0.565,38,0.02,39,0.396,40,0.462,41,0.565,54,1.349,64,0.246,65,0.013,115,1.735,118,0.013,119,0.016,120,0.013,239,2.474,282,1.275,298,2.341,304,3.715,305,2.768,307,4.121,317,4.145,320,4.145,448,3.254,482,3.369,1817,4.179,1818,4.882,1819,4.882,1820,4.882,1821,4.882,1822,4.882]],["title/injectables/UserLoginService.html",[267,0.477,465,1.967]],["body/injectables/UserLoginService.html",[3,0.181,4,0.158,9,0.158,22,0.181,23,0.695,24,1.24,30,0.61,32,0.387,35,0.497,37,0.698,38,0.021,39,0.343,40,0.415,41,0.698,43,0.923,44,1.102,49,1.722,50,1.103,51,1.103,52,1.444,54,1.392,56,0.56,63,0.331,64,0.181,65,0.01,105,1.908,118,0.01,119,0.013,120,0.01,122,1.163,194,1.294,247,1.528,267,0.652,269,1.163,271,3.743,272,2.733,282,1.341,286,1.294,294,1.713,355,4.612,367,3.743,465,2.686,471,3.538,494,3.554,495,1.294,508,2.106,933,2.426,990,1.528,992,2.093,1109,3.074,1302,4.591,1719,4.801,1720,4.21,1721,5.164,1722,5.164,1723,4.21,1725,4.21,1736,3.074,1737,3.074,1741,3.074,1745,3.074,1746,3.074,1747,3.074,1748,4.21,1823,5.408,1824,3.074,1825,4.919,1826,4.919,1827,3.592,1828,4.919,1829,3.592,1830,3.592,1831,3.592,1832,3.592,1833,4.919,1834,3.592,1835,3.592,1836,3.592,1837,3.592,1838,3.592,1839,3.592,1840,3.592,1841,3.592,1842,3.592,1843,4.919,1844,3.592,1845,3.592]],["title/injectables/UserRegisterService.html",[146,1.967,267,0.477]],["body/injectables/UserRegisterService.html",[3,0.256,4,0.223,9,0.223,22,0.256,25,1.2,30,0.763,32,0.547,35,0.434,37,0.712,38,0.021,39,0.35,40,0.323,41,0.712,43,0.718,56,0.614,63,0.468,64,0.256,65,0.014,118,0.014,119,0.017,120,0.014,122,1.644,146,3.36,194,1.829,267,0.816,269,1.644,286,1.829,294,1.615,495,1.829,933,2.661,990,2.161,992,2.161,995,3.218,997,2.774,999,4.347,1686,3.505,1687,3.218,1823,5.037,1846,4.347,1847,6.152,1848,5.079,1849,6.152,1850,5.079,1851,5.079,1852,5.079]],["title/injectables/UserService.html",[267,0.477,1512,2.282]],["body/injectables/UserService.html",[3,0.26,4,0.227,9,0.227,30,0.64,32,0.556,35,0.364,37,0.597,38,0.021,39,0.294,40,0.328,41,0.597,56,0.62,63,0.476,64,0.26,65,0.014,118,0.014,119,0.017,120,0.014,122,1.671,194,1.859,267,0.824,269,1.671,282,1.096,286,1.859,294,1.75,310,3.929,495,1.859,933,2.781,990,2.197,992,2.644,1124,4.419,1512,3.937,1580,3.929,1853,4.419,1854,5.163,1855,5.163,1856,5.163,1857,5.163,1858,5.163,1859,5.163]],["title/injectables/ValidateTokenService.html",[267,0.477,1632,2.486]],["body/injectables/ValidateTokenService.html",[3,0.256,4,0.223,9,0.223,22,0.256,25,1.2,30,0.763,32,0.547,35,0.434,37,0.712,38,0.021,39,0.35,40,0.323,41,0.712,43,0.718,56,0.614,63,0.468,64,0.256,65,0.014,118,0.014,119,0.017,120,0.014,122,1.644,194,1.829,267,0.816,269,1.644,286,1.829,294,1.333,495,1.829,933,2.766,990,2.161,992,2.618,997,2.774,1632,4.246,1686,3.505,1687,3.218,1860,5.665,1861,4.347,1862,6.619,1863,5.079,1864,6.152,1865,5.079,1866,5.079,1867,5.079]],["title/coverage.html",[1868,4.218]],["body/coverage.html",[0,0.719,1,0.884,9,0.148,10,2.881,11,1.974,12,2.881,38,0.021,40,0.214,57,1.974,65,0.018,81,0.884,83,0.884,85,0.884,88,0.838,90,0.884,92,0.884,94,0.795,97,0.838,99,0.838,102,0.754,104,0.884,107,0.838,109,0.838,110,0.754,112,0.884,114,0.838,118,0.009,119,0.013,120,0.009,121,2.881,142,1.974,143,1.838,144,1.974,145,1.974,146,1.838,167,2.561,168,2.323,191,2.132,196,2.323,204,1.519,220,2.561,221,2.132,223,1.974,229,2.323,238,1.034,267,0.951,268,2.323,270,2.881,278,1.974,282,0.714,297,1.974,299,3.07,300,2.881,321,2.881,387,3.579,388,1.149,404,2.323,411,1.28,440,3.621,445,1.974,447,3.741,449,1.719,452,1.974,454,2.132,465,1.838,469,2.132,576,2.881,582,2.881,643,2.132,790,2.132,791,2.881,792,2.881,811,2.881,873,2.881,874,2.881,882,2.323,916,2.881,917,2.881,987,2.881,988,2.881,994,2.132,1000,2.881,1024,5.15,1087,2.881,1088,2.561,1090,2.881,1091,2.881,1116,2.881,1136,2.323,1364,2.881,1365,2.881,1382,2.881,1394,2.881,1426,2.881,1437,2.881,1500,2.881,1512,2.132,1540,2.323,1623,2.881,1624,2.881,1632,2.323,1634,2.323,1679,2.881,1680,2.881,1688,2.881,1689,2.881,1717,2.881,1718,2.881,1749,2.881,1783,2.881,1787,2.881,1794,2.881,1795,2.881,1805,2.881,1806,2.881,1817,2.881,1823,3.579,1824,2.881,1846,2.881,1853,2.881,1860,2.881,1861,2.881,1868,2.881,1869,3.366,1870,3.366,1871,3.366,1872,3.366,1873,5.868,1874,3.366,1875,3.366,1876,2.881,1877,6.174,1878,6.396,1879,3.366,1880,3.366,1881,3.366,1882,3.366,1883,3.366,1884,3.366,1885,4.702,1886,3.366,1887,3.366,1888,4.702,1889,3.366,1890,3.366,1891,3.366,1892,3.366,1893,3.366,1894,3.366,1895,3.366,1896,3.366,1897,3.366,1898,6.565,1899,3.366,1900,3.366,1901,3.366,1902,3.366,1903,3.366,1904,3.366,1905,3.366,1906,3.366,1907,3.366,1908,3.366,1909,3.366,1910,3.366,1911,2.881,1912,2.881,1913,5.868,1914,4.025,1915,2.881,1916,4.025,1917,2.881,1918,2.881,1919,3.366,1920,3.366]],["title/dependencies.html",[131,2.992,1921,3.001]],["body/dependencies.html",[38,0.021,63,0.466,118,0.014,119,0.017,120,0.014,131,3.491,133,3.85,156,5.253,157,4.671,171,2.153,184,2.425,199,5.253,200,3.85,201,3.85,226,4.671,227,3.888,228,2.967,233,2.763,234,2.584,235,2.425,254,2.034,645,3.85,1311,4.33,1922,5.059,1923,6.253,1924,5.059,1925,6.137,1926,5.059,1927,5.059,1928,5.059,1929,4.33,1930,5.059,1931,5.059,1932,5.059,1933,5.059,1934,5.059,1935,5.059,1936,5.059,1937,5.059,1938,5.059,1939,5.059,1940,5.059,1941,5.059,1942,5.059]],["title/miscellaneous/functions.html",[1164,3.299,1943,2.071]],["body/miscellaneous/functions.html",[22,0.288,37,0.661,38,0.019,39,0.325,41,0.661,118,0.016,119,0.018,120,0.016,1164,4.349,1540,4.553,1876,4.891,1943,3.944,1944,5.714,1945,5.714,1946,6.596,1947,5.714]],["title/index.html",[22,0.151,1456,2.569,1948,3.001]],["body/index.html",[0,0.648,4,0.214,15,1.277,38,0.016,39,0.277,118,0.013,119,0.016,120,0.013,126,4.162,148,2.852,238,1.494,405,4.162,517,3.796,686,4.162,823,5.801,1081,5.128,1149,4.162,1331,4.162,1923,4.162,1929,5.558,1949,5.991,1950,4.863,1951,6.493,1952,4.863,1953,4.863,1954,6.96,1955,7.181,1956,4.863,1957,4.863,1958,4.863,1959,4.863,1960,4.863,1961,4.863,1962,4.863,1963,4.863,1964,4.863,1965,6.493,1966,6.493,1967,4.863,1968,6.96,1969,4.863,1970,4.863,1971,4.863,1972,4.863,1973,4.863,1974,4.162,1975,5.991,1976,6.777,1977,5.991,1978,5.991,1979,4.863,1980,4.863,1981,4.863,1982,4.863,1983,6.493,1984,4.863,1985,4.863,1986,4.863]],["title/modules.html",[130,3.122]],["body/modules.html",[38,0.018,118,0.016,119,0.018,120,0.016,129,3.989,130,3.662,141,3.662,157,4.399,1987,5.78,1988,5.78,1989,6.64,1990,5.78,1991,5.78]],["title/overview.html",[1992,4.218]],["body/overview.html",[1,1.599,2,1.3,38,0.021,73,1.234,81,1.828,83,1.599,85,1.599,88,1.517,90,1.599,92,1.599,94,1.439,97,1.517,99,1.517,102,1.364,104,1.599,107,1.517,109,1.517,110,0.948,112,1.599,114,1.517,118,0.012,119,0.015,120,0.012,128,2.921,129,5.289,130,2.682,131,2.921,132,3.623,133,3.221,134,3.623,135,3.221,136,3.623,137,3.623,138,3.623,139,3.623,140,3.623,141,3.858,142,3.571,143,3.325,144,3.571,145,3.571,146,3.325,147,4.697,148,2.482,252,2.921,269,1.37,298,2.029,445,2.482,706,2.682,741,3.221,1992,3.623,1993,4.233,1994,4.233,1995,5.488]],["title/routes.html",[252,3.401]],["body/routes.html",[38,0.018,118,0.016,119,0.018,120,0.016,252,4.073]],["title/classes/teamList.html",[65,0.01,994,2.282]],["body/classes/teamList.html",[3,0.275,4,0.24,9,0.24,22,0.275,23,0.908,24,1.153,32,0.587,35,0.453,37,0.631,38,0.02,39,0.31,40,0.408,41,0.631,54,1.297,64,0.275,65,0.015,118,0.015,119,0.017,120,0.015,298,2.615,407,2.978,994,4.067,1753,5.839,1911,4.668,1996,5.454,1997,5.454,1998,5.454,1999,5.454]],["title/miscellaneous/variables.html",[1184,3.299,1943,2.071]],["body/miscellaneous/variables.html",[22,0.268,38,0.02,40,0.444,50,2.073,51,2.073,52,2.542,118,0.014,119,0.017,120,0.014,247,2.262,280,3.031,307,3.368,1184,4.045,1912,4.55,1914,5.978,1915,4.55,1916,4.55,1917,5.412,1918,5.412,1943,3.669,1974,5.412,2000,6.323,2001,5.315,2002,5.315,2003,5.315,2004,5.315]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["1/9",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":436,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1923,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":440,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1308,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["100px",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":385,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["11",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1675,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["13/14",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1994,"title":{},"body":{"overview.html":{}}}],["15/16",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1306,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["16",{"_index":1993,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1em",{"_index":1307,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1fr",{"_index":1617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":376,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200",{"_index":1321,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["200px",{"_index":1622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["21",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["212",{"_index":780,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":760,"title":{},"body":{"components/FeedComponent.html":{}}}],["22/26",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["236",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["23px",{"_index":782,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":761,"title":{},"body":{"components/FeedComponent.html":{}}}],["250px",{"_index":1280,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["25px",{"_index":1678,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["2a$10$lid/pd76qod0ctife1nfg.ruhb56krgfxocqteajk24oayabl",{"_index":1867,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["3",{"_index":1173,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3.1.2",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["30)),new",{"_index":1227,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["300",{"_index":1317,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["30px",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["380px",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["4/19",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["4/23",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1782,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1326,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["400px",{"_index":1281,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1612,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":382,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["5/5",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["500",{"_index":435,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":575,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["5px",{"_index":784,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":1289,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["60px",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["62",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":786,"title":{},"body":{"components/FeedComponent.html":{}}}],["7/8",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":767,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["71",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1995,"title":{},"body":{"overview.html":{}}}],["80",{"_index":379,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["83",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["9.1.0",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":865,"title":{},"body":{"components/FilterComponent.html":{}}}],["92",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["936da5,#58482e",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":972,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_teams",{"_index":1120,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["_teams:teams",{"_index":1213,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["absolute",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acces",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["activatedroute",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["adding",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{},"injectables/ProposalService.html":{}}}],["address",{"_index":911,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":801,"title":{},"body":{"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["af4261",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{}}}],["alert(\"error",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["alert(\"there",{"_index":1243,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["align",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":967,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allowing",{"_index":572,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["allurl",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":966,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["along",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["already",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["angular",{"_index":1929,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["angular/compiler",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/grid",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/menu",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1674,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["api's",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["application/json",{"_index":1111,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["applied",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{}}}],["appmodule",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["arguments",{"_index":1138,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["arial",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrangement",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{}}}],["array",{"_index":943,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{}}}],["artifacts",{"_index":1969,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1642,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["auth.service",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1718,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1733,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1734,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1724,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:24",{"_index":1732,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1726,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:47",{"_index":1730,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:51",{"_index":1729,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:56",{"_index":1728,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:62",{"_index":1727,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth_token",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticate",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticateduser",{"_index":271,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authentication",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticationservice",{"_index":1095,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["autho",{"_index":1121,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["autho:authorizationservice",{"_index":1229,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorization",{"_index":272,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorization.service",{"_index":1208,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorizationservice",{"_index":268,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["authreq",{"_index":1107,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["autologin",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1960,"title":{},"body":{"index.html":{}}}],["available",{"_index":1991,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":1151,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["background",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1838,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["based",{"_index":1515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["basic",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["basis",{"_index":1189,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["black",{"_index":763,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["block",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":899,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":373,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":781,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":856,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom:1",{"_index":1325,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["box",{"_index":571,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["browse",{"_index":1989,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":383,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":867,"title":{},"body":{"components/FilterComponent.html":{}}}],["build",{"_index":1968,"title":{},"body":{"index.html":{}}}],["button",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":787,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":939,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["called",{"_index":1154,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["calls",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["cancel",{"_index":1381,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate=false",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1376,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":868,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1961,"title":{},"body":{"index.html":{}}}],["changed",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["changes",{"_index":1169,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["character",{"_index":1378,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checked",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checking",{"_index":1459,"title":{},"body":{"injectables/ProposalService.html":{}}}],["checks",{"_index":560,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["child",{"_index":322,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":65,"title":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":298,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":372,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":273,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1951,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":439,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closing",{"_index":1175,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cluster_appmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1963,"title":{},"body":{"index.html":{}}}],["color",{"_index":758,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["color:#3f51b5",{"_index":764,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#8b8a8a",{"_index":1328,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["color:#e9ebee",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":779,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":785,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":378,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":765,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["commendid",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment",{"_index":297,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":327,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":328,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":318,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":776,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":83,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror:string",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":324,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["comments:comment",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["communicate",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1662,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after2____\",this.user",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":550,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"date\",this.edate",{"_index":847,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":556,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["console.log(\"in",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":997,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["console.log(\"is",{"_index":1769,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"response",{"_index":546,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"results\",this.userdata",{"_index":567,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1772,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1424,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1419,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":903,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":569,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1742,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(this.comment",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data",{"_index":1269,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1704,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.newfeed",{"_index":1277,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1713,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.type",{"_index":1261,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1774,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1490,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1093,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(authservice",{"_index":1134,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["constructor(description",{"_index":1384,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":1630,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(getteam",{"_index":1511,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":990,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(id",{"_index":304,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(proposalwork",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(router",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(sendresetlink",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(startdate",{"_index":797,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1996,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1427,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1305,"title":{},"body":{"components/LandingPageComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1360,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["contains",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["content",{"_index":1110,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controls",{"_index":1185,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["count",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1868,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatain",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["create",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1720,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1725,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["created",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{}}}],["createproposalcomponent",{"_index":85,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createurl",{"_index":1395,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1412,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creation",{"_index":312,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{}}}],["creationdate",{"_index":303,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":319,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["crimson",{"_index":871,"title":{},"body":{"components/FilterComponent.html":{}}}],["current",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/ProposalService.html":{}}}],["cursor",{"_index":772,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["data)=>console.log(data",{"_index":1286,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data.id=id",{"_index":1416,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1421,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1423,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":451,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1806,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1809,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1810,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":978,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":983,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":551,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":844,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1668,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data:{name:this.user.id,post:post,teams:this._teams",{"_index":1290,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data:{prop:post.teams,teams:this._teams",{"_index":1282,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data=new",{"_index":1224,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data={\"data1",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1664,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":901,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1686,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["database",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["date",{"_index":306,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["date(),\"0\",\"3",{"_index":1228,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[0",{"_index":1257,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[1",{"_index":1259,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(this.startdate.setdate(this.startdate.getdate",{"_index":1226,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dateplusone",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{}}}],["day",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":310,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"injectables/UserService.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["defines",{"_index":302,"title":{},"body":{"classes/Comment.html":{}}}],["delay",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["delete(id",{"_index":1858,"title":{},"body":{"injectables/UserService.html":{}}}],["deletecomment",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1450,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1496,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1438,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1445,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1452,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1498,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1439,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1484,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["deleteproposal(1",{"_index":1152,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal(id",{"_index":1145,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal=new",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{}}}],["deletes",{"_index":1147,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleting",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["deletion",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["delproposal",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":301,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{}}}],["description:string",{"_index":1435,"title":{},"body":{"classes/Proposal.html":{}}}],["destroying",{"_index":1155,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["destroys",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["destroysession",{"_index":1122,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["details",{"_index":1645,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["dev",{"_index":1957,"title":{},"body":{"index.html":{}}}],["development",{"_index":1953,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog",{"_index":1231,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialog:matdialog,public",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":57,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1283,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["different",{"_index":964,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["differentiating",{"_index":396,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1967,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1971,"title":{},"body":{"index.html":{}}}],["dislike",{"_index":1464,"title":{},"body":{"injectables/ProposalService.html":{}}}],["disliking",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":788,"title":{},"body":{"components/FeedComponent.html":{}}}],["display:none",{"_index":1314,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["displaying",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dist",{"_index":1970,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1851,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":907,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1825,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1828,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1847,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1849,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":914,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1980,"title":{},"body":{"index.html":{}}}],["edate",{"_index":843,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1379,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":448,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emit",{"_index":836,"title":{},"body":{"components/FilterComponent.html":{}}}],["emitdata",{"_index":1807,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1808,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emiting",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{}}}],["emits",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["emitted",{"_index":1172,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["emitter",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{}}}],["end",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":794,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":808,"title":{},"body":{"classes/FeedParams.html":{}}}],["endmessage",{"_index":1221,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["enter",{"_index":909,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["environment",{"_index":1914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":555,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["error'},{'name",{"_index":89,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":577,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":578,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":557,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["errorcomponent",{"_index":88,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandling",{"_index":1123,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errorhandling(error",{"_index":1156,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errormessage",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["etc",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["evenr",{"_index":1143,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["event",{"_index":1139,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["eventemitter",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["example",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{},"components/LandingPageComponent.html":{}}}],["execute",{"_index":1977,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["exists",{"_index":908,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":839,"title":{},"body":{"components/FilterComponent.html":{}}}],["false",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{}}}],["feature",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["feed'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed/feed.component",{"_index":1204,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feed/share",{"_index":1206,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feedcomponent",{"_index":90,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":790,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["feedparams(new",{"_index":1225,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["field",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1962,"title":{},"body":{"index.html":{}}}],["fill",{"_index":441,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter/filter.component",{"_index":1203,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["filtercomponent",{"_index":92,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredteams",{"_index":1503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filters",{"_index":1188,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fixed",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["flag",{"_index":1973,"title":{},"body":{"index.html":{}}}],["flag=false",{"_index":1710,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1706,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["flex:1",{"_index":1312,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["following",{"_index":1372,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":380,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1707,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1695,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["forgetpasswordcomponent",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":898,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgotten",{"_index":892,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1702,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1800,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1803,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":457,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1699,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":1150,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["function",{"_index":278,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1164,"title":{"miscellaneous/functions.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1982,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1965,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1950,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1195,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getall",{"_index":1124,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/UserService.html":{}}}],["getallnextpost",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":975,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":944,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":973,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1446,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1454,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1494,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1440,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1480,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1447,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1457,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1492,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1441,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1483,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":837,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1721,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposals",{"_index":1135,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposals:getproposalsservice",{"_index":1232,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposalsservice",{"_index":142,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gets",{"_index":1163,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getteam",{"_index":989,"title":{},"body":{"injectables/GetTeamService.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["getteam():observable",{"_index":996,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["getteamnextpost",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":946,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":980,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":949,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":977,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1125,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1792,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteamservice",{"_index":143,"title":{"injectables/GetTeamService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":1456,"title":{"index.html":{}},"body":{"injectables/ProposalService.html":{}}}],["getyour",{"_index":1126,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getyournextpost",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":951,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":985,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":953,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":982,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1985,"title":{},"body":{"index.html":{}}}],["google",{"_index":1357,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1990,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":858,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["h1",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["handled",{"_index":1144,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["handlelogin",{"_index":562,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["handles",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["happened",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":756,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["headers",{"_index":1109,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":384,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:500px",{"_index":1320,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:50px",{"_index":757,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:55px",{"_index":1324,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:60px",{"_index":771,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["height:auto",{"_index":774,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{}}}],["hello",{"_index":1298,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["help",{"_index":1983,"title":{},"body":{"index.html":{}}}],["here",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{}}}],["hidden",{"_index":770,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["hide",{"_index":1504,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1505,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["home',component:homecomponent",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":97,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1205,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hostlisteners",{"_index":1132,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote",{"_index":1330,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote&nbsp",{"_index":1303,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":992,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["http://localhost:4200",{"_index":1959,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1839,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1473,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1469,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1466,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":955,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":962,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":958,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1406,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1468,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1408,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1409,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1790,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1475,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1471,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1477,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":995,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["httpclientmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1103,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1099,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1104,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1102,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1088,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1097,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1669,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":317,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1436,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1420,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":292,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if((this.newfeed.length>0",{"_index":1266,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(array.isarray(data",{"_index":1255,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data!=null",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data1==\"email",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(data===\"allpost",{"_index":1247,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"teampost",{"_index":1249,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"yourpost",{"_index":1251,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(error.status!=200",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["if(error.status==200",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(flag",{"_index":1711,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1716,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1715,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(result",{"_index":1284,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(team.id==item.id",{"_index":1709,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.innerwidth",{"_index":1296,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.loginform.valid",{"_index":563,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.menuvisibility",{"_index":1293,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.post.user.id==this.userid",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":853,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":857,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.type.includes(\"allpost",{"_index":1270,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"teampost",{"_index":1272,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"yourpost",{"_index":1274,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(user!=null",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ignore",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ShareProposalComponent.html":{}}}],["image:linear",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":326,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["incase",{"_index":891,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["include",{"_index":948,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["includes",{"_index":940,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["information",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["initial",{"_index":1166,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["initialiseformgroup",{"_index":1796,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["initializes",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["injectable",{"_index":267,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1812,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"overview.html":{}}}],["innerwidth",{"_index":1212,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["input",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["input,output,eventemitter",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["instance",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["intercept",{"_index":1092,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1096,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1087,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1091,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1100,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1094,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1089,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":445,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{}}}],["intialization",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{}}}],["invalid",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1362,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1722,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1712,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["iteration",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1687,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["json.parse(this.authenticateduser",{"_index":295,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["jsonpipe",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1979,"title":{},"body":{"index.html":{}}}],["key",{"_index":1799,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["landingpagecomponent",{"_index":99,"title":{"components/LandingPageComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{}}}],["later",{"_index":1244,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["lato",{"_index":1359,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":866,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":789,"title":{},"body":{"components/FeedComponent.html":{}}}],["left:5",{"_index":1327,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1380,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1374,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":778,"title":{},"body":{"components/FeedComponent.html":{}}}],["liked",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["likesetup",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":888,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["link'},{'name",{"_index":111,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1625,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1626,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1624,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:19",{"_index":1652,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1654,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1651,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1653,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1649,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:24",{"_index":1635,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:27",{"_index":1648,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:33",{"_index":1636,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:61",{"_index":1644,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:69",{"_index":1641,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:78",{"_index":1637,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.service",{"_index":897,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["link.service.ts",{"_index":1689,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["link.service.ts:10",{"_index":1694,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:12",{"_index":1693,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:8",{"_index":1691,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link/reset",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":307,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1506,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loggedin",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1824,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1836,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1837,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1835,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1826,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:21",{"_index":1829,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:31",{"_index":1827,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1834,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1832,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:45",{"_index":1831,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:51",{"_index":1830,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginservice",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1302,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["logs",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["long",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1375,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":915,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["makes",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/ResetLinkComponent.html":{}}}],["mandatory",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["manner",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{}}}],["map",{"_index":1736,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":769,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["matbuttonmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1700,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":403,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matdividermodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matgridlistmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matmenumodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":840,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":434,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{}}}],["menu",{"_index":1192,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menubutton=false",{"_index":1211,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menuvisibility=true",{"_index":1210,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["message:string",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["message=null",{"_index":1209,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["method",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["minimum",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1943,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1984,"title":{},"body":{"index.html":{}}}],["morepost=true",{"_index":1222,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["moz",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1660,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":469,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1776,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":320,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1958,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":863,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":1460,"title":{},"body":{"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":842,"title":{},"body":{"components/FilterComponent.html":{}}}],["newfeed",{"_index":1214,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["next",{"_index":1098,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1114,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1115,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1955,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["ngoninit",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments:boolean=true",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["non",{"_index":1313,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["none",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["not.a",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{}}}],["notified",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["null",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":305,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes:number",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1233,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{}}}],["observable",{"_index":942,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["observer",{"_index":1813,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["occured",{"_index":581,"title":{},"body":{"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["ok",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{}}}],["onfilter",{"_index":1127,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onfilter(data",{"_index":1167,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":838,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onresize",{"_index":1181,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onscroll",{"_index":1128,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onsubmit",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":766,"title":{},"body":{"components/FeedComponent.html":{}}}],["opacity:20",{"_index":1309,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["open",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialog",{"_index":573,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare(post",{"_index":1178,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["opened",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["opens",{"_index":570,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["others",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["out",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["overview",{"_index":1992,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1358,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1921,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":768,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{}}}],["padding:number",{"_index":1220,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["page'},{'name",{"_index":101,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1118,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1119,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1116,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:107",{"_index":1159,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:118",{"_index":1161,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:131",{"_index":1187,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:147",{"_index":1168,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:167",{"_index":1170,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:190",{"_index":1179,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:213",{"_index":1174,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:249",{"_index":1190,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:261",{"_index":1180,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:280",{"_index":1141,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:285",{"_index":1157,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:301",{"_index":1153,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:316",{"_index":1146,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:35",{"_index":1193,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:37",{"_index":1197,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":1202,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1201,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:59",{"_index":1137,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:65",{"_index":1194,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:67",{"_index":1199,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:69",{"_index":1198,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:71",{"_index":1196,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:77",{"_index":1162,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:86",{"_index":1160,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:96",{"_index":1158,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/comment",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":300,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:11",{"_index":311,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:13",{"_index":315,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":308,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:7",{"_index":313,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:9",{"_index":309,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":321,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:32",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:38",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:46",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:59",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":582,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:133",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:146",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:173",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:206",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:213",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:221",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:234",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:52",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:55",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:58",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:61",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:67",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:74",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:80",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:89",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:99",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:105",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:114",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:51",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:73",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:82",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1437,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:14",{"_index":1474,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1470,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1478,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1476,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:26",{"_index":1472,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:29",{"_index":1467,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:32",{"_index":1449,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:45",{"_index":1461,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:54",{"_index":1465,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:63",{"_index":1463,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:73",{"_index":1458,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:81",{"_index":1455,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:89",{"_index":1451,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:98",{"_index":1453,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1794,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":809,"title":{},"body":{"classes/FeedParams.html":{}}}],["page=0",{"_index":1218,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pagination",{"_index":941,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["param",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":793,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["params.ts",{"_index":792,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:11",{"_index":800,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:14",{"_index":802,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:17",{"_index":803,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:2",{"_index":798,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:20",{"_index":806,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:23",{"_index":805,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":804,"title":{},"body":{"classes/FeedParams.html":{}}}],["parent",{"_index":1117,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["parentfunction",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":846,"title":{},"body":{"components/FilterComponent.html":{}}}],["particular",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1670,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":96,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:15",{"_index":895,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":893,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":894,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":887,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":1656,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1680,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1683,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1681,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1684,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":104,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{}}}],["per",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["person",{"_index":1297,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["photo",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1842,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":773,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1676,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["position:fixed",{"_index":1315,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["post",{"_index":204,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["post.description",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:postproposalservice",{"_index":1230,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postbutton",{"_index":1322,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postcomment",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1485,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror:string",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1442,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1479,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1448,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1462,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1489,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1443,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1482,"title":{},"body":{"injectables/ProposalService.html":{}}}],["posted",{"_index":316,"title":{},"body":{"classes/Comment.html":{}}}],["posting",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1487,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1444,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1481,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1398,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1401,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1418,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":144,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":862,"title":{},"body":{"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["private",{"_index":289,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["priyanka",{"_index":1643,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["process",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1972,"title":{},"body":{"index.html":{}}}],["production",{"_index":1974,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1949,"title":{},"body":{"index.html":{}}}],["prop",{"_index":417,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":388,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":87,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.component.css",{"_index":391,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":392,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":387,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:23",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:31",{"_index":1698,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:38",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:41",{"_index":400,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:47",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.service.ts",{"_index":1394,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:14",{"_index":1407,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:16",{"_index":1410,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:18",{"_index":1400,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:28",{"_index":1405,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:38",{"_index":1402,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposalerror:string",{"_index":1215,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["proposalid",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposals",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service.ts",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:17",{"_index":957,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:19",{"_index":956,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:21",{"_index":961,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:23",{"_index":959,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":963,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:27",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:37",{"_index":945,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:46",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:55",{"_index":950,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:67",{"_index":947,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:77",{"_index":954,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:89",{"_index":952,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":145,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{}}}],["propose",{"_index":1304,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["propsal",{"_index":390,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["protractor",{"_index":1981,"title":{},"body":{"index.html":{}}}],["provide",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["provider",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["put",{"_index":1638,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["radius",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1986,"title":{},"body":{"index.html":{}}}],["real",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["receive",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["refreshs",{"_index":1177,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["register",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register',component:registercomponent",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register(user",{"_index":1856,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":1501,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1846,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:14",{"_index":1850,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:8",{"_index":1848,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":890,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["registerform",{"_index":1507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1723,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1833,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["registration",{"_index":1518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":442,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["removing",{"_index":1148,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["req",{"_index":1101,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1108,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1106,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1639,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":912,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["res[\"name",{"_index":1743,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlink",{"_index":1690,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink(data",{"_index":1692,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink/:token",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":109,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1627,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetpassword",{"_index":1633,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1682,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":1634,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["resize",{"_index":1129,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resp",{"_index":999,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["response'},{'name",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1510,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["responsible",{"_index":323,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["responsive",{"_index":1191,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resposible",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":294,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["returned",{"_index":1403,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["rgb(211",{"_index":759,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(236",{"_index":1329,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rgb(238",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":374,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":290,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["routermodule",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["routermodule.forroot(routes",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":252,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1954,"title":{},"body":{"index.html":{}}}],["running",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["runs",{"_index":1171,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rxjs",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1737,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["same",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sans",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["saved",{"_index":1640,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["saying",{"_index":1647,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sbsi",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1964,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["scrollable",{"_index":1318,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sdate",{"_index":841,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1311,"title":{},"body":{"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["select",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selectapi",{"_index":1130,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selectapi(data",{"_index":1186,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selected",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["selected(team",{"_index":1714,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1508,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selection",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":864,"title":{},"body":{"components/FilterComponent.html":{}}}],["seletion",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":869,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["senddata",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddate",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sendresetlink",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendresetlinkservice",{"_index":882,"title":{"injectables/SendResetLinkService.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["sends",{"_index":889,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{}}}],["sent",{"_index":913,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":410,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1411,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1956,"title":{},"body":{"index.html":{}}}],["server",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["service",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"injectables/TransferDataService.html":{}}}],["service.service",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1795,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":1802,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:17",{"_index":1798,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:7",{"_index":1797,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/get",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/reset",{"_index":1655,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service/send",{"_index":896,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["service/social",{"_index":453,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/validate",{"_index":1657,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["session",{"_index":279,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{}}}],["sessionstorage.clear",{"_index":296,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1748,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1747,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1745,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sets",{"_index":1182,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["setup",{"_index":1165,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["share",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["shared",{"_index":1389,"title":{},"body":{"classes/Post.html":{},"components/ShareProposalComponent.html":{}}}],["shareproposal",{"_index":1399,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1404,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1415,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":112,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1396,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1414,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["sharing",{"_index":1697,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["shine",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["showing",{"_index":1646,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["showmenu",{"_index":1131,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["shown",{"_index":325,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["sign",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["signed",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":810,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1731,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(frontend",{"_index":1738,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":452,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["socialuser",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":377,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":443,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{}}}],["spacing",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1377,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1371,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{}}}],["specs",{"_index":1366,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":106,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1367,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1368,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1365,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1370,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1369,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":270,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:15",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:25",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:8",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1876,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":576,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":579,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":580,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":791,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/forget",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":299,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:111",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:134",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":1363,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1352,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":1355,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":1351,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:48",{"_index":1353,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":1354,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:57",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":1350,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:72",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:87",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1364,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1382,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:11",{"_index":1388,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:13",{"_index":1390,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:15",{"_index":1391,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:17",{"_index":1393,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1385,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1386,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:9",{"_index":1387,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1426,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:1",{"_index":1428,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:3",{"_index":1433,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:4",{"_index":1432,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:5",{"_index":1429,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:6",{"_index":1431,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:7",{"_index":1430,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1500,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:100",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":1513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:36",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:54",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:67",{"_index":1516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:90",{"_index":1514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1623,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/get",{"_index":987,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1090,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1679,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/send",{"_index":1688,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1717,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1805,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1823,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/service/validate",{"_index":1860,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1749,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1760,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1764,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1759,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1763,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1762,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1766,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:26",{"_index":1765,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:27",{"_index":1754,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1758,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:36",{"_index":1761,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:40",{"_index":1757,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:48",{"_index":1755,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:64",{"_index":1756,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1911,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1997,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1998,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1787,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1789,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1788,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1783,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1784,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1785,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1786,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.service.ts",{"_index":1853,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user.service.ts:7",{"_index":1854,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.ts",{"_index":1817,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":1818,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":1820,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1821,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":1819,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":1822,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":795,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":807,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate=new",{"_index":1223,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["started",{"_index":1948,"title":{"index.html":{}},"body":{}}],["state",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["store",{"_index":1176,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stored",{"_index":1149,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["string?,array",{"_index":1253,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stroke",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1811,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submission",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submit",{"_index":438,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":561,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["subscriber",{"_index":1814,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["success",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successful",{"_index":553,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["successmessage",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1650,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1673,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["such",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["support",{"_index":1987,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1988,"title":{},"body":{"modules.html":{}}}],["system",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["table",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["tap",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["team',component:teamcomponent",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team's",{"_index":960,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["team.component.css",{"_index":1750,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1751,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":437,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["team.service.ts",{"_index":988,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["team.service.ts:13",{"_index":993,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team.service.ts:9",{"_index":991,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team/team.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":114,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1752,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":796,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":994,"title":{"classes/teamList.html":{}},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1753,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1999,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":969,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":1200,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams",{"_index":411,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams.service",{"_index":1207,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams:any",{"_index":1767,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teams:teamsservice",{"_index":1234,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teamsservice",{"_index":1136,"title":{"injectables/TeamsService.html":{}},"body":{"components/LandingPageComponent.html":{},"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":968,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility=true",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1976,"title":{},"body":{"index.html":{}}}],["testserviceservice",{"_index":404,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":870,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":976,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":974,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":981,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":979,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":986,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":984,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._teams=data",{"_index":1240,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":291,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1105,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1113,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1780,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":366,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":370,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":368,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":369,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":365,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1841,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":851,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.enddate=new",{"_index":1258,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.page=this.page.tostring",{"_index":1263,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.post.description",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1708,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.data.startdate=new",{"_index":1256,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(createproposalcomponent",{"_index":1288,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":574,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialog.open(shareproposalcomponent",{"_index":1279,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":849,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":854,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.endmessage",{"_index":1265,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.error=\"email",{"_index":906,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":905,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errorhandling(error",{"_index":1242,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed",{"_index":1254,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed=this.feed.concat(this.newfeed",{"_index":1276,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":900,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1804,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getall",{"_index":1248,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallnextpost(this.data).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1271,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallposts(this.data).subscribe((data)=>this.feed=data,(error",{"_index":1241,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamnextpost(this.data,this.user.team.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1273,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamposts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error",{"_index":1245,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyournextpost(this.data,this.user.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1275,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyourposts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error",{"_index":1246,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteam",{"_index":1250,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteam.getteam().subscribe",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.getteams",{"_index":1237,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getyour",{"_index":1252,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.delete(`${config.apiurl}/users/${id",{"_index":1859,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":998,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["this.http.get(`${config.apiurl}/users",{"_index":1855,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1840,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1793,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgotpassword",{"_index":1696,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["this.http.post(\"http://localhost:8080/getsocialinfo\",data[\"data1\"],{responsetype:'text",{"_index":1739,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1852,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validate_token",{"_index":1866,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["this.http.post(`${config.apiurl}/users/register",{"_index":1857,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1740,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1422,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1497,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1499,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1495,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1493,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1486,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1491,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1488,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1417,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1425,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/reset_password",{"_index":1685,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":548,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":904,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform.get('email').value",{"_index":564,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe((result",{"_index":565,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":549,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.menuvisibility=false",{"_index":1294,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.menuvisibility=true",{"_index":1295,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.message",{"_index":855,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"email",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.morepost=true",{"_index":1264,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.msg=\"your",{"_index":1672,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":848,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":850,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newfeed",{"_index":1278,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.nocomments=false",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.observer.asobservable",{"_index":1815,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.observer.next(data",{"_index":1816,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.page",{"_index":1268,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page=0",{"_index":1262,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page==0)&&this.morepost",{"_index":1267,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":371,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":861,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1843,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.post.postproposal(result,this.user.id).subscribe",{"_index":1291,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.post.shareproposal(result,post.id).subscribe",{"_index":1285,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.prop",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalerror",{"_index":1292,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1744,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1844,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":547,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1746,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1741,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1661,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1671,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resize",{"_index":1238,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.responsedialog",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":293,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":559,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.router.navigate(['/welcome",{"_index":554,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":852,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selectapi(this.type",{"_index":1236,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.senddata(this.data",{"_index":859,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":860,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sendresetlink.resetlink(data).subscribe",{"_index":902,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1705,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.share.emit(this.post",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":552,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1773,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1781,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1775,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.getteams().subscribe",{"_index":1239,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.teams=data",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1663,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":558,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.transferdataservice.subscriber.subscribe(data",{"_index":1768,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.type=data",{"_index":1260,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.update.emit(post",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1701,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.user.email",{"_index":1300,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.name",{"_index":1299,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.team.name",{"_index":1301,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user=this.autho.authorization",{"_index":1235,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.userdata",{"_index":568,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1778,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1777,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1771,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=data",{"_index":1770,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":566,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1779,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":367,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validatetoken.tokenverification(data).subscribe",{"_index":1665,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=false",{"_index":1667,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1666,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["those",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["three",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{}}}],["time",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["timing",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":394,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1434,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1628,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service",{"_index":1658,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service.ts",{"_index":1861,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["token.service.ts:12",{"_index":1865,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["token.service.ts:8",{"_index":1863,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification",{"_index":1862,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification(data",{"_index":1864,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tools",{"_index":872,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":783,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{}}}],["total",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1735,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["transferdataservice",{"_index":449,"title":{"injectables/TransferDataService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{}}}],["transferdataservice:transferdataservice",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{}}}],["tslib",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{}}}],["type=\"teampost",{"_index":1217,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["typepost=\"teampost",{"_index":845,"title":{},"body":{"components/FilterComponent.html":{}}}],["types",{"_index":965,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["udata",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unique",{"_index":314,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{}}}],["unit",{"_index":1975,"title":{},"body":{"index.html":{}}}],["unlike",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{}}}],["up",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["update=new",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateform",{"_index":1703,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1397,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1413,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updation",{"_index":389,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["uppercase",{"_index":1373,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["upvotes",{"_index":1392,"title":{},"body":{"classes/Post.html":{}}}],["upvotescount",{"_index":1383,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1791,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1966,"title":{},"body":{"index.html":{}}}],["user",{"_index":282,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user:user",{"_index":1216,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["user_name_session_attribute_name",{"_index":1719,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":762,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":465,"title":{"injectables/UserLoginService.html":{}},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["username",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":146,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1512,"title":{"injectables/UserService.html":{}},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":910,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validatetoken",{"_index":1631,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validatetokenservice",{"_index":1632,"title":{"injectables/ValidateTokenService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["validation",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validations",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1801,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1629,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1659,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1183,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["values:testserviceservice",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1184,"title":{"miscellaneous/variables.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1952,"title":{},"body":{"index.html":{}}}],["via",{"_index":1978,"title":{},"body":{"index.html":{}}}],["view",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["visibility",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":775,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["want",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["webkit",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":381,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["welcome",{"_index":1356,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["whether",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{}}}],["white",{"_index":375,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["whitesmoke",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["widows",{"_index":1319,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width",{"_index":386,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:100",{"_index":1323,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:24",{"_index":1316,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:35",{"_index":444,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1677,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:70px",{"_index":1310,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:87",{"_index":777,"title":{},"body":{"components/FeedComponent.html":{}}}],["width:number",{"_index":1219,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window",{"_index":1142,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1112,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1845,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["window.location.reload",{"_index":1287,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize",{"_index":1133,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize(event",{"_index":1140,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["write",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["yes",{"_index":799,"title":{},"body":{"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"classes/Proposal.html":{}}}],["yournexturl",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":971,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":970,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["z0",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n \n  onNoClick(): void {\n    \n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            GetTeamService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { GetTeamService } from './service/get-team.service';\nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\nimport { from } from 'rxjs';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    GetTeamService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:15\n                \n            \n\n\n            \n                \n                    function returns the session data as object and if there is no session takes user to login page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:25\n                \n            \n\n\n            \n                \n                    this function destroys the session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:8\n                            \n                        \n\n                \n                    \n                        user object as a string\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  /**user object as a string*/\n  authenticatedUser:string\n  constructor(\n    /**@ignore */\n    private router:Router) { }\n  /**\n   * function returns the session data as object and if there is no session takes user to login page\n  */\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  /**\n   * this function destroys the session\n  */\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n            \n                Description\n            \n            \n                defines the comment object \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:9\n                            \n                        \n\n                \n                    \n                        define string type comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:11\n                            \n                        \n\n                \n                    \n                        define the date of creation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the comment (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:13\n                            \n                        \n\n                \n                    \n                        define user data that posted the comment\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        /**define id of the comment (unique) */\n        public id:number,\n        /**define string type comment*/\n        public comment:string,\n        /**define the date of creation*/\n        public creationDate:Date,\n        /**define user data that posted the comment*/\n        public user:{\n            /**define id of the user*/\n            id:number,\n            /**define name of the user */\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n    \n        Description\n    \n    \n        CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:32\n                            \n                        \n                \n                    \n                        UserId of the user from the current session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:38\n                            \n                        \n                \n                    \n                        This the emitter to the FeedComponent\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:46\n                \n            \n\n\n            \n                \n                    This method is resposible for the comment data to show on the Page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\n\nimport {Comment} from 'src/app/landing-page/comment'\n/**\n * CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  /**@ignore */\n  @Input() comment:Comment;\n\n  /**@ignore */\n  public commentId;\n\n  /**@ignore */\n  public userName;\n\n  /**@ignore */\n  public commentData;\n\n  /**@ignore */\n  public commentedUserId:number;\n\n  /** UserId of the user from the current session \n   * @example\n   * Input from the FeedComponent\n   */\n  @Input() userId:number;\n\n  /** \n   * This the emitter to the FeedComponent\n   */\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n \n  /**@ignore */\n  constructor() { }\n\n  /**\n   * This method is resposible for the comment data to show on the Page.\n   */\n  ngOnInit(): void {\n\n     console.log(this.comment)\n\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n\n  }\n  /**\n   * This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n   */\n  deleteComment()\n  {\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n\n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:41\n                            \n                        \n\n                \n                    \n                        This is the description of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:38\n                            \n                        \n\n                \n                    \n                        This is the Title of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:23\n                            \n                        \n\n                \n                    \n                        This is the Id of user from Current Session.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n/**\n * This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n */\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n\n  /**@ignore */\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n  /** This is the Id of user from Current Session.*/\n  userId:string\n\n  /**@ignore */\n  teamVisibility=true\n\n  /**@ignore */\n  dialogTitle:string=\"Create Proposal\"\n\n  /**@ignore */\n  id:number=null\n\n  /**@ignore */\n  values:TestServiceService;\n\n  /** This is the Title of proposal*/\n  public tit \n\n  /**This is the description of proposal*/\n  public descrip\n\n  /**@ignore */\n  public prop\n\n  /**This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal */\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n    \n        Description\n    \n    \n        This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor of the FeedComponent \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the ProposalService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:61\n                            \n                        \n                \n                    \n                        Input from the current Session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:58\n                            \n                        \n                \n                    \n                        EventEmitter for the delete button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:55\n                            \n                        \n                \n                    \n                        EventEmitter for the Share button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:52\n                            \n                        \n                \n                    \n                        EventEmitter for the Update button on the Proposals \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:99\n                \n            \n\n\n            \n                \n                    This method is Resposible for the arrangement of the comments as per a particular manner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:234\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the proposal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:133\n                \n            \n\n\n            \n                \n                    This method checks total number of like on a post and whether a user with current session has liked it or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:80\n                \n            \n\n\n            \n                \n                    calls three methods in the same component on intialization -\nupdateApproval(),   likeSetup(),     commentsSetup()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:221\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the comment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is the id of the comment which user wants to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:213\n                \n            \n\n\n            \n                \n                    This method emits the proposal which a user want to update and open a update dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is an object of a proposal\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:206\n                \n            \n\n\n            \n                \n                    This method emits the Post to which user want to open a share dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:146\n                \n            \n\n\n            \n                \n                    This method is resposible for posting a comment on a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is proposalId of the proposal to which a user want to post a comment.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:173\n                \n            \n\n\n            \n                \n                    This method is resposible for the feature of liking a Proposal and Unlike feature too.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:89\n                \n            \n\n\n            \n                \n                    This method checks whether user can Update a particular proposal or not.A user can those Proposal \nthat are created by a user not others.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:74\n                            \n                        \n\n                \n                    \n                        Instance of the ProposalService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n/**\n * This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  /**@ignore */\n  @Input() post:Post;\n\n  /**@ignore */\n  public new_comment:string;\n\n  /**@ignore */\n  public canUpdate=false;\n\n  /**@ignore */\n  public numberLikes:number;\n\n  /**@ignore */\n  public comments:Comment[]=[];\n\n  /**@ignore */\n  public noComments:boolean=true;\n\n  /**@ignore */\n  public height:number;\n\n  /**@ignore */\n  public commentVisibility=false;\n\n  /**@ignore */\n  public commentsMessage=\"Comments\";\n\n  /**@ignore */\n  commentError:string;\n\n  /**@ignore */\n  postCommentError:string;\n\n  /** EventEmitter for the Update button on the Proposals */\n  @Output() update=new EventEmitter;\n\n  /**EventEmitter for the Share button on the Proposals */\n  @Output() share=new EventEmitter;\n\n  /**EventEmitter for the delete button on the Proposals */\n  @Output() deleteProposal=new EventEmitter;\n\n  /**Input from the current Session */\n  @Input() userId:number;\n\n  /**@ignore */\n  @Input() type:string;\n\n  /**@ignore */\n  public hasLiked=false;\n\n  /**\n   * Constructor of the FeedComponent \n   * @constructor\n   * @param proposalWork Instance of the ProposalService\n   */\n  constructor(public proposalWork:ProposalService) { }\n\n  /** \n   * calls three methods in the same component on intialization -\n   * updateApproval(),   likeSetup(),     commentsSetup()\n  */\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n  /**This method checks whether user can Update a particular proposal or not.A user can those Proposal \n   * that are created by a user not others.\n  */\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n  /**This method is Resposible for the arrangement of the comments as per a particular manner.\n  */\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n  /**This method checks total number of like on a post and whether a user with current session has liked it or not\n  */\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  /**\n   * This method is resposible for posting a comment on a post\n   * @param {number} id This is proposalId of the proposal to which a user want to post a comment.\n   */\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          alert(\"Some error has occured sending the comment please try again.\")\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n/**\n * This method is resposible for the feature of liking a Proposal and Unlike feature too.\n */\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n  /**\n   * This method emits the Post to which user want to open a share dialog.\n   */\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n  /**\n   * This method emits the proposal which a user want to update and open a update dialog\n   * @param {object} post this is an object of a proposal\n   */\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the comment.\n   * @param {number} commentId this is the id of the comment which user wants to delete.\n   */\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the proposal.\n   */\n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n\n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n    font-weight: bold;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n            \n                Description\n            \n            \n                this is the feed Params class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:11\n                            \n                        \n\n                \n                    \n                        endDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n                \n                    \n                        startDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:23\n                            \n                        \n\n                \n                    \n                        This is the teamId of the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:20\n                            \n                        \n\n                \n                    \n                        This is the userId from Current session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    /**\n     * @constructor\n     */\n    constructor(\n    /** startDate of the advanced filter*/\n    public startDate:Date,\n\n    /** endDate of the advanced filter*/\n    public endDate:Date,\n\n    /** @ignore */\n    public page:string,\n\n    /** @ignore */\n    public size:string,\n\n    /** This is the userId from Current session */\n    public userId?,\n\n    /**This is the teamId of the user */\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n    \n        Description\n    \n    \n        FilterComponent is the child component of the landing-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:51\n                            \n                        \n                \n                    \n                        This is the EventEmitter emits to Landing-page\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:73\n                \n            \n\n\n            \n                \n                    This function is resposible for adding a day to a end Date user selected\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:82\n                \n            \n\n\n            \n                \n                    This function is resposible for the Validations applied on the start date and end date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:105\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this function send the data to sendDate method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:114\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this method emit the information to the landing-page\nand landing-page calls the api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n  \n/**\n * FilterComponent is the child component of the landing-page.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\n\nexport class FilterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  @Input()\n  public sDate\n\n  /**\n   * @ignore\n   */\n  public newEdate\n\n  /**\n   * @ignore\n   */\n  public eDate\n\n  /**\n   * @ignore\n   */\n  public data:Date[]\n\n  /**\n   * @ignore\n   */\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n  /**\n   * This is the EventEmitter emits to Landing-page\n   */\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n\n /**\n   * @ignore\n   */ \n public message;\n  /**\n   * @ignore\n   */ \n  constructor() { \n  \n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  \n  }\n\n  /**\n   * This function is resposible for adding a day to a end Date user selected\n   */\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n\n  /**\n   * This function is resposible for the Validations applied on the start date and end date.\n   */\n  processFilter()\n  { \n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  /**\n   * As user changed the seletion on the select post this function send the data to sendDate method.\n   */\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n  /**\n   * As user changed the seletion on the select post this method emit the information to the landing-page\n   * and landing-page calls the api\n   */\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sendResetLink: SendResetLinkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sendResetLink\n                                                  \n                                                        \n                                                                        SendResetLinkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:35\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SendResetLinkService } from './../service/send-reset-link.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private sendResetLink: SendResetLinkService ) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n/**\n * This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n */\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.sendResetLink.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n         this.error=\"Email id doesnot exists. Please try again!\"\n      \n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n            \n                Description\n            \n            \n                handles all type of feed api's\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:46\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts includes pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:37\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:67\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:55\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:89\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:77\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get created type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:19\n                            \n                        \n\n                \n                    \n                        get all posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:17\n                            \n                        \n\n                \n                    \n                        get all posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:23\n                            \n                        \n\n                \n                    \n                        get team's posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:21\n                            \n                        \n\n                \n                    \n                        get team's posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                        get created type posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:25\n                            \n                        \n\n                \n                    \n                        get created type posts url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n/**\n * handles all type of feed api's\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Proposal to get different types of posts\n*/\nexport class GetProposalsService {\n  /**get all posts url*/\n  allUrl=\"http://localhost:8080/feed/all\"\n  /**get all posts url include pagination*/\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  /**get team's posts url*/\n  teamUrl=\"http://localhost:8080/feed/team\"\n  /**get team's posts url include pagination*/\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  /**get created type posts url*/\n  yourUrl=\"http://localhost:8080/feed/create\"\n  /**get created type posts url include pagination*/\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(\n    /**@ignore*/\n    private _http:HttpClient) { }\n  /**\n   * This function makes a post api call to get all posts\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  /**\n   * This function makes a post api call to get all posts includes pagination\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get team type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get created type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetTeamService.html":{"url":"injectables/GetTeamService.html","title":"injectable - GetTeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetTeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/get-team.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/get-team.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/get-team.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { teamList } from './../teamList';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetTeamService {\n\n  constructor(private http:HttpClient) {}\n\n   getTeam():Observable{\n    console.log(\"inside GetTeam\")\n    return this.http.get(\"http://localhost:8080/getTeam\")\n    \n    // return resp\n}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n    \n        Description\n    \n    \n        Landing page parent to feed, and filter components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _teams\n                            \n                            \n                                    Public\n                                autho\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                feed\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                destroySession\n                            \n                            \n                                errorHandling\n                            \n                            \n                                getAll\n                            \n                            \n                                getTeam\n                            \n                            \n                                getTeams\n                            \n                            \n                                getYour\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                onScroll\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                resize\n                            \n                            \n                                selectApi\n                            \n                            \n                                showMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: SocialAuthService, autho: AuthorizationService, router: Router, post: PostProposalService, dialog: MatDialog, getProposals: GetProposalsService, teams: TeamsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autho\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        post\n                                                  \n                                                        \n                                                                        PostProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getProposals\n                                                  \n                                                        \n                                                                        GetProposalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                        TeamsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:280\n                \n            \n\n\n            \n                \n                    window resize evenr handled\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProposal(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:316\n                \n            \n\n\n            \n                \n                    This method deletes a proposal in real time by removing it from the array stored on frontend and also sending an api call to backend at the same time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            deleteProposal(1)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroySession\n                        \n                        \n                    \n                \n            \n            \n                \ndestroySession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:301\n                \n            \n\n\n            \n                \n                    This method destroys a session when called\n\n\n                    \n                        Example :\n                        \n                            destroySession()\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns to Home page of the application after destroying session\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorHandling\n                        \n                        \n                    \n                \n            \n            \n                \nerrorHandling(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:96\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:107\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:86\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to Team posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYour\n                        \n                        \n                    \n                \n            \n            \n                \ngetYour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:118\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:77\n                \n            \n\n\n            \n                \n                    gets the session data and calls functions to setup the initial view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilter\n                        \n                        \n                    \n                \n            \n            \n                \nonFilter(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:147\n                \n            \n\n\n            \n                \n                    This method is called when filter components sends a data to filter feed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls select api function to select which feed api to call or changes the date to filter api feed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:167\n                \n            \n\n\n            \n                \n                    This method runs when a scroll event is emitted\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        returns new 3 proposals every time scroll event is emitted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:213\n                \n            \n\n\n            \n                \n                    This method opens a Create proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to store proposal and refreshs the page\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:190\n                \n            \n\n\n            \n                \n                    This method opens a Share proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to update teams of a proposal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:261\n                \n            \n\n\n            \n                \n                    This method is called by OnResize() and sets values of different variables that controls the padding and width\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectApi\n                        \n                        \n                    \n                \n            \n            \n                \nselectApi(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:131\n                \n            \n\n\n            \n                \n                    This method filters the api calls on the basis of which type is selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls different service methods to call different post api's\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMenu\n                        \n                        \n                    \n                \n            \n            \n                \nshowMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:249\n                \n            \n\n\n            \n                \n                    This method checks the responsive filter menu is open or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Teams[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:35\n                            \n                        \n\n                \n                    \n                        teams array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autho\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        session generation and deletion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:37\n                            \n                        \n\n                \n                    \n                        feed array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PostProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:69\n                            \n                        \n\n                \n                    \n                        posts proposal and update proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:45\n                            \n                        \n\n                \n                    \n                        type of feed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:43\n                            \n                        \n\n                \n                    \n                        User session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FilterComponent } from './filter/filter.component';\nimport { FeedComponent } from './feed/feed.component';\n\nimport { SocialAuthService } from 'angularx-social-login';\nimport { Component, OnInit ,HostListener, NgModule} from '@angular/core';\nimport { GetProposalsService } from '../get-proposals.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { CreateProposalComponent } from './create-proposal/create-proposal.component';\nimport { ShareProposalComponent } from './feed/share-proposal/share-proposal.component';\nimport {PostProposalService} from 'src/app/post-proposal.service'\nimport { FeedParams } from '../feed-params';\nimport {TeamsService} from '../teams.service'\nimport {Teams} from '../teams'\nimport {Router} from '@angular/router'\nimport {User} from '../user';\nimport {AuthorizationService} from '../authorization.service';\n/**Landing page parent to feed, and filter components*/\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css'],\n \n})\n\nexport class LandingPageComponent implements OnInit {\n/**@ignore */\n  message=null;\n  /**@ignore */\n  menuVisibility=true;\n  /**@ignore */\n  menuButton=false;\n  /**@ignore */\n  innerWidth;\n  /**teams array */\n  _teams:Teams[];\n  /**feed array */\n  feed=[];\n  /**@ignore */\n  newFeed=[];\n  /**@ignore */\n  proposalError:string;\n  /**User session */\n  user:User;\n  /**type of feed */\n  type=\"teamPost\";\n  /**@ignore */\n  page=0;\n  /**@ignore */\n  width:number;\n  /**@ignore */\n  padding:number;\n  /**@ignore */\n  endMessage=\"\";\n  /**@ignore */\n  morePost=true;\n  /**@ignore */\n  startDate=new Date()\n  /**@ignore */\n  data=new FeedParams(new Date(this.startDate.setDate(this.startDate.getDate()-30)),new Date(),\"0\",\"3\")\n  \n  constructor(\n    /**@ignore */\n    private authService: SocialAuthService,\n    /**session generation and deletion*/\n    public autho:AuthorizationService,\n    /**@ignore */\n    public router:Router,\n    /**posts proposal and update proposal*/\n    public post:PostProposalService,\n    /**@ignore */\n    public dialog:MatDialog,\n    /**gets all the posts from the backend*/\n    private getProposals:GetProposalsService,\n    /**teams objects api call*/\n    private teams:TeamsService) { }\n/**gets the session data and calls functions to setup the initial view*/\n  ngOnInit(): void {\n    this.user=this.autho.authorization()\n    this.selectApi(this.type)\n    this.getTeams()\n    this.resize()\n  }\n/**\n  * This method calls a service method that is an api call to Team posts\n  */ \n  getTeams(){\n    this.teams.getTeams().subscribe(\n      (data)=>{\n        this._teams=data\n      }\n    );\n  }\n  /**\n  * This method calls a service method that is an api call to all posts\n  */ \n  getAll(){\n    this.getProposals.getAllPosts(this.data).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n/**\n * This method calls a service method that is an api call to all created posts\n */ \n  getTeam(){\n    this.getProposals.getTeamPosts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n  /**\n * This method calls a service method that is an api call to all created posts\n */ \n  getYour(){\n    this.getProposals.getYourPosts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n  /**\n * This method filters the api calls on the basis of which type is selected\n * @param {string}\n * @returns Calls different service methods to call different post api's\n */ \n  selectApi(data){\n    if(data===\"allPost\"){\n      this.getAll()\n    }\n    else if(data===\"teamPost\"){\n      this.getTeam()\n    }\n    else if(data===\"yourPost\"){\n      this.getYour()\n    }\n  }\n  /**\n * This method is called when filter components sends a data to filter feed\n * @param {string?,array?}\n * @returns Calls select api function to select which feed api to call or changes the date to filter api feed\n */ \n  onFilter(data){\n    this.feed=[]\n    if(Array.isArray(data)){\n      this.data.startDate=new Date(data[0])\n      this.data.endDate=new Date(data[1])\n    }\n    else{\n      this.type=data;\n      console.log(this.type)\n    }\n    this.page=0\n    this.data.page=this.page.toString()\n    this.selectApi(this.type)\n    this.morePost=true\n    this.endMessage=\"\"\n  }\n  /**\n * This method runs when a scroll event is emitted\n * @returns returns new 3 proposals every time scroll event is emitted\n */ \n  onScroll(){\n    if((this.newFeed.length>0 || this.page==0)&&this.morePost){\n      this.page++\n      this.data.page=this.page.toString()\n      console.log(this.data)\n      if(this.type.includes(\"allPost\")){\n        this.getProposals.getAllNextPost(this.data).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"teamPost\")){\n        this.getProposals.getTeamNextPost(this.data,this.user.team.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"yourPost\")){\n        this.getProposals.getYourNextPost(this.data,this.user.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }      \n      this.feed=this.feed.concat(this.newFeed)\n      console.log(this.newFeed)\n      this.newFeed=[]\n    }\n  }\n/**\n * This method opens a Share proposal dialog\n * @returns After closing calls an api to update teams of a proposal\n */ \n  openDialogshare(post){\n    let dialogRef = this.dialog.open(ShareProposalComponent, {\n      height: '250px',\n      width: '400px',\n      data:{prop:post.teams,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result =>{\n      if(result){\n        this.post.shareProposal(result,post.id).subscribe(\n          (data)=>console.log(data),\n          (error)=>{\n            if(error.status==200){\n              window.location.reload()\n            }\n          })\n      }\n    })\n\n  }\n/**\n * This method opens a Create proposal dialog\n * @returns After closing calls an api to store proposal and refreshs the page\n */ \n  openDialog(post?){\n    let dialogRef = this.dialog.open(CreateProposalComponent, {\n      height: '400px',\n      width: '600px',\n      data:{name:this.user.id,post:post,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.post.postProposal(result,this.user.id).subscribe(\n          (data)=>{\n            this.selectApi(this.type)\n            this.page=0\n            this.data.page=this.page.toString()\n            window.location.reload()\n            this.proposalError=\"\"\n          },\n          (error)=>{\n            if(error.status==200){\n              this.selectApi(this.type)\n              this.page=0\n              this.data.page=this.page.toString()\n              window.location.reload()\n              this.proposalError=\"\"\n            }\n            else{\n              alert(\"Some error has occured! please try again later.\")\n            }\n          }\n        ) \n      }\n    });\n  }\n  \n/**\n * This method checks the responsive filter menu is open or not\n */\n  showMenu(){\n    if(this.menuVisibility){\n      this.menuVisibility=false\n    }\n    else{\n      this.menuVisibility=true\n    }\n  }\n  \n  /**\n * This method is called by OnResize() and sets values of different variables that controls the padding and width\n */\n  resize(){\n    if(this.innerWidth item.id != id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n        \n        \n        \n        \n            person\n        \n        \n            Hello, {{this.user.name}}\n            Email : {{this.user.email}}\n            Team  : {{this.user.team.name}}\n            Logout\n        \n    \n    \n        \n        \n            \n                \n            \n            \n                \n                    \n                         how_to_vote&nbsp;\n                        Propose an improvement...\n                    \n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                    {{this.endMessage}}\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .contain{\n    overflow-x: hidden;\n    width: 100%;\n    ;\n}\n.endMessage{\n    font-size: 15px;\n    text-align: center;\n    color: black;\n}\n.header{\n    height:60px;\n    margin-bottom: 1em;\n    position: fixed;\n    z-index: 1000;\n}\n.menu{\n    opacity:20%;\n    width:70px;\n}\n.search-results {\n    height: 100%;\n}\n.space{\n    flex:1 1 auto;\n}\n.non-scroll{\n    overflow-y: hidden;\n    height: 500px;\n    display:none;\n    position:fixed;\n    z-index: 1000;\n}\n\n\n.filter{\n    background-color: white; \n    position:fixed;\n    width:24%;\n    z-index: 300;\n    height: 100%;\n}\n.scrollable{\n    widows: 50%;\n    height:500px;\n}\n.feed{\n    margin-right: 2%;\n    background-color: white;\n    z-index: 200;\n}\n.postButton{\n    width:100%;\n    height:55px;\n    margin-bottom:1%;\n    font-weight: 400;\n    font-size: 20px;\n    border-radius: 50px;\n    padding-left:5%;\n    text-align: left;\n    color:#8b8a8a;\n    background-color: rgb(236, 236, 236);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                                            person                            Hello, {{this.user.name}}            Email : {{this.user.email}}            Team  : {{this.user.team.name}}            Logout                                                                                                                                                 how_to_vote                         Propose an improvement...                                                                                                                                                                                                            {{this.endMessage}}                                        '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:72\n                \n            \n\n\n            \n                \n                    You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:111\n                \n            \n\n\n            \n                \n                    This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:134\n                \n            \n\n\n            \n                \n                    This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:87\n                \n            \n\n\n            \n                \n                    This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n                \n              \n              \n               -->\n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                                                           -->                                        Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n            \n                Description\n            \n            \n                The object type of a post that is created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n                \n                    \n                        define description of a post (string)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:9\n                            \n                        \n\n                \n                    \n                        define id of the post (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:11\n                            \n                        \n\n                \n                    \n                        define teams array that its shared to \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:13\n                            \n                        \n\n                \n                    \n                        define title of the post (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:15\n                            \n                        \n\n                \n                    \n                        define number of upvotes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:17\n                            \n                        \n\n                \n                    \n                        define the user data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        /**define description of a post (string)*/\n        public description: string,\n        /**define id of the post (unique) */\n        public id: number,\n        /**define teams array that its shared to */\n        public teams:[],\n        /**define title of the post (string) */\n        public title: string,\n        /**define number of upvotes */\n        public upvotesCount: number,\n        /**define the user data */\n        public user: {\n            /**define id of the user (unique) */\n            id: number,\n            /**define name of the user */\n            name: string,\n            /**define email of the user */\n            email: string,\n            /**define team the user is in */\n            teams:{\n                /**define id of the team (unique) */\n                id:number,\n                /**define name of the team (string) */\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:38\n                \n            \n\n\n            \n                \n                    calls a post api to create proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable is returned of type void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:28\n                \n            \n\n\n            \n                \n                    share proposal calls a post api to share proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable is returned \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        a url to create proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:18\n                            \n                        \n\n                \n                    \n                        url to share proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:16\n                            \n                        \n\n                \n                    \n                        url to update proposal api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  /**@ignore */\n  public sentTeams:{}[]\n  /**\n   * a url to create proposal api\n  */\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  /**url to update proposal api*/\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  /**url to share proposal api*/\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  constructor(\n    /**@ignore */\n    private http:HttpClient) { }\n  /**\n   * share proposal calls a post api to share proposal api\n   * @param {objects of teams}\n   * @param {number}\n   * @returns an observable is returned \n  */\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  /**\n   * calls a post api to create proposal api\n   * @param {objects of post}\n   * @param {number}\n   * @returns an observable is returned of type void\n  */\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is Proposal Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:89\n                \n            \n\n\n            \n                \n                    This is the method for deleting a comment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:98\n                \n            \n\n\n            \n                \n                    This is the method for deleting a proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:81\n                \n            \n\n\n            \n                \n                    This is the method for getting all comments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:73\n                \n            \n\n\n            \n                \n                    This is the method for checking whether a user liked a post or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:45\n                \n            \n\n\n            \n                \n                    This is the method for posting a comment to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the comment user wants to post.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:63\n                \n            \n\n\n            \n                \n                    This is the method for posting a dislike to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:54\n                \n            \n\n\n            \n                \n                    This is the method for posting a like to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:29\n                            \n                        \n\n                \n                    \n                        Url for deleting comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                        Url for deleting a proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url for getting all comments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:26\n                            \n                        \n\n                \n                    \n                        Url for checking user has upvoted or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        Url for adding Comment \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:23\n                            \n                        \n\n                \n                    \n                        Url for Posting disLike\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:20\n                            \n                        \n\n                \n                    \n                        Url for Posting Like\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n/**\n * This is Proposal Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n\n  /**Url for adding Comment */\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n\n  /**Url for getting all comments*/\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n\n  /**Url for Posting Like*/\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n\n  /**Url for Posting disLike*/\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n\n  /**Url for checking user has upvoted or not*/\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n\n  /**Url for deleting comment*/\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n\n  /**Url for deleting a proposal*/\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http:HttpClient) { }\n\n  /**This is the method for posting a comment to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {string} new_comment This is the comment user wants to post.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n\n  /**This is the method for posting a like to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for posting a dislike to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n\n  /**This is the method for checking whether a user liked a post or not.\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for getting all comments\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a comment\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a proposal\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:90\n                \n            \n\n\n            \n                \n                    returns error message based on email field validations.\n\n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:67\n                \n            \n\n\n            \n                \n                    Creates a registration form with creatain validation checks.\nInitializes a array of existing teams in the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:44\n                \n            \n\n\n            \n                \n                    This method opens dialog box displaying required specifications for the password field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:54\n                \n            \n\n\n            \n                \n                    Opens dialog box displaying success or error message after submission of registration form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { GetTeamService } from './../service/get-team.service';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n/**\n * This method opens dialog box displaying required specifications for the password field.\n */\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n/**\n * Opens dialog box displaying success or error message after submission of registration form.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n/**\n * Creates a registration form with creatain validation checks.\n * \n * Initializes a array of existing teams in the database.\n */\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n\n  this.getTeam.getTeam().subscribe(\n    data=> {this.teams=data\n      this.filteredTeams=this.teams.slice();\n    }); \n  }\n\n\n  /**\n   * returns error message based on email field validations.\n   */\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":{\n          \"name\":this.registerForm.value.team}\n      , \"user\":\n{\n    \"name\": this.registerForm.value.userName,\n    \"email\": this.registerForm.value.email,\n    \"password\" :this.registerForm.value.password\n\n}\n    }\n\n    }\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          console.log(data1);\n          if(data1==\"Email Id already exists !!\"){\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n            this.responseDialog()\n          }\n          else{\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n        },\n        (error)=>{\n          if(error.status==200){\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n          else{\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n          }\n        });\n}\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, validateToken: ValidateTokenService, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateToken\n                                                  \n                                                        \n                                                                        ValidateTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:78\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:69\n                \n            \n\n\n            \n                \n                    ask Priyanka\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:61\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ValidateTokenService } from './../service/validate-token.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private validateToken: ValidateTokenService,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.validateToken.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n      this.validToken=false;\n       }\n     );\n    \n  }\n/**\n * This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n/** ask Priyanka*/\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n/** \n * This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n*/\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/reset_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SendResetLinkService.html":{"url":"injectables/SendResetLinkService.html","title":"injectable - SendResetLinkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SendResetLinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/send-reset-link.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/send-reset-link.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/send-reset-link.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/send-reset-link.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendResetLinkService {\n\n  constructor(public http: HttpClient) { }\n\n  resetLink(data){\n    console.log(\"inside forgetPassword\")\n    return this.http.post(\"http://localhost:8080/forgotPassword\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:31\n                \n            \n\n\n            \n                \n                    This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n/**\n * This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n */\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n\n  /**@ignore */\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n\n  /**@ignore */\n  updateForm: FormGroup;\n    \n   /**\n   * This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n   */\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n\n  /**@ignore */\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  // socialMedia(data){\n  //   console.log(\"inside socialMedia(Frontend)\")\n  //   return this.http.post(\"http://localhost:8080/getSocialInfo\",data[\"data1\"],{responseType:'text' as 'json'})\n  // }\n\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        // this.username = res[\"name\"];\n        this.registerSuccessfulLogin();\n      }\n      // ,\n      // (error)=>{\n      //   console.log(\"error------\",error['error']);\n      //   //team page\n      //   this.transferDataService.emitData(error['error'])\n      //   this.router.navigate(['/team']);\n  \n      // }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit ,Input} from '@angular/core';\nimport { GetTeamService } from './../service/get-team.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    // this.transferDataService.subscriber.subscribe(data => {\n    //   console.log(\"Is data this?----->\",data);\n    //   this.userData=data\n    // });\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up!\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       }\n     );\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/test-service.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/test-service.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n\n  constructor() { }\n  form: FormGroup = new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  });\n  \n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n  //observer = new Subject();\n//  public subscriber = this.observer.asObservable();\n\n  emitData(data) {\n    console.log(\"inside service-------\",data);\n    this.userData = data;\n   // this.observer.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        public id:number,\n        public name:string,\n        public email:string,\n        public team:{\n            id:number,\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n    \n    \n    // return resp\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n/*  define methods here\n  getAll() {\n    return this.http.get(`${config.apiUrl}/users`);\n}\n\nregister(user) {\n    return this.http.post(`${config.apiUrl}/users/register`, user);\n}\n\ndelete(id) {\n    return this.http.delete(`${config.apiUrl}/users/${id}`);\n}*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateTokenService.html":{"url":"injectables/ValidateTokenService.html","title":"injectable - ValidateTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/validate-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/validate-token.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/validate-token.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateTokenService {\n\n  constructor(private http: HttpClient) { }\n\n  tokenVerification(data){\n    console.log(\"inside tokenVerification\")\n    return this.http.post(\"http://localhost:8080/validate_token\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n  }\n}\n\n// $2a$10$liD/Pd76Qod0CtiFE1nfg.ruHB56kRGFxOCQTEaJk24oayaBl\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                84 %\n                (22/26)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                17 %\n                (4/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                21 %\n                (4/19)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/service/get-team.service.ts\n            \n            injectable\n            GetTeamService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/send-reset-link.service.ts\n            \n            injectable\n            SendResetLinkService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/validate-token.service.ts\n            \n            injectable\n            ValidateTokenService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
