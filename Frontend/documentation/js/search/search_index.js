var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.397,1,0.977]],["body/components/ApiResponseComponent.html",[0,0.607,1,1.611,2,1.527,3,0.178,4,0.155,5,1.164,6,1.164,7,1.164,8,1.164,9,0.155,10,5.737,11,3.919,12,2.946,13,1.164,14,2.2,15,1.978,16,2.147,17,4.772,18,1.447,19,5.474,20,1.447,21,4.772,22,0.178,23,0.696,24,1.192,25,1.784,26,3.212,27,4.08,28,3.285,29,4.681,30,0.652,31,5.909,32,0.529,33,3.445,34,3.919,35,0.477,36,4.772,37,0.411,38,0.021,39,0.358,40,0.406,41,0.411,42,3.445,43,0.502,44,1.169,45,3.445,46,4.772,47,3.445,48,3.445,49,1.642,50,1.103,51,1.103,52,1.374,53,3.445,54,0.677,55,3.445,56,0.562,57,2.013,58,2.618,59,1.873,60,1.455,61,1.103,62,2.013,63,0.327,64,0.178,65,0.009,66,3.445,67,3.445,68,3.445,69,3.445,70,3.445,71,3.445,72,4.08,73,1.045,74,1.612,75,1.612,76,1.164,77,1.996,78,1.164,79,3.445,80,1.164,81,0.939,82,1.164,83,0.939,84,1.164,85,0.939,86,1.164,87,1.612,88,0.89,89,1.164,90,0.939,91,1.164,92,0.939,93,1.164,94,0.844,95,0.991,96,1.164,97,0.89,98,1.164,99,0.939,100,1.045,101,1.164,102,0.8,103,1.164,104,0.939,105,0.939,106,1.164,107,0.89,108,1.164,109,0.89,110,0.89,111,1.164,112,0.939,113,1.164,114,0.89,115,0.89,116,1.164,117,1.164,118,0.01,119,0.013,120,0.01]],["title/components/AppComponent.html",[0,0.397,81,0.977]],["body/components/AppComponent.html",[0,0.669,1,1.141,2,1.74,3,0.216,4,0.189,5,1.413,6,1.413,7,1.413,8,1.413,9,0.189,13,1.413,14,2.247,15,2.019,16,1.339,18,1.649,20,1.649,22,0.216,23,0.793,35,0.303,38,0.021,39,0.355,40,0.274,50,1.339,51,1.339,54,0.823,56,0.43,63,0.397,64,0.216,65,0.011,73,1.269,74,1.836,75,1.836,76,1.413,77,2.159,78,1.413,80,1.413,81,1.743,82,1.413,83,1.141,84,1.413,85,1.141,86,1.413,87,1.836,88,1.082,89,1.413,90,1.141,91,1.413,92,1.141,93,1.413,94,1.025,95,1.203,96,1.413,97,1.082,98,1.413,99,1.141,100,1.269,101,1.413,102,0.971,103,1.413,104,1.141,105,1.141,106,1.413,107,1.082,108,1.413,109,1.082,110,1.082,111,1.413,112,1.141,113,1.413,114,1.082,115,1.082,116,1.413,117,1.413,118,0.012,119,0.015,120,0.012,121,3.578,122,1.74,123,6.039,124,5.437,125,3.528,126,4.649,127,4.185]],["title/modules/AppModule.html",[128,2.467,129,2.467]],["body/modules/AppModule.html",[1,1.546,3,0.125,4,0.109,9,0.109,11,1.413,15,0.66,16,0.774,38,0.021,56,0.761,58,1.838,60,1.022,63,0.229,64,0.125,65,0.007,73,0.734,81,1.787,83,1.546,85,1.546,88,1.466,90,1.546,92,1.546,94,1.389,95,0.696,97,1.466,99,1.546,100,1.789,102,1.316,104,1.546,105,0.66,107,1.466,109,1.466,110,0.953,112,1.546,114,1.466,118,0.007,119,0.01,120,0.007,128,1.665,129,5.111,130,1.528,131,1.665,132,3.822,133,3.396,134,4.275,135,1.838,136,2.069,137,2.069,138,2.069,139,2.069,140,2.069,141,3.582,142,3.582,143,3.083,144,3.582,145,3.313,146,3.083,147,3.154,148,1.838,149,2.419,150,3.154,151,1.838,152,1.838,153,1.413,154,1.838,155,3.688,156,3.154,157,1.838,158,2.539,159,2.419,160,2.419,161,3.688,162,2.419,163,3.688,164,2.419,165,2.069,166,2.069,167,1.838,168,1.838,169,3.154,170,2.329,171,1.558,172,3.688,173,4.47,174,1.528,175,2.539,176,1.665,177,1.413,178,2.539,179,1.665,180,3.688,181,2.419,182,2.802,183,2.069,184,1.153,185,4.47,186,2.419,187,3.688,188,2.419,189,3.688,190,2.419,191,1.528,192,1.838,193,3.688,194,0.863,195,1.665,196,1.838,197,2.069,198,3.688,199,2.069,200,1.838,201,2.069,202,2.419,203,2.419,204,1.315,205,2.069,206,2.419,207,3.688,208,2.419,209,2.419,210,3.688,211,2.419,212,3.688,213,2.419,214,3.688,215,2.069,216,3.688,217,2.419,218,2.419,219,2.419,220,1.838,221,1.665,222,2.069,223,1.413,224,1.665,225,3.688,226,1.838,227,1.665,228,1.528,229,1.665,230,2.069,231,3.688,232,5,233,2.155,234,2.005,235,2.005,236,2.539,237,2.419,238,1.43,239,1.471,240,3.688,241,3.688,242,2.419,243,2.419,244,2.419,245,2.419,246,2.419,247,1.022,248,2.419,249,2.419]],["title/modules/AppRoutingModule.html",[128,2.467,141,2.263]],["body/modules/AppRoutingModule.html",[3,0.245,4,0.214,9,0.214,38,0.021,56,0.744,58,3.6,63,0.449,64,0.245,65,0.013,88,1.225,97,1.225,99,1.292,100,1.437,102,1.1,107,1.225,109,1.225,110,1.225,114,1.225,118,0.013,119,0.016,120,0.013,130,2.992,135,3.6,141,3.716,150,4.052,158,4.05,165,4.052,166,4.052,183,4.052,196,3.6,197,4.052,222,4.052,229,3.262,230,4.052,250,4.738,251,4.738,252,4.405,253,4.05,254,2.001,255,2.258,256,7.186,257,4.738,258,4.738,259,4.738,260,4.738,261,4.738,262,4.738,263,4.738,264,4.738,265,4.738,266,4.738]],["title/injectables/AuthorizationService.html",[267,0.458,268,2.722]],["body/injectables/AuthorizationService.html",[3,0.251,4,0.219,9,0.219,22,0.251,23,0.871,30,0.816,32,0.538,35,0.489,37,0.579,38,0.021,39,0.317,40,0.39,41,0.579,43,0.871,44,1.189,54,0.954,56,0.614,63,0.46,64,0.251,65,0.013,118,0.014,119,0.017,120,0.014,122,1.553,254,2.05,267,0.763,268,4.537,269,1.553,270,4.151,271,4.537,272,5.127,273,6.749,274,4.151,275,3.669,276,5.972,277,4.854,278,4.854,279,1.731,280,4.854,281,1.472,282,4.854,283,4.854,284,4.854,285,4.854,286,1.189,287,4.854,288,4.854]],["title/classes/Comment.html",[65,0.01,289,2.093]],["body/classes/Comment.html",[3,0.241,4,0.211,9,0.211,22,0.241,23,0.85,24,1.365,32,0.646,35,0.496,37,0.556,38,0.02,39,0.305,40,0.468,41,0.556,54,1.249,64,0.241,65,0.013,118,0.013,119,0.016,120,0.013,239,2.534,289,4.082,290,2.224,291,3.33,292,3.991,293,6.656,294,1.771,295,3.546,296,3.029,297,4.828,298,3.713,299,4.667,300,4.667,301,4.667,302,4.667,303,4.667,304,4.012,305,4.667,306,4.667,307,3.213]],["title/components/CommentComponent.html",[0,0.397,83,0.977]],["body/components/CommentComponent.html",[0,0.705,1,0.832,2,1.401,3,0.158,4,0.138,5,1.03,6,1.03,7,1.03,8,1.03,9,0.138,13,1.03,14,2.167,15,1.948,16,0.976,18,1.328,20,1.328,22,0.158,24,1.039,25,1.473,30,0.598,32,0.338,35,0.406,38,0.021,39,0.335,40,0.286,43,0.638,44,1.255,56,0.45,61,1.639,63,0.289,64,0.158,65,0.008,73,0.925,74,1.479,75,1.479,76,1.03,77,1.891,78,1.03,80,1.03,81,0.832,82,1.03,83,1.682,84,1.03,85,0.832,86,1.03,87,1.479,88,0.789,89,1.03,90,1.773,91,1.03,92,0.832,93,1.03,94,0.747,95,0.877,96,1.03,97,0.789,98,1.03,99,0.832,100,0.925,101,1.03,102,0.708,103,1.03,104,0.832,105,0.832,106,1.03,107,0.789,108,1.03,109,0.789,110,0.789,111,1.03,112,0.832,113,1.03,114,0.789,115,0.789,116,1.03,117,1.03,118,0.009,119,0.012,120,0.009,238,0.976,289,3.714,291,2.941,294,1.132,296,1.454,308,2.609,309,1.289,310,2.766,311,4.253,312,3.327,313,3.745,314,1.401,315,5.123,316,4.379,317,4.788,318,1.891,319,3.745,320,2.845,321,3.327,322,4.379,323,3.051,324,2.766,325,2.766,326,3.327,327,3.051,328,4.379,329,3.051,330,3.271,331,4.379,332,4.379,333,3.745,334,3.745,335,2.766,336,3.051,337,3.015,338,3.745,339,2.087,340,3.051,341,3.051,342,3.605,343,3.236,344,3.051,345,2.609,346,3.527,347,5.123,348,3.051,349,3.051,350,2.609,351,2.318,352,3.051,353,3.051,354,3.051,355,3.051,356,3.051,357,3.051,358,2.318,359,3.051,360,3.051,361,3.051,362,3.051,363,3.745,364,1.782,365,1.927,366,2.318,367,2.318,368,2.609,369,3.051,370,3.745,371,1.658,372,2.318,373,2.609,374,3.051,375,1.782,376,2.381,377,1.289]],["title/components/CreateProposalComponent.html",[0,0.397,85,0.977]],["body/components/CreateProposalComponent.html",[0,0.697,1,0.803,2,1.366,3,0.152,4,0.133,5,0.994,6,0.994,7,0.994,8,0.994,9,0.133,13,0.994,14,2.157,15,1.939,16,0.942,18,1.295,20,1.295,22,0.152,23,0.622,24,1.196,25,0.847,30,0.583,35,0.399,38,0.021,39,0.279,40,0.192,43,0.429,44,0.721,54,0.579,56,0.516,60,1.243,61,1.607,62,1.72,63,0.279,64,0.152,65,0.008,73,0.893,74,1.442,75,1.442,76,0.994,77,1.86,78,0.994,80,0.994,81,0.803,82,0.994,83,0.803,84,0.994,85,1.501,86,2.175,87,1.442,88,0.761,89,0.994,90,0.803,91,0.994,92,0.803,93,0.994,94,0.721,95,0.847,96,0.994,97,0.761,98,0.994,99,0.803,100,1.523,101,0.994,102,0.683,103,0.994,104,0.803,105,0.803,106,0.994,107,0.761,108,0.994,109,0.761,110,0.761,111,0.994,112,0.803,113,0.994,114,0.761,115,0.761,116,0.994,117,0.994,118,0.008,119,0.012,120,0.008,125,3.217,167,4.441,168,4.441,177,3.415,239,1.702,291,2.786,294,1.103,309,2.121,310,2.696,314,1.366,318,1.86,320,2.169,324,2.696,325,2.696,330,2.493,337,3.791,339,2.034,342,3.763,377,1.243,378,2.237,379,5.507,380,3.172,381,5.507,382,4.268,383,4.294,384,3.65,385,5.021,386,5.021,387,2.944,388,4.268,389,2.938,390,2.034,391,4.268,392,2.944,393,2.944,394,2.944,395,2.517,396,2.027,397,2.517,398,2.944,399,1.6,400,2.944,401,2.944,402,2.517,403,1.243,404,2.517,405,2.944,406,2.944,407,2.944,408,2.944,409,5.021,410,2.944,411,2.944,412,2.944,413,2.944,414,2.944,415,2.944,416,2.944,417,2.944,418,2.944,419,2.517,420,2.944,421,5.507,422,4.709,423,3.65,424,5.213,425,4.268,426,4.268,427,3.65,428,3.65,429,3.65,430,2.493,431,3.65,432,1.859,433,2.517,434,2.944,435,2.944,436,2.944]],["title/interfaces/DialogData.html",[57,2.093,437,2.093]],["body/interfaces/DialogData.html",[0,0.465,3,0.149,4,0.13,9,0.13,14,0.873,15,0.785,18,0.873,20,0.873,22,0.149,23,0.612,24,0.92,26,1.564,34,1.818,38,0.021,40,0.188,44,1.028,49,2.001,52,2.172,54,1.071,56,0.725,57,2.453,59,1.564,60,2.094,61,1.344,62,1.681,63,0.273,64,0.256,65,0.012,94,0.705,95,0.828,102,0.668,105,0.785,115,0.744,118,0.014,119,0.012,120,0.008,153,1.681,170,1.818,171,1.773,174,1.818,175,1.981,176,1.981,177,1.681,178,1.981,179,1.981,223,1.681,224,1.981,233,2.896,234,2.694,235,3.288,236,1.981,238,1.744,247,2.301,253,1.981,254,1.216,255,2.001,275,2.694,281,0.873,286,1.028,294,1.497,314,1.344,318,0.972,339,1.372,377,1.216,390,2.001,437,1.681,438,2.878,439,1.981,440,2.944,441,1.462,442,1.981,443,1.818,444,1.681,445,2.187,446,1.818,447,2.187,448,1.681,449,2.362,450,2.768,451,1.564,452,1.981,453,2.89,454,2.89,455,2.89,456,2.282,457,1.564,458,1.981,459,2.89,460,3.19,461,2.453,462,1.981,463,2.962,464,2.282,465,2.89,466,1.981,467,1.981,468,1.981,469,1.981,470,1.981,471,2.187,472,2.187,473,2.187,474,1.981,475,2.187,476,2.187,477,2.187,478,2.187,479,1.981,480,1.681,481,2.187,482,1.818,483,2.187,484,2.187,485,2.944,486,2.187,487,1.818,488,1.818,489,2.187,490,2.187,491,1.981,492,2.187,493,2.001,494,1.818,495,2.187,496,3.19,497,3.19,498,3.19,499,2.187,500,2.187,501,2.187,502,2.187,503,2.187,504,2.187,505,2.187,506,1.981,507,2.187,508,2.187,509,2.187,510,2.187,511,2.187,512,2.187,513,2.187,514,2.187,515,3.766,516,3.766,517,2.187,518,3.19,519,2.187,520,3.19,521,1.564,522,3.19,523,3.19,524,3.19,525,2.001,526,1.981,527,1.981,528,1.981,529,1.981,530,2.187,531,2.187,532,2.187,533,2.187,534,2.187,535,2.187,536,1.818,537,2.187,538,1.981,539,1.681,540,2.187,541,2.187,542,2.187,543,2.187,544,2.187,545,2.187]],["title/components/ErrorComponent.html",[0,0.397,88,0.926]],["body/components/ErrorComponent.html",[0,0.652,1,1.081,2,1.679,3,0.205,4,0.179,5,1.339,6,1.339,7,1.339,8,1.339,9,0.179,13,1.339,14,2.234,15,2.008,16,1.269,18,1.592,20,1.592,22,0.205,23,0.765,30,0.717,32,0.652,35,0.426,38,0.021,39,0.343,40,0.259,43,0.578,44,1.285,50,1.269,51,1.269,54,0.779,56,0.407,61,1.882,63,0.376,64,0.205,65,0.011,73,1.202,74,1.772,75,1.772,76,1.339,77,2.114,78,1.339,80,1.339,81,1.081,82,1.339,83,1.081,84,1.339,85,1.081,86,1.339,87,1.772,88,1.618,89,1.339,90,1.081,91,1.339,92,1.081,93,1.339,94,0.971,95,1.14,96,1.339,97,1.025,98,1.339,99,1.081,100,1.202,101,1.339,102,0.92,103,1.339,104,1.081,105,1.081,106,1.339,107,1.025,108,1.339,109,1.025,110,1.025,111,1.339,112,1.081,113,1.339,114,1.025,115,1.025,116,1.339,117,1.339,118,0.011,119,0.015,120,0.011,314,1.679,318,2.114,479,4.483,525,2.983,546,3.39,547,5.882,548,5.247,549,5.247,550,3.964,551,4.487]],["title/components/FeedComponent.html",[0,0.397,90,0.977]],["body/components/FeedComponent.html",[0,0.54,1,0.412,2,0.809,3,0.078,4,0.068,5,0.51,6,0.51,7,0.51,8,0.51,9,0.068,13,0.51,14,1.913,15,1.72,16,0.483,18,0.767,20,0.767,22,0.078,23,0.368,24,1.047,25,1.096,30,0.521,32,0.423,35,0.447,37,0.506,38,0.021,39,0.319,40,0.334,41,0.506,43,0.8,44,1.381,56,0.501,61,1.043,63,0.143,64,0.078,65,0.004,73,0.458,74,0.854,75,0.854,76,0.51,77,1.288,78,0.51,80,0.51,81,0.412,82,0.51,83,0.689,84,0.51,85,0.412,86,1.101,87,0.854,88,0.39,89,0.51,90,1.252,91,0.51,92,0.412,93,0.51,94,0.37,95,0.434,96,0.51,97,0.39,98,0.51,99,0.412,100,1.287,101,0.51,102,0.35,103,0.51,104,0.412,105,0.412,106,0.51,107,0.39,108,0.51,109,0.39,110,0.39,111,0.51,112,0.689,113,1.853,114,0.39,115,0.39,116,0.51,117,0.51,118,0.004,119,0.007,120,0.004,125,0.882,145,2.848,158,1.039,169,1.291,204,3.199,205,1.291,221,1.039,239,1.692,289,3.552,291,2.973,294,1.593,296,2.533,309,1.793,310,1.596,311,2.897,312,3.884,313,2.161,314,0.809,318,1.288,319,2.161,320,1.284,321,1.92,324,2.408,325,2.408,326,4.471,330,3.685,333,3.926,334,3.926,335,1.596,337,3.52,338,1.291,339,1.817,342,3.438,343,2.9,345,2.788,350,1.291,351,2.897,364,2.227,365,2.059,366,1.147,367,2.477,368,3.261,371,2.65,372,2.477,373,1.291,375,0.882,376,0.821,377,0.638,380,2.725,389,2.625,390,1.817,399,0.821,419,4.692,427,1.291,525,2.749,538,1.039,539,1.477,551,2.788,552,1.291,553,5.113,554,3.26,555,2.528,556,3.813,557,4.591,558,3.813,559,4.591,560,2.528,561,3.813,562,2.161,563,2.161,564,4.591,565,2.528,566,1.51,567,1.51,568,2.788,569,1.51,570,1.51,571,3.926,572,1.51,573,1.51,574,1.51,575,2.528,576,2.528,577,3.261,578,2.528,579,1.51,580,3.813,581,3.813,582,3.813,583,1.51,584,3.261,585,2.528,586,2.161,587,1.51,588,2.161,589,2.528,590,2.528,591,2.528,592,2.528,593,1.51,594,2.528,595,1.51,596,3.261,597,3.813,598,2.477,599,1.51,600,1.291,601,1.51,602,2.161,603,2.528,604,1.291,605,1.51,606,3.813,607,3.26,608,2.528,609,1.51,610,2.528,611,2.161,612,2.528,613,2.528,614,1.51,615,1.51,616,1.039,617,1.51,618,1.147,619,1.51,620,1.51,621,1.51,622,1.51,623,1.51,624,1.51,625,1.51,626,1.51,627,1.51,628,1.51,629,1.51,630,1.51,631,1.51,632,1.51,633,1.51,634,1.51,635,3.261,636,1.51,637,1.51,638,1.51,639,3.26,640,1.51,641,1.51,642,1.51,643,1.51,644,1.51,645,1.51,646,1.51,647,1.51,648,1.51,649,3.813,650,3.813,651,2.528,652,1.51,653,1.51,654,1.51,655,2.528,656,3.26,657,2.528,658,2.307,659,2.161,660,1.51,661,1.51,662,1.51,663,1.51,664,1.51,665,1.51,666,2.528,667,2.528,668,3.63,669,1.51,670,1.51,671,1.51,672,2.788,673,2.788,674,1.51,675,1.51,676,1.51,677,1.51,678,2.528,679,3.813,680,1.74,681,2.528,682,1.51,683,1.51,684,2.528,685,2.528,686,1.51,687,1.51,688,1.51,689,1.51,690,1.51,691,1.51,692,1.039,693,2.528,694,1.51,695,1.51,696,1.291,697,2.528,698,2.528,699,2.528,700,2.528,701,2.528,702,2.161,703,2.528,704,2.528,705,2.528,706,2.528,707,1.905,708,1.477,709,2.161,710,2.625,711,2.528,712,2.227,713,1.51,714,1.51,715,2.161,716,2.788,717,1.147,718,2.788,719,1.51,720,1.291,721,2.528,722,1.905,723,1.51,724,0.953,725,1.51,726,2.788,727,1.51,728,1.51,729,1.291,730,1.51,731,1.51,732,1.147,733,1.51,734,1.51,735,1.51,736,1.51,737,1.291,738,2.528,739,1.51,740,2.528,741,2.161,742,1.374,743,1.51,744,2.161,745,1.51,746,1.51,747,1.51,748,1.51,749,1.51,750,1.51,751,1.51,752,1.51,753,1.51,754,2.528,755,1.51,756,1.51,757,0.882,758,1.51,759,1.51,760,2.528,761,1.51,762,1.51,763,1.51]],["title/classes/FeedParams.html",[65,0.01,764,2.467]],["body/classes/FeedParams.html",[3,0.213,4,0.186,9,0.186,22,0.213,23,0.784,24,1.373,32,0.664,35,0.499,37,0.49,38,0.021,39,0.269,40,0.431,41,0.785,54,1.329,64,0.213,65,0.015,118,0.011,119,0.015,120,0.011,228,4.011,290,1.96,294,1.39,297,5.136,309,1.738,320,3.499,324,3.395,325,3.395,335,2.598,339,3.027,342,3.141,712,3.71,764,3.701,765,5.973,766,3.518,767,3.518,768,6.76,769,6.59,770,5.889,771,4.114,772,4.114,773,4.598,774,4.114,775,5.431,776,4.114,777,4.114,778,4.114,779,4.114,780,4.114,781,4.114,782,4.114,783,4.114,784,4.114]],["title/components/FilterComponent.html",[0,0.397,92,0.977]],["body/components/FilterComponent.html",[0,0.603,1,0.675,2,1.202,3,0.128,4,0.112,5,0.836,6,0.836,7,0.836,8,0.836,9,0.112,13,0.836,14,2.104,15,1.891,16,1.451,18,1.139,20,1.139,22,0.128,24,1.063,25,1.304,28,2.585,30,0.513,32,0.275,35,0.394,37,0.295,38,0.021,39,0.296,40,0.162,41,0.295,43,0.738,44,1.332,56,0.52,61,1.202,63,0.235,64,0.128,65,0.007,73,0.751,74,1.268,75,1.268,76,0.836,77,1.709,78,0.836,80,0.836,81,0.675,82,0.836,83,0.675,84,0.836,85,0.675,86,0.836,87,1.268,88,0.64,89,0.836,90,0.675,91,0.836,92,1.561,93,0.836,94,0.607,95,0.712,96,0.836,97,0.64,98,0.836,99,0.675,100,1.902,101,0.836,102,0.575,103,0.836,104,0.675,105,0.675,106,0.836,107,0.64,108,0.836,109,0.64,110,0.64,111,0.836,112,0.675,113,0.836,114,0.64,115,1.172,116,0.836,117,0.836,118,0.007,119,0.01,120,0.007,204,3.532,215,2.118,227,4.474,228,3.868,238,0.793,291,2.728,294,1.479,297,5.115,309,1.046,310,2.371,314,1.202,318,0.836,321,2.853,326,3.844,330,2.956,335,3.196,337,3.484,339,2.919,342,3.578,343,1.564,351,1.882,365,1.564,377,1.915,423,3.878,432,1.564,588,3.211,596,3.211,616,1.705,618,1.882,658,1.346,707,2.649,708,2.956,709,2.118,710,2.585,732,1.882,742,1.346,775,3.211,785,2.118,786,4.535,787,3.755,788,5.06,789,5.06,790,5.06,791,3.755,792,3.755,793,2.477,794,2.477,795,4.348,796,3.211,797,3.755,798,5.238,799,3.755,800,2.477,801,3.755,802,3.755,803,5.724,804,2.477,805,5.06,806,5.06,807,3.211,808,3.755,809,3.755,810,2.477,811,3.755,812,3.755,813,2.477,814,2.477,815,2.477,816,2.477,817,2.477,818,2.477,819,2.477,820,2.477,821,2.477,822,2.477,823,2.477,824,3.755,825,2.477,826,2.477,827,2.477,828,2.477,829,2.477,830,2.477,831,4.535,832,2.118,833,2.477,834,2.477,835,2.477,836,2.477,837,2.477,838,3.755,839,2.477,840,2.477,841,3.755,842,2.193,843,2.477,844,3.122,845,2.477,846,2.477,847,2.477,848,2.477]],["title/components/ForgetPasswordComponent.html",[0,0.397,94,0.878]],["body/components/ForgetPasswordComponent.html",[0,0.541,1,0.764,2,1.317,3,0.145,4,0.126,5,0.946,6,0.946,7,0.946,8,0.946,9,0.126,13,0.946,14,2.142,15,1.926,16,0.896,18,1.248,20,1.248,22,0.145,23,0.6,25,1.403,30,0.562,32,0.31,34,1.769,35,0.46,37,0.334,38,0.021,39,0.319,40,0.375,41,0.334,43,0.711,44,1.317,49,1.961,50,0.896,51,0.896,52,1.117,54,1.057,56,0.589,59,1.522,60,1.183,61,1.561,63,0.266,64,0.213,65,0.011,72,3.519,73,0.849,74,1.39,75,1.39,76,0.946,77,1.935,78,0.946,80,0.946,81,0.764,82,0.946,83,0.764,84,0.946,85,0.764,86,0.946,87,1.39,88,0.724,89,0.946,90,0.764,91,0.946,92,0.764,93,0.946,94,1.317,95,1.895,96,0.946,97,0.724,98,0.946,99,0.764,100,0.849,101,0.946,102,0.65,103,0.946,104,0.764,105,1.562,106,0.946,107,0.724,108,0.946,109,0.724,110,1.39,111,0.946,112,0.764,113,0.946,114,0.724,115,0.724,116,0.946,117,0.946,118,0.008,119,0.011,120,0.008,171,1.183,174,1.769,182,2.128,223,3.787,238,1.317,239,1.945,247,1.183,255,1.335,281,0.849,286,0.686,314,1.561,318,1.816,430,2.404,440,3.228,449,2.325,450,2.479,451,1.522,453,2.833,454,2.833,455,2.833,456,1.522,461,2.404,462,1.928,463,2.237,464,2.237,465,2.833,466,1.928,467,1.928,468,1.928,469,1.928,470,1.928,493,1.335,494,1.769,521,1.522,525,2.855,658,2.652,672,2.395,673,2.395,692,1.928,807,2.395,849,5.544,850,2.395,851,4.879,852,4.115,853,4.115,854,4.879,855,5.378,856,3.703,857,2.801,858,3.703,859,4.115,860,4.115,861,2.801,862,2.801,863,2.801,864,2.801,865,2.801,866,2.801,867,2.801,868,2.801,869,2.801,870,2.801,871,2.801,872,2.801,873,2.801,874,2.801,875,1.928,876,2.801,877,2.801,878,4.172,879,2.801,880,2.395,881,2.395,882,2.599,883,3.127,884,3.519,885,3.127,886,4.115,887,4.115,888,4.115,889,4.115]],["title/injectables/GetProposalsService.html",[142,2.263,267,0.458]],["body/injectables/GetProposalsService.html",[3,0.172,4,0.15,9,0.15,22,0.172,23,0.679,25,1.826,30,0.637,32,0.369,35,0.51,37,0.777,38,0.021,39,0.426,40,0.46,41,0.777,43,0.926,50,2.032,51,2.032,54,1.248,56,0.63,63,0.316,64,0.172,65,0.009,118,0.009,119,0.013,120,0.009,122,1.066,142,2.943,184,1.587,194,1.188,267,0.595,269,1.066,279,1.188,281,1.01,286,1.556,320,2.958,335,3.395,692,3.701,764,4.845,767,2.847,770,4.979,890,6.059,891,2.847,892,4.66,893,4.66,894,4.66,895,4.66,896,4.66,897,4.66,898,4.66,899,4.66,900,4.66,901,4.66,902,4.66,903,4.66,904,3.33,905,2.143,906,4.66,907,3.33,908,3.33,909,3.33,910,4,911,3.33,912,3.33,913,3.33,914,3.33,915,3.33,916,3.33,917,3.33,918,3.33,919,3.33,920,3.33,921,4.66,922,3.33,923,3.33,924,4.66,925,3.33,926,3.33,927,4.66,928,3.33,929,3.33,930,3.33,931,3.33,932,3.33,933,3.33,934,3.33,935,3.33,936,3.33,937,3.33,938,3.33,939,3.33,940,3.33,941,4.66,942,3.33,943,3.33,944,3.33,945,3.33,946,3.985,947,3.33,948,3.33,949,3.33]],["title/injectables/GetTeamService.html",[143,1.948,267,0.458]],["body/injectables/GetTeamService.html",[3,0.255,4,0.222,9,0.222,22,0.255,30,0.824,32,0.547,35,0.437,37,0.588,38,0.021,39,0.322,40,0.322,41,0.588,43,0.719,56,0.697,63,0.468,64,0.255,65,0.014,118,0.014,119,0.017,120,0.014,122,1.578,143,3.278,184,2.35,194,1.758,267,0.77,269,1.578,279,1.758,281,1.496,286,1.477,905,2.597,910,3.522,950,5.57,951,4.216,952,5.155,953,2.083,954,4.931,955,2.083,956,4.931,957,3.808,958,3.114,959,4.931,960,2.68,961,4.931,962,4.216]],["title/components/HomeComponent.html",[0,0.397,97,0.926]],["body/components/HomeComponent.html",[0,0.515,1,0.702,2,1.238,3,0.133,4,0.116,5,0.87,6,0.87,7,0.87,8,0.87,9,0.116,13,0.87,14,2.117,15,1.902,16,0.824,18,1.173,20,1.173,22,0.2,23,0.564,24,1.079,27,3.307,30,0.528,32,0.286,35,0.401,37,0.307,38,0.021,39,0.337,40,0.304,41,0.307,43,0.564,44,1.138,49,1.843,56,0.397,61,1.486,63,0.244,64,0.133,65,0.007,73,0.781,74,1.306,75,1.306,76,0.87,77,1.743,78,0.87,80,0.87,81,0.702,82,0.87,83,0.702,84,0.87,85,0.702,86,0.87,87,1.306,88,0.666,89,0.87,90,0.702,91,0.87,92,0.702,93,0.87,94,0.631,95,0.741,96,0.87,97,1.334,98,0.87,99,0.702,100,0.781,101,0.87,102,0.598,103,0.87,104,0.702,105,0.702,106,0.87,107,0.666,108,0.87,109,0.666,110,0.666,111,0.87,112,0.702,113,0.87,114,0.666,115,0.666,116,0.87,117,0.87,118,0.007,119,0.011,120,0.011,200,1.957,235,2.102,254,1.088,281,0.781,309,1.634,314,1.238,318,1.743,363,2.203,365,3.494,366,1.957,367,1.957,371,3.158,372,1.957,375,3.232,376,1.4,377,2.337,380,1.733,432,3.494,433,4.731,571,2.203,680,3.197,707,3.831,708,1.505,710,4.149,712,2.713,716,3.307,717,2.938,722,3.773,726,2.203,729,2.203,732,4.907,737,3.307,741,2.203,742,2.102,744,2.203,757,2.259,795,1.957,832,2.203,842,3.016,844,1.773,963,2.203,964,3.868,965,4.644,966,3.868,967,3.868,968,5.162,969,2.576,970,4.414,971,3.868,972,2.576,973,2.576,974,2.576,975,2.576,976,2.576,977,2.203,978,2.576,979,2.576,980,2.576,981,3.307,982,3.868,983,3.868,984,3.868,985,2.576,986,2.576,987,2.203,988,2.576,989,3.197,990,2.576,991,2.203,992,2.576,993,2.576,994,3.307,995,2.576,996,2.576,997,3.494,998,2.663,999,2.576,1000,2.576,1001,2.203,1002,6.026,1003,1.627,1004,2.576,1005,1.773,1006,1.627,1007,1.627,1008,3.868,1009,2.576,1010,2.203,1011,2.576,1012,2.576,1013,3.868,1014,5.301,1015,4.644,1016,2.576,1017,2.576,1018,5.532,1019,5.162,1020,2.576,1021,2.576,1022,2.576,1023,2.576,1024,3.868,1025,2.576,1026,2.576,1027,2.576,1028,2.576,1029,2.576,1030,3.868,1031,3.868,1032,6.199,1033,2.576,1034,2.576,1035,2.576,1036,2.576,1037,2.576,1038,2.576,1039,2.576,1040,2.576,1041,2.576,1042,2.576,1043,2.576,1044,2.576,1045,2.576,1046,2.203,1047,2.576,1048,2.576,1049,2.576,1050,2.576,1051,2.576]],["title/interceptors/HttpInterceptorService.html",[1052,3.064,1053,2.722]],["body/interceptors/HttpInterceptorService.html",[3,0.229,4,0.2,9,0.2,22,0.229,30,0.771,32,0.491,35,0.409,37,0.672,38,0.021,39,0.369,40,0.406,41,0.672,43,0.646,56,0.671,63,0.42,64,0.229,65,0.012,118,0.012,119,0.016,120,0.012,184,2.111,194,1.58,238,1.418,255,2.111,267,0.721,272,3.366,281,1.344,286,1.382,294,1.145,314,1.418,457,3.551,458,3.05,680,3.05,910,3.625,1053,4.285,1054,4.431,1055,5.306,1056,3.789,1057,5.64,1058,4.431,1059,4.431,1060,5.64,1061,5.64,1062,6.532,1063,6.205,1064,6.532,1065,4.431,1066,4.431,1067,5.64,1068,4.431,1069,5.64,1070,4.431,1071,4.431,1072,4.431,1073,4.431,1074,3.789,1075,4.431,1076,4.431,1077,3.366,1078,4.431,1079,4.431,1080,4.431,1081,4.431]],["title/components/LoginComponent.html",[0,0.397,102,0.831]],["body/components/LoginComponent.html",[0,0.424,1,0.518,2,0.977,3,0.098,4,0.086,5,0.642,6,0.642,7,0.642,8,0.642,9,0.086,13,0.642,14,2.009,15,1.806,16,0.608,18,0.926,20,0.926,22,0.098,23,0.445,24,1.073,26,1.033,30,0.417,32,0.211,34,1.201,35,0.493,37,0.227,38,0.021,39,0.25,40,0.388,41,0.227,43,0.7,44,1.32,49,2.089,50,1.536,51,1.536,52,1.748,54,0.944,56,0.675,57,1.111,59,1.033,60,1.617,61,1.225,62,1.111,63,0.18,64,0.198,65,0.008,73,0.577,74,1.031,75,1.031,76,0.642,77,1.48,78,0.642,80,0.642,81,0.518,82,0.642,83,0.518,84,0.642,85,0.518,86,0.642,87,1.031,88,0.491,89,0.642,90,0.518,91,0.642,92,0.518,93,0.642,94,0.748,95,0.878,96,0.642,97,0.491,98,0.642,99,0.518,100,0.577,101,0.642,102,1.017,103,0.642,104,0.518,105,1.527,106,0.642,107,0.491,108,0.642,109,0.491,110,0.989,111,0.642,112,0.518,113,0.642,114,0.491,115,0.789,116,0.642,117,0.642,118,0.011,119,0.009,120,0.005,153,1.111,170,1.201,171,1.29,174,1.201,175,1.309,176,1.309,177,1.111,178,1.309,179,1.309,223,1.111,224,1.309,233,2.236,234,2.081,235,2.928,236,1.309,238,1.536,247,2.275,253,1.309,254,0.803,255,1.455,274,1.626,275,2.787,281,0.577,286,0.748,294,1.392,314,1.225,318,1.48,339,0.906,364,1.111,371,1.66,376,1.66,377,1.29,390,2.443,437,1.111,439,1.309,440,3.137,441,2.439,442,1.309,443,1.201,444,2.236,445,1.444,446,1.201,447,1.444,448,1.111,449,2.089,450,2.227,451,1.033,452,1.309,453,2.103,454,2.103,455,2.103,456,2.609,457,2.382,458,1.309,459,3.017,460,2.908,461,2.236,462,1.309,463,2.382,464,1.66,465,2.103,466,1.309,467,1.309,468,1.309,469,1.309,470,1.309,471,2.32,472,2.908,473,1.444,474,1.309,475,2.908,476,2.908,477,1.444,478,2.908,479,3.305,480,1.784,481,2.32,482,2.417,483,2.908,484,2.908,485,2.937,486,2.908,487,2.417,488,1.201,489,1.444,490,1.444,491,2.635,492,1.444,493,1.455,494,1.201,495,2.908,496,2.32,497,2.32,498,2.32,499,3.33,500,1.444,501,1.444,502,1.444,503,1.444,504,1.444,505,1.444,506,3.017,507,1.444,508,1.444,509,1.444,510,1.444,511,1.444,512,1.444,513,1.444,514,1.444,515,2.908,516,2.908,517,1.444,518,2.32,519,1.444,520,2.32,521,1.033,522,2.32,523,2.32,524,2.32,525,1.455,526,1.309,527,1.309,528,1.309,529,1.309,530,3.33,531,1.444,532,1.444,533,1.444,534,1.444,535,1.444,536,1.201,537,1.444,538,1.309,539,2.56,540,1.444,541,1.444,542,1.444,543,1.444,544,1.444,545,1.444,658,2.382,707,1.111,708,1.111,712,1.111,718,1.626,722,1.111,724,1.201,742,1.033,757,1.111,842,1.111,844,1.309,882,2.768,883,3.33,884,3.748,885,3.33,994,1.626,997,3.237,998,1.309,1003,1.201,1005,1.309,1006,1.929,1007,1.929,1014,1.626,1082,2.612,1083,4.383,1084,3.054,1085,3.054,1086,3.054,1087,1.901,1088,1.901,1089,1.901,1090,1.901,1091,1.901,1092,1.901,1093,1.901,1094,1.901,1095,1.901,1096,1.901,1097,1.901,1098,1.901,1099,1.901,1100,1.901,1101,1.901,1102,1.901,1103,1.901,1104,1.901,1105,1.901,1106,1.901,1107,3.054,1108,3.054,1109,3.054,1110,3.054,1111,1.901,1112,1.901,1113,1.626,1114,1.626]],["title/classes/MyErrorStateMatcher.html",[65,0.01,461,2.093]],["body/classes/MyErrorStateMatcher.html",[0,0.454,3,0.144,4,0.125,9,0.125,14,0.843,15,0.758,18,0.843,20,0.843,22,0.144,24,0.902,26,1.511,30,0.559,34,1.755,35,0.201,37,0.331,38,0.021,39,0.182,40,0.182,41,0.331,43,0.405,44,1.002,49,2.315,52,2.137,54,0.804,56,0.721,57,1.624,59,1.511,60,2.052,61,1.31,62,1.624,63,0.264,64,0.251,65,0.011,94,0.681,95,0.799,102,0.645,105,0.758,115,0.718,118,0.014,119,0.011,120,0.008,153,1.624,170,1.755,171,1.729,174,1.755,175,1.913,176,1.913,177,1.624,178,1.913,179,1.913,223,1.624,224,1.913,233,2.838,234,2.64,235,3.248,236,1.913,238,1.715,247,2.263,253,1.913,254,1.174,255,1.95,275,2.64,281,0.843,286,1.002,290,1.324,294,1.476,314,1.554,318,0.939,339,1.324,377,1.174,390,1.95,437,1.624,439,1.913,440,2.079,441,1.412,442,1.913,443,1.755,444,1.624,445,2.111,446,1.755,447,2.111,448,1.624,449,2.315,450,3.036,451,1.511,452,1.913,453,3.689,454,3.689,455,3.344,456,2.225,457,1.511,458,1.913,459,2.817,460,3.109,461,2.838,462,2.817,463,3.446,464,2.913,465,2.817,466,1.913,467,2.817,468,1.913,469,1.913,470,1.913,471,2.111,472,2.111,473,2.111,474,1.913,475,2.111,476,2.111,477,2.111,478,2.111,479,1.913,480,1.624,481,2.111,482,1.755,483,2.111,484,2.111,485,2.902,486,2.111,487,1.755,488,1.755,489,2.111,490,2.111,491,1.913,492,2.111,493,1.95,494,1.755,495,2.111,496,3.109,497,3.109,498,3.109,499,2.111,500,2.111,501,2.111,502,2.111,503,2.111,504,2.111,505,2.111,506,1.913,507,2.111,508,2.111,509,2.111,510,2.111,511,2.111,512,2.111,513,2.111,514,2.111,515,3.69,516,3.69,517,2.111,518,3.109,519,2.111,520,3.109,521,1.511,522,3.109,523,3.109,524,3.109,525,1.95,526,1.913,527,1.913,528,1.913,529,1.913,530,2.111,531,2.111,532,2.111,533,2.111,534,2.111,535,2.111,536,1.755,537,2.111,538,1.913,539,1.624,540,2.111,541,2.111,542,2.111,543,2.111,544,2.111,545,2.111,1115,4.092,1116,2.779]],["title/components/PasswordSpecsComponent.html",[0,0.397,104,0.977]],["body/components/PasswordSpecsComponent.html",[0,0.634,1,1.023,2,1.619,3,0.194,4,0.169,5,1.268,6,1.268,7,1.268,8,1.268,9,0.169,13,1.268,14,2.221,15,1.997,16,1.201,18,1.534,20,1.534,22,0.194,30,0.691,32,0.634,35,0.367,38,0.021,39,0.331,43,0.547,44,1.239,56,0.386,61,1.831,63,0.356,64,0.194,65,0.01,73,1.138,74,1.709,75,1.709,76,1.268,77,2.068,78,1.268,80,1.268,81,1.023,82,1.268,83,1.023,84,1.268,85,1.023,86,1.268,87,1.709,88,0.97,89,1.268,90,1.023,91,1.268,92,1.023,93,1.268,94,0.919,95,1.079,96,1.268,97,0.97,98,1.268,99,1.023,100,1.138,101,1.268,102,0.871,103,1.268,104,1.67,105,1.942,106,1.268,107,0.97,108,1.268,109,0.97,110,0.97,111,1.268,112,1.023,113,1.268,114,0.97,115,0.97,116,1.268,117,1.268,118,0.01,119,0.014,120,0.01,191,3.614,296,2.411,314,1.619,318,2.068,422,4.326,424,4.326,1117,4.894,1118,3.209,1119,5.059,1120,5.723,1121,5.059,1122,3.753,1123,3.753,1124,5.059,1125,5.059,1126,5.059,1127,5.059,1128,6.124,1129,5.059,1130,5.059,1131,5.059,1132,5.059,1133,5.059,1134,5.059,1135,5.059]],["title/classes/Post.html",[65,0.01,204,1.948]],["body/classes/Post.html",[3,0.225,4,0.197,9,0.197,22,0.225,23,0.814,24,1.381,32,0.619,35,0.506,37,0.52,38,0.021,39,0.365,40,0.467,41,0.52,54,1.415,64,0.225,65,0.012,118,0.012,119,0.016,120,0.012,125,3.921,204,3.035,239,2.738,290,2.078,294,1.735,296,3.403,298,3.597,304,3.002,307,3.002,309,2.742,403,2.9,440,2.215,1136,3.728,1137,6.712,1138,4.36,1139,4.36,1140,4.36,1141,4.36,1142,4.36,1143,4.36,1144,4.36,1145,4.36]],["title/injectables/PostProposalService.html",[144,2.263,267,0.458]],["body/injectables/PostProposalService.html",[3,0.203,4,0.177,9,0.177,22,0.203,23,0.76,24,1.086,25,1.498,30,0.712,32,0.435,35,0.501,37,0.697,38,0.021,39,0.382,40,0.445,41,0.697,43,0.76,50,1.995,51,1.995,54,1.225,56,0.64,63,0.372,64,0.203,65,0.011,118,0.011,119,0.015,120,0.011,122,1.255,144,3.29,184,1.869,194,1.399,239,2.077,267,0.666,269,1.255,279,1.399,281,1.19,286,1.433,298,2.291,320,2.647,380,2.335,485,3.645,616,4.817,692,2.7,905,2.333,910,3.043,946,4.455,953,1.656,955,1.656,958,2.477,1146,3.354,1147,5.21,1148,5.21,1149,5.85,1150,5.21,1151,5.21,1152,5.21,1153,5.21,1154,5.21,1155,3.922,1156,3.922,1157,3.922,1158,3.922,1159,3.922,1160,3.922,1161,3.354,1162,3.922,1163,3.922,1164,3.922,1165,3.922,1166,3.922,1167,3.922,1168,3.922,1169,3.922,1170,3.922,1171,3.922,1172,3.922,1173,3.922,1174,3.922,1175,3.922,1176,3.922,1177,3.922,1178,3.922,1179,3.922,1180,3.922,1181,3.922]],["title/classes/Proposal.html",[65,0.01,380,1.606]],["body/classes/Proposal.html",[3,0.237,4,0.207,9,0.207,22,0.237,23,0.84,24,1.377,32,0.638,35,0.504,37,0.546,38,0.02,39,0.299,40,0.471,41,0.751,54,1.416,64,0.237,65,0.013,118,0.013,119,0.016,120,0.013,125,3.862,239,2.636,290,2.182,296,3.002,298,3.68,309,2.792,320,3.201,380,2.581,403,2.877,404,3.916,773,3.916,1182,3.916,1183,4.579,1184,4.579,1185,4.579,1186,4.579,1187,4.579,1188,4.579,1189,4.579,1190,4.579,1191,4.579,1192,4.579]],["title/injectables/ProposalService.html",[145,2.093,267,0.458]],["body/injectables/ProposalService.html",[3,0.117,4,0.102,9,0.102,22,0.117,23,0.51,30,0.478,32,0.388,35,0.484,37,0.709,38,0.021,39,0.389,40,0.436,41,0.709,43,0.963,50,1.842,51,1.842,54,1.226,56,0.496,63,0.214,64,0.117,65,0.006,118,0.006,119,0.01,120,0.006,122,0.723,145,2.044,184,1.077,194,0.806,204,2.622,239,2.846,267,0.447,269,0.723,279,0.806,281,0.685,286,1.41,289,3.768,291,3.209,294,1.426,296,3.443,309,2.579,312,3.664,317,2.992,320,3.514,324,3.757,325,3.757,330,3.861,380,3.179,389,2.409,562,2.992,563,2.992,568,2.992,586,2.992,598,5.116,600,1.932,602,5.335,604,1.932,635,5.588,696,5.086,702,2.992,796,2.992,905,2.081,910,4.081,953,0.954,955,1.478,958,1.427,1161,1.932,1193,1.932,1194,2.992,1195,4.283,1196,3.499,1197,3.499,1198,3.499,1199,3.499,1200,3.499,1201,3.499,1202,3.499,1203,3.499,1204,3.499,1205,3.499,1206,3.499,1207,2.259,1208,2.259,1209,2.259,1210,2.259,1211,2.259,1212,2.259,1213,4.124,1214,2.259,1215,2.259,1216,4.823,1217,4.283,1218,2.259,1219,2.259,1220,2.259,1221,4.823,1222,2.259,1223,3.499,1224,2.259,1225,5.652,1226,2.259,1227,2.259,1228,2.259,1229,2.259,1230,2.259,1231,2.259,1232,2.259,1233,2.259,1234,2.259,1235,2.259,1236,2.259,1237,2.259,1238,2.259,1239,2.259,1240,2.259,1241,2.259,1242,2.259,1243,2.259,1244,2.259,1245,2.259,1246,2.259,1247,2.259,1248,2.259,1249,2.259,1250,2.259,1251,2.259,1252,2.259,1253,2.259,1254,2.259,1255,2.259,1256,2.259]],["title/components/RegisterComponent.html",[0,0.397,107,0.926]],["body/components/RegisterComponent.html",[0,0.393,1,0.76,2,0.892,3,0.183,4,0.077,5,0.942,6,0.574,7,0.574,8,0.574,9,0.077,11,0.993,13,0.574,14,1.964,15,1.766,16,0.892,18,0.846,20,0.846,22,0.088,23,0.407,24,1.032,25,0.489,26,1.516,28,2.441,30,0.381,32,0.309,35,0.473,37,0.203,38,0.021,39,0.351,40,0.351,41,0.203,43,0.66,44,1.11,50,1.45,51,1.949,52,1.636,54,0.806,56,0.588,59,0.924,60,0.718,61,1.135,63,0.161,64,0.088,65,0.005,73,0.516,74,0.942,75,0.942,76,0.574,77,1.53,78,0.574,80,0.574,81,0.463,82,0.574,83,0.463,84,0.574,85,0.463,86,1.198,87,0.942,88,0.439,89,0.574,90,0.463,91,0.574,92,0.463,93,0.574,94,0.416,95,0.489,96,0.574,97,0.439,98,0.574,99,0.463,100,0.516,101,0.574,102,0.394,103,0.574,104,0.76,105,1.631,106,0.574,107,1.06,108,0.574,109,0.439,110,0.439,111,0.574,112,0.463,113,0.574,114,0.439,115,1.514,116,0.574,117,0.574,118,0.005,119,0.008,120,0.005,143,2.23,146,2.23,151,1.292,152,1.292,153,0.993,154,1.292,158,1.17,171,0.718,177,2.071,182,1.292,191,1.074,192,1.292,195,1.17,226,1.292,238,0.892,239,1.414,247,1.913,254,0.718,255,1.329,275,3.109,286,1.005,294,0.916,314,0.892,318,1.386,343,1.074,346,1.17,364,0.993,365,1.074,370,1.454,371,1.516,375,2.646,376,2.23,377,2.171,390,2.159,403,1.178,430,1.629,432,2.239,440,2.473,448,3.003,449,1.69,450,0.864,451,0.924,456,2.462,464,1.516,480,2.071,485,1.802,493,2.159,494,1.074,521,0.924,525,1.955,539,2.397,658,3.252,668,1.454,707,1.629,708,1.629,710,2.825,712,0.993,717,1.292,720,2.385,722,0.993,724,1.074,742,0.924,757,1.629,842,2.071,856,2.825,875,1.17,880,2.385,881,3.032,882,3.778,883,2.119,885,2.119,952,2.119,957,2.239,981,3.509,987,1.454,989,1.92,991,1.454,997,2.591,998,1.17,1001,1.454,1003,1.074,1005,1.17,1006,1.074,1007,1.074,1010,1.454,1114,2.385,1257,1.454,1258,3.546,1259,2.789,1260,3.546,1261,3.509,1262,3.509,1263,3.032,1264,3.546,1265,3.032,1266,3.032,1267,4.867,1268,3.117,1269,2.789,1270,3.546,1271,1.454,1272,2.239,1273,2.789,1274,1.7,1275,1.7,1276,1.7,1277,1.7,1278,1.7,1279,1.7,1280,1.7,1281,1.7,1282,1.7,1283,1.7,1284,1.7,1285,1.7,1286,1.7,1287,1.7,1288,1.7,1289,1.7,1290,1.7,1291,1.7,1292,1.17,1293,1.454,1294,1.7,1295,1.454,1296,1.454,1297,1.454,1298,1.454,1299,2.119,1300,1.292,1301,1.292,1302,1.454,1303,1.7,1304,1.292,1305,3.117,1306,2.694,1307,1.7,1308,1.7,1309,3.509,1310,2.789,1311,1.7,1312,1.7,1313,1.7,1314,1.454,1315,1.454,1316,1.454,1317,1.454,1318,1.454,1319,2.789,1320,1.7,1321,1.7,1322,1.454,1323,1.454,1324,1.454,1325,1.454,1326,1.7,1327,1.7,1328,1.7,1329,1.7,1330,1.7,1331,1.7,1332,1.7,1333,1.7,1334,1.7,1335,1.7,1336,1.454,1337,1.7,1338,1.7,1339,1.454,1340,1.7,1341,1.454,1342,2.694,1343,1.7,1344,1.454,1345,1.454,1346,1.7,1347,1.7,1348,1.7,1349,1.7,1350,1.454,1351,1.7,1352,3.032,1353,2.789,1354,3.509,1355,2.694,1356,2.385,1357,2.385,1358,2.385,1359,2.385,1360,1.7,1361,1.7,1362,1.7,1363,1.7,1364,4.162,1365,4.078,1366,2.789,1367,2.385,1368,2.385,1369,3.509,1370,3.509,1371,2.385,1372,2.789,1373,2.789,1374,2.789,1375,2.789,1376,1.454,1377,1.454,1378,1.454,1379,1.454,1380,1.454,1381,1.7,1382,2.789,1383,1.7,1384,3.546,1385,1.7,1386,1.7,1387,1.7,1388,1.7,1389,1.7,1390,1.7,1391,1.7]],["title/components/ResetLinkComponent.html",[0,0.397,109,0.926]],["body/components/ResetLinkComponent.html",[0,0.491,1,0.995,2,1.167,3,0.229,4,0.108,5,0.805,6,0.805,7,0.805,8,0.805,9,0.108,11,1.393,13,0.805,14,2.091,15,1.88,16,1.167,18,1.107,20,1.107,22,0.123,23,0.532,24,0.677,25,0.686,26,1.983,29,3.12,30,0.498,32,0.264,35,0.473,37,0.284,38,0.021,39,0.29,40,0.35,41,0.284,43,0.723,44,1.31,49,1.136,50,1.418,51,1.878,52,1.455,54,0.469,56,0.637,59,1.296,60,1.007,61,1.418,63,0.226,64,0.123,65,0.007,73,0.723,74,1.232,75,1.232,76,0.805,77,1.905,78,0.805,80,0.805,81,0.65,82,0.805,83,0.65,84,0.805,85,0.65,86,0.805,87,1.232,88,0.616,89,0.805,90,0.65,91,0.805,92,0.65,93,0.805,94,0.584,95,0.686,96,0.805,97,0.616,98,0.805,99,0.65,100,0.723,101,0.805,102,0.553,103,0.805,104,0.995,105,1.726,106,0.805,107,0.616,108,0.805,109,1.283,110,1.688,111,0.805,112,0.65,113,0.805,114,0.616,115,0.616,116,0.805,117,0.805,118,0.007,119,0.01,120,0.007,171,1.007,191,1.506,192,1.812,195,1.642,229,4.552,238,1.167,254,1.007,255,1.739,314,1.167,318,1.676,364,1.393,371,1.296,375,2.588,376,1.296,377,1.541,390,2.365,399,1.296,430,2.131,448,3.429,449,2.111,450,1.212,451,1.296,456,2.907,480,2.899,485,2.522,493,1.739,521,2.408,525,1.739,539,2.899,658,3.066,707,1.393,708,1.393,712,1.393,722,1.393,724,1.506,742,1.296,757,1.393,842,1.393,844,1.642,856,3.417,875,2.512,878,4.244,882,3.134,970,4.573,977,2.039,997,3.378,1003,1.506,1006,1.506,1007,1.506,1113,2.039,1261,4.244,1262,4.244,1268,3.77,1292,1.642,1293,2.039,1295,2.039,1296,2.039,1297,2.039,1298,2.039,1299,2.772,1300,1.812,1301,1.812,1304,1.812,1305,1.812,1306,1.812,1309,2.039,1314,2.039,1315,2.039,1316,2.039,1317,2.039,1318,2.039,1322,2.039,1323,2.039,1355,1.812,1365,2.772,1369,4.244,1370,4.244,1371,3.12,1392,5.654,1393,2.039,1394,4.431,1395,3.648,1396,4.431,1397,5.348,1398,3.648,1399,2.385,1400,4.431,1401,3.417,1402,3.789,1403,3.417,1404,3.648,1405,2.385,1406,2.385,1407,2.385,1408,2.385,1409,2.385,1410,2.385,1411,3.648,1412,2.385,1413,2.385,1414,2.385,1415,2.385,1416,2.385,1417,2.385,1418,2.385,1419,2.385,1420,2.385,1421,2.385,1422,2.385,1423,3.648,1424,2.385,1425,2.385,1426,2.385,1427,2.385,1428,2.385,1429,2.385,1430,2.385,1431,2.385,1432,2.385,1433,2.385,1434,2.385,1435,3.648,1436,3.648,1437,2.385,1438,2.385,1439,2.385,1440,2.385]],["title/injectables/ResetPasswordService.html",[267,0.458,1403,2.467]],["body/injectables/ResetPasswordService.html",[3,0.25,4,0.218,9,0.218,22,0.25,23,0.868,24,1.106,25,1.39,30,0.814,32,0.536,35,0.468,37,0.71,38,0.021,39,0.389,40,0.389,41,0.71,43,0.705,56,0.612,63,0.458,64,0.25,65,0.013,118,0.014,119,0.017,120,0.014,122,1.546,194,1.723,267,0.761,269,1.546,279,1.723,286,1.184,399,2.627,905,2.759,953,2.041,955,2.846,960,2.627,1402,5.52,1403,4.1,1441,5.762,1442,4.132,1443,4.832,1444,5.955,1445,4.832,1446,4.832,1447,4.832,1448,3.327,1449,3.052]],["title/injectables/SendResetLinkService.html",[267,0.458,858,2.467]],["body/injectables/SendResetLinkService.html",[3,0.248,4,0.216,9,0.216,22,0.248,23,0.864,24,1.1,25,1.377,30,0.809,32,0.531,35,0.466,37,0.706,38,0.021,39,0.387,40,0.387,41,0.706,43,0.698,56,0.609,63,0.454,64,0.248,65,0.013,110,1.736,118,0.013,119,0.017,120,0.013,122,1.533,194,1.708,267,0.757,269,1.533,279,1.708,286,1.173,399,2.604,858,4.078,905,2.752,953,2.023,955,2.837,960,2.604,1448,3.298,1449,3.025,1450,5.744,1451,4.096,1452,5.923,1453,4.79,1454,5.923,1455,4.79,1456,4.79,1457,4.79,1458,4.79]],["title/components/ShareProposalComponent.html",[0,0.397,112,0.977]],["body/components/ShareProposalComponent.html",[0,0.677,1,0.901,2,1.483,3,0.171,4,0.149,5,1.116,6,1.116,7,1.116,8,1.116,9,0.149,13,1.116,14,2.189,15,1.968,16,1.058,18,1.406,20,1.406,22,0.171,24,0.614,25,0.95,30,0.633,35,0.239,38,0.021,39,0.303,43,0.482,44,1.135,52,1.318,56,0.596,60,1.396,61,1.713,62,1.931,63,0.313,64,0.171,65,0.009,73,1.002,74,1.565,75,1.565,76,1.116,77,1.96,78,1.116,80,1.116,81,0.901,82,1.116,83,0.901,84,1.116,85,0.901,86,1.116,87,1.565,88,0.854,89,1.116,90,1.46,91,1.116,92,0.901,93,1.116,94,0.809,95,0.95,96,1.116,97,0.854,98,1.116,99,0.901,100,1.002,101,1.116,102,0.767,103,1.116,104,0.901,105,0.901,106,1.116,107,0.854,108,1.116,109,0.854,110,0.854,111,1.116,112,1.727,113,2.309,114,0.854,115,1.5,116,1.116,117,1.116,118,0.009,119,0.013,120,0.009,170,2.087,171,1.958,220,3.521,221,3.191,228,2.927,238,1.483,247,1.396,286,1.311,291,2.209,309,1.396,310,2.927,311,3.521,314,1.483,318,1.96,330,2.708,342,3.57,378,2.511,380,2.976,383,4.578,384,3.964,389,3.191,390,1.575,395,2.826,399,1.796,402,2.826,403,1.958,429,3.964,430,2.708,431,3.964,449,2.209,493,1.575,577,3.964,584,3.964,611,3.964,1336,3.964,1352,3.964,1459,4.635,1460,3.305,1461,5.803,1462,3.305,1463,3.305,1464,3.305,1465,3.305,1466,3.305,1467,3.305,1468,3.305,1469,4.635,1470,4.635,1471,4.635,1472,3.305,1473,4.635,1474,3.305,1475,3.305,1476,3.305,1477,3.305,1478,3.305]],["title/injectables/SocialMediaAuthService.html",[267,0.458,444,2.093]],["body/injectables/SocialMediaAuthService.html",[3,0.172,4,0.15,9,0.15,22,0.172,23,0.679,24,1.179,25,0.958,30,0.637,32,0.369,35,0.496,37,0.641,38,0.021,39,0.351,40,0.381,41,0.641,43,0.926,44,1.141,49,1.587,50,1.066,51,1.066,52,1.328,54,1.281,56,0.63,63,0.316,64,0.172,65,0.009,115,0.861,118,0.009,119,0.013,120,0.009,122,1.066,194,1.188,234,1.81,247,1.406,254,1.406,267,0.595,269,1.066,271,3.54,275,3.544,279,1.188,281,1.01,286,1.597,294,1.584,339,1.587,346,4.219,358,3.54,441,3.114,443,2.103,444,2.722,446,4.411,463,2.922,485,2.368,487,3.395,488,2.103,506,3.208,525,1.587,526,2.292,527,2.292,528,2.292,529,2.292,905,2.322,953,1.406,955,1.968,960,2.533,1077,2.53,1449,2.103,1479,5.919,1480,2.847,1481,4.597,1482,3.985,1483,4.979,1484,4.979,1485,4.979,1486,4.979,1487,4.66,1488,3.985,1489,3.33,1490,3.33,1491,3.33,1492,3.33,1493,3.33,1494,5.375,1495,3.33,1496,3.33,1497,3.33,1498,3.33,1499,2.847,1500,2.847,1501,3.33,1502,3.33,1503,3.33,1504,2.847,1505,3.33,1506,3.33,1507,3.33,1508,2.847,1509,2.847,1510,2.847,1511,3.985]],["title/components/TeamComponent.html",[0,0.397,114,0.926]],["body/components/TeamComponent.html",[0,0.496,1,1.008,2,1.183,3,0.125,4,0.109,5,0.82,6,0.82,7,0.82,8,0.82,9,0.109,11,1.418,13,0.82,14,2.097,15,1.885,16,1.183,18,1.122,20,1.122,22,0.125,23,0.539,24,1.054,25,1.288,26,1.319,28,3.084,30,0.505,32,0.41,35,0.486,37,0.289,38,0.021,39,0.398,40,0.386,41,0.289,43,0.653,44,1.227,50,1.433,51,1.433,52,1.474,54,0.727,56,0.641,60,1.025,61,1.433,63,0.23,64,0.125,65,0.007,73,0.736,74,1.249,75,1.249,76,0.82,77,1.82,78,0.82,80,0.82,81,0.662,82,0.82,83,0.662,84,0.82,85,0.662,86,1.513,87,1.249,88,0.627,89,0.82,90,0.662,91,0.82,92,0.662,93,0.82,94,0.595,95,0.698,96,0.82,97,0.627,98,0.82,99,0.662,100,0.736,101,0.82,102,0.563,103,0.82,104,0.662,105,1.008,106,0.82,107,0.627,108,0.82,109,0.627,110,0.627,111,0.82,112,0.662,113,0.82,114,1.294,115,1.749,116,0.82,117,0.82,118,0.007,119,0.01,120,0.007,143,2.722,146,2.722,151,1.844,152,1.844,153,1.418,154,1.844,171,1.025,195,1.671,227,2.546,233,1.418,234,1.319,235,1.319,238,1.183,247,2.115,254,1.025,255,1.157,275,3.458,286,0.595,294,0.627,314,1.183,318,1.691,343,1.533,364,1.418,371,1.319,375,2.16,376,2.01,377,1.562,390,2.569,403,1.562,430,2.16,440,1.233,441,2.739,442,1.671,443,1.533,448,3.45,449,2.135,450,1.233,451,1.319,456,2.93,459,3.448,464,1.319,480,1.418,482,2.829,485,2.739,488,1.533,491,3.084,493,1.157,521,1.319,536,1.533,658,2.01,722,1.418,724,1.533,742,1.319,757,1.418,842,1.418,856,3.448,875,1.671,882,3.163,952,2.809,997,3.163,998,1.671,1003,1.533,1005,1.671,1006,1.533,1007,1.533,1263,3.83,1265,3.83,1266,3.83,1268,3.805,1271,2.076,1272,2.829,1299,1.844,1300,1.844,1301,1.844,1302,2.076,1304,1.844,1305,1.844,1306,1.844,1324,2.076,1325,2.076,1339,2.076,1341,2.076,1342,1.844,1344,2.076,1345,2.076,1350,2.076,1354,2.076,1355,1.844,1356,2.076,1357,2.076,1358,2.076,1359,2.076,1364,3.162,1365,2.809,1367,3.162,1368,3.162,1376,2.076,1377,2.076,1378,2.076,1379,2.076,1380,2.076,1512,2.076,1513,4.479,1514,3.698,1515,4.479,1516,3.83,1517,3.698,1518,2.427,1519,2.427,1520,2.427,1521,2.427,1522,2.427,1523,2.427,1524,2.427,1525,2.427,1526,2.427,1527,2.427,1528,2.427,1529,2.427,1530,2.427,1531,2.427,1532,2.427,1533,2.427,1534,2.427,1535,2.427,1536,2.427,1537,2.427,1538,2.427,1539,2.427,1540,2.427,1541,2.427,1542,2.427,1543,2.427,1544,2.427,1545,2.427]],["title/classes/Teams.html",[65,0.01,403,1.513]],["body/classes/Teams.html",[3,0.265,4,0.231,9,0.231,22,0.265,23,0.9,24,1.327,32,0.684,35,0.48,37,0.611,38,0.02,39,0.46,40,0.433,41,0.611,54,1.302,64,0.265,65,0.014,118,0.014,119,0.017,120,0.014,239,2.642,290,2.443,295,3.895,296,3.157,304,3.53,307,3.53,403,2.608,1546,4.385,1547,5.127,1548,5.127,1549,5.127]],["title/injectables/TeamsService.html",[267,0.458,1550,2.722]],["body/injectables/TeamsService.html",[3,0.252,4,0.22,9,0.22,22,0.252,23,0.873,30,0.818,32,0.54,35,0.47,37,0.581,38,0.021,39,0.319,40,0.391,41,0.581,43,0.711,50,1.56,51,1.56,54,0.958,56,0.694,63,0.463,64,0.252,65,0.013,118,0.014,119,0.017,120,0.014,122,1.56,184,2.324,194,1.739,267,0.765,269,1.56,279,1.739,281,1.479,286,1.194,403,2.529,905,2.584,910,3.498,953,2.059,955,2.059,958,3.079,1225,5.121,1550,4.549,1551,4.169,1552,6.481,1553,5.988,1554,4.876,1555,4.876,1556,4.876,1557,4.876,1558,4.876]],["title/injectables/TestServiceService.html",[267,0.458,396,2.467]],["body/injectables/TestServiceService.html",[3,0.233,4,0.204,9,0.204,22,0.233,23,0.832,30,0.78,32,0.694,35,0.453,38,0.021,40,0.295,43,0.658,44,1.105,50,1.444,51,1.444,56,0.586,63,0.428,64,0.233,65,0.012,115,1.166,118,0.013,119,0.016,120,0.013,122,1.444,125,3.656,171,1.906,238,2.316,267,0.729,269,1.444,279,1.61,291,3.134,309,2.41,380,2.023,396,3.929,403,2.41,449,3.232,450,3.52,452,3.107,463,2.453,464,3.402,493,2.719,989,3.107,1559,5.623,1560,3.859,1561,6.576,1562,4.513,1563,4.513,1564,6.258,1565,5.706,1566,5.706,1567,4.513,1568,4.513,1569,4.513]],["title/injectables/TransferDataService.html",[267,0.458,441,1.82]],["body/injectables/TransferDataService.html",[3,0.255,4,0.222,9,0.222,22,0.255,23,0.879,24,0.915,25,1.873,30,0.824,35,0.437,37,0.588,38,0.021,39,0.322,40,0.322,41,0.588,43,0.719,44,1.208,56,0.619,63,0.468,64,0.255,65,0.014,118,0.014,119,0.017,120,0.014,122,1.578,184,2.35,238,1.578,267,0.63,269,1.578,441,3.064,482,4.113,536,3.114,960,2.68,1194,4.216,1570,5.57,1571,4.216,1572,6.029,1573,6.029,1574,4.931,1575,4.931,1576,6.029,1577,4.931,1578,4.931,1579,4.931,1580,4.931,1581,4.931]],["title/classes/User.html",[65,0.01,294,0.926]],["body/classes/User.html",[3,0.244,4,0.213,9,0.213,22,0.244,23,0.857,24,1.367,32,0.651,35,0.498,37,0.563,38,0.02,39,0.45,40,0.47,41,0.563,54,1.378,64,0.244,65,0.013,115,1.777,118,0.013,119,0.016,120,0.013,239,2.549,290,2.253,294,1.518,295,3.592,296,3.046,298,3.734,304,4.045,307,4.045,440,3.397,474,3.255,1582,4.043,1583,4.728,1584,4.728,1585,4.728,1586,4.728,1587,4.728]],["title/injectables/UserLoginService.html",[267,0.458,457,1.948]],["body/injectables/UserLoginService.html",[3,0.175,4,0.152,9,0.152,22,0.175,23,0.686,24,1.259,30,0.643,32,0.374,35,0.503,37,0.698,38,0.021,39,0.383,40,0.417,41,0.698,43,0.93,44,1.152,49,1.609,50,1.08,51,1.08,52,1.346,54,1.422,56,0.556,63,0.32,64,0.175,65,0.009,105,1.956,118,0.009,119,0.013,120,0.009,122,1.08,194,1.204,247,1.426,267,0.601,269,1.08,271,3.574,272,2.565,279,1.204,281,1.024,286,1.562,294,1.592,346,4.506,358,3.574,457,2.558,463,3.184,487,3.42,905,2.336,953,1.426,955,1.987,1074,2.887,1077,2.565,1481,4.631,1482,4.023,1483,5.009,1484,5.009,1485,5.009,1486,4.023,1488,4.023,1499,2.887,1500,2.887,1504,2.887,1508,2.887,1509,2.887,1510,2.887,1511,4.023,1588,5.319,1589,2.887,1590,4.705,1591,4.705,1592,3.376,1593,4.705,1594,3.376,1595,3.376,1596,3.376,1597,3.376,1598,4.705,1599,3.376,1600,3.376,1601,3.376,1602,3.376,1603,3.376,1604,3.376,1605,3.376,1606,3.376,1607,3.376,1608,4.705,1609,3.376,1610,3.376]],["title/injectables/UserRegisterService.html",[146,1.948,267,0.458]],["body/injectables/UserRegisterService.html",[3,0.256,4,0.223,9,0.223,22,0.256,25,1.421,30,0.825,32,0.548,35,0.437,37,0.72,38,0.021,39,0.395,40,0.323,41,0.72,43,0.72,56,0.62,63,0.469,64,0.256,65,0.014,118,0.014,119,0.017,120,0.014,122,1.581,146,3.282,194,1.762,267,0.771,269,1.581,279,1.762,281,1.499,286,1.479,905,2.6,953,2.087,955,2.087,958,3.121,960,2.686,962,4.226,1448,3.402,1449,3.121,1588,4.953,1611,4.226,1612,6.038,1613,4.942,1614,6.038,1615,4.942,1616,4.942,1617,4.942]],["title/injectables/UserService.html",[267,0.458,1272,2.263]],["body/injectables/UserService.html",[3,0.26,4,0.227,9,0.227,30,0.688,32,0.558,35,0.365,37,0.6,38,0.021,39,0.329,40,0.329,41,0.6,56,0.627,63,0.477,64,0.26,65,0.014,118,0.014,119,0.017,120,0.014,122,1.611,194,1.795,267,0.78,269,1.611,279,1.795,281,1.527,286,1.61,294,1.301,905,2.725,953,2.126,955,2.579,1272,3.856,1342,3.824,1618,4.304,1619,5.033,1620,5.033,1621,5.033,1622,5.033,1623,5.033,1624,5.033,1625,5.033,1626,5.033]],["title/injectables/ValidateTokenService.html",[267,0.458,1401,2.467]],["body/injectables/ValidateTokenService.html",[3,0.256,4,0.223,9,0.223,22,0.256,25,1.421,30,0.825,32,0.548,35,0.437,37,0.72,38,0.021,39,0.395,40,0.323,41,0.72,43,0.72,56,0.62,63,0.469,64,0.256,65,0.014,118,0.014,119,0.017,120,0.014,122,1.581,194,1.762,267,0.771,269,1.581,279,1.762,281,1.499,286,1.21,905,2.708,953,2.087,955,2.55,960,2.686,1401,4.157,1448,3.402,1449,3.121,1627,5.575,1628,4.226,1629,6.52,1630,4.942,1631,6.038,1632,4.942,1633,4.942,1634,4.942]],["title/coverage.html",[1635,4.192]],["body/coverage.html",[0,0.788,1,0.858,9,0.142,10,2.692,11,1.839,12,2.692,38,0.021,40,0.206,57,1.839,65,0.018,81,0.858,83,0.858,85,0.858,88,0.813,90,0.858,92,0.858,94,0.771,97,0.813,99,0.858,102,0.73,104,0.858,107,0.813,109,0.813,110,0.813,112,0.858,114,0.813,118,0.009,119,0.013,120,0.009,121,2.692,142,1.988,143,1.711,144,1.988,145,1.839,146,1.711,167,2.391,168,2.391,191,1.988,196,2.391,204,1.711,220,2.391,221,2.167,223,1.839,229,2.167,238,1.007,267,0.903,268,2.391,270,2.692,289,1.839,291,3.18,292,2.692,294,0.813,308,2.692,378,3.402,380,1.411,396,2.167,403,1.329,428,2.692,432,3.789,437,1.839,439,3.589,441,1.599,444,1.839,446,1.988,457,1.711,461,1.839,546,2.692,552,2.692,616,2.167,764,2.167,765,2.692,766,2.692,785,2.692,795,2.391,849,2.692,850,2.692,858,2.167,890,2.692,891,2.692,950,2.692,951,2.692,957,1.988,963,2.692,989,5.143,1052,2.692,1053,2.391,1055,2.692,1056,2.692,1117,2.692,1118,2.692,1136,2.692,1146,2.692,1182,2.692,1193,2.692,1257,2.692,1272,1.988,1292,2.167,1392,2.692,1393,2.692,1401,2.167,1403,2.167,1441,2.692,1442,2.692,1450,2.692,1451,2.692,1479,2.692,1480,2.692,1512,2.692,1546,2.692,1550,2.391,1551,2.692,1559,2.692,1560,2.692,1570,2.692,1571,2.692,1582,2.692,1588,3.402,1589,2.692,1611,2.692,1618,2.692,1627,2.692,1628,2.692,1635,2.692,1636,3.148,1637,3.148,1638,3.148,1639,4.478,1640,5.679,1641,3.148,1642,2.692,1643,6,1644,6.236,1645,3.148,1646,3.148,1647,4.478,1648,3.148,1649,5.213,1650,4.478,1651,3.148,1652,3.148,1653,3.148,1654,3.148,1655,3.148,1656,3.148,1657,3.148,1658,3.148,1659,6.416,1660,3.148,1661,3.148,1662,3.148,1663,3.148,1664,3.148,1665,3.148,1666,2.692,1667,2.692,1668,5.679,1669,3.83,1670,2.692,1671,3.83,1672,2.692,1673,2.692,1674,3.148,1675,3.148]],["title/dependencies.html",[131,2.969,1676,2.986]],["body/dependencies.html",[38,0.021,63,0.467,118,0.014,119,0.017,120,0.014,131,3.387,133,3.737,156,5.149,157,4.574,171,2.078,184,2.344,199,5.149,200,3.737,201,4.207,226,4.574,227,4.145,228,3.107,233,2.874,234,2.674,235,2.674,254,2.078,618,3.737,1677,4.919,1678,6.188,1679,4.919,1680,6.021,1681,4.919,1682,4.919,1683,4.919,1684,4.207,1685,4.919,1686,4.919,1687,4.919,1688,4.919,1689,4.919,1690,4.919,1691,4.919,1692,4.919,1693,4.919,1694,4.919,1695,4.919,1696,4.919,1697,4.919,1698,4.919]],["title/miscellaneous/functions.html",[1699,2.056,1700,3.688]],["body/miscellaneous/functions.html",[22,0.292,37,0.673,38,0.019,39,0.369,41,0.673,118,0.016,119,0.018,120,0.016,1292,4.499,1642,4.826,1699,3.886,1700,4.826,1701,5.644,1702,5.644,1703,6.534,1704,5.644]],["title/index.html",[22,0.154,1213,2.553,1705,2.986]],["body/index.html",[0,0.707,4,0.212,15,1.283,38,0.016,39,0.308,118,0.013,119,0.016,120,0.013,126,4.026,148,3.576,238,1.506,397,4.026,659,4.026,798,5.709,1046,5.011,1082,4.026,1678,4.026,1684,5.456,1706,5.859,1707,4.707,1708,6.38,1709,4.707,1710,4.707,1711,5.859,1712,6.868,1713,7.101,1714,4.707,1715,4.707,1716,4.707,1717,4.707,1718,4.707,1719,4.707,1720,4.707,1721,4.707,1722,4.707,1723,6.38,1724,6.38,1725,4.707,1726,6.868,1727,4.707,1728,4.707,1729,4.707,1730,4.707,1731,4.707,1732,4.707,1733,4.026,1734,5.859,1735,6.676,1736,5.859,1737,5.859,1738,4.707,1739,4.707,1740,4.707,1741,4.707,1742,6.38,1743,4.707,1744,4.707,1745,4.707]],["title/modules.html",[130,3.096]],["body/modules.html",[38,0.018,118,0.016,119,0.018,120,0.016,129,3.936,130,3.611,141,3.611,157,4.344,1746,5.718,1747,5.718,1748,6.583,1749,5.718,1750,5.718]],["title/overview.html",[1751,4.192]],["body/overview.html",[1,1.618,2,1.292,38,0.021,73,1.225,81,1.869,83,1.618,85,1.618,88,1.534,90,1.618,92,1.618,94,1.454,97,1.534,99,1.618,102,1.377,104,1.618,107,1.534,109,1.534,110,1.044,112,1.618,114,1.534,118,0.011,119,0.015,120,0.011,128,2.78,129,5.238,130,2.55,131,2.78,132,3.453,133,3.067,134,3.453,135,3.067,136,3.453,137,3.453,138,3.453,139,3.453,140,3.453,141,3.748,142,3.748,143,3.226,144,3.748,145,3.467,146,3.226,147,4.542,148,3.067,252,2.78,269,1.292,290,1.924,437,2.359,680,2.78,715,3.453,1751,3.453,1752,4.038,1753,4.038,1754,5.311]],["title/routes.html",[252,3.375]],["body/routes.html",[38,0.019,118,0.016,119,0.019,120,0.016,252,4.031]],["title/classes/teamList.html",[65,0.01,957,2.263]],["body/classes/teamList.html",[3,0.277,4,0.241,9,0.241,22,0.277,23,0.924,24,1.176,32,0.593,35,0.459,37,0.638,38,0.02,39,0.35,40,0.414,41,0.638,54,1.326,64,0.277,65,0.015,118,0.015,119,0.018,120,0.015,290,2.551,399,2.91,957,4.001,1516,5.77,1666,4.578,1755,5.353,1756,5.353,1757,5.353,1758,5.353]],["title/miscellaneous/variables.html",[1699,2.056,1759,3.688]],["body/miscellaneous/variables.html",[22,0.269,38,0.021,40,0.452,50,2.133,51,2.133,52,2.483,118,0.015,119,0.017,120,0.015,247,2.197,298,3.038,598,4.731,1667,4.447,1669,5.908,1670,4.447,1671,4.447,1672,5.325,1673,5.325,1699,3.58,1733,5.325,1759,4.447,1760,6.227,1761,5.201,1762,5.201,1763,5.201,1764,5.201]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1388,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"overview.html":{}}}],["10",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["10.1.4",{"_index":1678,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["100px",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":376,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["120",{"_index":1437,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["15",{"_index":1753,"title":{},"body":{"overview.html":{}}}],["15/16",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1752,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1fr",{"_index":1386,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":367,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200px",{"_index":1391,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{}}}],["236",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["23px",{"_index":756,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{}}}],["25px",{"_index":1440,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["2a$10$lid/pd76qod0ctife1nfg.ruhb56krgfxocqteajk24oayabl",{"_index":1634,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["3.1.2",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["380px",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1387,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["4/39",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1545,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400px",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1380,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":373,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["5/5",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["500",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["5px",{"_index":758,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["62",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":760,"title":{},"body":{"components/FeedComponent.html":{}}}],["70",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["75",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1390,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1754,"title":{},"body":{"overview.html":{}}}],["80",{"_index":370,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["9",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{}}}],["9.1.0",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":841,"title":{},"body":{"components/FilterComponent.html":{}}}],["93",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["936da5,#58482e",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":907,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["absolute",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accessors",{"_index":1269,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["adding",{"_index":796,"title":{},"body":{"components/FilterComponent.html":{},"injectables/ProposalService.html":{}}}],["address",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":775,"title":{},"body":{"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["af4261",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["alert(\"error",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["align",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":892,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl",{"_index":893,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["already",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["angular",{"_index":1684,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["angular/compiler",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/grid",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/menu",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1436,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":1076,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["applied",{"_index":802,"title":{},"body":{"components/FilterComponent.html":{}}}],["appmodule",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["arial",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrangement",{"_index":575,"title":{},"body":{"components/FeedComponent.html":{}}}],["artifacts",{"_index":1727,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1480,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1496,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1497,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1487,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:24",{"_index":1495,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1489,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:47",{"_index":1493,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:51",{"_index":1492,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:56",{"_index":1491,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:62",{"_index":1490,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["authenticateduser",{"_index":271,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authenticationservice",{"_index":1060,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authorization",{"_index":272,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorizationservice",{"_index":268,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authreq",{"_index":1072,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["autologin",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1718,"title":{},"body":{"index.html":{}}}],["available",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["background",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1603,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["basic",{"_index":1077,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["black",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["block",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":1748,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":374,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":843,"title":{},"body":{"components/FilterComponent.html":{}}}],["buffer",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["build",{"_index":1726,"title":{},"body":{"index.html":{}}}],["button",{"_index":571,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":761,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["calls",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["cancel",{"_index":1135,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate=false",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1130,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":844,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1719,"title":{},"body":{"index.html":{}}}],["changed",{"_index":805,"title":{},"body":{"components/FilterComponent.html":{}}}],["character",{"_index":1132,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checking",{"_index":1216,"title":{},"body":{"injectables/ProposalService.html":{}}}],["checks",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["child",{"_index":310,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":65,"title":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":290,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":273,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1708,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closed",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["cluster_appmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1721,"title":{},"body":{"index.html":{}}}],["color",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["color:#3f51b5",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#e9ebee",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":759,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":369,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1385,"title":{},"body":{"components/RegisterComponent.html":{}}}],["commendid",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment",{"_index":289,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":315,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":316,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":305,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":83,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror:string",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":312,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["comments:comment",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":557,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1423,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after1____\",this.user",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"after2____\",this.user",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"before____\",this.user",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"date\",this.edate",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["console.log(\"in",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":960,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["console.log(\"is",{"_index":1532,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"response",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"results\",this.userdata",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1535,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1180,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log('the",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(data",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1175,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1505,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(responce",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(responce.mesaage",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.comment",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1467,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.filteredoptions",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1475,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1537,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1247,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":904,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1058,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(description",{"_index":1138,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":1399,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(getteam",{"_index":1271,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":953,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(id",{"_index":295,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(proposalwork",{"_index":566,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(router",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(sendresetlink",{"_index":857,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(startdate",{"_index":771,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1755,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1183,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1125,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["content",{"_index":1075,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1635,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1482,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1488,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["created",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{}}}],["createproposalcomponent",{"_index":85,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createurl",{"_index":1147,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1167,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creation",{"_index":379,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["creationdate",{"_index":293,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":306,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["crimson",{"_index":847,"title":{},"body":{"components/FilterComponent.html":{}}}],["current",{"_index":324,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/ProposalService.html":{}}}],["cursor",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["data.id=id",{"_index":1172,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1177,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1179,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":443,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1571,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1574,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1575,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":941,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":946,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1429,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1425,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1448,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["dateplusone",{"_index":788,"title":{},"body":{"components/FilterComponent.html":{}}}],["day",{"_index":797,"title":{},"body":{"components/FilterComponent.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["delay",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["delete(id",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["deletecomment",{"_index":317,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1207,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1253,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1195,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1202,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1209,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1255,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1196,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1241,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":565,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteproposal=new",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteurl",{"_index":1148,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleteurl=\"http://localhost:8080/proposal/delete",{"_index":1170,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleting",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["deletion",{"_index":582,"title":{},"body":{"components/FeedComponent.html":{}}}],["delproposal",{"_index":558,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":385,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":309,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{}}}],["description:string",{"_index":1191,"title":{},"body":{"classes/Proposal.html":{}}}],["dev",{"_index":1715,"title":{},"body":{"index.html":{}}}],["development",{"_index":1710,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":390,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog,public",{"_index":400,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":57,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dialogtitle:string=\"create",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["differentiating",{"_index":388,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1725,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1730,"title":{},"body":{"index.html":{}}}],["dislike",{"_index":1221,"title":{},"body":{"injectables/ProposalService.html":{}}}],["disliking",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":762,"title":{},"body":{"components/FeedComponent.html":{}}}],["dist",{"_index":1729,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1616,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1590,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1593,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1612,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1614,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":888,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1739,"title":{},"body":{"index.html":{}}}],["edate",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1133,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":440,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emit",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{}}}],["emitdata",{"_index":1572,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1573,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emiting",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{}}}],["emits",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["emitter",{"_index":328,"title":{},"body":{"components/CommentComponent.html":{}}}],["end",{"_index":798,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":768,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":782,"title":{},"body":{"classes/FeedParams.html":{}}}],["enter",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["environment",{"_index":1669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["error'},{'name",{"_index":89,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":547,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":548,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["errorcomponent",{"_index":88,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eventemitter",{"_index":326,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["example",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{}}}],["execute",{"_index":1736,"title":{},"body":{"index.html":{}}}],["exists",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["f",{"_index":1270,"title":{},"body":{"components/RegisterComponent.html":{}}}],["false",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{}}}],["feature",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{}}}],["feed'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":554,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":555,"title":{},"body":{"components/FeedComponent.html":{}}}],["feedcomponent",{"_index":90,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":764,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["field",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1720,"title":{},"body":{"index.html":{}}}],["fill",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":786,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":787,"title":{},"body":{"components/FilterComponent.html":{}}}],["filtercomponent",{"_index":92,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredoptions",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filteredteams",{"_index":1260,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filterusers",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fixed",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1732,"title":{},"body":{"index.html":{}}}],["flag=false",{"_index":1473,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1469,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["following",{"_index":1126,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":371,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1470,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1457,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["forgetpasswordcomponent",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":853,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":452,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":448,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1465,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1565,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1568,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":449,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1462,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":453,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":795,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1700,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1741,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1389,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1723,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1707,"title":{},"body":{"index.html":{}}}],["getall",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["getallnextpost",{"_index":898,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":908,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":899,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":911,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1203,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1211,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1251,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1197,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1237,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1267,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getf",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1204,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1214,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1249,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1198,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1240,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1483,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposalsservice",{"_index":142,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{},"overview.html":{}}}],["getteam",{"_index":952,"title":{},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["getteam():observable",{"_index":959,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["getteamnextpost",{"_index":900,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":913,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":943,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":901,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":915,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":940,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1552,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1557,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteamservice",{"_index":143,"title":{"injectables/GetTeamService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":1213,"title":{"index.html":{}},"body":{"injectables/ProposalService.html":{}}}],["getyournextpost",{"_index":902,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":948,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":903,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":945,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1744,"title":{},"body":{"index.html":{}}}],["google",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1749,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1384,"title":{},"body":{"components/RegisterComponent.html":{}}}],["h1",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["handle(responce",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handlelogin",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["happened",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{}}}],["headers",{"_index":1074,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":375,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:50px",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:60px",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:auto",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{}}}],["help",{"_index":1742,"title":{},"body":{"index.html":{}}}],["here",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{}}}],["hidden",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["hide",{"_index":1261,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1262,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":964,"title":{},"body":{"components/HomeComponent.html":{}}}],["home',component:homecomponent",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":97,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":955,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["http://localhost:4200",{"_index":1717,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1604,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1230,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1226,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1223,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1159,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1161,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1163,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1165,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1555,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1232,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1228,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1234,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":958,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":905,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["httpclientmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1068,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1064,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1069,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1067,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1053,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1062,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1430,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":304,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1192,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1176,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(data!=null",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data1==\"email",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status!=200",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(error.status==200",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(flag",{"_index":1474,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1478,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1477,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(team.id==item.id",{"_index":1472,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.loginform.valid",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.post.user.id==this.userid",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(user!=null",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ignore",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["image:linear",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":314,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["information",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["initialiseformgroup",{"_index":1561,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["injectable",{"_index":267,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1577,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"overview.html":{}}}],["input",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["input,output,eventemitter",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":319,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["instance",{"_index":568,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["intercept",{"_index":1057,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1061,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1052,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1056,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1065,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1059,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1054,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":437,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":438,"title":{},"body":{"interfaces/DialogData.html":{}}}],["intialization",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{}}}],["invalid",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1115,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":975,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":976,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":854,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1484,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{}}}],["item.value.tolowercase().includes(this.selectedteam.tolowercase",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iteration",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1449,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["json.parse(this.authenticateduser",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["json.stringify(data1",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["json.stringify(result",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jsonpipe",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1738,"title":{},"body":{"index.html":{}}}],["key",{"_index":1564,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1381,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["landingpagecomponent",{"_index":99,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{}}}],["lato",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":842,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":763,"title":{},"body":{"components/FeedComponent.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1134,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1128,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{}}}],["liked",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["likesetup",{"_index":559,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["link'},{'name",{"_index":111,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1394,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1395,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1393,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:19",{"_index":1413,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1415,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1412,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1414,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1410,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:24",{"_index":1404,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:27",{"_index":1409,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:33",{"_index":1405,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:59",{"_index":1408,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:67",{"_index":1407,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:74",{"_index":1406,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.service",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["link.service.ts",{"_index":1451,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["link.service.ts:10",{"_index":1456,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:12",{"_index":1455,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:8",{"_index":1453,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link/reset",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":298,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1263,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedin",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1589,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1601,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1602,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1600,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1591,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:21",{"_index":1594,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:31",{"_index":1592,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1599,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1597,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:45",{"_index":1596,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:51",{"_index":1595,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginservice",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1485,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["long",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1129,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":889,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["mandatory",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["manner",{"_index":578,"title":{},"body":{"components/FeedComponent.html":{}}}],["map",{"_index":1499,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["matbuttonmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matcher=new",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["matching",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1463,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matdividermodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matgridlistmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matmenumodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["message:string",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["method",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["minimum",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1699,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1743,"title":{},"body":{"index.html":{}}}],["moz",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1421,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":461,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1539,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":307,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1716,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":839,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":1217,"title":{},"body":{"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{}}}],["next",{"_index":1063,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1080,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1081,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1713,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":318,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments:boolean=true",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{}}}],["none",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["not.a",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{}}}],["null",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":296,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes:number",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":910,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["observer",{"_index":1578,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["occured",{"_index":551,"title":{},"body":{"components/ErrorComponent.html":{},"components/FeedComponent.html":{}}}],["ok",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":560,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":855,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onsubmit",{"_index":856,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{}}}],["open",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialog",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialogshare",{"_index":561,"title":{},"body":{"components/FeedComponent.html":{}}}],["opened",{"_index":391,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["others",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{}}}],["out",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":321,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["overview",{"_index":1751,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1676,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{}}}],["page",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["page'},{'name",{"_index":101,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.ts",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["page/comment",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":292,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:1",{"_index":299,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:3",{"_index":302,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":300,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:5",{"_index":301,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:6",{"_index":303,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":308,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:32",{"_index":323,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:38",{"_index":327,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:46",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:59",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":552,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:133",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:146",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:173",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:206",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:213",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:221",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:234",{"_index":579,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:52",{"_index":573,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:55",{"_index":572,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:58",{"_index":570,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:61",{"_index":569,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:67",{"_index":567,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:74",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:80",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:89",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:99",{"_index":574,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":785,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:105",{"_index":804,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:114",{"_index":810,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:51",{"_index":793,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:73",{"_index":794,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:82",{"_index":800,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1193,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:14",{"_index":1231,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1227,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1235,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1233,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:26",{"_index":1229,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:29",{"_index":1224,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:32",{"_index":1206,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:45",{"_index":1218,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:54",{"_index":1222,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:63",{"_index":1220,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:73",{"_index":1215,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:81",{"_index":1212,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:89",{"_index":1208,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:98",{"_index":1210,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1559,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":783,"title":{},"body":{"classes/FeedParams.html":{}}}],["param",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":767,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["params.ts",{"_index":766,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:11",{"_index":774,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:14",{"_index":776,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:17",{"_index":777,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:2",{"_index":772,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:20",{"_index":780,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:23",{"_index":779,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":778,"title":{},"body":{"classes/FeedParams.html":{}}}],["parentfunction",{"_index":322,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":792,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{}}}],["particular",{"_index":577,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1431,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":96,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":851,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":852,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":850,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:22",{"_index":866,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":864,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":865,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":859,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":861,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":863,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":862,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":1417,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1442,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1445,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1443,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1446,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":104,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{}}}],["per",{"_index":576,"title":{},"body":{"components/FeedComponent.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1607,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1438,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["post",{"_index":204,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["post.description",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment",{"_index":562,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1242,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror:string",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1199,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1236,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1205,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1219,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1246,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1200,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1239,"title":{},"body":{"injectables/ProposalService.html":{}}}],["posting",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike",{"_index":563,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1244,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1201,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1238,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1152,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1155,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1174,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":144,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":838,"title":{},"body":{"components/FilterComponent.html":{}}}],["private",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["process",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":789,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1731,"title":{},"body":{"index.html":{}}}],["production",{"_index":1733,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1706,"title":{},"body":{"index.html":{}}}],["prop",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":380,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":87,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.component.css",{"_index":383,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":384,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":378,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:23",{"_index":394,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:31",{"_index":1460,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:38",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:41",{"_index":392,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:47",{"_index":387,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.service.ts",{"_index":1146,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:10",{"_index":1160,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:11",{"_index":1166,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:12",{"_index":1164,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:13",{"_index":1154,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:15",{"_index":1158,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:19",{"_index":1156,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:9",{"_index":1162,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposalid",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposals",{"_index":553,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposals.service",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["proposals.service.ts",{"_index":891,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:10",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:11",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:12",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:13",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:14",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:15",{"_index":906,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:18",{"_index":912,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:22",{"_index":909,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:31",{"_index":914,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:35",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:41",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":145,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":556,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{}}}],["propsal",{"_index":382,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["protractor",{"_index":1740,"title":{},"body":{"index.html":{}}}],["provide",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":279,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["provider",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["radius",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1745,"title":{},"body":{"index.html":{}}}],["real",{"_index":580,"title":{},"body":{"components/FeedComponent.html":{}}}],["register",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register',component:registercomponent",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register(user",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":1258,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1259,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1611,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:14",{"_index":1615,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:8",{"_index":1613,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":887,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["registerform",{"_index":1264,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1486,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1598,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["reload",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":434,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["req",{"_index":1066,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1073,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1071,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1435,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["res[\"name",{"_index":1506,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlink",{"_index":1452,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink(data",{"_index":1454,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink/:token",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":109,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1396,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetpassword",{"_index":1402,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1444,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":1403,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["resp",{"_index":962,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response'},{'name",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1268,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["responsible",{"_index":311,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["resposible",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["rgb(211",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(238",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":365,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["routermodule",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["routermodule.forroot(routes",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":252,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1712,"title":{},"body":{"index.html":{}}}],["running",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["rxjs",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1500,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["same",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["sans",{"_index":1378,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["sbsi",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1722,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sdate",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["select",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selected",{"_index":799,"title":{},"body":{"components/FilterComponent.html":{}}}],["selected(team",{"_index":1476,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1265,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selecteduser",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selection",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":790,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":840,"title":{},"body":{"components/FilterComponent.html":{}}}],["seletion",{"_index":806,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":845,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":807,"title":{},"body":{"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["senddata",{"_index":791,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":809,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddate",{"_index":808,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["sendresetlink",{"_index":860,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendresetlinkservice",{"_index":858,"title":{"injectables/SendResetLinkService.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["sent",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1149,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1379,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1714,"title":{},"body":{"index.html":{}}}],["server",{"_index":1711,"title":{},"body":{"index.html":{}}}],["service",{"_index":1194,"title":{},"body":{"injectables/ProposalService.html":{},"injectables/TransferDataService.html":{}}}],["service.service",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1560,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":1567,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:17",{"_index":1563,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:7",{"_index":1562,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/get",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/reset",{"_index":1416,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service/send",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["service/social",{"_index":445,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":442,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/validate",{"_index":1418,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["session",{"_index":325,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/ProposalService.html":{}}}],["sessionstorage.clear",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1511,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1510,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem('data",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1508,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["share",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{}}}],["shared",{"_index":1461,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["shareproposal",{"_index":1153,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1157,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1171,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":112,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1150,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1169,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["sharing",{"_index":1459,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["shine",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["shown",{"_index":313,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["sign",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["signed",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":784,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1494,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(frontend",{"_index":1501,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":444,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["socialuser",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":368,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":435,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["spacing",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1131,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1124,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs",{"_index":1119,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":106,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1120,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1121,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1118,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1123,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1122,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":270,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:16",{"_index":278,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:7",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:9",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1642,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":546,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":549,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":550,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":765,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/forget",{"_index":849,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":890,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":963,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":974,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":291,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":439,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:122",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:147",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":1116,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:48",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:57",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:74",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:91",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1117,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1136,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:1",{"_index":1139,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:3",{"_index":1140,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1141,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:5",{"_index":1142,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:6",{"_index":1143,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1144,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:8",{"_index":1145,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1182,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:1",{"_index":1184,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:3",{"_index":1189,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:4",{"_index":1188,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:5",{"_index":1185,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:6",{"_index":1187,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:7",{"_index":1186,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1257,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:106",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":1273,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:40",{"_index":1286,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:51",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:60",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:87",{"_index":1274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1392,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/get",{"_index":950,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1055,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1441,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/send",{"_index":1450,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1479,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1570,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1588,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/service/validate",{"_index":1627,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1512,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1523,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1527,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1522,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1526,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1525,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1529,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:26",{"_index":1528,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:27",{"_index":1517,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1521,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:36",{"_index":1524,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:40",{"_index":1520,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:48",{"_index":1518,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:64",{"_index":1519,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1666,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1756,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1757,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1551,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1554,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1553,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1546,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1547,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1548,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1549,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.service.ts",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user.service.ts:7",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.ts",{"_index":1582,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":1583,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":1585,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1586,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":1584,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":1587,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":803,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":769,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":781,"title":{},"body":{"classes/FeedParams.html":{}}}],["started",{"_index":1705,"title":{"index.html":{}},"body":{}}],["state",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["stored",{"_index":1728,"title":{},"body":{"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["stroke",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1576,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submit",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":1266,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["subscriber",{"_index":1579,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["successful",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["successmessage",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1411,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1434,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["support",{"_index":1746,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1747,"title":{},"body":{"modules.html":{}}}],["system",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["team',component:teamcomponent",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team.component.css",{"_index":1513,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1514,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["team.service.ts",{"_index":951,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["team.service.ts:13",{"_index":956,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team.service.ts:9",{"_index":954,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team/team.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":114,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1515,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":770,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":957,"title":{"classes/teamList.html":{}},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1516,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1758,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":894,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teams",{"_index":403,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams:any",{"_index":1530,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teamsservice",{"_index":1550,"title":{"injectables/TeamsService.html":{}},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":895,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility=true",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1735,"title":{},"body":{"index.html":{}}}],["testserviceservice",{"_index":396,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":846,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":939,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":944,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":942,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":949,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":947,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1070,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1079,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1543,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1606,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.post.description",{"_index":417,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1471,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.email",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.error=\"email",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.filteredoptions",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1569,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getteam.getteam().subscribe",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.delete(`${config.apiurl}/users/${id",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":961,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["this.http.get(`${config.apiurl}/users",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1605,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1558,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgot_password",{"_index":1458,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["this.http.post(\"http://localhost:8080/getsocialinfo\",data[\"data1\"],{responsetype:'text",{"_index":1502,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1617,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validate_token",{"_index":1633,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["this.http.post(`${config.apiurl}/users/register",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1503,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1178,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1254,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1256,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1252,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1250,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1243,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1248,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1245,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1173,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1181,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/reset_password",{"_index":1447,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform.get('email').value",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe((result",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.message",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"email",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.message=responce.message",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.msg=\"your",{"_index":1433,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.nocomments=false",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.observer.asobservable",{"_index":1580,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.observer.next(data",{"_index":1581,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":837,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1608,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.postcommenterror=\"some",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.prop",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1507,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1609,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1509,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1504,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1422,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1432,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.responsedialog",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.router.navigate(['/welcome",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.data",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":836,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sendresetlink.resetlink(data).subscribe",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1468,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.sessioncreation.fetchsessiondetails(json.stringify(data1",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.share.emit(this.post",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1536,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1544,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1538,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.filter",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.teams=data",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1424,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.transferdataservice.subscriber.subscribe(data",{"_index":1531,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.update.emit(post",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1464,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1541,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1540,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1534,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=data",{"_index":1533,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1542,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":410,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validatetoken.tokenverification(data).subscribe",{"_index":1426,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=false",{"_index":1428,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1427,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["those",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["three",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["time",{"_index":581,"title":{},"body":{"components/FeedComponent.html":{}}}],["timing",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":386,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1190,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1397,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service",{"_index":1419,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service.ts",{"_index":1628,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["token.service.ts:12",{"_index":1632,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["token.service.ts:8",{"_index":1630,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification",{"_index":1629,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification(data",{"_index":1631,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tools",{"_index":848,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":757,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{}}}],["total",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1498,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["transferdataservice",{"_index":441,"title":{"injectables/TransferDataService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{}}}],["transferdataservice:transferdataservice",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["tslib",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["typepost=\"teampost",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{}}}],["udata",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unit",{"_index":1734,"title":{},"body":{"index.html":{}}}],["unlike",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{}}}],["up",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["update=new",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":564,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateform",{"_index":1466,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1151,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1168,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updation",{"_index":381,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["uppercase",{"_index":1127,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["upvotescount",{"_index":1137,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":1225,"title":{},"body":{"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1556,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1724,"title":{},"body":{"index.html":{}}}],["user",{"_index":294,"title":{"classes/User.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user_name_session_attribute_name",{"_index":1481,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":320,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":457,"title":{"injectables/UserLoginService.html":{}},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["username",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":146,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1272,"title":{"injectables/UserService.html":{}},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validatetoken",{"_index":1400,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validatetokenservice",{"_index":1401,"title":{"injectables/ValidateTokenService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["validations",{"_index":801,"title":{},"body":{"components/FilterComponent.html":{}}}],["validator",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":451,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1566,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1398,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1420,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values:testserviceservice",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1759,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1709,"title":{},"body":{"index.html":{}}}],["via",{"_index":1737,"title":{},"body":{"index.html":{}}}],["view",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{}}}],["visibility",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["want",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["webkit",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":372,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["whether",{"_index":389,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{}}}],["white",{"_index":366,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["whitesmoke",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width",{"_index":377,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:35",{"_index":436,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1439,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:87",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1078,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1610,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["write",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{}}}],["yes",{"_index":773,"title":{},"body":{"classes/FeedParams.html":{},"classes/Proposal.html":{}}}],["yournexturl",{"_index":896,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":897,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["z0",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n \n  onNoClick(): void {\n    \n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            GetTeamService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { GetTeamService } from './service/get-team.service';\nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\nimport { from } from 'rxjs';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    GetTeamService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  authenticatedUser:string\n  constructor(private router:Router) { }\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        public id:number,\n        public comment:string,\n        public creationDate:Date,\n        public user:{\n            id:number,\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n    \n        Description\n    \n    \n        CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:32\n                            \n                        \n                \n                    \n                        UserId of the user from the current session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:38\n                            \n                        \n                \n                    \n                        This the emitter to the FeedComponent\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:46\n                \n            \n\n\n            \n                \n                    This method is resposible for the comment data to show on the Page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\n\nimport {Comment} from 'src/app/landing-page/comment'\n/**\n * CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  /**@ignore */\n  @Input() comment:Comment;\n\n  /**@ignore */\n  public commentId;\n\n  /**@ignore */\n  public userName;\n\n  /**@ignore */\n  public commentData;\n\n  /**@ignore */\n  public commentedUserId:number;\n\n  /** UserId of the user from the current session \n   * @example\n   * Input from the FeedComponent\n   */\n  @Input() userId:number;\n\n  /** \n   * This the emitter to the FeedComponent\n   */\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n \n  /**@ignore */\n  constructor() { }\n\n  /**\n   * This method is resposible for the comment data to show on the Page.\n   */\n  ngOnInit(): void {\n\n     console.log(this.comment)\n\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n\n  }\n  /**\n   * This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n   */\n  deleteComment()\n  {\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n\n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:41\n                            \n                        \n\n                \n                    \n                        This is the description of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:38\n                            \n                        \n\n                \n                    \n                        This is the Title of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:23\n                            \n                        \n\n                \n                    \n                        This is the Id of user from Current Session.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n/**\n * This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n */\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n\n  /**@ignore */\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n  /** This is the Id of user from Current Session.*/\n  userId:string\n\n  /**@ignore */\n  teamVisibility=true\n\n  /**@ignore */\n  dialogTitle:string=\"Create Proposal\"\n\n  /**@ignore */\n  id:number=null\n\n  /**@ignore */\n  values:TestServiceService;\n\n  /** This is the Title of proposal*/\n  public tit \n\n  /**This is the description of proposal*/\n  public descrip\n\n  /**@ignore */\n  public prop\n\n  /**This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal */\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n    \n        Description\n    \n    \n        This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor of the FeedComponent \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the ProposalService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:61\n                            \n                        \n                \n                    \n                        Input from the current Session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:58\n                            \n                        \n                \n                    \n                        EventEmitter for the delete button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:55\n                            \n                        \n                \n                    \n                        EventEmitter for the Share button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:52\n                            \n                        \n                \n                    \n                        EventEmitter for the Update button on the Proposals \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:99\n                \n            \n\n\n            \n                \n                    This method is Resposible for the arrangement of the comments as per a particular manner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:234\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the proposal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:133\n                \n            \n\n\n            \n                \n                    This method checks total number of like on a post and whether a user with current session has liked it or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:80\n                \n            \n\n\n            \n                \n                    calls three methods in the same component on intialization -\nupdateApproval(),   likeSetup(),     commentsSetup()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:221\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the comment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is the id of the comment which user wants to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:213\n                \n            \n\n\n            \n                \n                    This method emits the proposal which a user want to update and open a update dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is an object of a proposal\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:206\n                \n            \n\n\n            \n                \n                    This method emits the Post to which user want to open a share dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:146\n                \n            \n\n\n            \n                \n                    This method is resposible for posting a comment on a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is proposalId of the proposal to which a user want to post a comment.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:173\n                \n            \n\n\n            \n                \n                    This method is resposible for the feature of liking a Proposal and Unlike feature too.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:89\n                \n            \n\n\n            \n                \n                    This method checks whether user can Update a particular proposal or not.A user can those Proposal \nthat are created by a user not others.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:74\n                            \n                        \n\n                \n                    \n                        Instance of the ProposalService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n/**\n * This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  /**@ignore */\n  @Input() post:Post;\n\n  /**@ignore */\n  public new_comment:string;\n\n  /**@ignore */\n  public canUpdate=false;\n\n  /**@ignore */\n  public numberLikes:number;\n\n  /**@ignore */\n  public comments:Comment[]=[];\n\n  /**@ignore */\n  public noComments:boolean=true;\n\n  /**@ignore */\n  public height:number;\n\n  /**@ignore */\n  public commentVisibility=false;\n\n  /**@ignore */\n  public commentsMessage=\"Comments\";\n\n  /**@ignore */\n  commentError:string;\n\n  /**@ignore */\n  postCommentError:string;\n\n  /** EventEmitter for the Update button on the Proposals */\n  @Output() update=new EventEmitter;\n\n  /**EventEmitter for the Share button on the Proposals */\n  @Output() share=new EventEmitter;\n\n  /**EventEmitter for the delete button on the Proposals */\n  @Output() deleteProposal=new EventEmitter;\n\n  /**Input from the current Session */\n  @Input() userId:number;\n\n  /**@ignore */\n  @Input() type:string;\n\n  /**@ignore */\n  public hasLiked=false;\n\n  /**\n   * Constructor of the FeedComponent \n   * @constructor\n   * @param proposalWork Instance of the ProposalService\n   */\n  constructor(public proposalWork:ProposalService) { }\n\n  /** \n   * calls three methods in the same component on intialization -\n   * updateApproval(),   likeSetup(),     commentsSetup()\n  */\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n  /**This method checks whether user can Update a particular proposal or not.A user can those Proposal \n   * that are created by a user not others.\n  */\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n  /**This method is Resposible for the arrangement of the comments as per a particular manner.\n  */\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n  /**This method checks total number of like on a post and whether a user with current session has liked it or not\n  */\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  /**\n   * This method is resposible for posting a comment on a post\n   * @param {number} id This is proposalId of the proposal to which a user want to post a comment.\n   */\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          this.postCommentError=\"Some error has occured sending the comment please try again.\"\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n/**\n * This method is resposible for the feature of liking a Proposal and Unlike feature too.\n */\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n  /**\n   * This method emits the Post to which user want to open a share dialog.\n   */\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n  /**\n   * This method emits the proposal which a user want to update and open a update dialog\n   * @param {object} post this is an object of a proposal\n   */\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the comment.\n   * @param {number} commentId this is the id of the comment which user wants to delete.\n   */\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the proposal.\n   */\n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n\n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n    font-weight: bold;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n            \n                Description\n            \n            \n                this is the feed Params class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:11\n                            \n                        \n\n                \n                    \n                        endDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n                \n                    \n                        startDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:23\n                            \n                        \n\n                \n                    \n                        This is the teamId of the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:20\n                            \n                        \n\n                \n                    \n                        This is the userId from Current session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    /**\n     * @constructor\n     */\n    constructor(\n    /** startDate of the advanced filter*/\n    public startDate:Date,\n\n    /** endDate of the advanced filter*/\n    public endDate:Date,\n\n    /** @ignore */\n    public page:string,\n\n    /** @ignore */\n    public size:string,\n\n    /** This is the userId from Current session */\n    public userId?,\n\n    /**This is the teamId of the user */\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n    \n        Description\n    \n    \n        FilterComponent is the child component of the landing-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:51\n                            \n                        \n                \n                    \n                        This is the EventEmitter emits to Landing-page\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:73\n                \n            \n\n\n            \n                \n                    This function is resposible for adding a day to a end Date user selected\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:82\n                \n            \n\n\n            \n                \n                    This function is resposible for the Validations applied on the start date and end date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:105\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this function send the data to sendDate method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:114\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this method emit the information to the landing-page\nand landing-page calls the api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n  \n/**\n * FilterComponent is the child component of the landing-page.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\n\nexport class FilterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  @Input()\n  public sDate\n\n  /**\n   * @ignore\n   */\n  public newEdate\n\n  /**\n   * @ignore\n   */\n  public eDate\n\n  /**\n   * @ignore\n   */\n  public data:Date[]\n\n  /**\n   * @ignore\n   */\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n  /**\n   * This is the EventEmitter emits to Landing-page\n   */\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n\n /**\n   * @ignore\n   */ \n public message;\n  /**\n   * @ignore\n   */ \n  constructor() { \n  \n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  \n  }\n\n  /**\n   * This function is resposible for adding a day to a end Date user selected\n   */\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n\n  /**\n   * This function is resposible for the Validations applied on the start date and end date.\n   */\n  processFilter()\n  { \n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  /**\n   * As user changed the seletion on the select post this function send the data to sendDate method.\n   */\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n  /**\n   * As user changed the seletion on the select post this method emit the information to the landing-page\n   * and landing-page calls the api\n   */\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sendResetLink: SendResetLinkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sendResetLink\n                                                  \n                                                        \n                                                                        SendResetLinkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SendResetLinkService } from './../service/send-reset-link.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\n// export class MyErrorStateMatcher implements ErrorStateMatcher {\n//   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n//     const isSubmitted = form && form.submitted;\n//     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n//   }\n// }\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n// matcher=new MyErrorStateMatcher\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private sendResetLink: SendResetLinkService ) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.sendResetLink.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n         this.error=\"Email id doesnot exists. Please try again!\"\n      \n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetProposalsService {\n  allUrl=\"http://localhost:8080/feed/all\"\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  teamUrl=\"http://localhost:8080/feed/team\"\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  yourUrl=\"http://localhost:8080/feed/create\"\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(private _http:HttpClient) { }\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetTeamService.html":{"url":"injectables/GetTeamService.html","title":"injectable - GetTeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetTeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/get-team.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/get-team.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/get-team.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { teamList } from './../teamList';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetTeamService {\n\n  constructor(private http:HttpClient) {}\n\n   getTeam():Observable{\n    console.log(\"inside GetTeam\")\n    return this.http.get(\"http://localhost:8080/getTeam\")\n    \n    // return resp\n}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n                \n              \n              \n               -->\n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                                                           -->                                        Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        public description: string,\n        public id: number,\n        public teams:[],\n        public title: string,\n        public upvotesCount: number,\n        public user: {\n            id: number,\n            name: string,\n            email: string,\n            teams:{\n                id:number,\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                deleteUrl\n                            \n                            \n                                    Public\n                                sentTeams\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deleteUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sentTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  public sentTeams:{}[]\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  private deleteUrl=\"http://localhost:8080/proposal/delete\"\n  constructor(private http:HttpClient) { }\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is Proposal Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:89\n                \n            \n\n\n            \n                \n                    This is the method for deleting a comment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:98\n                \n            \n\n\n            \n                \n                    This is the method for deleting a proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:81\n                \n            \n\n\n            \n                \n                    This is the method for getting all comments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:73\n                \n            \n\n\n            \n                \n                    This is the method for checking whether a user liked a post or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:45\n                \n            \n\n\n            \n                \n                    This is the method for posting a comment to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the comment user wants to post.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:63\n                \n            \n\n\n            \n                \n                    This is the method for posting a dislike to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:54\n                \n            \n\n\n            \n                \n                    This is the method for posting a like to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:29\n                            \n                        \n\n                \n                    \n                        Url for deleting comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                        Url for deleting a proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url for getting all comments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:26\n                            \n                        \n\n                \n                    \n                        Url for checking user has upvoted or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        Url for adding Comment \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:23\n                            \n                        \n\n                \n                    \n                        Url for Posting disLike\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:20\n                            \n                        \n\n                \n                    \n                        Url for Posting Like\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n/**\n * This is Proposal Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n\n  /**Url for adding Comment */\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n\n  /**Url for getting all comments*/\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n\n  /**Url for Posting Like*/\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n\n  /**Url for Posting disLike*/\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n\n  /**Url for checking user has upvoted or not*/\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n\n  /**Url for deleting comment*/\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n\n  /**Url for deleting a proposal*/\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http:HttpClient) { }\n\n  /**This is the method for posting a comment to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {string} new_comment This is the comment user wants to post.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n\n  /**This is the method for posting a like to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for posting a dislike to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n\n  /**This is the method for checking whether a user liked a post or not.\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for getting all comments\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a comment\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a proposal\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { GetTeamService } from './../service/get-team.service';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, NgModule, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog, MatDialogModule, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\n\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n\n  ngOnInit(): void {\n   \n    \n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> {this.teams=data\n      this.filteredTeams=this.teams.slice();\n    }\n    \n    );\n    \n  }\n\n \n\n  get f() { return this.registerForm.controls; }\n\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n\n//   filteredOptions=[];\n// selectedUser: any;\n//   filterUsers() {\n//     this.filteredOptions = this.teams.filter(\n//       item => item.value.toLowerCase().includes(this.selectedTeam.toLowerCase())\n//     );\n//     console.log(this.filteredOptions);\n//   }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":\n{\n    \"name\":this.registerForm.value.team\n}\n   , \"user\":\n{\n    \"name\": this.registerForm.value.userName,\n    \"email\": this.registerForm.value.email,\n    \"password\" :this.registerForm.value.password\n\n}\n    }\n\n    }\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          console.log(data1);\n          if(data1==\"Email Id already exists !!\"){\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n            this.responseDialog()\n          }\n          else{\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n        },\n        (error)=>{\n          if(error.status==200){\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n          else{\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n          }\n        }\n      );\n\n\n}\n// handle(responce){\n//   console.log(responce)\n//   console.log(responce.mesaage)\n//   this.message=responce.message\n// }\n\n\n\n\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, validateToken: ValidateTokenService, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateToken\n                                                  \n                                                        \n                                                                        ValidateTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ValidateTokenService } from './../service/validate-token.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private validateToken: ValidateTokenService,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.validateToken.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n      this.validToken=false;\n       }\n     );\n    \n  }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/reset_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SendResetLinkService.html":{"url":"injectables/SendResetLinkService.html","title":"injectable - SendResetLinkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SendResetLinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/send-reset-link.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/send-reset-link.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/send-reset-link.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/send-reset-link.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendResetLinkService {\n\n  constructor(public http: HttpClient) { }\n\n  resetLink(data){\n    console.log(\"inside forgetPassword\")\n    return this.http.post(\"http://localhost:8080/forgot_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:31\n                \n            \n\n\n            \n                \n                    This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n/**\n * This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n */\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n\n  /**@ignore */\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n\n  /**@ignore */\n  updateForm: FormGroup;\n    \n   /**\n   * This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n   */\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n\n  /**@ignore */\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  // socialMedia(data){\n  //   console.log(\"inside socialMedia(Frontend)\")\n  //   return this.http.post(\"http://localhost:8080/getSocialInfo\",data[\"data1\"],{responseType:'text' as 'json'})\n  // }\n\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        // this.username = res[\"name\"];\n        this.registerSuccessfulLogin();\n      }\n      // ,\n      // (error)=>{\n      //   console.log(\"error------\",error['error']);\n      //   //team page\n      //   this.transferDataService.emitData(error['error'])\n      //   this.router.navigate(['/team']);\n  \n      // }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit ,Input} from '@angular/core';\nimport { GetTeamService } from './../service/get-team.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    // this.transferDataService.subscriber.subscribe(data => {\n    //   console.log(\"Is data this?----->\",data);\n    //   this.userData=data\n    // });\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up!\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       }\n     );\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/test-service.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/test-service.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n\n  constructor() { }\n  form: FormGroup = new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  });\n  \n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n  //observer = new Subject();\n//  public subscriber = this.observer.asObservable();\n\n  emitData(data) {\n    console.log(\"inside service-------\",data);\n    this.userData = data;\n   // this.observer.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        public id:number,\n        public name:string,\n        public email:string,\n        public team:{\n            id:number,\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n    \n    \n    // return resp\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n/*  define methods here\n  getAll() {\n    return this.http.get(`${config.apiUrl}/users`);\n}\n\nregister(user) {\n    return this.http.post(`${config.apiUrl}/users/register`, user);\n}\n\ndelete(id) {\n    return this.http.delete(`${config.apiUrl}/users/${id}`);\n}*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateTokenService.html":{"url":"injectables/ValidateTokenService.html","title":"injectable - ValidateTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/validate-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/validate-token.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/validate-token.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateTokenService {\n\n  constructor(private http: HttpClient) { }\n\n  tokenVerification(data){\n    console.log(\"inside tokenVerification\")\n    return this.http.post(\"http://localhost:8080/validate_token\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n  }\n}\n\n// $2a$10$liD/Pd76Qod0CtiFE1nfg.ruHB56kRGFxOCQTEaJk24oayaBl\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                10 %\n                (4/39)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/get-team.service.ts\n            \n            injectable\n            GetTeamService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/send-reset-link.service.ts\n            \n            injectable\n            SendResetLinkService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/validate-token.service.ts\n            \n            injectable\n            ValidateTokenService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
