var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.417,1,0.996]],["body/components/ApiResponseComponent.html",[0,0.628,1,1.625,2,1.526,3,0.17,4,0.148,5,1.153,6,1.153,7,1.153,8,1.153,9,0.148,10,5.737,11,3.931,12,2.89,13,1.153,14,2.233,15,2.011,16,2.17,17,4.713,18,1.447,19,5.429,20,1.447,21,4.713,22,0.17,23,0.545,24,1.15,25,1.801,26,3.209,27,4.034,28,3.253,29,4.647,30,0.666,31,5.876,32,0.434,33,3.376,34,3.916,35,0.463,36,4.713,37,0.337,38,0.02,39,0.345,40,0.352,41,0.337,42,3.376,43,0.508,44,1.174,45,2.569,46,3.587,47,3.376,48,3.376,49,1.437,50,0.886,51,0.886,52,1.216,53,3.376,54,0.607,55,3.376,56,0.584,57,1.98,58,2.569,59,1.844,60,1.437,61,1.093,62,1.98,63,0.337,64,0.17,65,0.026,66,3.376,67,3.376,68,3.376,69,3.376,70,3.376,71,3.376,72,4.034,73,1.037,74,1.609,75,1.609,76,1.153,77,2.006,78,1.153,79,3.376,80,1.153,81,0.934,82,1.153,83,0.934,84,1.153,85,0.934,86,1.153,87,1.609,88,0.886,89,1.153,90,0.934,91,1.153,92,0.934,93,1.153,94,0.841,95,0.984,96,1.153,97,0.886,98,1.153,99,0.934,100,1.037,101,1.153,102,0.798,103,1.153,104,0.934,105,0.934,106,1.153,107,0.886,108,1.153,109,0.886,110,0.886,111,1.153,112,0.934,113,1.153,114,0.886,115,0.886,116,1.153,117,1.153,118,0.009,119,0.013,120,0.009]],["title/components/AppComponent.html",[0,0.417,81,0.996]],["body/components/AppComponent.html",[0,0.696,1,1.143,2,1.749,3,0.208,4,0.181,5,1.41,6,1.41,7,1.41,8,1.41,9,0.181,13,1.41,14,2.283,15,2.056,16,1.337,18,1.659,20,1.659,22,0.208,23,0.625,35,0.291,38,0.02,39,0.344,40,0.235,50,1.085,51,1.085,54,0.742,56,0.445,63,0.412,64,0.208,65,0.032,73,1.269,74,1.844,75,1.844,76,1.41,77,2.179,78,1.41,80,1.41,81,1.766,82,1.41,83,1.143,84,1.41,85,1.143,86,1.41,87,1.844,88,1.085,89,1.41,90,1.143,91,1.41,92,1.143,93,1.41,94,1.029,95,1.204,96,1.41,97,1.085,98,1.41,99,1.143,100,1.269,101,1.41,102,0.976,103,1.41,104,1.143,105,1.143,106,1.41,107,1.085,108,1.41,109,1.085,110,1.085,111,1.41,112,1.143,113,1.41,114,1.085,115,1.085,116,1.41,117,1.41,118,0.011,119,0.015,120,0.011,121,3.536,122,1.749,123,6.019,124,5.402,125,3.53,126,4.624,127,4.131]],["title/modules/AppModule.html",[128,2.486,129,2.486]],["body/modules/AppModule.html",[1,1.555,3,0.118,4,0.103,9,0.103,11,1.376,15,0.649,16,0.76,38,0.021,56,0.8,58,1.786,60,0.998,63,0.234,64,0.118,65,0.018,73,0.721,81,1.808,83,1.555,85,1.555,88,1.476,90,1.555,92,1.555,94,1.4,95,0.684,97,1.476,99,1.555,100,1.799,102,1.328,104,1.555,105,0.649,107,1.476,109,1.476,110,0.947,112,1.555,114,1.476,118,0.006,119,0.01,120,0.006,128,1.619,129,5.14,130,1.487,131,1.619,132,3.762,133,3.345,134,4.223,135,1.786,136,2.008,137,2.008,138,2.008,139,2.008,140,2.008,141,3.562,142,3.562,143,3.07,144,3.562,145,3.297,146,3.07,147,3.088,148,1.786,149,2.346,150,3.088,151,1.786,152,1.786,153,1.376,154,1.786,155,3.608,156,3.088,157,1.786,158,2.49,159,2.346,160,2.346,161,3.608,162,2.346,163,3.608,164,2.346,165,2.008,166,2.008,167,1.786,168,1.786,169,3.088,170,2.286,171,1.535,172,3.608,173,4.395,174,1.487,175,2.49,176,1.619,177,1.376,178,2.49,179,1.619,180,3.608,181,2.346,182,2.745,183,2.008,184,1.125,185,4.395,186,2.346,187,3.608,188,2.346,189,3.608,190,2.346,191,1.487,192,1.786,193,3.608,194,0.845,195,1.619,196,1.786,197,2.008,198,3.608,199,2.008,200,1.786,201,2.008,202,2.346,203,2.346,204,1.376,205,2.008,206,2.346,207,3.608,208,2.346,209,2.346,210,3.608,211,2.346,212,3.608,213,2.346,214,3.608,215,2.008,216,3.608,217,2.346,218,2.346,219,2.346,220,1.786,221,1.619,222,2.008,223,1.376,224,1.619,225,3.608,226,1.786,227,1.619,228,1.786,229,1.619,230,2.008,231,3.608,232,4.934,233,2.116,234,1.97,235,1.97,236,2.49,237,2.346,238,1.423,239,1.45,240,3.608,241,3.608,242,2.346,243,2.346,244,2.346,245,2.346,246,2.346,247,0.943,248,2.346,249,2.346]],["title/modules/AppRoutingModule.html",[128,2.486,141,2.282]],["body/modules/AppRoutingModule.html",[3,0.237,4,0.207,9,0.207,38,0.021,56,0.783,58,3.58,63,0.47,64,0.237,65,0.037,88,1.235,97,1.235,99,1.301,100,1.445,102,1.111,107,1.235,109,1.235,110,1.235,114,1.235,118,0.013,119,0.016,120,0.013,130,2.981,135,3.58,141,3.719,150,4.027,158,4.051,165,4.027,166,4.027,183,4.027,196,3.58,197,4.027,222,4.027,229,3.247,230,4.027,250,4.704,251,4.704,252,4.415,253,4.051,254,2.002,255,2.255,256,7.208,257,4.704,258,4.704,259,4.704,260,4.704,261,4.704,262,4.704,263,4.704,264,4.704,265,4.704,266,4.704]],["title/injectables/AuthorizationService.html",[267,0.477,268,2.741]],["body/injectables/AuthorizationService.html",[3,0.243,4,0.212,9,0.212,22,0.243,23,0.69,30,0.843,32,0.445,35,0.476,37,0.482,38,0.02,39,0.307,40,0.339,41,0.482,43,0.897,44,1.202,54,0.867,56,0.642,63,0.482,64,0.243,65,0.038,118,0.013,119,0.016,120,0.013,122,1.562,254,2.053,267,0.79,268,4.538,269,1.562,270,4.13,271,4.538,272,5.144,273,6.759,274,4.13,275,3.691,276,5.962,277,4.825,278,4.825,279,1.738,280,4.825,281,1.482,282,4.825,283,4.825,284,4.825,285,4.825,286,1.202,287,4.825,288,4.825]],["title/classes/Comment.html",[65,0.028,289,2.112]],["body/classes/Comment.html",[3,0.233,4,0.203,9,0.203,22,0.233,23,0.672,24,1.326,32,0.536,35,0.484,37,0.462,38,0.02,39,0.295,40,0.409,41,0.462,54,1.141,64,0.233,65,0.036,118,0.013,119,0.016,120,0.013,239,2.553,289,4.106,290,2.089,291,3.357,292,3.964,293,6.661,294,2.471,295,3.524,296,2.866,297,4.834,298,3.045,299,4.631,300,4.631,301,4.631,302,4.631,303,4.631,304,4.011,305,4.631,306,4.631,307,3.196]],["title/components/CommentComponent.html",[0,0.417,83,0.996]],["body/components/CommentComponent.html",[0,0.608,1,0.879,2,1.462,3,0.16,4,0.14,5,1.085,6,1.085,7,1.085,8,1.085,9,0.14,13,1.085,14,2.217,15,1.997,16,1.029,18,1.387,20,1.387,22,0.16,23,0.523,24,1.25,25,0.927,30,0.639,32,0.484,35,0.48,38,0.02,39,0.334,40,0.326,43,0.68,44,1.309,56,0.486,61,1.701,63,0.317,64,0.16,65,0.025,73,0.976,74,1.542,75,1.542,76,1.085,77,1.953,78,1.085,80,1.085,81,0.879,82,1.085,83,1.583,84,1.085,85,0.879,86,1.085,87,1.542,88,0.835,89,1.085,90,0.879,91,1.085,92,0.879,93,1.085,94,0.792,95,0.927,96,1.085,97,0.835,98,1.085,99,0.879,100,0.976,101,1.085,102,0.751,103,1.085,104,0.879,105,0.879,106,1.085,107,0.835,108,1.085,109,0.835,110,0.835,111,1.085,112,0.879,113,1.085,114,0.835,115,0.835,116,1.085,117,1.085,118,0.009,119,0.012,120,0.009,238,1.029,289,3.683,291,3.336,296,2.038,308,2.721,309,1.462,310,5.255,311,4.517,312,6.044,313,4.517,314,4.498,315,4.171,316,4.897,317,1.953,318,3.438,319,2.307,320,3.438,321,4.517,322,4.517,323,3.179,324,3.179,325,3.438,326,3.179,327,3.179,328,3.179,329,3.179,330,3.179,331,3.179,332,3.179,333,3.179,334,2.862,335,3.179,336,3.179,337,2.721,338,2.419,339,3.179,340,3.179,341,3.179,342,3.179,343,3.179,344,3.179,345,2.419,346,3.179,347,3.179,348,3.179,349,3.179,350,3.866,351,1.864,352,2.014,353,2.419,354,2.419,355,2.721,356,3.179,357,3.866,358,1.736,359,2.419,360,2.721,361,3.179,362,1.864,363,2.467,364,1.353]],["title/components/CreateProposalComponent.html",[0,0.417,85,0.996]],["body/components/CreateProposalComponent.html",[0,0.545,1,0.727,2,1.273,3,0.132,4,0.116,5,0.898,6,0.898,7,0.898,8,0.898,9,0.116,13,0.898,14,2.16,15,1.945,16,0.851,18,1.208,20,1.208,22,0.132,23,0.455,24,1.248,25,1.632,30,0.556,32,0.242,35,0.486,37,0.262,38,0.02,39,0.3,40,0.371,41,0.262,43,0.396,44,0.655,45,2.001,46,2.001,50,1.47,51,1.47,52,0.947,54,0.707,56,0.507,60,1.119,61,1.525,62,1.542,63,0.262,64,0.132,65,0.021,73,0.808,74,1.343,75,1.343,76,0.898,77,1.785,78,0.898,80,0.898,81,0.727,82,0.898,83,0.727,84,0.898,85,1.447,86,2.185,87,1.343,88,0.69,89,0.898,90,0.727,91,0.898,92,0.727,93,0.898,94,0.655,95,0.766,96,0.898,97,0.69,98,0.898,99,0.727,100,0.808,101,0.898,102,0.621,103,0.898,104,0.727,105,0.727,106,0.898,107,0.69,108,0.898,109,0.69,110,0.69,111,0.898,112,0.727,113,0.898,114,0.69,115,0.69,116,0.898,117,0.898,118,0.007,119,0.011,120,0.007,125,2.307,167,5.287,168,5.287,177,3.283,239,1.581,291,3.331,296,1.186,298,1.261,309,1.273,317,1.785,319,2.009,364,1.119,365,2.001,366,3.002,367,4.033,368,3.367,369,4.712,370,2.407,371,3.933,372,5.599,373,4.033,374,4.476,375,2.005,376,3.933,377,4.712,378,3.933,379,2.001,380,2.259,381,3.864,382,2.63,383,2.63,384,4.712,385,2.63,386,2.63,387,1.343,388,2.63,389,2.251,390,2.251,391,2.251,392,2.251,393,2.63,394,2.63,395,2.251,396,2.251,397,2.251,398,2.63,399,1.436,400,2.63,401,2.63,402,2.251,403,2.63,404,2.63,405,2.63,406,2.63,407,2.63,408,2.63,409,2.63,410,2.63,411,2.63,412,2.63,413,2.63,414,2.63,415,2.63,416,2.251,417,2.63,418,5.23,419,4.476,420,3.367,421,5.029,422,3.933,423,3.933,424,3.367,425,3.933,426,3.367,427,2.307,428,3.367,429,1.815,430,2.251,431,2.63,432,2.63,433,2.63]],["title/interfaces/DialogData.html",[57,2.112,434,2.112]],["body/interfaces/DialogData.html",[0,0.477,3,0.141,4,0.123,9,0.123,14,0.861,15,0.776,18,0.861,20,0.861,22,0.141,23,0.477,24,0.879,26,1.531,34,1.777,38,0.021,40,0.16,44,1.028,49,1.756,52,1.944,54,0.97,56,0.76,57,2.419,59,1.531,60,2.083,61,1.336,62,1.645,63,0.28,64,0.246,65,0.032,94,0.698,95,0.817,102,0.663,105,0.776,115,0.736,118,0.013,119,0.011,120,0.008,153,1.645,170,1.777,171,1.756,174,1.777,175,1.935,176,1.935,177,1.645,178,1.935,179,1.935,223,1.645,224,1.935,233,2.87,234,2.673,235,3.285,236,1.935,238,1.747,247,2.17,253,1.935,254,1.193,255,1.978,275,2.673,281,0.861,286,1.028,294,2.071,309,1.336,317,0.957,364,1.193,370,2.107,380,1.978,387,2.757,434,1.645,435,2.804,436,1.935,437,2.938,438,1.432,439,1.935,440,1.777,441,1.645,442,2.134,443,1.777,444,2.134,445,1.645,446,2.346,447,2.757,448,1.531,449,1.935,450,2.847,451,2.847,452,2.847,453,1.531,454,1.935,455,2.847,456,3.14,457,2.419,458,1.935,459,2.253,460,2.847,461,1.935,462,1.935,463,1.935,464,1.935,465,1.935,466,2.134,467,2.134,468,2.134,469,1.935,470,2.134,471,2.134,472,2.134,473,2.134,474,1.935,475,1.645,476,2.134,477,1.777,478,2.134,479,2.134,480,2.938,481,2.134,482,1.777,483,1.777,484,2.134,485,2.134,486,1.935,487,2.134,488,1.978,489,1.777,490,2.134,491,3.14,492,3.14,493,3.14,494,2.134,495,2.134,496,2.134,497,2.134,498,2.134,499,2.134,500,2.134,501,1.935,502,2.134,503,2.134,504,2.134,505,2.134,506,2.134,507,2.134,508,2.134,509,2.134,510,3.725,511,3.725,512,2.134,513,3.14,514,2.134,515,3.14,516,1.531,517,3.14,518,3.14,519,3.14,520,1.978,521,1.935,522,1.935,523,1.777,524,1.935,525,1.935,526,2.134,527,2.134,528,2.134,529,2.134,530,2.134,531,2.134,532,1.777,533,2.134,534,1.935,535,1.645,536,2.134,537,2.134,538,2.134,539,2.134,540,2.134,541,2.134]],["title/components/ErrorComponent.html",[0,0.417,88,0.945]],["body/components/ErrorComponent.html",[0,0.677,1,1.08,2,1.685,3,0.197,4,0.172,5,1.333,6,1.333,7,1.333,8,1.333,9,0.172,13,1.333,14,2.27,15,2.045,16,1.264,18,1.599,20,1.599,22,0.197,23,0.602,30,0.736,32,0.54,35,0.413,38,0.02,39,0.331,40,0.222,43,0.588,44,1.296,50,1.025,51,1.025,54,0.702,56,0.42,61,1.895,63,0.39,64,0.197,65,0.03,73,1.199,74,1.777,75,1.777,76,1.333,77,2.131,78,1.333,80,1.333,81,1.08,82,1.333,83,1.08,84,1.333,85,1.08,86,1.333,87,1.777,88,1.639,89,1.333,90,1.08,91,1.333,92,1.08,93,1.333,94,0.973,95,1.138,96,1.333,97,1.025,98,1.333,99,1.08,100,1.199,101,1.333,102,0.923,103,1.333,104,1.08,105,1.08,106,1.333,107,1.025,108,1.333,109,1.025,110,1.025,111,1.333,112,1.08,113,1.333,114,1.025,115,1.025,116,1.333,117,1.333,118,0.011,119,0.014,120,0.011,309,1.685,317,2.131,474,4.488,520,2.993,542,3.343,543,5.854,544,5.205,545,5.205,546,3.905,547,4.455]],["title/classes/Feed.html",[65,0.028,548,2.112]],["body/classes/Feed.html",[3,0.265,4,0.231,9,0.231,22,0.265,23,0.728,24,1.208,32,0.58,35,0.443,37,0.526,38,0.02,39,0.335,40,0.405,41,0.526,64,0.265,65,0.041,118,0.014,119,0.017,120,0.014,290,2.377,298,3.223,548,3.688,549,4.508,550,5.96,551,5.267,552,5.267,553,5.267]],["title/components/FeedComponent.html",[0,0.417,90,0.996]],["body/components/FeedComponent.html",[0,0.41,1,0.469,2,0.902,3,0.085,4,0.075,5,0.579,6,0.579,7,0.579,8,0.579,9,0.075,13,0.579,14,1.997,15,1.798,16,0.549,18,0.856,20,0.856,22,0.085,23,0.322,24,1.247,25,1.197,30,0.394,32,0.156,35,0.489,37,0.453,38,0.021,39,0.328,40,0.376,41,0.453,43,0.863,44,1.464,49,0.722,50,1.28,51,1.28,52,0.611,54,0.815,56,0.555,61,1.148,63,0.169,64,0.085,65,0.013,73,0.521,74,0.951,75,0.951,76,0.579,77,1.402,78,0.579,80,0.579,81,0.469,82,0.579,83,0.771,84,0.579,85,0.469,86,1.211,87,0.951,88,0.445,89,0.579,90,1.136,91,0.579,92,0.469,93,0.579,94,0.422,95,0.494,96,0.579,97,0.445,98,0.579,99,0.469,100,0.521,101,0.579,102,0.401,103,0.579,104,0.469,105,0.469,106,0.579,107,0.445,108,0.579,109,0.445,110,0.445,111,0.579,112,0.771,113,1.664,114,0.445,115,0.445,116,0.579,117,0.579,118,0.005,119,0.008,120,0.005,125,0.995,145,2.408,158,1.171,169,1.452,204,3.021,205,1.452,221,1.171,239,1.12,247,1.426,289,3.155,291,3.339,296,2.325,309,0.902,314,2.385,317,1.402,318,2.121,319,1.423,320,2.121,325,3.921,334,2.602,337,1.452,338,3.125,351,2.408,352,2.247,353,1.291,354,2.699,355,3.515,358,2.663,359,2.121,360,1.452,362,2.08,363,0.926,364,0.722,366,0.813,399,0.926,416,2.385,424,1.452,520,2.75,534,1.171,535,1.634,547,3.035,548,1.634,554,1.452,555,3.546,556,2.786,557,2.786,558,2.786,559,5.572,560,2.786,561,2.786,562,2.786,563,2.385,564,2.786,565,2.786,566,2.786,567,3.546,568,4.106,569,4.106,570,4.106,571,2.786,572,4.106,573,2.385,574,2.385,575,4.106,576,2.786,577,1.696,578,2.786,579,1.696,580,1.696,581,1.696,582,1.696,583,1.696,584,1.696,585,1.696,586,1.696,587,1.696,588,1.696,589,2.786,590,1.696,591,2.786,592,1.696,593,1.696,594,1.452,595,1.696,596,1.452,597,1.696,598,1.696,599,1.696,600,1.696,601,1.696,602,1.696,603,1.696,604,1.696,605,1.696,606,1.696,607,1.696,608,1.696,609,1.696,610,1.696,611,1.171,612,1.696,613,1.291,614,1.696,615,1.696,616,1.696,617,1.696,618,1.696,619,1.696,620,1.696,621,1.696,622,1.696,623,1.696,624,1.696,625,1.696,626,1.696,627,1.696,628,1.696,629,1.696,630,1.696,631,1.696,632,1.696,633,3.546,634,1.696,635,1.696,636,1.696,637,1.696,638,1.696,639,1.696,640,1.696,641,1.696,642,1.696,643,2.786,644,3.546,645,2.786,646,2.477,647,2.385,648,1.696,649,4.173,650,3.546,651,1.696,652,1.696,653,1.696,654,1.696,655,1.696,656,1.696,657,2.786,658,2.786,659,2.786,660,1.696,661,1.696,662,3.035,663,3.035,664,1.696,665,1.696,666,1.696,667,1.696,668,2.786,669,4.536,670,2.247,671,2.786,672,1.696,673,1.696,674,2.786,675,1.696,676,1.696,677,1.696,678,1.696,679,1.696,680,1.696,681,1.696,682,1.696,683,1.171,684,2.786,685,1.696,686,1.696,687,1.696,688,2.786,689,2.786,690,2.786,691,2.786,692,2.786,693,2.786,694,2.786,695,2.786,696,2.786,697,2.786,698,2.786,699,2.08,700,1.634,701,2.385,702,2.834,703,2.786,704,2.408,705,1.696,706,1.696,707,2.385,708,3.035,709,1.291,710,3.035,711,1.696,712,1.452,713,2.786,714,2.08,715,1.696,716,1.075,717,1.696,718,3.035,719,1.696,720,1.696,721,1.696,722,1.696,723,1.291,724,1.696,725,1.696,726,1.696,727,1.696,728,1.452,729,2.786,730,1.696,731,2.786,732,2.385,733,1.522,734,1.696,735,2.385,736,1.696,737,1.696,738,1.696,739,1.696,740,1.696,741,1.696,742,1.696,743,1.696,744,1.696,745,1.696,746,2.786,747,1.696,748,1.696,749,0.995,750,1.696,751,1.696,752,2.786,753,1.696,754,1.696,755,1.696]],["title/classes/FeedParams.html",[65,0.028,756,2.486]],["body/classes/FeedParams.html",[3,0.222,4,0.194,9,0.194,22,0.222,23,0.652,24,1.344,32,0.52,35,0.496,37,0.441,38,0.02,39,0.281,40,0.385,41,0.675,54,1.243,64,0.222,65,0.034,118,0.012,119,0.015,120,0.012,290,1.991,297,5.263,319,3.454,523,4.147,704,3.838,756,3.891,757,6.092,758,3.778,759,6.545,760,6.212,761,5.788,762,4.413,763,4.413,764,4.825,765,4.413,766,4.413,767,4.413,768,4.413,769,4.413,770,4.413,771,4.413,772,4.413,773,4.413,774,4.413]],["title/components/FilterComponent.html",[0,0.417,92,0.996]],["body/components/FilterComponent.html",[0,0.549,1,0.737,2,1.286,3,0.134,4,0.117,5,0.909,6,0.909,7,0.909,8,0.909,9,0.117,13,0.909,14,2.164,15,1.949,16,0.862,18,1.22,20,1.22,22,0.134,23,0.459,24,1.251,25,1.384,28,3.632,30,0.561,32,0.438,35,0.474,37,0.266,38,0.021,39,0.302,40,0.27,41,0.266,43,0.792,44,1.402,50,0.699,51,0.699,54,0.479,56,0.567,61,1.286,63,0.266,64,0.134,65,0.021,73,0.818,74,1.356,75,1.356,76,0.909,77,1.797,78,0.909,80,0.909,81,0.737,82,0.909,83,0.737,84,0.909,85,0.737,86,0.909,87,1.356,88,0.699,89,0.909,90,0.737,91,0.909,92,1.456,93,0.909,94,0.663,95,0.776,96,0.909,97,0.699,98,0.909,99,0.737,100,0.818,101,0.909,102,0.629,103,0.909,104,0.737,105,0.737,106,0.909,107,0.699,108,0.909,109,0.699,110,0.699,111,0.909,112,0.737,113,0.909,114,0.699,115,1.246,116,0.909,117,0.909,118,0.007,119,0.011,120,0.007,204,3.587,215,2.28,227,4.221,228,4.783,238,0.862,291,3.257,297,4.889,309,1.286,317,1.797,318,3.022,320,3.022,325,3.022,334,1.687,338,2.027,352,1.687,364,2.021,420,4.064,429,1.838,548,3.086,550,3.399,611,1.838,613,2.027,646,1.455,670,1.687,699,2.785,700,3.086,701,2.28,702,2.741,723,2.027,733,1.455,775,2.28,776,4.748,777,3.971,778,4.748,779,4.748,780,3.971,781,5.263,782,5.263,783,3.971,784,4.748,785,3.971,786,3.971,787,2.663,788,2.663,789,2.663,790,2.663,791,2.663,792,3.971,793,2.663,794,2.663,795,2.663,796,2.663,797,2.663,798,2.663,799,2.663,800,2.663,801,2.663,802,2.663,803,2.663,804,2.663,805,2.663,806,2.663,807,3.971,808,2.663,809,2.663,810,3.971,811,2.663,812,2.663,813,2.663,814,2.663,815,2.663,816,4.748,817,2.28,818,5.263,819,4.505,820,2.663,821,2.663,822,2.663,823,2.663,824,2.663,825,3.971,826,2.663,827,2.663,828,3.971,829,2.329,830,2.663,831,3.277,832,2.663,833,2.663,834,2.663,835,2.663]],["title/components/ForgetPasswordComponent.html",[0,0.417,94,0.897]],["body/components/ForgetPasswordComponent.html",[0,0.557,1,0.754,2,1.308,3,0.137,4,0.12,5,0.931,6,0.931,7,0.931,8,0.931,9,0.12,13,0.931,14,2.171,15,1.956,16,0.883,18,1.241,20,1.241,22,0.137,23,0.468,25,1.403,30,0.571,32,0.251,34,1.728,35,0.446,37,0.272,38,0.021,39,0.306,40,0.323,41,0.272,43,0.724,44,1.326,49,1.72,50,0.716,51,0.716,52,0.982,54,0.957,56,0.612,59,1.489,60,1.16,61,1.559,63,0.272,64,0.203,65,0.032,72,3.459,73,0.837,74,1.379,75,1.379,76,0.931,77,1.941,78,0.931,80,0.931,81,0.754,82,0.931,83,0.754,84,0.931,85,0.754,86,0.931,87,1.379,88,0.716,89,0.931,90,0.754,91,0.931,92,0.754,93,0.931,94,1.326,95,1.917,96,0.931,97,0.716,98,0.931,99,0.754,100,0.837,101,0.931,102,0.644,103,0.931,104,0.754,105,1.573,106,0.931,107,0.716,108,0.931,109,0.716,110,1.398,111,0.931,112,0.754,113,0.931,114,0.716,115,0.716,116,0.931,117,0.931,118,0.007,119,0.011,120,0.007,171,1.16,174,1.728,182,2.075,223,3.791,238,1.308,239,1.936,247,1.096,255,1.307,281,0.837,286,0.679,309,1.559,317,1.817,380,1.307,387,2.064,427,2.37,437,3.233,446,2.308,447,2.459,448,1.489,450,2.789,451,2.789,452,2.789,457,2.37,458,1.882,459,2.207,460,2.789,461,1.882,462,1.882,463,1.882,464,1.882,465,1.882,488,1.307,489,1.728,516,1.489,520,2.855,646,2.629,662,2.334,663,2.334,683,1.882,836,5.533,837,2.334,838,4.814,839,4.041,840,4.041,841,4.814,842,5.324,843,3.674,844,2.727,845,3.674,846,4.041,847,4.041,848,2.727,849,2.727,850,2.727,851,2.727,852,2.727,853,2.727,854,2.727,855,2.727,856,2.727,857,2.727,858,2.727,859,2.727,860,2.727,861,2.727,862,1.882,863,2.727,864,2.727,865,4.121,866,2.727,867,2.727,868,2.334,869,2.334,870,2.56,871,3.075,872,3.459,873,3.075,874,4.041,875,4.041,876,4.041,877,4.041]],["title/injectables/GetProposalsService.html",[142,2.282,267,0.477]],["body/injectables/GetProposalsService.html",[3,0.164,4,0.143,9,0.143,22,0.164,23,0.532,25,1.845,30,0.65,32,0.3,35,0.497,37,0.649,38,0.021,39,0.414,40,0.401,41,0.649,43,0.953,50,1.662,51,1.662,54,1.137,56,0.657,63,0.325,64,0.164,65,0.025,118,0.009,119,0.013,120,0.009,122,1.055,142,2.913,184,1.563,194,1.174,267,0.609,269,1.055,279,1.174,281,1.001,286,1.577,319,2.955,548,3.124,683,3.676,756,4.863,761,4.952,878,6.073,879,2.79,880,4.598,881,4.598,882,4.598,883,4.598,884,4.598,885,4.598,886,4.598,887,4.598,888,4.598,889,4.598,890,4.598,891,4.598,892,3.259,893,2.141,894,4.598,895,3.259,896,3.259,897,3.259,898,4.015,899,3.259,900,3.259,901,3.259,902,3.259,903,3.259,904,3.259,905,3.259,906,3.259,907,3.259,908,3.259,909,4.598,910,3.259,911,3.259,912,4.598,913,3.259,914,3.259,915,4.598,916,3.259,917,3.259,918,3.259,919,3.259,920,3.259,921,3.259,922,3.259,923,3.259,924,3.259,925,3.259,926,3.259,927,3.259,928,3.259,929,3.259,930,4.598,931,3.259,932,3.259,933,3.259,934,3.259,935,3.935,936,3.259,937,3.259,938,3.259]],["title/injectables/GetTeamService.html",[143,1.967,267,0.477]],["body/injectables/GetTeamService.html",[3,0.247,4,0.215,9,0.215,22,0.247,30,0.851,32,0.452,35,0.425,37,0.49,38,0.02,39,0.312,40,0.279,41,0.49,43,0.738,56,0.732,63,0.49,64,0.247,65,0.038,118,0.013,119,0.016,120,0.013,122,1.588,143,3.289,184,2.352,194,1.767,267,0.798,269,1.588,279,1.767,281,1.507,286,1.5,893,2.62,898,3.532,939,5.579,940,4.198,941,5.173,942,2.087,943,4.905,944,2.087,945,4.905,946,3.816,947,3.108,948,4.905,949,2.679,950,4.905,951,4.198]],["title/components/HomeComponent.html",[0,0.417,97,0.945]],["body/components/HomeComponent.html",[0,0.529,1,0.692,2,1.227,3,0.126,4,0.11,5,0.854,6,0.854,7,0.854,8,0.854,9,0.11,13,0.854,14,2.144,15,1.931,16,0.81,18,1.164,20,1.164,22,0.191,23,0.438,24,1.036,27,3.243,30,0.536,32,0.231,35,0.386,37,0.25,38,0.021,39,0.324,40,0.26,41,0.25,43,0.57,44,1.139,49,1.613,56,0.408,61,1.48,63,0.25,64,0.126,65,0.02,73,0.769,74,1.294,75,1.294,76,0.854,77,1.741,78,0.854,80,0.854,81,0.692,82,0.854,83,0.692,84,0.854,85,0.692,86,0.854,87,1.294,88,0.657,89,0.854,90,0.692,91,0.854,92,0.692,93,0.854,94,0.623,95,0.729,96,0.854,97,1.339,98,0.854,99,0.692,100,0.769,101,0.854,102,0.591,103,0.854,104,0.692,105,0.692,106,0.854,107,0.657,108,0.854,109,0.657,110,0.657,111,0.854,112,0.692,113,0.854,114,0.657,115,0.657,116,0.854,117,0.854,118,0.007,119,0.01,120,0.01,200,1.904,235,2.069,254,1.065,281,0.769,309,1.227,317,1.741,350,2.142,352,3.472,353,1.904,354,1.904,358,3.149,359,1.904,362,3.214,363,1.367,364,2.332,366,1.817,429,3.782,430,4.691,670,2.897,699,3.836,700,1.468,702,4.134,704,2.682,708,3.243,709,2.884,714,3.775,718,2.142,723,4.899,728,3.243,732,2.142,733,2.069,735,2.142,749,2.222,817,2.142,829,2.991,831,1.727,952,2.142,953,3.789,954,4.573,955,3.789,956,3.789,957,5.101,958,2.502,959,4.366,960,3.789,961,2.502,962,2.502,963,2.502,964,2.502,965,2.502,966,2.142,967,2.502,968,2.502,969,2.502,970,3.243,971,3.789,972,3.789,973,3.789,974,2.502,975,2.502,976,2.142,977,2.502,978,3.156,979,2.502,980,2.142,981,2.502,982,2.502,983,3.243,984,2.502,985,2.502,986,3.472,987,2.615,988,2.502,989,2.502,990,2.142,991,5.989,992,1.585,993,2.502,994,1.727,995,1.585,996,1.585,997,3.789,998,2.502,999,2.142,1000,2.502,1001,2.502,1002,2.615,1003,2.502,1004,3.789,1005,5.28,1006,4.573,1007,2.502,1008,2.502,1009,5.48,1010,5.101,1011,2.502,1012,2.502,1013,2.502,1014,2.502,1015,3.789,1016,2.502,1017,2.502,1018,2.502,1019,2.502,1020,2.502,1021,2.502,1022,3.789,1023,3.789,1024,6.168,1025,2.502,1026,2.502,1027,2.502,1028,2.142,1029,2.502,1030,2.502,1031,2.502,1032,2.502,1033,2.502,1034,2.502,1035,2.502,1036,2.502,1037,2.502,1038,2.502,1039,2.142,1040,2.502,1041,2.502,1042,2.502,1043,2.502,1044,2.502]],["title/interceptors/HttpInterceptorService.html",[1045,3.083,1046,2.741]],["body/interceptors/HttpInterceptorService.html",[3,0.221,4,0.193,9,0.193,22,0.221,30,0.794,32,0.404,35,0.396,37,0.56,38,0.021,39,0.357,40,0.352,41,0.56,43,0.66,56,0.703,63,0.438,64,0.221,65,0.034,118,0.012,119,0.015,120,0.012,184,2.102,194,1.579,238,1.42,255,2.102,267,0.744,272,3.337,281,1.347,286,1.398,294,1.579,309,1.42,453,3.566,454,3.027,670,2.778,898,3.632,1046,4.273,1047,4.385,1048,5.301,1049,3.754,1050,5.614,1051,4.385,1052,4.385,1053,5.614,1054,5.614,1055,6.529,1056,6.193,1057,6.529,1058,4.385,1059,4.385,1060,5.614,1061,4.385,1062,5.614,1063,4.385,1064,4.385,1065,4.385,1066,4.385,1067,3.754,1068,4.385,1069,4.385,1070,3.337,1071,4.385,1072,4.385,1073,4.385,1074,4.385]],["title/components/LoginComponent.html",[0,0.417,102,0.851]],["body/components/LoginComponent.html",[0,0.433,1,0.508,2,0.962,3,0.092,4,0.081,5,0.627,6,0.627,7,0.627,8,0.627,9,0.081,13,0.627,14,2.03,15,1.828,16,0.594,18,0.913,20,0.913,22,0.092,23,0.344,24,1.03,26,1.003,30,0.42,32,0.169,34,1.163,35,0.479,37,0.183,38,0.021,39,0.238,40,0.335,41,0.183,43,0.711,44,1.327,49,1.832,50,1.241,51,1.241,52,1.55,54,0.85,56,0.705,57,1.077,59,1.003,60,1.594,61,1.212,62,1.077,63,0.183,64,0.189,65,0.023,73,0.564,74,1.015,75,1.015,76,0.627,77,1.47,78,0.627,80,0.627,81,0.508,82,0.627,83,0.508,84,0.627,85,0.508,86,0.627,87,1.015,88,0.482,89,0.627,90,0.508,91,0.627,92,0.508,93,0.627,94,0.74,95,0.866,96,0.627,97,0.482,98,0.627,99,0.508,100,0.564,101,0.627,102,1.017,103,0.627,104,0.508,105,1.535,106,0.627,107,0.482,108,0.627,109,0.482,110,0.482,111,0.627,112,0.508,113,0.627,114,0.482,115,0.78,116,0.627,117,0.627,118,0.01,119,0.008,120,0.005,153,1.077,170,1.163,171,1.265,174,1.163,175,1.267,176,1.267,177,1.077,178,1.267,179,1.267,223,1.077,224,1.267,233,2.196,234,2.045,235,2.91,236,1.267,238,1.531,247,2.142,253,1.267,254,0.781,255,1.425,274,1.572,275,2.764,281,0.564,286,0.74,294,1.919,309,1.212,317,1.47,351,1.077,358,1.623,363,1.623,364,1.265,370,2.585,380,2.267,387,2.199,434,1.077,436,1.267,437,3.136,438,2.415,439,1.267,440,1.163,441,2.196,442,1.397,443,1.163,444,1.397,445,1.077,446,2.064,447,2.199,448,1.003,449,1.267,450,2.052,451,2.052,452,2.052,453,2.351,454,1.267,455,2.971,456,2.85,457,2.196,458,1.267,459,1.623,460,2.052,461,1.267,462,1.267,463,1.267,464,1.267,465,1.267,466,2.262,467,2.85,468,1.397,469,1.267,470,2.85,471,2.85,472,1.397,473,2.85,474,3.264,475,1.743,476,2.262,477,2.373,478,2.85,479,2.85,480,2.928,481,2.85,482,2.373,483,1.163,484,1.397,485,1.397,486,2.585,487,1.397,488,1.425,489,1.163,490,2.85,491,2.262,492,2.262,493,2.262,494,3.276,495,1.397,496,1.397,497,1.397,498,1.397,499,1.397,500,1.397,501,2.971,502,1.397,503,1.397,504,1.397,505,1.397,506,1.397,507,1.397,508,1.397,509,1.397,510,2.85,511,2.85,512,1.397,513,2.262,514,1.397,515,2.262,516,1.003,517,2.262,518,2.262,519,2.262,520,1.425,521,1.267,522,1.267,523,1.163,524,1.267,525,1.267,526,3.276,527,1.397,528,1.397,529,1.397,530,1.397,531,1.397,532,1.163,533,1.397,534,1.267,535,2.525,536,1.397,537,1.397,538,1.397,539,1.397,540,1.397,541,1.397,646,2.351,699,1.077,700,1.077,704,1.077,710,1.572,714,1.077,716,1.163,733,1.003,749,1.743,829,1.077,831,1.267,870,2.727,871,3.276,872,3.685,873,3.276,983,1.572,986,3.206,987,1.267,992,1.163,994,1.267,995,1.883,996,1.883,1005,1.572,1075,2.544,1076,4.305,1077,2.973,1078,2.973,1079,2.973,1080,1.836,1081,1.836,1082,1.836,1083,1.836,1084,1.836,1085,1.836,1086,1.836,1087,1.836,1088,1.836,1089,1.836,1090,1.836,1091,1.836,1092,1.836,1093,1.836,1094,1.836,1095,1.836,1096,1.836,1097,1.836,1098,1.836,1099,1.836,1100,2.973,1101,4.305,1102,2.544,1103,2.973,1104,1.836,1105,1.836,1106,1.572,1107,1.572]],["title/classes/MyErrorStateMatcher.html",[65,0.028,457,2.112]],["body/classes/MyErrorStateMatcher.html",[0,0.465,3,0.136,4,0.119,9,0.119,14,0.831,15,0.748,18,0.831,20,0.831,22,0.136,24,0.861,26,1.477,30,0.568,34,1.714,35,0.191,37,0.27,38,0.021,39,0.172,40,0.154,41,0.27,43,0.407,44,1.001,49,2.039,52,1.91,54,0.722,56,0.756,57,1.587,59,1.477,60,2.039,61,1.301,62,1.587,63,0.27,64,0.241,65,0.031,94,0.674,95,0.788,102,0.639,105,0.748,115,0.71,118,0.013,119,0.011,120,0.007,153,1.587,170,1.714,171,1.71,174,1.714,175,1.867,176,1.867,177,1.587,178,1.867,179,1.867,223,1.587,224,1.867,233,2.81,234,2.617,235,3.242,236,1.867,238,1.717,247,2.132,253,1.867,254,1.151,255,1.926,275,2.617,281,0.831,286,1.001,290,1.221,294,2.041,309,1.551,317,0.923,364,1.151,370,2.052,380,1.926,387,3.225,434,1.587,436,1.867,437,2.052,438,1.382,439,1.867,440,1.714,441,1.587,442,2.059,443,1.714,444,2.059,445,1.587,446,2.297,447,3.033,448,1.477,449,1.867,450,3.66,451,3.66,452,3.307,453,1.477,454,1.867,455,2.773,456,3.057,457,2.81,458,2.773,459,2.896,460,2.773,461,1.867,462,2.773,463,1.867,464,1.867,465,1.867,466,2.059,467,2.059,468,2.059,469,1.867,470,2.059,471,2.059,472,2.059,473,2.059,474,1.867,475,1.587,476,2.059,477,1.714,478,2.059,479,2.059,480,2.894,481,2.059,482,1.714,483,1.714,484,2.059,485,2.059,486,1.867,487,2.059,488,1.926,489,1.714,490,2.059,491,3.057,492,3.057,493,3.057,494,2.059,495,2.059,496,2.059,497,2.059,498,2.059,499,2.059,500,2.059,501,1.867,502,2.059,503,2.059,504,2.059,505,2.059,506,2.059,507,2.059,508,2.059,509,2.059,510,3.647,511,3.647,512,2.059,513,3.057,514,2.059,515,3.057,516,1.477,517,3.057,518,3.057,519,3.057,520,1.926,521,1.867,522,1.867,523,1.714,524,1.867,525,1.867,526,2.059,527,2.059,528,2.059,529,2.059,530,2.059,531,2.059,532,1.714,533,2.059,534,1.867,535,1.587,536,2.059,537,2.059,538,2.059,539,2.059,540,2.059,541,2.059,1108,4.017,1109,2.705]],["title/components/PasswordSpecsComponent.html",[0,0.417,104,0.996]],["body/components/PasswordSpecsComponent.html",[0,0.658,1,1.021,2,1.622,3,0.186,4,0.162,5,1.259,6,1.259,7,1.259,8,1.259,9,0.162,13,1.259,14,2.256,15,2.032,16,1.194,18,1.539,20,1.539,22,0.186,30,0.708,32,0.524,35,0.353,38,0.02,39,0.319,43,0.555,44,1.248,56,0.397,61,1.841,63,0.368,64,0.186,65,0.029,73,1.133,74,1.71,75,1.71,76,1.259,77,2.083,78,1.259,80,1.259,81,1.021,82,1.259,83,1.021,84,1.259,85,1.021,86,1.259,87,1.71,88,0.969,89,1.259,90,1.021,91,1.259,92,1.021,93,1.259,94,0.919,95,1.075,96,1.259,97,0.969,98,1.259,99,1.021,100,1.133,101,1.259,102,0.872,103,1.259,104,1.688,105,1.974,106,1.259,107,0.969,108,1.259,109,0.969,110,0.969,111,1.259,112,1.021,113,1.259,114,0.969,115,0.969,116,1.259,117,1.259,118,0.01,119,0.014,120,0.01,191,3.604,296,2.26,309,1.622,317,2.083,419,4.288,421,4.288,1110,4.868,1111,3.158,1112,5.009,1113,5.688,1114,5.009,1115,3.689,1116,3.689,1117,5.009,1118,5.009,1119,5.009,1120,5.009,1121,6.101,1122,5.009,1123,5.009,1124,5.009,1125,5.009,1126,5.009,1127,5.009,1128,5.009]],["title/classes/Post.html",[65,0.028,204,2.112]],["body/classes/Post.html",[3,0.217,4,0.189,9,0.189,22,0.217,23,0.643,24,1.341,32,0.512,35,0.493,37,0.43,38,0.02,39,0.353,40,0.407,41,0.43,54,1.297,64,0.217,65,0.034,118,0.012,119,0.015,120,0.012,125,3.938,204,3.257,239,2.764,290,1.946,294,2.418,296,3.229,298,2.946,304,2.976,307,2.976,375,2.925,437,2.203,1002,4.478,1129,3.691,1130,6.714,1131,4.312,1132,4.312,1133,4.312,1134,4.312,1135,4.312,1136,4.312,1137,4.312,1138,4.312]],["title/injectables/PostProposalService.html",[144,2.282,267,0.477]],["body/injectables/PostProposalService.html",[3,0.194,4,0.17,9,0.17,22,0.194,23,0.598,24,1.046,25,1.506,30,0.73,32,0.356,35,0.488,37,0.581,38,0.021,39,0.37,40,0.387,41,0.581,43,0.777,50,1.632,51,1.632,54,1.117,56,0.669,63,0.385,64,0.194,65,0.03,118,0.011,119,0.014,120,0.011,122,1.25,144,3.273,184,1.851,194,1.391,239,2.077,267,0.685,269,1.25,279,1.391,281,1.186,286,1.45,298,1.851,319,2.639,366,2.477,480,3.672,611,4.836,683,2.665,893,2.34,898,3.03,935,4.422,942,1.643,944,1.643,947,2.447,1139,3.305,1140,5.166,1141,5.166,1142,5.821,1143,5.166,1144,5.166,1145,5.166,1146,5.166,1147,5.166,1148,3.861,1149,3.861,1150,3.861,1151,3.861,1152,3.861,1153,3.861,1154,3.305,1155,3.861,1156,3.861,1157,3.861,1158,3.861,1159,3.861,1160,3.861,1161,3.861,1162,3.861,1163,3.861,1164,3.861,1165,3.861,1166,3.861,1167,3.861,1168,3.861,1169,3.861,1170,3.861,1171,3.861,1172,3.861,1173,3.861,1174,3.861]],["title/classes/Proposal.html",[65,0.028,366,1.727]],["body/classes/Proposal.html",[3,0.228,4,0.199,9,0.199,22,0.228,23,0.664,24,1.337,32,0.529,35,0.491,37,0.453,38,0.02,39,0.289,40,0.411,41,0.628,54,1.298,64,0.228,65,0.035,118,0.012,119,0.016,120,0.012,125,3.878,239,2.659,290,2.048,296,2.84,298,3.017,319,3.215,366,2.751,375,2.902,402,3.885,764,3.885,1002,4.564,1175,3.885,1176,4.539,1177,4.539,1178,4.539,1179,4.539,1180,4.539,1181,4.539,1182,4.539,1183,4.539,1184,4.539,1185,4.539]],["title/injectables/ProposalService.html",[145,2.112,267,0.477]],["body/injectables/ProposalService.html",[3,0.156,4,0.136,9,0.136,22,0.156,23,0.513,30,0.626,32,0.285,35,0.499,37,0.654,38,0.021,39,0.417,40,0.403,41,0.654,43,0.964,50,1.682,51,1.682,54,1.199,56,0.608,63,0.309,64,0.156,65,0.024,118,0.008,119,0.012,120,0.008,122,1.001,145,2.598,184,1.483,194,1.114,239,2.576,267,0.587,269,1.001,279,1.114,281,0.95,286,1.596,289,2.598,291,3.415,296,3.292,316,3.792,319,3.348,563,3.792,573,3.792,574,3.792,594,2.648,596,2.648,893,2.081,898,3.844,942,1.316,944,1.316,947,1.96,1154,2.648,1186,2.648,1187,5.176,1188,4.43,1189,4.43,1190,4.43,1191,4.43,1192,4.43,1193,4.43,1194,4.43,1195,4.43,1196,4.43,1197,4.43,1198,4.43,1199,3.094,1200,3.094,1201,3.094,1202,3.094,1203,3.094,1204,3.094,1205,3.094,1206,3.094,1207,3.094,1208,3.094,1209,3.094,1210,3.094,1211,4.43,1212,3.094,1213,3.094,1214,3.094,1215,3.094,1216,3.094,1217,3.094,1218,3.094,1219,3.094,1220,3.094,1221,3.094,1222,3.094,1223,3.094,1224,3.094,1225,3.094,1226,3.094,1227,3.094,1228,3.094,1229,3.094,1230,3.094,1231,3.094,1232,3.094,1233,3.094,1234,3.094,1235,3.094,1236,3.094,1237,3.094,1238,3.094,1239,3.094,1240,3.094,1241,3.094,1242,3.094,1243,3.094]],["title/components/RegisterComponent.html",[0,0.417,107,0.945]],["body/components/RegisterComponent.html",[0,0.403,1,0.754,2,0.882,3,0.175,4,0.072,5,0.93,6,0.563,7,0.563,8,0.563,9,0.072,11,0.968,13,0.563,14,1.985,15,1.788,16,0.882,18,0.837,20,0.837,22,0.083,23,0.315,24,0.991,25,0.481,26,1.488,28,2.401,30,0.385,32,0.251,35,0.46,37,0.165,38,0.021,39,0.339,40,0.303,41,0.165,43,0.672,44,1.113,50,1.173,51,1.592,52,1.454,54,0.726,56,0.612,59,0.901,60,0.702,61,1.126,63,0.165,64,0.083,65,0.013,73,0.507,74,0.93,75,0.93,76,0.563,77,1.526,78,0.563,80,0.563,81,0.456,82,0.563,83,0.456,84,0.563,85,0.456,86,1.188,87,0.93,88,0.433,89,0.563,90,0.456,91,0.563,92,0.456,93,0.563,94,0.411,95,0.481,96,0.563,97,0.433,98,0.563,99,0.456,100,0.507,101,0.563,102,0.39,103,0.563,104,0.754,105,1.646,106,0.563,107,1.06,108,0.563,109,0.433,110,0.433,111,0.563,112,0.456,113,0.563,114,0.433,115,1.53,116,0.563,117,0.563,118,0.004,119,0.007,120,0.004,143,2.205,146,2.205,151,1.256,152,1.256,153,0.968,154,1.256,158,1.139,171,0.702,177,2.04,182,1.256,191,1.045,192,1.256,195,1.139,226,1.256,238,0.882,239,1.399,247,1.797,254,0.702,255,1.306,275,3.103,286,1.006,294,1.253,309,0.882,315,1.139,317,1.378,334,1.045,351,0.968,352,1.045,357,1.412,358,1.488,362,2.621,363,2.205,364,2.166,370,2.283,375,1.159,380,2.143,427,1.598,429,2.401,437,2.458,445,2.985,446,1.668,447,0.843,448,0.901,459,1.488,475,2.04,480,1.777,488,2.143,489,1.045,516,0.901,520,1.936,535,2.368,646,3.103,649,1.412,699,1.598,700,1.598,702,2.787,704,0.968,709,1.256,712,2.332,714,0.968,716,1.045,733,0.901,749,1.598,829,2.04,843,2.787,862,1.139,868,2.332,869,2.978,870,3.6,871,2.073,873,2.073,941,2.073,946,2.204,970,4.118,976,1.412,978,1.88,980,1.412,986,2.558,987,1.139,990,1.412,992,1.045,994,1.139,995,1.045,996,1.045,999,1.412,1102,2.332,1107,2.332,1244,1.412,1245,3.479,1246,2.724,1247,3.479,1248,3.456,1249,3.456,1250,2.978,1251,3.479,1252,2.978,1253,2.978,1254,4.812,1255,3.073,1256,2.724,1257,3.479,1258,1.412,1259,2.204,1260,2.724,1261,1.65,1262,1.65,1263,1.65,1264,1.65,1265,1.65,1266,1.65,1267,1.65,1268,1.65,1269,1.65,1270,1.65,1271,1.65,1272,1.65,1273,1.65,1274,1.65,1275,1.65,1276,1.65,1277,1.65,1278,1.65,1279,1.139,1280,1.412,1281,1.65,1282,1.412,1283,1.412,1284,1.412,1285,1.412,1286,2.073,1287,1.256,1288,1.256,1289,1.412,1290,1.65,1291,1.256,1292,3.073,1293,2.647,1294,1.65,1295,1.412,1296,1.412,1297,1.412,1298,1.412,1299,1.412,1300,1.412,1301,2.724,1302,1.65,1303,1.65,1304,1.412,1305,1.412,1306,1.412,1307,1.412,1308,1.65,1309,1.65,1310,1.65,1311,1.65,1312,1.65,1313,1.65,1314,1.65,1315,1.65,1316,1.65,1317,1.412,1318,1.65,1319,1.65,1320,1.412,1321,1.65,1322,1.412,1323,2.647,1324,1.65,1325,1.412,1326,1.412,1327,1.65,1328,1.65,1329,1.65,1330,1.65,1331,1.412,1332,1.65,1333,3.479,1334,2.724,1335,3.456,1336,2.647,1337,2.332,1338,2.332,1339,2.332,1340,2.332,1341,1.65,1342,1.65,1343,1.65,1344,1.65,1345,4.118,1346,4.05,1347,2.724,1348,2.332,1349,2.332,1350,3.456,1351,3.456,1352,2.332,1353,2.724,1354,2.724,1355,2.724,1356,2.724,1357,1.412,1358,1.412,1359,1.412,1360,1.412,1361,1.412,1362,1.65,1363,2.724,1364,1.65,1365,3.479,1366,1.65,1367,1.65,1368,1.65,1369,1.65,1370,1.65,1371,1.65,1372,1.65]],["title/components/ResetLinkComponent.html",[0,0.417,109,0.945]],["body/components/ResetLinkComponent.html",[0,0.504,1,0.987,2,1.155,3,0.219,4,0.102,5,0.789,6,0.789,7,0.789,8,0.789,9,0.102,11,1.356,13,0.789,14,2.117,15,1.906,16,1.155,18,1.096,20,1.096,22,0.116,23,0.413,24,0.641,25,0.674,26,1.948,29,3.053,30,0.504,32,0.213,35,0.459,37,0.231,38,0.021,39,0.277,40,0.301,41,0.231,43,0.737,44,1.318,49,0.984,50,1.143,51,1.529,52,1.285,54,0.415,56,0.665,59,1.263,60,0.984,61,1.41,63,0.231,64,0.116,65,0.018,73,0.71,74,1.218,75,1.218,76,0.789,77,1.908,78,0.789,80,0.789,81,0.64,82,0.789,83,0.64,84,0.789,85,0.64,86,0.789,87,1.218,88,0.607,89,0.789,90,0.64,91,0.789,92,0.64,93,0.789,94,0.576,95,0.674,96,0.789,97,0.607,98,0.789,99,0.64,100,0.71,101,0.789,102,0.546,103,0.789,104,0.987,105,1.744,106,0.789,107,0.607,108,0.789,109,1.285,110,1.71,111,0.789,112,0.64,113,0.789,114,0.607,115,0.607,116,0.789,117,0.789,118,0.006,119,0.01,120,0.006,171,0.984,191,1.465,192,1.76,195,1.596,229,4.553,238,1.155,254,0.984,255,1.71,309,1.155,317,1.671,351,1.356,358,1.263,362,2.554,363,1.263,364,1.518,370,2.501,379,1.76,380,2.536,399,1.263,427,2.092,445,3.416,446,2.088,447,1.181,448,1.263,475,2.871,480,2.501,488,1.71,516,2.378,520,1.71,535,2.871,646,3.052,699,1.356,700,1.356,704,1.356,714,1.356,716,1.465,733,1.263,749,1.356,829,1.356,831,1.596,843,3.379,862,2.462,865,4.19,870,3.102,959,4.528,966,1.979,986,3.351,992,1.465,995,1.465,996,1.465,1106,1.979,1248,4.19,1249,4.19,1255,3.726,1279,1.596,1280,1.979,1282,1.979,1283,1.979,1284,1.979,1285,1.979,1286,2.715,1287,1.76,1288,1.76,1291,1.76,1292,1.76,1293,1.76,1295,1.979,1296,1.979,1297,1.979,1298,1.979,1299,1.979,1300,1.979,1304,1.979,1305,1.979,1336,1.76,1346,2.715,1350,4.19,1351,4.19,1352,3.053,1373,5.646,1374,1.979,1375,4.355,1376,3.567,1377,4.355,1378,5.29,1379,3.567,1380,4.355,1381,3.379,1382,3.728,1383,3.379,1384,3.567,1385,2.312,1386,2.312,1387,2.312,1388,2.312,1389,2.312,1390,2.312,1391,3.567,1392,2.312,1393,2.312,1394,2.312,1395,2.312,1396,2.312,1397,2.312,1398,2.312,1399,2.312,1400,2.312,1401,2.312,1402,2.312,1403,3.567,1404,2.312,1405,2.312,1406,2.312,1407,2.312,1408,2.312,1409,2.312,1410,2.312,1411,2.312,1412,2.312,1413,2.312,1414,2.312,1415,3.567,1416,3.567,1417,2.312,1418,2.312,1419,2.312,1420,2.312]],["title/injectables/ResetPasswordService.html",[267,0.477,1383,2.486]],["body/injectables/ResetPasswordService.html",[3,0.242,4,0.211,9,0.211,22,0.242,23,0.688,24,1.068,25,1.4,30,0.84,32,0.443,35,0.455,37,0.593,38,0.02,39,0.378,40,0.338,41,0.593,43,0.723,56,0.64,63,0.479,64,0.242,65,0.037,118,0.013,119,0.016,120,0.013,122,1.555,194,1.73,267,0.788,269,1.555,279,1.73,286,1.196,399,2.623,893,2.788,942,2.044,944,2.871,949,2.623,1382,5.527,1383,4.103,1421,5.776,1422,4.111,1423,4.803,1424,5.945,1425,4.803,1426,4.803,1427,4.803,1428,3.315,1429,3.043]],["title/injectables/SendResetLinkService.html",[267,0.477,845,2.486]],["body/injectables/SendResetLinkService.html",[3,0.24,4,0.209,9,0.209,22,0.24,23,0.684,24,1.062,25,1.387,30,0.836,32,0.439,35,0.453,37,0.59,38,0.02,39,0.376,40,0.336,41,0.59,43,0.716,56,0.636,63,0.475,64,0.24,65,0.037,110,1.766,118,0.013,119,0.016,120,0.013,122,1.54,194,1.714,267,0.784,269,1.54,279,1.714,286,1.185,399,2.599,845,4.08,893,2.781,942,2.025,944,2.862,949,2.599,1428,3.284,1429,3.015,1430,5.757,1431,4.073,1432,5.911,1433,4.758,1434,5.911,1435,4.758,1436,4.758,1437,4.758,1438,4.758]],["title/components/ShareProposalComponent.html",[0,0.417,112,0.996]],["body/components/ShareProposalComponent.html",[0,0.591,1,0.836,2,1.41,3,0.152,4,0.133,5,1.031,6,1.031,7,1.031,8,1.031,9,0.133,13,1.031,14,2.202,15,1.984,16,0.978,18,1.338,20,1.338,22,0.152,23,0.504,24,1.065,25,1.727,30,0.616,32,0.279,35,0.459,37,0.435,38,0.02,39,0.356,40,0.351,41,0.435,43,0.655,44,1.085,45,2.299,46,2.299,49,1.286,50,1.143,51,1.143,52,1.088,56,0.602,60,1.286,61,1.653,62,1.772,63,0.302,64,0.152,65,0.024,73,0.928,74,1.487,75,1.487,76,1.031,77,1.908,78,1.031,80,1.031,81,0.836,82,1.031,83,0.836,84,1.031,85,0.836,86,1.031,87,1.487,88,0.793,89,1.031,90,0.836,91,1.031,92,0.836,93,1.031,94,0.753,95,0.881,96,1.031,97,0.793,98,1.031,99,0.836,100,0.928,101,1.031,102,0.714,103,1.031,104,0.836,105,0.836,106,1.031,107,0.793,108,1.031,109,0.793,110,0.793,111,1.031,112,1.546,113,2.299,114,0.793,115,1.341,116,1.031,117,1.031,118,0.008,119,0.012,120,0.008,170,1.914,171,1.854,220,5.049,221,4.579,238,1.41,247,1.215,286,1.272,291,3.181,298,1.448,309,1.41,317,1.908,365,2.299,366,2.68,367,4.372,368,3.728,370,2.855,373,4.372,375,2.379,379,2.299,380,2.449,389,2.586,390,2.586,391,3.728,392,3.728,395,2.586,396,2.586,399,1.65,426,3.728,427,2.554,428,3.728,446,2.449,488,1.448,1317,3.728,1439,5.108,1440,4.356,1441,4.356,1442,3.021,1443,3.021,1444,3.021,1445,3.021,1446,3.021,1447,3.021,1448,3.021,1449,4.356,1450,4.356,1451,4.356,1452,3.021,1453,4.356,1454,3.021,1455,3.021,1456,3.021,1457,3.021]],["title/injectables/SocialMediaAuthService.html",[267,0.477,441,2.112]],["body/injectables/SocialMediaAuthService.html",[3,0.164,4,0.143,9,0.143,22,0.164,23,0.532,24,1.137,25,0.95,30,0.65,32,0.3,35,0.483,37,0.532,38,0.021,39,0.339,40,0.329,41,0.532,43,0.953,44,1.145,49,1.387,50,0.856,51,0.856,52,1.174,54,1.169,56,0.657,63,0.325,64,0.164,65,0.025,115,0.856,118,0.009,119,0.013,120,0.009,122,1.055,194,1.174,234,1.78,247,1.31,254,1.387,267,0.609,269,1.055,271,3.499,275,3.553,279,1.174,281,1.001,286,1.62,294,2.197,315,4.21,345,3.499,387,2.721,438,3.116,440,2.065,441,2.696,443,4.428,480,2.348,482,3.375,483,2.065,501,3.173,520,1.563,521,2.249,522,2.249,523,2.065,524,2.249,525,2.249,893,2.326,942,1.387,944,1.956,949,2.511,1070,2.48,1429,2.065,1458,5.926,1459,2.79,1460,4.559,1461,3.935,1462,4.952,1463,4.952,1464,4.952,1465,4.952,1466,4.598,1467,3.935,1468,3.259,1469,3.259,1470,3.259,1471,3.259,1472,3.259,1473,5.327,1474,3.259,1475,3.259,1476,3.259,1477,3.259,1478,2.79,1479,2.79,1480,3.259,1481,3.259,1482,3.259,1483,2.79,1484,3.259,1485,3.259,1486,3.259,1487,2.79,1488,2.79,1489,2.79,1490,3.935]],["title/components/TeamComponent.html",[0,0.417,114,0.945]],["body/components/TeamComponent.html",[0,0.51,1,1.001,2,1.171,3,0.119,4,0.103,5,0.804,6,0.804,7,0.804,8,0.804,9,0.103,11,1.381,13,0.804,14,2.123,15,1.912,16,1.171,18,1.111,20,1.111,22,0.119,23,0.419,24,1.012,25,1.284,26,1.286,28,3.04,30,0.511,32,0.333,35,0.472,37,0.235,38,0.021,39,0.385,40,0.334,41,0.235,43,0.663,44,1.231,50,1.156,51,1.156,52,1.303,54,0.65,56,0.668,60,1.002,61,1.426,63,0.235,64,0.119,65,0.018,73,0.723,74,1.235,75,1.235,76,0.804,77,1.821,78,0.804,80,0.804,81,0.651,82,0.804,83,0.651,84,0.804,85,0.651,86,1.504,87,1.235,88,0.618,89,0.804,90,0.651,91,0.804,92,0.651,93,0.804,94,0.586,95,0.686,96,0.804,97,0.618,98,0.804,99,0.651,100,0.723,101,0.804,102,0.556,103,0.804,104,0.651,105,1.001,106,0.804,107,0.618,108,0.804,109,0.618,110,0.618,111,0.804,112,0.651,113,0.804,114,1.297,115,1.774,116,0.804,117,0.804,118,0.006,119,0.01,120,0.006,143,2.699,146,2.699,151,1.792,152,1.792,153,1.381,154,1.792,171,1.002,195,1.625,227,2.496,233,1.381,234,1.286,235,1.286,238,1.171,247,1.987,254,1.002,255,1.129,275,3.46,286,0.586,294,0.848,309,1.171,317,1.687,334,1.492,351,1.381,358,1.286,362,2.121,363,1.975,364,1.539,370,2.724,375,1.539,380,2.557,427,2.121,437,1.203,438,2.724,439,1.625,440,1.492,445,3.438,446,2.112,447,1.203,448,1.286,455,3.411,459,1.286,475,1.381,477,2.79,480,2.724,483,1.492,486,3.04,488,1.129,516,1.286,532,1.492,646,1.975,714,1.381,716,1.492,733,1.286,749,1.381,829,1.381,843,3.411,862,1.625,870,3.131,941,2.753,986,3.131,987,1.625,992,1.492,994,1.625,995,1.492,996,1.492,1250,3.77,1252,3.77,1253,3.77,1255,3.761,1258,2.015,1259,2.79,1286,1.792,1287,1.792,1288,1.792,1289,2.015,1291,1.792,1292,1.792,1293,1.792,1306,2.015,1307,2.015,1320,2.015,1322,2.015,1323,1.792,1325,2.015,1326,2.015,1331,2.015,1335,2.015,1336,1.792,1337,2.015,1338,2.015,1339,2.015,1340,2.015,1345,3.096,1346,2.753,1348,3.096,1349,3.096,1357,2.015,1358,2.015,1359,2.015,1360,2.015,1361,2.015,1491,2.015,1492,4.404,1493,3.617,1494,4.404,1495,3.77,1496,3.617,1497,2.354,1498,2.354,1499,2.354,1500,2.354,1501,2.354,1502,2.354,1503,2.354,1504,2.354,1505,2.354,1506,2.354,1507,2.354,1508,2.354,1509,2.354,1510,2.354,1511,2.354,1512,2.354,1513,2.354,1514,2.354,1515,2.354,1516,2.354,1517,2.354,1518,2.354,1519,2.354,1520,2.354,1521,2.354,1522,2.354,1523,2.354,1524,2.354]],["title/classes/Teams.html",[65,0.028,375,1.533]],["body/classes/Teams.html",[3,0.257,4,0.225,9,0.225,22,0.257,23,0.715,24,1.289,32,0.569,35,0.468,37,0.51,38,0.02,39,0.449,40,0.378,41,0.51,54,1.192,64,0.257,65,0.04,118,0.014,119,0.017,120,0.014,239,2.668,290,2.306,295,3.89,296,2.994,304,3.528,307,3.528,375,2.628,1525,4.375,1526,5.111,1527,5.111,1528,5.111]],["title/injectables/TeamsService.html",[267,0.477,1529,2.741]],["body/injectables/TeamsService.html",[3,0.244,4,0.213,9,0.213,22,0.244,23,0.692,30,0.845,32,0.447,35,0.457,37,0.484,38,0.02,39,0.308,40,0.34,41,0.484,43,0.729,50,1.273,51,1.273,54,0.871,56,0.729,63,0.484,64,0.244,65,0.038,118,0.013,119,0.016,120,0.013,122,1.569,184,2.324,194,1.746,267,0.793,269,1.569,279,1.746,281,1.489,286,1.207,375,2.545,893,2.607,898,3.507,942,2.063,944,2.063,947,3.071,1529,4.551,1530,4.149,1531,5.979,1532,6.484,1533,5.979,1534,4.848,1535,4.848,1536,4.848,1537,4.848,1538,4.848]],["title/injectables/TestServiceService.html",[267,0.477,381,2.486]],["body/injectables/TestServiceService.html",[3,0.225,4,0.196,9,0.196,22,0.225,23,0.658,30,0.804,32,0.576,35,0.44,38,0.02,40,0.254,43,0.673,44,1.114,50,1.174,51,1.174,56,0.612,63,0.446,64,0.225,65,0.035,115,1.174,118,0.012,119,0.015,120,0.012,122,1.447,125,3.665,171,1.902,238,2.35,267,0.753,269,1.447,279,1.61,291,3.153,366,2.143,375,2.419,381,3.923,387,2.284,446,3.255,447,3.545,449,3.085,459,3.413,488,2.725,978,3.085,1002,3.923,1539,5.629,1540,3.827,1541,6.576,1542,4.471,1543,4.471,1544,6.249,1545,5.684,1546,5.684,1547,4.471,1548,4.471,1549,4.471]],["title/injectables/TransferDataService.html",[267,0.477,438,1.84]],["body/injectables/TransferDataService.html",[3,0.247,4,0.215,9,0.215,22,0.247,23,0.697,24,0.881,25,1.9,30,0.851,35,0.425,37,0.49,38,0.021,39,0.312,40,0.279,41,0.49,43,0.738,44,1.222,56,0.648,63,0.49,64,0.247,65,0.038,118,0.013,119,0.016,120,0.013,122,1.588,184,2.352,238,1.588,267,0.65,269,1.588,374,4.198,438,3.077,477,4.13,532,3.108,949,2.679,1550,5.579,1551,4.198,1552,6.023,1553,6.023,1554,4.905,1555,4.905,1556,6.023,1557,4.905,1558,4.905,1559,4.905,1560,4.905,1561,4.905]],["title/classes/User.html",[65,0.028,294,1.297]],["body/classes/User.html",[3,0.236,4,0.206,9,0.206,22,0.236,23,0.678,24,1.328,32,0.54,35,0.486,37,0.469,38,0.02,39,0.438,40,0.41,41,0.469,54,1.262,64,0.236,65,0.037,115,1.808,118,0.013,119,0.016,120,0.013,239,2.569,290,2.118,294,2.111,295,3.572,296,2.883,298,3.064,304,4.045,307,4.045,437,3.419,469,3.239,1562,4.018,1563,4.694,1564,4.694,1565,4.694,1566,4.694,1567,4.694]],["title/injectables/UserLoginService.html",[267,0.477,453,1.967]],["body/injectables/UserLoginService.html",[3,0.166,4,0.145,9,0.145,22,0.166,23,0.537,24,1.218,30,0.657,32,0.305,35,0.489,37,0.581,38,0.021,39,0.37,40,0.362,41,0.581,43,0.957,44,1.157,49,1.407,50,0.868,51,0.868,52,1.191,54,1.303,56,0.578,63,0.33,64,0.166,65,0.026,105,1.989,118,0.009,119,0.013,120,0.009,122,1.07,194,1.191,247,1.329,267,0.616,269,1.07,271,3.534,272,2.516,279,1.191,281,1.015,286,1.584,294,2.209,315,4.508,345,3.534,387,2.974,453,2.536,482,3.401,893,2.341,942,1.407,944,1.976,1067,2.83,1070,2.516,1460,4.595,1461,3.975,1462,4.983,1463,4.983,1464,4.983,1465,3.975,1467,3.975,1478,2.83,1479,2.83,1483,2.83,1487,2.83,1488,2.83,1489,2.83,1490,3.975,1568,5.333,1569,2.83,1570,4.644,1571,4.644,1572,3.306,1573,4.644,1574,3.306,1575,3.306,1576,3.306,1577,3.306,1578,4.644,1579,3.306,1580,3.306,1581,3.306,1582,3.306,1583,3.306,1584,3.306,1585,3.306,1586,3.306,1587,3.306,1588,4.644,1589,3.306,1590,3.306]],["title/injectables/UserRegisterService.html",[146,1.967,267,0.477]],["body/injectables/UserRegisterService.html",[3,0.247,4,0.216,9,0.216,22,0.247,25,1.433,30,0.853,32,0.453,35,0.425,37,0.602,38,0.021,39,0.384,40,0.28,41,0.602,43,0.74,56,0.649,63,0.491,64,0.247,65,0.038,118,0.013,119,0.016,120,0.013,122,1.592,146,3.294,194,1.771,267,0.8,269,1.592,279,1.771,281,1.51,286,1.502,893,2.623,942,2.092,944,2.092,947,3.115,949,2.685,951,4.208,1428,3.393,1429,3.115,1568,4.966,1591,4.208,1592,6.032,1593,4.917,1594,6.032,1595,4.917,1596,4.917,1597,4.917]],["title/injectables/UserService.html",[267,0.477,1259,2.282]],["body/injectables/UserService.html",[3,0.252,4,0.22,9,0.22,30,0.709,32,0.462,35,0.353,37,0.5,38,0.021,39,0.319,40,0.285,41,0.5,56,0.657,63,0.5,64,0.252,65,0.039,118,0.014,119,0.017,120,0.014,122,1.623,194,1.805,267,0.809,269,1.623,279,1.805,281,1.539,286,1.639,294,1.805,893,2.753,942,2.133,944,2.597,1259,3.867,1323,3.814,1598,4.29,1599,5.012,1600,5.012,1601,5.012,1602,5.012,1603,5.012,1604,5.012,1605,5.012,1606,5.012]],["title/injectables/ValidateTokenService.html",[267,0.477,1381,2.486]],["body/injectables/ValidateTokenService.html",[3,0.247,4,0.216,9,0.216,22,0.247,25,1.433,30,0.853,32,0.453,35,0.425,37,0.602,38,0.021,39,0.384,40,0.28,41,0.602,43,0.74,56,0.649,63,0.491,64,0.247,65,0.038,118,0.013,119,0.016,120,0.013,122,1.592,194,1.771,267,0.8,269,1.592,279,1.771,281,1.51,286,1.225,893,2.735,942,2.092,944,2.567,949,2.685,1381,4.163,1428,3.393,1429,3.115,1607,5.585,1608,4.208,1609,6.525,1610,4.917,1611,6.032,1612,4.917,1613,4.917,1614,4.917]],["title/coverage.html",[1615,4.218]],["body/coverage.html",[0,0.822,1,0.843,9,0.134,10,2.609,11,1.788,12,2.609,38,0.021,40,0.173,57,1.788,65,0.052,81,0.843,83,0.843,85,0.843,88,0.8,90,0.843,92,0.843,94,0.759,97,0.8,99,0.843,102,0.72,104,0.843,107,0.8,109,0.8,110,0.8,112,0.843,114,0.8,118,0.008,119,0.012,120,0.008,121,2.609,142,1.931,143,1.665,144,1.931,145,1.788,146,1.665,167,2.32,168,2.32,191,1.931,196,2.32,204,1.788,220,2.32,221,2.104,223,1.788,229,2.104,238,0.987,267,0.937,268,2.32,270,2.609,289,1.788,291,3.188,292,2.609,294,1.098,308,2.609,365,3.336,366,1.461,375,1.297,381,2.104,434,1.788,436,3.543,438,1.557,441,1.788,443,1.931,453,1.665,457,1.788,542,2.609,548,1.788,549,2.609,554,2.609,611,2.104,756,2.104,757,2.609,758,2.609,775,2.609,836,2.609,837,2.609,845,2.104,878,2.609,879,2.609,939,2.609,940,2.609,946,1.931,952,2.609,978,5.211,1028,2.609,1045,2.609,1046,2.32,1048,2.609,1049,2.609,1110,2.609,1111,2.609,1129,2.609,1139,2.609,1175,2.609,1186,2.609,1244,2.609,1259,1.931,1279,2.104,1373,2.609,1374,2.609,1381,2.104,1383,2.104,1421,2.609,1422,2.609,1430,2.609,1431,2.609,1458,2.609,1459,2.609,1491,2.609,1525,2.609,1529,2.32,1530,2.609,1539,2.609,1540,2.609,1550,2.609,1551,2.609,1562,2.609,1568,3.336,1569,2.609,1591,2.609,1598,2.609,1607,2.609,1608,2.609,1615,2.609,1616,3.048,1617,3.048,1618,3.048,1619,5.133,1620,5.613,1621,3.048,1622,2.609,1623,5.946,1624,6.192,1625,6.528,1626,5.133,1627,3.048,1628,5.133,1629,4.383,1630,4.383,1631,3.048,1632,4.383,1633,3.048,1634,3.048,1635,3.048,1636,3.048,1637,3.048,1638,3.048,1639,3.048,1640,2.609,1641,2.609,1642,5.613,1643,3.752,1644,2.609,1645,3.752,1646,2.609,1647,2.609,1648,3.048,1649,3.048]],["title/dependencies.html",[131,2.992,1650,3.001]],["body/dependencies.html",[38,0.021,63,0.488,118,0.013,119,0.016,120,0.013,131,3.377,133,3.724,156,5.148,157,4.577,171,2.082,184,2.346,199,5.148,200,3.724,201,4.189,226,4.577,227,4.151,228,3.724,233,2.87,234,2.672,235,2.672,254,2.082,613,3.724,1651,4.894,1652,6.215,1653,4.894,1654,6.014,1655,4.894,1656,4.894,1657,4.894,1658,4.189,1659,4.894,1660,4.894,1661,4.894,1662,4.894,1663,4.894,1664,4.894,1665,4.894,1666,4.894,1667,4.894,1668,4.894,1669,4.894,1670,4.894,1671,4.894,1672,4.894]],["title/miscellaneous/functions.html",[1673,2.071,1674,3.71]],["body/miscellaneous/functions.html",[22,0.285,37,0.565,38,0.019,39,0.36,41,0.565,118,0.015,119,0.018,120,0.015,1279,4.526,1622,4.841,1673,3.904,1674,4.841,1675,5.656,1676,5.656,1677,6.557,1678,5.656]],["title/index.html",[22,0.151,1679,3.001,1680,3.001]],["body/index.html",[0,0.738,4,0.205,15,1.293,38,0.016,39,0.297,118,0.013,119,0.016,120,0.013,126,3.999,148,3.556,238,1.513,397,3.999,647,3.999,819,5.72,1039,5.002,1075,3.999,1652,3.999,1658,5.459,1681,5.844,1682,4.673,1683,6.377,1684,4.673,1685,4.673,1686,5.844,1687,6.88,1688,7.12,1689,4.673,1690,4.673,1691,4.673,1692,4.673,1693,4.673,1694,4.673,1695,4.673,1696,4.673,1697,4.673,1698,6.377,1699,6.377,1700,4.673,1701,6.88,1702,4.673,1703,4.673,1704,4.673,1705,4.673,1706,4.673,1707,4.673,1708,3.999,1709,5.844,1710,6.682,1711,5.844,1712,5.844,1713,4.673,1714,4.673,1715,4.673,1716,4.673,1717,6.377,1718,4.673,1719,4.673,1720,4.673]],["title/modules.html",[130,3.122]],["body/modules.html",[38,0.018,118,0.016,119,0.018,120,0.016,129,3.958,130,3.633,141,3.633,157,4.364,1721,5.734,1722,5.734,1723,6.61,1724,5.734,1725,5.734]],["title/overview.html",[1726,4.218]],["body/overview.html",[1,1.635,2,1.289,38,0.02,73,1.223,81,1.898,83,1.635,85,1.635,88,1.551,90,1.635,92,1.635,94,1.472,97,1.551,99,1.635,102,1.396,104,1.635,107,1.551,109,1.551,110,1.045,112,1.635,114,1.551,118,0.011,119,0.014,120,0.011,128,2.747,129,5.276,130,2.522,131,2.747,132,3.407,133,3.029,134,3.407,135,3.029,136,3.407,137,3.407,138,3.407,139,3.407,140,3.407,141,3.744,142,3.744,143,3.227,144,3.744,145,3.466,146,3.227,147,4.512,148,3.029,252,2.747,269,1.289,290,1.796,434,2.334,670,2.522,707,3.407,1726,3.407,1727,3.98,1728,3.98,1729,3.98,1730,3.98]],["title/routes.html",[252,3.401]],["body/routes.html",[38,0.018,118,0.016,119,0.018,120,0.016,252,4.059]],["title/classes/teamList.html",[65,0.028,946,2.282]],["body/classes/teamList.html",[3,0.269,4,0.235,9,0.235,22,0.269,23,0.734,24,1.14,32,0.493,35,0.447,37,0.534,38,0.019,39,0.34,40,0.361,41,0.534,54,1.216,64,0.269,65,0.042,118,0.015,119,0.017,120,0.015,290,2.413,399,2.921,946,4.021,1495,5.792,1640,4.578,1731,5.349,1732,5.349,1733,5.349,1734,5.349]],["title/miscellaneous/variables.html",[1673,2.071,1735,3.71]],["body/miscellaneous/variables.html",[22,0.261,38,0.02,40,0.394,50,1.753,51,1.753,52,2.244,118,0.014,119,0.017,120,0.014,247,2.086,298,2.487,1641,4.441,1643,5.93,1644,4.441,1645,4.441,1646,5.334,1647,5.334,1673,3.581,1708,5.334,1735,4.441,1736,6.232,1737,5.188,1738,5.188,1739,5.188,1740,5.188,1741,6.232]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"overview.html":{}}}],["10",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1652,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["100px",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["120",{"_index":1417,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["15",{"_index":1728,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1727,"title":{},"body":{"overview.html":{}}}],["180px",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1fr",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200px",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{}}}],["236",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{}}}],["23px",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{}}}],["25px",{"_index":1420,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["2a$10$lid/pd76qod0ctife1nfg.ruhb56krgfxocqteajk24oayabl",{"_index":1614,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["3.1.2",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["380px",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1524,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["400px",{"_index":1286,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["50",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["500",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["5px",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["65",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{}}}],["70",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["75",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1730,"title":{},"body":{"overview.html":{}}}],["80",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["9",{"_index":1729,"title":{},"body":{"overview.html":{}}}],["9.1.0",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["936da5,#58482e",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":895,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["absolute",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accessors",{"_index":1256,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":959,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["address",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{}}}],["af4261",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["alert(\"error",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{}}}],["align",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":880,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl",{"_index":881,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["already",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":1658,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["angular/compiler",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/grid",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/menu",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1416,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":1069,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["appmodule",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{}}}],["arial",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":1702,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":444,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1459,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1475,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1476,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1466,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:24",{"_index":1474,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1468,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:47",{"_index":1472,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:51",{"_index":1471,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:56",{"_index":1470,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:62",{"_index":1469,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["authenticateduser",{"_index":271,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authenticationservice",{"_index":1053,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authorization",{"_index":272,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorizationservice",{"_index":268,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["authreq",{"_index":1065,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["autologin",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1693,"title":{},"body":{"index.html":{}}}],["available",{"_index":1725,"title":{},"body":{"modules.html":{}}}],["background",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1583,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["basic",{"_index":1070,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["black",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["block",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":858,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":1723,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["buffer",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["build",{"_index":1701,"title":{},"body":{"index.html":{}}}],["button",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["cancel",{"_index":1128,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate",{"_index":557,"title":{},"body":{"components/FeedComponent.html":{}}}],["canupdate=false",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1123,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1694,"title":{},"body":{"index.html":{}}}],["character",{"_index":1125,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":65,"title":{"classes/Comment.html":{},"classes/Feed.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":290,"title":{},"body":{"classes/Comment.html":{},"classes/Feed.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":273,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1683,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closed",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["cluster_appmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1696,"title":{},"body":{"index.html":{}}}],["color",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["color:#3f51b5",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#e9ebee",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["comment",{"_index":289,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":310,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":311,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":305,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":83,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":312,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid",{"_index":313,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror",{"_index":558,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenterror:string",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":314,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":559,"title":{},"body":{"components/FeedComponent.html":{}}}],["comments:comment",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage",{"_index":560,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":568,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility",{"_index":561,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1403,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after1____\",this.user",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"after2____\",this.user",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"before____\",this.user",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"error",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["console.log(\"inside",{"_index":949,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["console.log(\"is",{"_index":1511,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"response",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"results\",this.userdata",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1514,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1173,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log('the",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(data",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1168,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":862,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1484,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(responce",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(responce.mesaage",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.comment",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1447,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.filteredoptions",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1455,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1516,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1234,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":892,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":958,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1051,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(description",{"_index":1131,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":379,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(getteam",{"_index":1258,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":942,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(id",{"_index":295,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(posts",{"_index":551,"title":{},"body":{"classes/Feed.html":{}}}],["constructor(private",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["constructor(proposalwork",{"_index":577,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(router",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(sendresetlink",{"_index":844,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(startdate",{"_index":762,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1731,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1176,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":974,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1118,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["content",{"_index":1068,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1615,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1461,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1467,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createproposalcomponent",{"_index":85,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createurl",{"_index":1140,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1160,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creationdate",{"_index":293,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":306,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["crimson",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["cursor",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["data.id=id",{"_index":1165,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1170,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1172,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":440,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1551,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1554,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1555,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":803,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1409,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1405,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":860,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1428,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["delay",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{}}}],["delete(id",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["deletecomment",{"_index":316,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1199,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1240,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1187,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1194,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1201,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1242,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1188,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1228,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":576,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteproposal=new",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{}}}],["deleteurl",{"_index":1141,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleteurl=\"http://localhost:8080/proposal/delete",{"_index":1163,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["deleting",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["delproposal",{"_index":569,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":369,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["description:string",{"_index":1184,"title":{},"body":{"classes/Proposal.html":{}}}],["dev",{"_index":1690,"title":{},"body":{"index.html":{}}}],["development",{"_index":1685,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":370,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog,public",{"_index":400,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":57,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dialogtitle",{"_index":371,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1700,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1705,"title":{},"body":{"index.html":{}}}],["disliking",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{}}}],["dist",{"_index":1704,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1596,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1570,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1573,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1592,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1594,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1714,"title":{},"body":{"index.html":{}}}],["edate",{"_index":778,"title":{},"body":{"components/FilterComponent.html":{}}}],["eedate",{"_index":808,"title":{},"body":{"components/FilterComponent.html":{}}}],["eedate:date",{"_index":806,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1126,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":437,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emitdata",{"_index":1552,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1553,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["end",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":759,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":772,"title":{},"body":{"classes/FeedParams.html":{}}}],["enter",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["environment",{"_index":1643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["error'},{'name",{"_index":89,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":543,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":544,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["errorcomponent",{"_index":88,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":452,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eventemitter",{"_index":325,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["execute",{"_index":1711,"title":{},"body":{"index.html":{}}}],["exists",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":801,"title":{},"body":{"components/FilterComponent.html":{}}}],["f",{"_index":1257,"title":{},"body":{"components/RegisterComponent.html":{}}}],["false",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":548,"title":{"classes/Feed.html":{}},"body":{"classes/Feed.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["feed'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":555,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":556,"title":{},"body":{"components/FeedComponent.html":{}}}],["feedcomponent",{"_index":90,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":756,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["field",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1695,"title":{},"body":{"index.html":{}}}],["fill",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":776,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":777,"title":{},"body":{"components/FilterComponent.html":{}}}],["filtercomponent",{"_index":92,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredoptions",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filteredteams",{"_index":1247,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filterusers",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fixed",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1707,"title":{},"body":{"index.html":{}}}],["flag=false",{"_index":1453,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1449,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":976,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["following",{"_index":1119,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1450,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1437,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["forgetpasswordcomponent",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":840,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":856,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgot",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":449,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":445,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1446,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1545,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1548,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1443,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1674,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1716,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1698,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1682,"title":{},"body":{"index.html":{}}}],["getall",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["getallnextpost",{"_index":886,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":896,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":887,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":899,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1195,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1203,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1238,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1189,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1224,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1254,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getf",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1196,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1205,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1236,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1190,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1227,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":799,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1462,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposalsservice",{"_index":142,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"coverage.html":{},"overview.html":{}}}],["getteam",{"_index":941,"title":{},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["getteam():observable",{"_index":948,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["getteamnextpost",{"_index":888,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":901,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":889,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":903,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1532,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1537,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getteamservice",{"_index":143,"title":{"injectables/GetTeamService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":1679,"title":{"index.html":{}},"body":{}}],["getyournextpost",{"_index":890,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":905,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":891,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":907,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1719,"title":{},"body":{"index.html":{}}}],["google",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["googleloginprovider",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":957,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1724,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["h1",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["handle(responce",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handlelogin",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["happened",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked",{"_index":562,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{}}}],["headers",{"_index":1067,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:50px",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:60px",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:auto",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{}}}],["help",{"_index":1717,"title":{},"body":{"index.html":{}}}],["here",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{}}}],["hidden",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["hide",{"_index":1248,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1249,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":953,"title":{},"body":{"components/HomeComponent.html":{}}}],["home',component:homecomponent",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":954,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":955,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":97,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":944,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["http://localhost:4200",{"_index":1692,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1584,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1217,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1213,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1211,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":909,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":915,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":912,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1152,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1154,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1156,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1158,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1535,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1219,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1215,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1221,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":947,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":893,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["httpclientmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1061,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1057,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1062,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1060,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1046,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1055,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1410,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":304,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1185,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1169,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(data!=null",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data1==\"email",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status!=200",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(error.status==200",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(flag",{"_index":1454,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1457,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1456,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(team.id==item.id",{"_index":1452,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.loginform.valid",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.post.user.id==this.userid",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(user!=null",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["image:linear",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":309,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"classes/teamList.html":{}}}],["initialiseformgroup",{"_index":1541,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["injectable",{"_index":267,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1557,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"overview.html":{}}}],["input",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["input,output,eventemitter",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":318,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["intercept",{"_index":1050,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1054,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1045,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1049,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1058,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1052,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1047,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":434,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":435,"title":{},"body":{"interfaces/DialogData.html":{}}}],["invalid",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1108,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":964,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":956,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":841,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1463,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{}}}],["item.value.tolowercase().includes(this.selectedteam.tolowercase",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iteration",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1429,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["json.parse(this.authenticateduser",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["json.stringify(data1",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["json.stringify(result",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jsonpipe",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1713,"title":{},"body":{"index.html":{}}}],["key",{"_index":1544,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["landingpagecomponent",{"_index":99,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{}}}],["lato",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1127,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1121,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{}}}],["likesetup",{"_index":570,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":865,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["link'},{'name",{"_index":111,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1375,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1376,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1374,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:19",{"_index":1393,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1395,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1392,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1394,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1390,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:24",{"_index":1384,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:27",{"_index":1389,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:33",{"_index":1385,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:59",{"_index":1388,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:67",{"_index":1387,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:74",{"_index":1386,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.service",{"_index":855,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["link.service.ts",{"_index":1431,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["link.service.ts:10",{"_index":1436,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:12",{"_index":1435,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link.service.ts:8",{"_index":1433,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["link/reset",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":298,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1250,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedin",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1569,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1581,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1582,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1580,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1571,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:21",{"_index":1574,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:31",{"_index":1572,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1579,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1577,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:45",{"_index":1576,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:51",{"_index":1575,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginservice",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1464,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["long",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1122,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["mandatory",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["map",{"_index":1478,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["matbuttonmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matcher=new",{"_index":857,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["matching",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":380,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1444,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":396,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matdividermodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matgridlistmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matmenumodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":802,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":443,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["message:string",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["minimum",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1673,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1718,"title":{},"body":{"index.html":{}}}],["moz",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1401,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":457,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1518,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":307,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1691,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":563,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":779,"title":{},"body":{"components/FilterComponent.html":{}}}],["next",{"_index":1056,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1073,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1074,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1688,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":451,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":317,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments",{"_index":564,"title":{},"body":{"components/FeedComponent.html":{}}}],["nocomments:boolean=true",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{}}}],["none",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":387,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":296,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes",{"_index":565,"title":{},"body":{"components/FeedComponent.html":{}}}],["numberlikes:number",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":898,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["observer",{"_index":1558,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["occured",{"_index":547,"title":{},"body":{"components/ErrorComponent.html":{},"components/FeedComponent.html":{}}}],["ok",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":571,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":800,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":842,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onsubmit",{"_index":843,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialog",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{}}}],["opendialogshare",{"_index":572,"title":{},"body":{"components/FeedComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["out",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":320,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["overview",{"_index":1726,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1650,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{}}}],["page",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"classes/FeedParams.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["page'},{'name",{"_index":101,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.ts",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["page/comment",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":292,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:1",{"_index":299,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:3",{"_index":302,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":300,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:5",{"_index":301,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:6",{"_index":303,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":308,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:10",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:11",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:12",{"_index":328,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:13",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:14",{"_index":324,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:17",{"_index":322,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:21",{"_index":327,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:29",{"_index":326,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:9",{"_index":323,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":554,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:101",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:125",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:156",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:16",{"_index":579,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:160",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:164",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:17",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:174",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:18",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:19",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:20",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:21",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:22",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:23",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:24",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:25",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:26",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:27",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:28",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:29",{"_index":582,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:30",{"_index":581,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:31",{"_index":580,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:32",{"_index":578,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:33",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:34",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:41",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:50",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:92",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":775,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:14",{"_index":787,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:15",{"_index":796,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:16",{"_index":795,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:17",{"_index":794,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:18",{"_index":798,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:26",{"_index":788,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:27",{"_index":786,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:33",{"_index":789,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:36",{"_index":790,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:61",{"_index":791,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:67",{"_index":793,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1186,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:10",{"_index":1214,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:11",{"_index":1222,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:12",{"_index":1220,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:13",{"_index":1216,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:14",{"_index":1212,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:15",{"_index":1198,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1207,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1210,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1209,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:27",{"_index":1206,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:30",{"_index":1204,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:33",{"_index":1200,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:37",{"_index":1202,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:9",{"_index":1218,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1539,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":773,"title":{},"body":{"classes/FeedParams.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["params.ts",{"_index":758,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:1",{"_index":763,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:3",{"_index":768,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:4",{"_index":765,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:5",{"_index":766,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:6",{"_index":767,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:7",{"_index":770,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":769,"title":{},"body":{"classes/FeedParams.html":{}}}],["parentfunction",{"_index":321,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":785,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":805,"title":{},"body":{"components/FilterComponent.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1411,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":96,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":838,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":839,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":837,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:22",{"_index":853,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":851,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":852,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":846,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":848,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":850,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":849,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":1397,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1422,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1425,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1423,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1426,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":104,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1587,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1418,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["post",{"_index":204,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"classes/Post.html":{},"coverage.html":{}}}],["post.description",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment",{"_index":573,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1229,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror",{"_index":566,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenterror:string",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1191,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1223,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1197,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1208,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1233,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1192,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1226,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlike",{"_index":574,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1231,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1193,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1225,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1145,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1148,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1167,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":144,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":550,"title":{},"body":{"classes/Feed.html":{},"components/FilterComponent.html":{}}}],["private",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["process",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":781,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1706,"title":{},"body":{"index.html":{}}}],["production",{"_index":1708,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1681,"title":{},"body":{"index.html":{}}}],["prop",{"_index":372,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":366,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":87,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.component.css",{"_index":367,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":368,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":365,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:10",{"_index":382,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:11",{"_index":384,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:12",{"_index":390,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:13",{"_index":391,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:14",{"_index":394,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:15",{"_index":392,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:16",{"_index":386,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:17",{"_index":388,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:18",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:19",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:20",{"_index":385,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:21",{"_index":389,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:22",{"_index":383,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:35",{"_index":1442,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{}}}],["proposal.service.ts",{"_index":1139,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:10",{"_index":1153,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:11",{"_index":1159,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:12",{"_index":1157,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:13",{"_index":1147,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:15",{"_index":1151,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:19",{"_index":1149,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:9",{"_index":1155,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposals.service",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["proposals.service.ts",{"_index":879,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:10",{"_index":911,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:11",{"_index":910,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:12",{"_index":914,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:13",{"_index":913,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:14",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:15",{"_index":894,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:18",{"_index":900,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:22",{"_index":897,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":904,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:31",{"_index":902,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:35",{"_index":908,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:41",{"_index":906,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":145,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":567,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{}}}],["protractor",{"_index":1715,"title":{},"body":{"index.html":{}}}],["provide",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":279,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["provider",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["radius",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1720,"title":{},"body":{"index.html":{}}}],["register",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register',component:registercomponent",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register(user",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":1245,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1246,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1591,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:14",{"_index":1595,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:8",{"_index":1593,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["registerform",{"_index":1251,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1465,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1578,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["reload",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["req",{"_index":1059,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1066,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1064,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1415,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["res[\"name",{"_index":1485,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlink",{"_index":1432,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink(data",{"_index":1434,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["resetlink/:token",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":109,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1377,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetpassword",{"_index":1382,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1424,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":1383,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["resp",{"_index":951,"title":{},"body":{"injectables/GetTeamService.html":{},"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response'},{'name",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1255,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/ValidateTokenService.html":{}}}],["rgb(211",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(238",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["routermodule",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["routermodule.forroot(routes",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":252,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1687,"title":{},"body":{"index.html":{}}}],["running",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["rxjs",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1479,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sans",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["sbsi",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1697,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sdate",{"_index":784,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["select",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selected",{"_index":1440,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selected(team",{"_index":1441,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1252,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selecteduser",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selection",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":782,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":866,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["senddata",{"_index":783,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":792,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["sendresetlink",{"_index":847,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendresetlinkservice",{"_index":845,"title":{"injectables/SendResetLinkService.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["sent",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":373,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1142,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1689,"title":{},"body":{"index.html":{}}}],["server",{"_index":1686,"title":{},"body":{"index.html":{}}}],["service",{"_index":374,"title":{},"body":{"components/CreateProposalComponent.html":{},"injectables/TransferDataService.html":{}}}],["service.service",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1540,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":1547,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:17",{"_index":1543,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:7",{"_index":1542,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/get",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/reset",{"_index":1396,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service/send",{"_index":854,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["service/social",{"_index":442,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":439,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service/validate",{"_index":1398,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["sessionstorage.clear",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1490,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1489,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem('data",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1487,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["share",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["shareproposal",{"_index":1146,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1150,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1164,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":112,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1143,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1162,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shine",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{}}}],["signed",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":774,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1473,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(frontend",{"_index":1480,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":441,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["socialuser",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["spacing",{"_index":975,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1124,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1117,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs",{"_index":1112,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":106,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1113,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1114,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1111,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1116,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1115,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":270,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:16",{"_index":278,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:7",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:9",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1622,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":542,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":545,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":546,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":757,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/feed.ts",{"_index":549,"title":{},"body":{"classes/Feed.html":{},"coverage.html":{}}}],["src/app/feed.ts:1",{"_index":552,"title":{},"body":{"classes/Feed.html":{}}}],["src/app/feed.ts:3",{"_index":553,"title":{},"body":{"classes/Feed.html":{}}}],["src/app/forget",{"_index":836,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":878,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":952,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":963,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":960,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":962,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":961,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":291,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":436,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:122",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:147",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":1109,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:48",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:57",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:74",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:91",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1110,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1129,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:1",{"_index":1132,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:3",{"_index":1133,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1134,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:5",{"_index":1135,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:6",{"_index":1136,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1137,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:8",{"_index":1138,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1175,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:1",{"_index":1177,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:3",{"_index":1182,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:4",{"_index":1181,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:5",{"_index":1178,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:6",{"_index":1180,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:7",{"_index":1179,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1244,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:106",{"_index":1263,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1271,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1272,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1270,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1267,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":1268,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":1269,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":1260,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":1266,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:40",{"_index":1273,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1264,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:51",{"_index":1265,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:60",{"_index":1262,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:87",{"_index":1261,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1373,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/get",{"_index":939,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1048,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1421,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/send",{"_index":1430,"title":{},"body":{"injectables/SendResetLinkService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1458,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1550,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1568,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/service/validate",{"_index":1607,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1491,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1502,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1506,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1501,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1505,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1504,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1508,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:26",{"_index":1507,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:27",{"_index":1496,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1500,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:36",{"_index":1503,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:40",{"_index":1499,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:48",{"_index":1497,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:64",{"_index":1498,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1640,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1732,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1733,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1530,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1534,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1533,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1525,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1526,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1527,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1528,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.service.ts",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user.service.ts:7",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.ts",{"_index":1562,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":1563,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":1565,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1566,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":1564,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":1567,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":760,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":771,"title":{},"body":{"classes/FeedParams.html":{}}}],["started",{"_index":1680,"title":{"index.html":{}},"body":{}}],["state",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["stored",{"_index":1703,"title":{},"body":{"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["stroke",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1556,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submit",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":1253,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["subscriber",{"_index":1559,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["successful",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["successmessage",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1391,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1414,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["support",{"_index":1721,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1722,"title":{},"body":{"modules.html":{}}}],["system",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["team',component:teamcomponent",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team.component.css",{"_index":1492,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1493,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["team.service.ts",{"_index":940,"title":{},"body":{"injectables/GetTeamService.html":{},"coverage.html":{}}}],["team.service.ts:13",{"_index":945,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team.service.ts:9",{"_index":943,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["team/team.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":114,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1494,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":761,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":946,"title":{"classes/teamList.html":{}},"body":{"injectables/GetTeamService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1495,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1734,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":882,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":797,"title":{},"body":{"components/FilterComponent.html":{}}}],["teams",{"_index":375,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams:any",{"_index":1509,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teamsservice",{"_index":1529,"title":{"injectables/TeamsService.html":{}},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":883,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility",{"_index":376,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["teamvisibility=true",{"_index":403,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1710,"title":{},"body":{"index.html":{}}}],["testserviceservice",{"_index":381,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1063,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1072,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1522,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1586,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.post.description",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1451,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":807,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.email",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.error=\"email",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":864,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.filteredoptions",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":859,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1549,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getteam.getteam().subscribe",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.delete(`${config.apiurl}/users/${id",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":950,"title":{},"body":{"injectables/GetTeamService.html":{}}}],["this.http.get(`${config.apiurl}/users",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1585,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1538,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgot_password",{"_index":1438,"title":{},"body":{"injectables/SendResetLinkService.html":{}}}],["this.http.post(\"http://localhost:8080/getsocialinfo\",data[\"data1\"],{responsetype:'text",{"_index":1481,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1597,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validate_token",{"_index":1613,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["this.http.post(`${config.apiurl}/users/register",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1482,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1171,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1241,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1243,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1239,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1237,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1230,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1235,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1232,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1166,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1174,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/reset_password",{"_index":1427,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":410,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":863,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform.get('email').value",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe((result",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.message",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"email",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.message=responce.message",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.msg=\"your",{"_index":1413,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":810,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.nocomments=true",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.observer.asobservable",{"_index":1560,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.observer.next(data",{"_index":1561,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1588,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.postcommenterror=\"some",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.prop",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":417,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1486,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1589,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1488,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1483,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1402,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1412,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.responsedialog",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.router.navigate(['/welcome",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.data",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sendresetlink.resetlink(data).subscribe",{"_index":861,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1448,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.sessioncreation.fetchsessiondetails(json.stringify(data1",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.share.emit(this.post",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1515,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1523,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1517,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.filter",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.teams=data",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1404,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.transferdataservice.subscriber.subscribe(data",{"_index":1510,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.update.emit(post",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1445,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1520,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1519,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1513,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=data",{"_index":1512,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1521,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validatetoken.tokenverification(data).subscribe",{"_index":1406,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=false",{"_index":1408,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1407,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["timing",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":377,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1183,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1378,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service",{"_index":1399,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["token.service.ts",{"_index":1608,"title":{},"body":{"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["token.service.ts:12",{"_index":1612,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["token.service.ts:8",{"_index":1610,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification",{"_index":1609,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tokenverification(data",{"_index":1611,"title":{},"body":{"injectables/ValidateTokenService.html":{}}}],["tools",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1477,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["transferdataservice",{"_index":438,"title":{"injectables/TransferDataService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{}}}],["transferdataservice:transferdataservice",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["tslib",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/Feed.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/GetTeamService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SendResetLinkService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"injectables/UserService.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["typepost",{"_index":780,"title":{},"body":{"components/FilterComponent.html":{}}}],["typepost=\"teampost",{"_index":804,"title":{},"body":{"components/FilterComponent.html":{}}}],["udata",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unit",{"_index":1709,"title":{},"body":{"index.html":{}}}],["up",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["update=new",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":575,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateform",{"_index":1439,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1144,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1161,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["uppercase",{"_index":1120,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["upvotescount",{"_index":1130,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":1531,"title":{},"body":{"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1536,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1699,"title":{},"body":{"index.html":{}}}],["user",{"_index":294,"title":{"classes/User.html":{}},"body":{"classes/Comment.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user_name_session_attribute_name",{"_index":1460,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":319,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":453,"title":{"injectables/UserLoginService.html":{}},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["username",{"_index":315,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":146,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1259,"title":{"injectables/UserService.html":{}},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validatetoken",{"_index":1380,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validatetokenservice",{"_index":1381,"title":{"injectables/ValidateTokenService.html":{}},"body":{"components/ResetLinkComponent.html":{},"injectables/ValidateTokenService.html":{},"coverage.html":{}}}],["validator",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":448,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.required",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1546,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1379,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1400,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":378,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["values:testserviceservice",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1735,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1684,"title":{},"body":{"index.html":{}}}],["via",{"_index":1712,"title":{},"body":{"index.html":{}}}],["view",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{}}}],["visibility",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["webkit",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["white",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["whitesmoke",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:35",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1419,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:87",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1071,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1590,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["write",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{}}}],["yes",{"_index":764,"title":{},"body":{"classes/FeedParams.html":{},"classes/Proposal.html":{}}}],["yourdate.setdate(yourdate.getdate",{"_index":809,"title":{},"body":{"components/FilterComponent.html":{}}}],["yournexturl",{"_index":884,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":885,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["za",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n \n  onNoClick(): void {\n    \n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            GetTeamService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { GetTeamService } from './service/get-team.service';\nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\nimport { from } from 'rxjs';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    GetTeamService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  authenticatedUser:string\n  constructor(private router:Router) { }\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        public id:number,\n        public comment:string,\n        public creationDate:Date,\n        public user:{\n            id:number,\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commentData\n                            \n                            \n                                    Public\n                                commentedUserId\n                            \n                            \n                                    Public\n                                commentId\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/comment/comment.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comment\n                    \n                \n                \n                    \n                        Type :         Comment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentedUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\nimport {Comment} from 'src/app/landing-page/comment'\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  @Input() comment:Comment;\n  public commentId;\n  public userName;\n  public commentData;\n  public commentedUserId:number;\n  @Input() userId:number;\n\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n     console.log(this.comment)\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n  }\n\n  deleteComment()\n  {\n\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogTitle\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                prop\n                            \n                            \n                                sentTeam\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                Teams\n                            \n                            \n                                teamVisibility\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, service: TestServiceService, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TestServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Create Proposal\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prop\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sentTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TestServiceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TestServiceService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n  sentTeam=[]\n  Teams:{}[]=[]\n  userId:string\n  teamVisibility=true\n  dialogTitle:string=\"Create Proposal\"\n  id:number=null\n  values:TestServiceService;\n  public tit \n  public descrip\n  public prop\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Feed.html":{"url":"classes/Feed.html","title":"class - Feed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Feed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(posts: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        posts\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            posts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Feed {\n    constructor(\n        public posts:{}\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canUpdate\n                            \n                            \n                                commentError\n                            \n                            \n                                    Public\n                                comments\n                            \n                            \n                                    Public\n                                commentsMessage\n                            \n                            \n                                    Public\n                                commentVisibility\n                            \n                            \n                                    Public\n                                hasLiked\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                new_comment\n                            \n                            \n                                    Public\n                                noComments\n                            \n                            \n                                    Public\n                                numberLikes\n                            \n                            \n                                postCommentError\n                            \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                            \n                                type\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        post\n                    \n                \n                \n                    \n                        Type :         Post\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentsMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Comments\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commentVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasLiked\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            new_comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noComments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberLikes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  @Input() post:Post;\n  public new_comment:string;\n  public canUpdate=false;\n  public numberLikes:number;\n  public comments:Comment[]=[];\n  public noComments:boolean=true;\n  public height:number;\n  public commentVisibility=false;\n  public commentsMessage=\"Comments\";\n  commentError:string;\n  postCommentError:string;\n  @Output() update=new EventEmitter;\n  @Output() share=new EventEmitter;\n  @Output() deleteProposal=new EventEmitter;\n  @Input() userId:number;\n  @Input() type:string;\n  public hasLiked=false;\n  constructor(public proposalWork:ProposalService) { }\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n        else if(error.status==200) {\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n        }\n      }\n    )\n  }\n\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          this.postCommentError=\"Some error has occured sending the comment please try again.\"\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n \n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    constructor(\n    public startDate:Date,\n    public endDate:Date,\n    public page:string,\n    public size:string,\n    public userId?,\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                eDate\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                newEdate\n                            \n                            \n                                    Public\n                                typePost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/filter/filter.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sDate\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eDate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newEdate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typePost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\nexport class FilterComponent implements OnInit {\n  @Input()\n  public sDate\n  public newEdate\n  public eDate\n  public data:Date[]\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n public message;\n\n  constructor() { \n  \n  }\n\n  ngOnInit(): void {\n  \n  }\n  processFilter()\n  { \n    //  eeDate:Date = this.eDate;\n    //  eeDate\n\n    //  yourDate.setDate(yourDate.getDate() + 1);\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sendResetLink: SendResetLinkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sendResetLink\n                                                  \n                                                        \n                                                                        SendResetLinkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SendResetLinkService } from './../service/send-reset-link.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\n// export class MyErrorStateMatcher implements ErrorStateMatcher {\n//   isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n//     const isSubmitted = form && form.submitted;\n//     return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n//   }\n// }\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n// matcher=new MyErrorStateMatcher\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private sendResetLink: SendResetLinkService ) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.sendResetLink.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n         this.error=\"Email id doesnot exists. Please try again!\"\n      \n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetProposalsService {\n  allUrl=\"http://localhost:8080/feed/all\"\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  teamUrl=\"http://localhost:8080/feed/team\"\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  yourUrl=\"http://localhost:8080/feed/create\"\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(private _http:HttpClient) { }\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetTeamService.html":{"url":"injectables/GetTeamService.html","title":"injectable - GetTeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetTeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/get-team.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/get-team.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/get-team.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { teamList } from './../teamList';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetTeamService {\n\n  constructor(private http:HttpClient) {}\n\n   getTeam():Observable{\n    console.log(\"inside GetTeam\")\n    return this.http.get(\"http://localhost:8080/getTeam\")\n    \n    // return resp\n}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n              \n        \n        Log In\n        \n        \n        {{errorMessage}}\n  \n  \n    \n    Log In With Google\n  \n    Forgot Password?\n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding-top: 10px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                              Log In                        {{errorMessage}}            Log In With Google      Forgot Password?  '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    // this.authService.authState.subscribe((user) => {\n    //   this.user = user;\n    //   this.loggedIn = (user != null);\n    //   });\n    \n  }\n\n  googleSignIn(){\n      \n      console.log(\"after1____\",this.user)\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        // if\n        {this.user = user;\n        \n        console.log(\"BEFORE____\",this.user)\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n      // return true\n  }\n\n  socialMedia(){\n   \n\n\n    //buffer\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          ///\n          // this.sessionCreation.fetchSessionDetails(JSON.stringify(data1))\n          // sessionStorage.setItem('data', JSON.stringify(data1));\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      //team page\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n\n    }\n  );\n  }\n\n  handleLogin() {\n    if(this.loginForm.valid) {\n\n      this.loginForm.get('email').value;\n\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe((result)=> {\n        \n          this.userData=sessionStorage.getItem('authenticatedUser')\n          console.log(\"results\",this.userData, this.userData)\n          \n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          // sessionStorage.setItem('data', JSON.stringify(result));\n          console.log(\"data\", result)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          console.log(error)\n          this.invalidLogin = true;\n          this.loginSuccess = false;\n        });\n\n    }\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.email = result;\n  //   });\n  // }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        public description: string,\n        public id: number,\n        public teams:[],\n        public title: string,\n        public upvotesCount: number,\n        public user: {\n            id: number,\n            name: string,\n            email: string,\n            teams:{\n                id:number,\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                deleteUrl\n                            \n                            \n                                    Public\n                                sentTeams\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deleteUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sentTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  public sentTeams:{}[]\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  private deleteUrl=\"http://localhost:8080/proposal/delete\"\n  constructor(private http:HttpClient) { }\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n  constructor(private http:HttpClient) { }\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"Please enter a value\" | \"Not a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { GetTeamService } from './../service/get-team.service';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, NgModule, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog, MatDialogModule, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\n\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n\n  ngOnInit(): void {\n   \n    \n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30)]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> {this.teams=data\n      this.filteredTeams=this.teams.slice();\n    }\n    \n    );\n    \n  }\n\n \n\n  get f() { return this.registerForm.controls; }\n\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email')){\n      return 'Not a valid email';\n    }\n  }\n\n//   filteredOptions=[];\n// selectedUser: any;\n//   filterUsers() {\n//     this.filteredOptions = this.teams.filter(\n//       item => item.value.toLowerCase().includes(this.selectedTeam.toLowerCase())\n//     );\n//     console.log(this.filteredOptions);\n//   }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":\n{\n    \"name\":this.registerForm.value.team\n}\n   , \"user\":\n{\n    \"name\": this.registerForm.value.userName,\n    \"email\": this.registerForm.value.email,\n    \"password\" :this.registerForm.value.password\n\n}\n    }\n\n    }\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          console.log(data1);\n          if(data1==\"Email Id already exists !!\"){\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n            this.responseDialog()\n          }\n          else{\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n        },\n        (error)=>{\n          if(error.status==200){\n            this.message=\"You have been signed up!\"\n            this.responseDialog()\n            this.router.navigate(['/home']) ;\n            this.loading=false;\n          }\n          else{\n            this.message=\"Email Id already exists!\"\n            this.loading=false;\n          }\n        }\n      );\n\n\n}\n// handle(responce){\n//   console.log(responce)\n//   console.log(responce.mesaage)\n//   this.message=responce.message\n// }\n\n\n\n\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n            \n                 -->\n                Register with Google\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                         -->                Register with Google                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, validateToken: ValidateTokenService, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validateToken\n                                                  \n                                                        \n                                                                        ValidateTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ValidateTokenService } from './../service/validate-token.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private validateToken: ValidateTokenService,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.validateToken.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n      this.validToken=false;\n       }\n     );\n    \n  }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/reset_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SendResetLinkService.html":{"url":"injectables/SendResetLinkService.html","title":"injectable - SendResetLinkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SendResetLinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/send-reset-link.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/send-reset-link.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/send-reset-link.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/send-reset-link.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendResetLinkService {\n\n  constructor(public http: HttpClient) { }\n\n  resetLink(data){\n    console.log(\"inside forgetPassword\")\n    return this.http.post(\"http://localhost:8080/forgot_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                sentTeam\n                            \n                            \n                                Teams\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(team)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sentTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  sentTeam=[]\n  Teams:{}[]=[]\n\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n  updateForm: FormGroup;\n    \n\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  // socialMedia(data){\n  //   console.log(\"inside socialMedia(Frontend)\")\n  //   return this.http.post(\"http://localhost:8080/getSocialInfo\",data[\"data1\"],{responseType:'text' as 'json'})\n  // }\n\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        // this.username = res[\"name\"];\n        this.registerSuccessfulLogin();\n      }\n      // ,\n      // (error)=>{\n      //   console.log(\"error------\",error['error']);\n      //   //team page\n      //   this.transferDataService.emitData(error['error'])\n      //   this.router.navigate(['/team']);\n  \n      // }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getTeam: GetTeamService, formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTeam\n                                                  \n                                                        \n                                                                        GetTeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit ,Input} from '@angular/core';\nimport { GetTeamService } from './../service/get-team.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n    private getTeam : GetTeamService,\n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    // this.transferDataService.subscriber.subscribe(data => {\n    //   console.log(\"Is data this?----->\",data);\n    //   this.userData=data\n    // });\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.getTeam.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up!\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       }\n     );\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/test-service.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/test-service.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n\n  constructor() { }\n  form: FormGroup = new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  });\n  \n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n  //observer = new Subject();\n//  public subscriber = this.observer.asObservable();\n\n  emitData(data) {\n    console.log(\"inside service-------\",data);\n    this.userData = data;\n\n   // this.observer.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        public id:number,\n        public name:string,\n        public email:string,\n        public team:{\n            id:number,\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n    \n    \n    // return resp\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n/*  define methods here\n  getAll() {\n    return this.http.get(`${config.apiUrl}/users`);\n}\n\nregister(user) {\n    return this.http.post(`${config.apiUrl}/users/register`, user);\n}\n\ndelete(id) {\n    return this.http.delete(`${config.apiUrl}/users/${id}`);\n}*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateTokenService.html":{"url":"injectables/ValidateTokenService.html","title":"injectable - ValidateTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/validate-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/validate-token.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/validate-token.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateTokenService {\n\n  constructor(private http: HttpClient) { }\n\n  tokenVerification(data){\n    console.log(\"inside tokenVerification\")\n    return this.http.post(\"http://localhost:8080/validate_token\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n  }\n}\n\n// $2a$10$liD/Pd76Qod0CtiFE1nfg.ruHB56kRGFxOCQTEaJk24oayaBl\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/feed.ts\n            \n            class\n            Feed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/get-team.service.ts\n            \n            injectable\n            GetTeamService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/send-reset-link.service.ts\n            \n            injectable\n            SendResetLinkService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/validate-token.service.ts\n            \n            injectable\n            ValidateTokenService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nGetTeamService\n\nGetTeamService\n\nAppModule -->\n\nGetTeamService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
