var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.251,1,0.865]],["body/components/ApiResponseComponent.html",[0,0.399,1,1.473,2,1.361,3,0.206,4,0.179,5,1.128,6,1.128,7,1.128,8,1.128,9,0.179,10,5.725,11,3.874,12,3.12,13,1.128,14,1.978,15,1.765,16,1.556,17,3.092,18,1.361,19,5.602,20,1.361,21,4.946,22,0.206,23,0.695,24,1.179,25,1.37,26,2.997,27,4.217,28,3.092,29,4.776,30,0.744,31,6,32,0.601,33,3.66,34,6.267,35,0.522,36,4.946,37,0.479,38,0.022,39,0.356,40,0.495,41,0.479,42,3.66,43,1.146,44,4.946,45,2.039,46,2.649,47,0.588,48,1.081,49,3.66,50,4.946,51,3.66,52,3.66,53,1.711,54,1.128,55,1.128,56,1.34,57,3.66,58,0.627,59,3.66,60,0.63,61,2.111,62,2.765,63,3.66,64,1.509,65,1.065,66,2.111,67,0.38,68,0.206,69,0.011,70,3.66,71,3.66,72,3.66,73,3.66,74,3.66,75,3.66,76,4.217,77,1.007,78,1.524,79,1.524,80,1.128,81,1.849,82,1.128,83,3.66,84,1.128,85,0.898,86,1.128,87,0.898,88,1.128,89,0.898,90,1.007,91,1.524,92,0.848,93,1.128,94,0.898,95,1.128,96,0.898,97,1.128,98,0.8,99,0.951,100,1.128,101,0.848,102,1.128,103,0.848,104,0.898,105,1.128,106,0.754,107,1.128,108,0.898,109,0.848,110,1.128,111,0.848,112,1.128,113,0.848,114,0.8,115,1.128,116,0.898,117,1.065,118,0.848,119,0.8,120,1.128,121,1.128,122,0.011,123,0.015,124,0.011]],["title/components/AppComponent.html",[0,0.251,85,0.865]],["body/components/AppComponent.html",[0,0.436,1,1.077,2,1.532,3,0.247,4,0.215,5,1.352,6,1.352,7,1.352,8,1.352,9,0.215,13,1.352,14,2.015,15,1.798,16,1.017,18,1.532,20,1.532,22,0.247,23,0.782,35,0.347,38,0.022,39,0.354,40,0.347,54,1.352,55,1.352,58,0.752,60,0.494,67,0.455,68,0.247,69,0.013,77,1.207,78,1.716,79,1.716,80,1.352,81,1.983,82,1.352,84,1.352,85,1.58,86,1.352,87,1.077,88,1.352,89,1.077,90,1.207,91,1.716,92,1.017,93,1.352,94,1.077,95,1.352,96,1.077,97,1.352,98,0.959,99,1.14,100,1.352,101,1.017,102,1.352,103,1.017,104,1.077,105,1.352,106,0.904,107,1.352,108,1.077,109,1.017,110,1.352,111,1.017,112,1.352,113,1.017,114,0.959,115,1.352,116,1.077,117,1.277,118,1.017,119,0.959,120,1.352,121,1.352,122,0.013,123,0.017,124,0.013,125,3.74,126,2.162,127,6.119,128,5.569,129,3.53,130,4.749,131,4.387]],["title/modules/AppModule.html",[132,2.407,133,2.407]],["body/modules/AppModule.html",[1,1.418,3,0.147,4,0.128,9,0.128,11,1.508,15,0.642,16,0.606,38,0.023,60,0.826,62,1.975,64,1.078,67,0.271,68,0.147,69,0.008,77,0.719,85,1.614,87,1.418,89,1.418,92,1.339,94,1.418,96,1.418,98,1.263,99,0.679,101,1.339,103,1.339,104,1.469,106,1.191,108,1.418,109,0.606,111,1.339,113,1.339,114,0.851,116,1.418,118,1.339,122,0.008,123,0.012,124,0.008,132,1.785,133,5.032,134,1.634,135,1.785,136,3.966,137,3.514,138,4.394,139,1.975,140,2.228,141,2.228,142,2.228,143,2.228,144,2.228,145,3.612,146,3.333,147,3.333,148,3.333,149,3.095,150,2.886,151,2.534,152,2.701,153,3.095,154,3.319,155,1.508,156,2.614,157,3.319,158,1.785,159,1.508,160,1.785,161,1.634,162,1.508,163,2.246,164,1.634,165,1.975,166,3.893,167,3.319,168,1.975,169,2.659,170,2.614,171,2.614,172,3.893,173,2.614,174,3.893,175,2.614,176,2.228,177,2.228,178,1.975,179,1.785,180,2.941,181,3.319,182,1.605,183,3.893,184,4.652,185,1.785,186,3.893,187,2.614,188,1.975,189,3.893,190,2.614,191,3.893,192,2.614,193,3.893,194,2.228,195,4.652,196,2.614,197,3.893,198,2.614,199,3.893,200,2.614,201,1.634,202,1.975,203,3.893,204,1.146,205,1.785,206,1.785,207,2.228,208,3.893,209,2.228,210,1.975,211,1.975,212,2.614,213,2.614,214,1.146,215,1.975,216,2.228,217,3.893,218,2.614,219,2.614,220,3.893,221,2.614,222,3.893,223,2.614,224,3.893,225,2.228,226,3.893,227,2.614,228,1.975,229,2.614,230,1.975,231,1.634,232,2.228,233,1.508,234,1.785,235,3.893,236,1.975,237,1.634,238,1.508,239,1.785,240,2.228,241,3.893,242,5.154,243,2.085,244,1.944,245,1.707,246,2.659,247,1.975,248,1.975,249,2.614,250,1.354,251,1.345,252,3.893,253,3.893,254,2.614,255,2.614,256,2.614,257,2.614,258,2.614,259,1.078,260,2.614,261,2.614]],["title/modules/AppRoutingModule.html",[132,2.407,145,2.203]],["body/modules/AppRoutingModule.html",[3,0.274,4,0.239,9,0.239,38,0.023,60,0.807,62,3.677,67,0.505,68,0.274,69,0.014,92,1.128,101,1.128,103,1.128,104,1.195,106,1.003,111,1.128,113,1.128,114,1.064,118,1.128,122,0.015,123,0.018,124,0.015,134,3.042,139,3.677,145,3.714,157,4.149,169,4.058,176,4.149,177,4.149,194,4.149,206,3.324,207,4.149,232,4.149,239,3.324,240,4.149,262,4.867,263,4.867,264,4.38,265,5.941,266,1.889,267,2.431,268,7.12,269,4.867,270,4.867,271,4.867,272,4.867,273,4.867,274,4.867,275,4.867,276,4.867,277,4.867,278,4.867]],["title/injectables/AuthorizationService.html",[279,0.684,280,2.407]],["body/injectables/AuthorizationService.html",[3,0.25,4,0.218,9,0.218,22,0.25,23,0.789,25,1.414,30,0.845,32,0.682,35,0.511,37,0.582,38,0.022,39,0.283,40,0.444,41,0.582,47,1.039,48,0.972,58,1.055,60,0.632,67,0.461,68,0.25,69,0.013,122,0.013,123,0.017,124,0.013,126,1.725,245,2.463,266,1.725,279,1.09,280,4.417,281,1.725,282,3.789,283,1.223,284,5.616,285,2.793,286,4.243,287,4.243,288,4.243,289,4.243,290,4.886,291,6.468,292,3.789,293,3.231,294,5.616,295,4.444,296,3.731,297,3.023,298,5.616,299,1.18,300,2.625,301,4.444,302,4.788,303,1.949,304,4.444,305,1.832,306,1.832,307,3.789,308,4.444,309,4.444,310,4.444,311,1.369,312,4.444,313,4.444]],["title/classes/Comment.html",[69,0.01,314,2.033]],["body/classes/Comment.html",[3,0.251,4,0.219,9,0.219,22,0.251,23,0.79,24,1.314,25,1.23,32,0.684,35,0.528,37,0.583,38,0.022,39,0.358,40,0.563,41,0.583,58,1.144,68,0.251,69,0.013,122,0.013,123,0.017,124,0.013,251,2.355,283,1.227,297,2.084,299,1.29,314,4.171,315,2.084,316,2.99,317,3.802,318,3.802,319,6.475,320,3.369,321,2.542,322,4.56,323,3.854,324,4.459,325,4.459,326,5.379,327,4.459,328,4.798,329,4.459,330,4.251,331,4.459,332,5.627,333,3.843,334,4.459,335,4.459,336,3.046]],["title/components/CommentComponent.html",[0,0.251,87,0.865]],["body/components/CommentComponent.html",[0,0.459,1,0.82,2,1.278,3,0.188,4,0.164,5,1.029,6,1.029,7,1.029,8,1.029,9,0.164,13,1.029,14,1.958,15,1.747,16,0.774,18,1.278,20,1.278,22,0.188,24,1.054,25,1.168,30,0.699,32,0.406,35,0.456,38,0.023,39,0.34,40,0.367,43,1.338,47,0.747,48,1.168,60,0.523,65,1.555,67,0.347,68,0.188,69,0.01,77,0.919,78,1.431,79,1.431,80,1.029,81,1.779,82,1.029,84,1.029,85,0.82,86,1.029,87,1.542,88,1.029,89,0.82,90,0.919,91,1.431,92,0.774,93,1.029,94,1.613,95,1.029,96,0.82,97,1.029,98,0.73,99,0.868,100,1.029,101,0.774,102,1.029,103,0.774,104,0.82,105,1.029,106,0.688,107,1.029,108,0.82,109,0.774,110,1.029,111,0.774,112,1.029,113,0.774,114,0.73,115,1.029,116,0.82,117,0.972,118,0.774,119,0.73,120,1.029,121,1.029,122,0.01,123,0.014,124,0.01,250,0.972,283,0.919,285,1.803,286,2.524,299,0.848,300,2.171,305,2.59,314,3.717,316,2.755,321,1.377,337,2.848,338,2.904,339,4.362,340,3.51,341,3.961,342,1.352,343,5.341,344,4.645,345,4.922,346,1.779,347,3.961,348,2.884,349,3.51,350,4.645,351,3.34,352,2.904,353,3.51,354,3.34,355,4.645,356,3.34,357,4.645,358,4.645,359,3.961,360,3.961,361,2.68,362,3.34,363,2.904,364,3.961,365,3.34,366,3.34,367,3.648,368,3.34,369,2.848,370,3.648,371,5.341,372,3.34,373,2.848,374,2.524,375,3.34,376,3.34,377,3.34,378,3.34,379,3.34,380,3.34,381,2.524,382,3.34,383,3.34,384,3.34,385,3.34,386,3.961,387,1.789,388,1.927,389,2.281,390,2.524,391,2.848,392,3.34,393,3.51,394,1.668,395,2.281,396,2.848,397,3.34,398,1.789,399,2.488,400,1.297]],["title/components/CreateProposalComponent.html",[0,0.251,89,0.865]],["body/components/CreateProposalComponent.html",[0,0.455,1,0.795,2,1.25,3,0.182,4,0.159,5,0.997,6,0.997,7,0.997,8,0.997,9,0.159,13,0.997,14,1.951,15,1.741,16,0.75,18,1.25,20,1.25,22,0.182,23,0.638,24,1.19,25,0.708,30,0.684,35,0.45,38,0.022,39,0.289,40,0.256,43,1.053,45,1.873,47,0.52,48,0.708,58,0.555,60,0.591,64,1.334,65,1.529,66,1.867,67,0.336,68,0.182,69,0.01,77,0.89,78,1.4,79,1.4,80,0.997,81,1.755,82,0.997,84,0.997,85,0.795,86,0.997,87,0.795,88,0.997,89,1.398,90,1.794,91,1.4,92,0.75,93,0.997,94,0.795,95,0.997,96,0.795,97,0.997,98,0.708,99,0.841,100,0.997,101,0.75,102,0.997,103,0.75,104,1.289,105,0.997,106,0.667,107,0.997,108,0.795,109,0.75,110,0.997,111,0.75,112,0.997,113,0.75,114,0.708,115,0.997,116,0.795,117,0.942,118,0.75,119,0.708,120,0.997,121,0.997,122,0.01,123,0.014,124,0.01,129,3.285,178,4.532,179,4.097,188,4.532,251,1.57,283,1.445,285,1.764,299,0.829,300,2.124,305,2.688,316,2.63,328,4.855,338,2.841,342,1.323,346,1.755,348,2.27,352,2.841,363,3.56,400,1.257,401,2.445,402,2.303,403,5.695,404,4.544,405,4.477,406,3.874,407,5.251,408,5.251,409,3.237,410,4.544,411,2.622,412,4.544,413,3.237,414,3.237,415,3.237,416,2.76,417,2.211,418,2.76,419,3.237,420,1.867,421,3.237,422,3.237,423,2.76,424,1.185,425,2.76,426,3.237,427,3.237,428,3.237,429,3.237,430,5.251,431,3.237,432,3.237,433,3.237,434,3.237,435,3.237,436,3.237,437,3.237,438,3.237,439,3.237,440,2.023,441,3.237,442,5.695,443,4.855,444,3.874,445,5.303,446,4.544,447,4.544,448,3.874,449,4.544,450,3.874,451,2.622,452,3.874,453,1.867,454,2.76,455,3.237,456,2.76,457,3.237]],["title/interfaces/DialogData.html",[61,2.033,458,2.033]],["body/interfaces/DialogData.html",[0,0.361,3,0.171,4,0.149,9,0.149,14,0.836,15,0.746,16,0.704,18,0.836,20,0.836,22,0.171,23,0.61,24,0.926,26,1.517,30,0.457,38,0.023,39,0.193,40,0.24,43,1.007,45,1.791,46,1.627,48,0.95,53,2.031,56,2.026,58,0.949,60,0.762,61,2.506,64,1.252,65,1.265,66,1.752,67,0.315,68,0.285,69,0.013,98,0.664,99,0.789,106,0.626,109,1.175,114,0.95,122,0.013,123,0.013,124,0.009,150,1.517,151,1.332,152,1.42,155,2.506,158,2.075,159,2.506,160,2.075,161,1.899,162,1.752,163,1.752,164,1.899,182,1.252,185,2.075,233,1.752,234,2.075,243,2.716,244,2.765,245,2.75,246,2.075,250,1.611,259,2.414,266,1.179,267,2.17,285,1.179,293,2.533,297,2.031,299,1.236,306,2.414,311,0.936,342,1.265,346,0.936,400,1.179,402,0.991,458,1.752,459,3.037,460,2.075,461,2.671,462,2.371,463,3.46,464,1.627,465,2.075,466,3.282,467,3.282,468,3.282,469,2.327,470,2.716,471,4.182,472,2.716,473,2.295,474,3.193,475,2.506,476,3.282,477,2.295,478,2.295,479,2.295,480,2.295,481,2.295,482,2.295,483,2.295,484,2.295,485,2.075,486,2.295,487,2.295,488,2.295,489,2.295,490,2.075,491,1.752,492,3.464,493,1.899,494,2.295,495,2.295,496,2.295,497,1.899,498,1.252,499,1.899,500,2.295,501,2.295,502,1.899,503,2.295,504,2.031,505,1.899,506,2.295,507,2.295,508,4.182,509,2.295,510,2.295,511,1.752,512,1.899,513,2.295,514,2.295,515,1.627,516,2.295,517,2.295,518,3.282,519,2.295,520,3.17,521,2.295,522,1.752,523,2.091,524,2.295,525,2.295,526,2.295,527,2.295,528,2.295,529,2.295,530,2.295,531,2.295,532,2.295,533,2.031,534,2.967,535,2.295,536,1.899,537,1.627,538,2.967,539,2.295,540,2.327,541,3.832,542,1.752,543,2.075,544,2.295,545,2.295,546,2.295,547,2.295,548,2.295,549,2.295,550,2.295,551,4.182,552,4.182,553,2.295,554,1.627,555,3.832,556,3.17,557,3.832,558,2.091,559,2.295,560,2.295,561,2.295,562,2.295,563,1.627,564,1.752,565,2.295,566,2.295,567,2.295,568,3.282,569,1.517,570,1.899,571,1.42,572,1.332,573,1.332,574,1.42,575,1.42,576,1.517,577,1.627,578,2.295,579,1.627,580,2.295,581,2.075]],["title/components/ErrorComponent.html",[0,0.251,92,0.817]],["body/components/ErrorComponent.html",[0,0.427,1,1.029,2,1.488,3,0.236,4,0.205,5,1.291,6,1.291,7,1.291,8,1.291,9,0.205,13,1.291,14,2.006,15,1.79,16,0.971,18,1.488,20,1.488,22,0.236,23,0.76,30,0.814,32,0.728,35,0.473,38,0.022,39,0.344,40,0.331,47,0.674,48,1.182,54,1.291,55,1.291,58,0.718,60,0.472,65,1.744,67,0.435,68,0.236,69,0.012,77,1.153,78,1.666,79,1.666,80,1.291,81,1.95,82,1.291,84,1.291,85,1.029,86,1.291,87,1.029,88,1.291,89,1.029,90,1.153,91,1.666,92,1.466,93,1.291,94,1.029,95,1.291,96,1.029,97,1.291,98,0.916,99,1.089,100,1.291,101,0.971,102,1.291,103,0.971,104,1.029,105,1.291,106,0.864,107,1.291,108,1.029,109,0.971,110,1.291,111,0.971,112,1.291,113,0.971,114,0.916,115,1.291,116,1.029,117,1.22,118,0.971,119,0.916,120,1.291,121,1.291,122,0.013,123,0.016,124,0.013,342,1.575,346,1.95,490,4.474,558,2.609,572,2.372,582,3.573,583,5.989,584,5.409,585,5.409,586,4.191]],["title/components/FeedComponent.html",[0,0.251,94,0.865]],["body/components/FeedComponent.html",[0,0.368,1,0.432,2,0.786,3,0.099,4,0.086,5,0.542,6,0.542,7,0.542,8,0.542,9,0.086,13,0.542,14,1.77,15,1.579,16,0.408,18,0.786,20,0.786,22,0.099,23,0.401,24,1.068,25,0.909,30,0.625,32,0.505,35,0.499,37,0.598,38,0.023,39,0.329,40,0.425,41,0.598,43,1.491,45,1.714,47,0.919,48,1.279,60,0.581,65,1.051,67,0.183,68,0.099,69,0.005,77,0.484,78,0.881,79,0.881,80,0.542,81,1.281,82,0.542,84,0.542,85,0.432,86,0.542,87,0.702,88,0.542,89,0.432,90,0.993,91,0.881,92,0.408,93,0.542,94,1.203,95,0.542,96,0.432,97,0.542,98,0.384,99,0.457,100,0.542,101,0.408,102,0.542,103,0.408,104,1.123,105,0.542,106,0.362,107,0.542,108,0.432,109,0.408,110,0.542,111,0.408,112,0.542,113,0.408,114,0.384,115,0.542,116,0.702,117,1.665,118,0.408,119,0.384,120,0.542,121,0.542,122,0.005,123,0.009,124,0.005,129,1.015,148,2.979,169,1.201,180,1.329,214,2.661,215,1.329,231,1.099,251,1.58,283,1.258,285,1.614,288,1.329,297,1.688,299,1.152,300,1.943,305,2.502,314,3.599,316,2.795,321,2.294,338,1.787,339,3.141,340,4.066,341,2.437,342,0.832,346,1.281,347,2.437,348,1.428,349,2.159,352,2.599,353,4.584,359,4.178,360,4.178,361,1.649,363,3.364,364,1.5,367,3.347,369,3.078,373,1.5,374,3.141,387,2.227,388,2.083,389,1.201,390,2.728,391,3.545,394,2.579,395,2.466,396,1.5,398,0.942,399,0.942,400,0.683,402,2.034,411,2.399,420,1.015,440,3.574,448,1.5,523,1.178,558,2.46,563,2.227,569,2.285,570,1.787,571,1.943,572,1.583,573,2.006,574,1.688,575,1.688,579,1.531,587,1.5,588,4.588,589,3.611,590,2.858,591,4.158,592,4.901,593,4.158,594,4.901,595,2.858,596,3.545,597,2.437,598,2.437,599,4.901,600,2.437,601,1.759,602,1.759,603,3.078,604,1.759,605,1.759,606,4.178,607,1.759,608,1.759,609,1.759,610,2.858,611,2.858,612,3.545,613,2.858,614,1.759,615,3.545,616,3.545,617,3.545,618,1.759,619,2.858,620,2.437,621,1.759,622,2.858,623,2.159,624,2.858,625,2.858,626,1.759,627,2.437,628,1.759,629,3.545,630,3.545,631,1.759,632,1.5,633,1.759,634,2.437,635,2.858,636,1.5,637,1.759,638,4.158,639,3.611,640,2.858,641,1.759,642,2.858,643,2.437,644,1.952,645,2.858,646,1.759,647,1.759,648,1.099,649,1.759,650,1.329,651,1.759,652,1.759,653,1.759,654,1.759,655,1.759,656,1.759,657,1.759,658,1.759,659,1.759,660,1.759,661,1.759,662,1.759,663,1.759,664,1.759,665,1.759,666,1.759,667,1.714,668,1.759,669,1.759,670,1.759,671,3.611,672,1.759,673,1.759,674,1.759,675,1.759,676,1.759,677,1.759,678,1.759,679,1.759,680,1.759,681,4.158,682,4.158,683,2.858,684,1.759,685,1.759,686,1.759,687,2.858,688,2.437,689,1.759,690,1.759,691,1.759,692,1.759,693,1.759,694,1.759,695,2.858,696,2.858,697,1.759,698,1.5,699,1.759,700,1.759,701,1.759,702,1.759,703,2.858,704,4.158,705,1.787,706,2.858,707,1.759,708,1.759,709,2.858,710,2.858,711,1.759,712,1.759,713,1.759,714,1.759,715,1.5,716,1.759,717,1.201,718,2.858,719,1.329,720,1.759,721,1.759,722,2.858,723,2.858,724,2.858,725,2.858,726,2.858,727,2.437,728,2.858,729,2.858,730,2.858,731,2.437,732,1.934,733,1.531,734,2.437,735,2.599,736,2.858,737,2.227,738,1.759,739,1.759,740,2.159,741,2.728,742,1.329,743,2.728,744,1.759,745,1.329,746,2.858,747,1.934,748,1.759,749,1.015,750,1.759,751,2.728,752,1.5,753,1.759,754,1.5,755,1.5,756,1.759,757,1.201,758,1.759,759,1.759,760,1.759,761,1.759,762,1.329,763,2.858,764,1.759,765,2.858,766,2.437,767,1.428,768,1.759,769,2.159,770,1.5,771,1.759,772,1.759,773,1.759,774,1.5,775,1.759,776,1.759,777,1.759,778,1.759,779,2.858,780,1.759,781,1.759,782,1.015,783,1.759,784,1.759,785,2.858,786,1.759,787,1.759,788,1.759]],["title/classes/FeedParams.html",[69,0.01,789,2.203]],["body/classes/FeedParams.html",[3,0.243,4,0.212,9,0.212,22,0.243,23,0.775,24,1.335,32,0.739,35,0.543,37,0.566,38,0.022,39,0.275,40,0.523,41,0.866,58,1.159,68,0.243,69,0.016,122,0.013,123,0.017,124,0.013,238,3.694,283,1.19,285,2.142,299,1.007,300,2.993,305,2.275,315,2.021,322,4.62,348,3.434,352,3.45,361,2.495,737,3.429,789,3.45,790,5.935,791,3.687,792,3.267,793,6.764,794,6.615,795,5.862,796,4.324,797,4.324,798,4.169,799,4.324,800,5.459,801,4.324,802,4.324,803,4.324,804,4.324,805,4.324,806,4.324,807,4.324,808,4.324,809,4.324]],["title/components/FilterComponent.html",[0,0.251,96,0.865]],["body/components/FilterComponent.html",[0,0.402,1,0.681,2,1.119,3,0.156,4,0.136,5,0.855,6,0.855,7,0.855,8,0.855,9,0.136,13,0.855,14,1.912,15,1.706,16,1.116,18,1.119,20,1.119,22,0.156,24,1.077,25,1.053,28,2.543,30,0.612,32,0.337,35,0.446,37,0.363,38,0.023,39,0.307,40,0.219,41,0.363,43,1.229,47,0.853,48,1.235,60,0.597,65,1.184,67,0.288,68,0.156,69,0.008,77,0.763,78,1.253,79,1.253,80,0.855,81,1.635,82,0.855,84,0.855,85,0.681,86,0.855,87,0.681,88,0.855,89,0.681,90,0.763,91,1.253,92,0.643,93,0.855,94,0.681,95,0.855,96,1.449,97,0.855,98,0.606,99,0.721,100,0.855,101,0.643,102,0.855,103,0.643,104,1.567,105,0.855,106,0.572,107,0.855,108,0.681,109,0.643,110,0.855,111,0.643,112,0.855,113,0.643,114,0.606,115,0.855,116,0.681,117,0.808,118,0.643,119,1.053,120,0.855,121,0.855,122,0.008,123,0.012,124,0.008,214,2.885,225,2.365,237,4.112,238,3.61,250,0.808,283,0.763,296,3.406,299,1.077,300,2.924,305,2.58,316,2.589,322,4.629,338,2.543,342,1.184,346,0.855,349,3.073,353,4.008,361,3.061,363,3.316,367,1.894,374,2.096,388,1.6,400,1.87,444,4.107,453,1.6,512,2.543,523,1.677,573,1.216,629,3.468,648,1.734,650,2.096,732,2.58,733,2.842,734,2.365,735,2.543,757,1.894,767,1.385,800,3.468,810,2.365,811,4.817,812,4.068,813,5.305,814,5.305,815,5.305,816,4.068,817,4.068,818,2.774,819,2.774,820,3.468,821,4.068,822,5.335,823,3.468,824,2.774,825,3.468,826,4.068,827,5.904,828,2.774,829,5.305,830,5.305,831,2.778,832,4.068,833,4.068,834,2.774,835,4.068,836,2.774,837,2.774,838,2.774,839,2.774,840,2.774,841,2.774,842,2.774,843,2.774,844,2.774,845,2.774,846,2.774,847,4.068,848,2.774,849,2.774,850,2.774,851,2.774,852,2.774,853,2.774,854,4.817,855,2.365,856,2.774,857,2.774,858,2.774,859,2.774,860,2.774,861,3.073,862,2.774,863,2.774,864,4.068,865,2.179,866,2.774,867,3.011,868,2.774,869,2.774,870,2.774,871,2.774]],["title/components/ForgetPasswordComponent.html",[0,0.251,98,0.771]],["body/components/ForgetPasswordComponent.html",[0,0.368,1,0.771,2,1.224,3,0.177,4,0.154,5,0.967,6,0.967,7,0.967,8,0.967,9,0.154,13,0.967,14,1.943,15,1.734,16,0.728,18,1.224,20,1.224,22,0.177,23,0.625,25,1.129,30,0.669,32,0.382,35,0.511,37,0.411,38,0.022,39,0.329,40,0.469,41,0.411,43,1.031,47,0.83,48,1.228,53,1.467,54,0.967,55,0.967,56,1.149,58,0.963,60,0.581,65,1.504,67,0.326,68,0.177,69,0.009,76,3.792,77,0.864,78,1.37,79,1.37,80,0.967,81,1.827,82,0.967,84,0.967,85,0.771,86,0.967,87,0.771,88,0.967,89,0.771,90,0.864,91,1.37,92,0.728,93,0.967,94,0.771,95,0.967,96,0.771,97,0.967,98,1.228,99,1.734,100,0.967,101,0.728,102,0.967,103,0.728,104,0.771,105,0.967,106,0.647,107,0.967,108,0.771,109,1.467,110,0.967,111,0.728,112,0.967,113,0.728,114,1.384,115,0.967,116,0.771,117,0.914,118,0.728,119,0.686,120,0.967,121,0.967,122,0.009,123,0.013,124,0.009,149,3.009,182,1.294,233,3.796,247,2.372,248,2.372,250,1.295,251,2.048,259,1.294,299,0.812,342,1.295,346,1.731,451,2.566,461,2.959,462,2.414,463,2.78,464,1.681,498,1.294,504,1.467,505,1.962,523,1.834,533,2.079,554,1.681,558,2.611,564,2.566,569,1.568,571,1.467,572,1.377,573,2.464,574,2.079,575,2.079,576,1.568,717,2.144,719,2.372,831,3.038,872,5.61,873,2.677,874,5.165,875,4.447,876,4.447,877,5.165,878,5.618,879,3.837,880,3.139,881,4.447,882,4.447,883,3.139,884,3.139,885,3.139,886,4.888,887,3.36,888,4.244,889,4.447,890,4.447,891,3.139,892,3.139,893,3.139,894,3.139,895,3.139,896,3.139,897,3.139,898,3.139,899,2.372,900,3.139,901,4.447,902,3.139,903,2.677,904,2.372,905,2.78,906,3.038,907,3.792,908,3.36,909,4.447,910,4.447,911,4.447]],["title/injectables/GetProposalsService.html",[146,2.033,279,0.684]],["body/injectables/GetProposalsService.html",[3,0.152,4,0.132,9,0.132,16,1.534,22,0.152,23,0.56,25,1.278,30,0.6,32,0.485,35,0.528,37,0.791,38,0.023,39,0.385,40,0.564,41,0.791,47,1.064,54,1.801,55,1.801,58,1.002,60,0.629,67,0.28,68,0.152,69,0.008,119,1.278,122,0.008,123,0.012,124,0.008,126,1.048,146,2.3,204,1.184,214,2.902,279,0.774,281,1.048,283,0.743,296,3.818,303,1.184,305,1.113,306,1.113,311,1.801,321,2.159,348,2.615,361,3.223,402,0.88,515,3.545,644,3.993,667,2.658,717,3.238,789,4.349,792,2.039,795,4.464,861,5.49,912,5.751,913,2.301,914,3.399,915,3.399,916,3.987,917,3.987,918,3.987,919,3.987,920,3.987,921,3.987,922,3.987,923,3.987,924,3.987,925,3.987,926,3.987,927,3.987,928,2.699,929,2.368,930,3.987,931,2.699,932,2.699,933,2.699,934,5,935,5.643,936,3.987,937,6.618,938,3.72,939,3.818,940,2.699,941,2.699,942,2.699,943,2.699,944,6.448,945,2.699,946,2.699,947,2.699,948,2.699,949,2.699,950,2.699,951,3.987,952,2.699,953,2.699,954,3.987,955,2.699,956,5.236,957,2.699,958,3.987,959,2.699,960,1.348,961,2.301,962,2.699,963,2.699,964,2.699,965,2.699,966,2.699,967,2.699,968,2.699,969,2.699,970,2.699,971,2.699,972,2.699,973,2.699,974,2.699,975,3.987,976,2.699,977,2.699,978,2.699,979,2.699,980,3.399,981,2.699,982,2.699,983,2.699]],["title/components/HomeComponent.html",[0,0.251,101,0.817]],["body/components/HomeComponent.html",[0,0.405,1,0.69,2,1.13,3,0.158,4,0.138,5,0.866,6,0.866,7,0.866,8,0.866,9,0.138,13,0.866,14,1.915,15,1.709,16,0.651,18,1.13,20,1.13,22,0.231,23,0.577,24,1.083,27,4.552,30,0.618,32,0.342,35,0.449,37,0.368,38,0.022,39,0.34,40,0.384,41,0.368,43,0.952,47,0.66,48,1.061,53,1.92,56,1.503,60,0.462,65,1.413,67,0.292,68,0.158,69,0.008,77,0.773,78,1.266,79,1.266,80,0.866,81,1.645,82,0.866,84,0.866,85,0.69,86,0.866,87,0.69,88,0.866,89,0.69,90,0.773,91,1.266,92,0.651,93,0.866,94,0.69,95,0.866,96,0.69,97,0.866,98,0.615,99,0.731,100,0.866,101,1.237,102,0.866,103,0.651,104,0.69,105,0.866,106,0.579,107,0.866,108,0.69,109,0.651,110,0.866,111,0.651,112,0.866,113,0.651,114,0.615,115,0.866,116,0.69,117,0.818,118,0.651,119,0.615,120,0.866,121,0.866,122,0.008,123,0.012,124,0.012,210,2.124,245,1.801,266,1.091,283,1.13,296,1.622,342,1.196,346,1.645,386,2.397,388,3.277,389,1.92,390,2.124,394,2.963,395,1.92,398,3.042,399,1.506,400,2.205,402,1.34,453,3.277,454,4.842,498,1.159,522,2.37,534,2.806,536,2.568,537,2.2,606,2.397,705,3.034,732,3.534,733,1.506,735,3.829,737,2.6,741,3.103,742,3.103,747,3.487,751,2.124,754,2.397,757,4.446,762,3.103,766,2.397,767,2.052,769,2.124,774,3.502,782,2.37,855,2.397,865,2.86,867,1.757,934,3.103,984,2.397,985,3.502,986,4.854,987,4.108,988,4.108,989,5.339,990,2.811,991,4.552,992,4.108,993,2.811,994,3.502,995,2.811,996,2.811,997,2.811,998,2.811,999,2.397,1000,2.811,1001,2.811,1002,2.811,1003,3.103,1004,4.108,1005,2.811,1006,2.811,1007,2.397,1008,2.811,1009,3.315,1010,2.811,1011,2.397,1012,2.811,1013,2.811,1014,3.502,1015,2.811,1016,2.811,1017,3.042,1018,2.568,1019,2.397,1020,2.397,1021,2.124,1022,6.126,1023,1.757,1024,2.811,1025,1.92,1026,1.757,1027,1.757,1028,4.108,1029,2.811,1030,2.397,1031,2.811,1032,2.397,1033,4.108,1034,5.355,1035,4.854,1036,2.811,1037,2.811,1038,5.68,1039,5.339,1040,2.811,1041,2.811,1042,2.811,1043,2.811,1044,3.502,1045,2.811,1046,2.811,1047,2.811,1048,2.811,1049,2.811,1050,4.108,1051,4.108,1052,6.28,1053,2.811,1054,2.811,1055,2.811,1056,2.811,1057,2.811,1058,2.811,1059,2.811,1060,2.811,1061,2.811,1062,2.811,1063,2.811,1064,2.811,1065,2.811,1066,2.397,1067,2.811,1068,2.811,1069,2.811,1070,2.811,1071,2.811]],["title/interceptors/HttpInterceptorService.html",[1072,3.005,1073,2.663]],["body/interceptors/HttpInterceptorService.html",[3,0.259,4,0.226,9,0.226,22,0.259,30,0.863,32,0.559,35,0.454,37,0.751,38,0.023,39,0.365,40,0.494,41,0.751,47,0.74,60,0.737,67,0.478,68,0.259,69,0.014,122,0.014,123,0.017,124,0.014,152,3.061,164,2.877,204,2.018,250,1.34,267,2.299,279,1.114,290,3.477,299,0.84,311,1.769,342,1.34,498,1.898,511,2.655,705,2.877,938,3.609,960,2.299,1073,4.337,1074,4.603,1075,5.333,1076,3.924,1077,5.74,1078,4.603,1079,4.603,1080,5.74,1081,5.74,1082,6.55,1083,6.256,1084,6.55,1085,4.603,1086,4.603,1087,5.74,1088,4.603,1089,5.74,1090,4.603,1091,4.603,1092,4.603,1093,4.603,1094,3.924,1095,4.603,1096,4.603,1097,4.603,1098,4.603,1099,4.603,1100,4.603]],["title/components/LandingPageComponent.html",[0,0.251,103,0.817]],["body/components/LandingPageComponent.html",[0,0.231,1,0.37,2,1.251,3,0.085,4,0.074,5,0.464,6,0.464,7,0.464,8,0.464,9,0.074,13,0.464,14,1.711,15,1.527,16,1.511,18,0.692,20,0.692,22,0.237,23,0.353,24,1.04,25,1.106,26,1.256,30,0.569,32,0.306,35,0.518,37,0.631,38,0.023,39,0.334,40,0.474,41,0.631,43,1.573,45,2.085,47,1.041,48,1.329,54,0.775,55,0.775,58,0.431,60,0.675,64,0.621,65,0.943,67,0.156,68,0.085,69,0.004,77,0.414,78,0.775,79,0.775,80,0.464,81,1.166,82,0.464,84,0.464,85,0.37,86,0.464,87,0.37,88,0.464,89,0.617,90,1.041,91,0.775,92,0.349,93,0.464,94,0.617,95,0.464,96,0.617,97,0.464,98,0.329,99,0.391,100,0.464,101,0.349,102,0.464,103,0.877,104,1.331,105,0.464,106,0.31,107,0.464,108,0.37,109,0.349,110,0.464,111,0.349,112,0.464,113,0.349,114,0.329,115,0.464,116,0.617,117,0.943,118,0.349,119,0.92,120,0.464,121,0.464,122,0.005,123,0.008,124,0.008,146,1.868,147,2.182,169,1.029,179,1.029,180,1.9,206,4.504,211,3.178,214,2.218,215,1.138,216,1.284,231,0.941,237,2.365,238,3.212,243,0.807,244,0.752,245,0.66,250,0.732,251,0.869,266,0.585,280,2.584,283,0.414,285,1.963,286,1.9,293,2.526,296,1.451,299,0.881,300,2.255,302,1.284,305,2.507,306,1.335,307,1.284,316,2.892,322,2.212,342,0.732,346,1.166,361,3.55,387,0.807,388,0.869,389,1.718,394,1.618,395,1.029,398,2.253,400,1.633,402,1.895,424,1.985,440,2.365,453,1.868,456,1.284,461,1.103,469,2.026,470,2.365,502,1.572,520,2.025,523,2.634,533,2.534,536,1.572,538,1.029,558,2.085,563,1.347,569,1.256,570,2.025,571,0.704,572,0.66,573,1.659,574,1.768,575,0.704,576,1.889,577,2.026,579,1.347,581,1.029,588,2.145,596,2.145,600,2.145,615,1.284,616,3.225,617,2.145,623,1.138,627,2.145,630,2.145,644,2.584,648,0.941,667,1.037,698,1.284,705,0.941,715,1.284,731,2.145,732,1.347,733,1.347,735,2.025,737,1.347,740,1.138,741,1.138,743,1.138,745,1.138,747,1.735,749,0.869,751,1.9,752,1.284,755,1.284,757,2.584,762,1.138,767,1.618,769,1.9,770,1.284,789,0.941,792,1.138,798,1.138,823,2.145,861,4.207,865,0.807,867,0.941,887,1.9,914,1.284,915,2.145,935,5.039,939,2.427,961,3.876,985,1.284,1017,0.807,1018,0.941,1019,1.284,1020,3.225,1021,1.138,1032,1.284,1044,2.145,1101,1.284,1102,2.515,1103,3.239,1104,2.515,1105,2.515,1106,3.783,1107,3.783,1108,2.515,1109,3.783,1110,3.225,1111,2.858,1112,3.783,1113,2.515,1114,3.783,1115,4.207,1116,2.515,1117,3.783,1118,2.515,1119,2.515,1120,1.506,1121,2.515,1122,2.212,1123,1.506,1124,1.506,1125,4.207,1126,1.506,1127,1.506,1128,1.506,1129,1.506,1130,1.506,1131,1.506,1132,1.506,1133,1.506,1134,1.506,1135,1.284,1136,1.506,1137,2.515,1138,1.506,1139,1.506,1140,4.207,1141,1.506,1142,1.506,1143,1.506,1144,1.506,1145,1.506,1146,1.506,1147,1.506,1148,1.506,1149,1.506,1150,1.506,1151,1.506,1152,3.239,1153,1.9,1154,2.515,1155,2.515,1156,2.515,1157,1.506,1158,2.515,1159,1.506,1160,2.515,1161,3.783,1162,2.515,1163,1.506,1164,3.783,1165,2.515,1166,2.515,1167,2.515,1168,1.506,1169,1.506,1170,2.515,1171,2.515,1172,2.515,1173,1.9,1174,2.515,1175,2.515,1176,1.506,1177,2.515,1178,2.515,1179,1.506,1180,2.515,1181,4.207,1182,1.506,1183,1.506,1184,2.145,1185,1.506,1186,1.506,1187,1.506,1188,1.506,1189,1.506,1190,1.506,1191,1.506,1192,1.506,1193,1.506,1194,1.506,1195,1.506,1196,1.506,1197,1.506,1198,1.506,1199,1.506,1200,1.506,1201,1.506,1202,1.506,1203,1.506,1204,1.506,1205,1.506,1206,1.506,1207,1.506,1208,1.506,1209,1.506,1210,2.515,1211,1.506,1212,1.506,1213,1.506,1214,1.506,1215,1.506,1216,1.506,1217,1.506,1218,1.506,1219,1.506,1220,1.506,1221,1.506,1222,1.284,1223,1.506,1224,1.506,1225,3.783,1226,1.284,1227,1.506,1228,1.506,1229,1.506,1230,1.506,1231,3.239,1232,3.239,1233,1.506,1234,1.506,1235,1.506,1236,1.506,1237,1.506,1238,1.506,1239,1.506,1240,1.506,1241,1.506,1242,1.506,1243,1.506,1244,1.506,1245,1.506,1246,1.506,1247,1.506,1248,1.506,1249,1.506,1250,3.239,1251,3.783,1252,1.506,1253,3.239,1254,1.506,1255,1.506,1256,1.506,1257,1.506,1258,1.506,1259,1.506,1260,1.506,1261,1.506,1262,1.506,1263,1.506,1264,1.506,1265,1.506,1266,1.506,1267,1.506,1268,1.506,1269,1.718,1270,1.506,1271,2.515,1272,2.515,1273,1.506,1274,1.506,1275,3.239,1276,1.506,1277,1.506,1278,1.506,1279,1.506,1280,2.515,1281,1.506,1282,1.506,1283,1.506,1284,1.506,1285,2.515,1286,2.515,1287,2.515,1288,2.515,1289,2.515,1290,1.9,1291,1.506,1292,2.515,1293,1.284,1294,1.506,1295,1.506,1296,2.515,1297,1.506,1298,1.506,1299,1.284,1300,1.506,1301,1.506,1302,1.506,1303,2.515,1304,1.506,1305,1.506,1306,1.506,1307,1.506,1308,1.506,1309,1.506,1310,1.506,1311,1.506,1312,1.506,1313,1.506,1314,1.284,1315,1.506,1316,1.506,1317,1.506,1318,1.506]],["title/components/LoginComponent.html",[0,0.251,106,0.726]],["body/components/LoginComponent.html",[0,0.347,1,0.488,2,0.868,3,0.112,4,0.098,5,0.613,6,0.613,7,0.613,8,0.613,9,0.098,13,0.613,14,1.812,15,1.617,16,0.909,18,0.868,20,0.868,22,0.112,23,0.443,24,1.058,26,0.994,30,0.671,32,0.242,35,0.534,37,0.26,38,0.023,39,0.31,40,0.47,41,0.26,43,1.034,45,2.238,46,1.69,47,0.782,48,1.187,53,2.086,54,1.5,55,1.5,56,1.634,58,0.834,60,0.694,61,1.148,64,0.82,65,1.142,66,1.148,67,0.206,68,0.221,69,0.009,77,0.547,78,0.972,79,0.972,80,0.613,81,1.375,82,0.613,84,0.613,85,0.488,86,0.613,87,0.488,88,0.613,89,0.488,90,0.547,91,0.972,92,0.461,93,0.613,94,0.488,95,0.613,96,0.488,97,0.613,98,0.69,99,0.82,100,0.613,101,0.461,102,0.613,103,0.461,104,0.488,105,0.613,106,0.92,107,0.613,108,0.488,109,1.429,110,0.613,111,0.461,112,0.613,113,0.461,114,1.187,115,0.613,116,0.488,117,0.579,118,0.461,119,0.435,120,0.613,121,0.613,122,0.01,123,0.01,124,0.006,150,1.959,151,2.134,152,2.086,155,2.575,158,1.359,159,2.262,160,1.359,161,1.244,162,1.148,163,1.148,164,1.244,182,0.82,185,1.359,233,1.148,234,1.359,243,2.101,244,2.431,245,2.469,246,1.359,250,1.417,259,2.321,266,0.772,267,1.576,285,1.225,292,1.696,293,2.587,297,2.086,299,1.239,306,2.391,311,0.613,342,1.142,346,1.375,387,1.066,394,1.576,399,1.69,400,1.225,402,1.029,458,1.148,460,1.359,461,2.781,462,2.086,463,2.79,464,1.066,465,1.359,466,2.384,467,2.384,468,2.384,469,2.607,470,2.79,471,4.101,472,2.451,473,1.503,474,2.808,475,1.82,476,2.384,477,1.503,478,1.503,479,1.503,480,1.503,481,1.503,482,2.384,483,2.963,484,1.503,485,1.359,486,2.963,487,2.963,488,1.503,489,2.963,490,3.324,491,1.82,492,3.538,493,2.451,494,2.963,495,2.963,496,2.963,497,2.451,498,0.82,499,1.244,500,1.503,501,1.503,502,2.451,503,1.503,504,1.475,505,1.244,506,2.963,507,2.384,508,4.254,509,2.384,510,2.384,511,1.82,512,1.972,513,2.384,514,2.384,515,1.69,516,2.384,517,2.384,518,3.372,519,2.384,520,3.238,521,2.384,522,1.82,523,2.135,524,3.372,525,1.503,526,1.503,527,1.503,528,1.503,529,1.503,530,1.503,531,1.503,532,2.384,533,2.086,534,3.538,535,2.384,536,1.972,537,1.69,538,3.049,539,2.384,540,2.391,541,4.254,542,1.82,543,3.049,544,1.503,545,1.503,546,1.503,547,1.503,548,1.503,549,1.503,550,1.503,551,3.372,552,3.372,553,1.503,554,1.066,555,2.963,556,2.451,557,2.963,558,1.617,559,1.503,560,1.503,561,1.503,562,1.503,563,1.69,564,1.82,565,3.372,566,1.503,567,1.503,568,2.384,569,0.994,570,1.244,571,0.93,572,0.872,573,2.134,574,0.93,575,0.93,576,0.994,577,1.69,578,2.384,579,2.391,580,1.503,581,1.359,732,1.066,733,1.066,737,1.066,743,1.503,747,1.066,749,1.148,767,0.994,782,1.148,865,1.066,867,1.244,905,2.79,906,3.049,907,3.806,908,3.372,1014,1.696,1017,2.774,1018,1.244,1023,1.244,1025,1.359,1026,1.972,1027,1.972,1034,1.696,1319,2.69,1320,4.464,1321,3.155,1322,3.155,1323,3.155,1324,1.989,1325,1.989,1326,1.989,1327,1.989,1328,1.989,1329,1.989,1330,1.989,1331,1.989,1332,1.989,1333,1.989,1334,1.989,1335,1.989,1336,1.989,1337,1.989,1338,1.989,1339,1.989,1340,1.989,1341,1.989,1342,1.989,1343,1.989,1344,3.155,1345,3.155,1346,1.989,1347,1.989,1348,1.696,1349,1.696]],["title/classes/MyErrorStateMatcher.html",[69,0.01,472,2.203]],["body/classes/MyErrorStateMatcher.html",[0,0.355,3,0.166,4,0.145,9,0.145,14,0.811,15,0.724,16,0.683,18,0.811,20,0.811,22,0.166,24,0.91,26,1.473,30,0.75,35,0.233,37,0.386,38,0.023,39,0.271,40,0.233,41,0.386,43,0.985,45,1.753,46,1.579,47,0.474,48,0.93,53,2.331,56,1.998,58,0.729,60,0.758,61,1.701,64,1.216,65,1.238,66,1.701,67,0.306,68,0.28,69,0.013,98,0.645,99,0.766,106,0.608,109,1.156,114,0.93,122,0.013,123,0.013,124,0.009,150,1.473,151,1.293,152,1.378,155,2.453,158,2.014,159,2.453,160,2.014,161,1.843,162,1.701,163,1.701,164,1.843,182,1.216,185,2.014,233,1.701,234,2.014,243,2.672,244,2.727,245,2.726,246,2.014,250,1.59,259,2.386,266,1.145,267,2.124,285,1.145,293,2.491,297,1.988,299,1.229,306,2.386,311,0.908,315,1.378,342,1.452,346,0.908,400,1.145,402,0.962,458,1.701,460,2.014,461,2.187,462,2.331,463,3.77,464,1.579,465,2.014,466,4.125,467,4.125,468,3.768,469,2.278,470,2.658,471,4.125,472,3.118,473,3.213,474,3.671,475,3.15,476,3.213,477,2.228,478,3.213,479,2.228,480,2.228,481,2.228,482,2.228,483,2.228,484,2.228,485,2.014,486,2.228,487,2.228,488,2.228,489,2.228,490,2.014,491,1.701,492,3.407,493,1.843,494,2.228,495,2.228,496,2.228,497,1.843,498,1.216,499,1.843,500,2.228,501,2.228,502,1.843,503,2.228,504,1.988,505,1.843,506,2.228,507,2.228,508,4.125,509,2.228,510,2.228,511,1.701,512,1.843,513,2.228,514,2.228,515,1.579,516,2.228,517,2.228,518,3.213,519,2.228,520,3.118,521,2.228,522,1.701,523,2.056,524,2.228,525,2.228,526,2.228,527,2.228,528,2.228,529,2.228,530,2.228,531,2.228,532,2.228,533,1.988,534,2.904,535,2.228,536,1.843,537,1.579,538,2.904,539,2.228,540,2.278,541,3.768,542,1.701,543,2.014,544,2.228,545,2.228,546,2.228,547,2.228,548,2.228,549,2.228,550,2.228,551,4.125,552,4.125,553,2.228,554,1.579,555,3.768,556,3.118,557,3.768,558,2.056,559,2.228,560,2.228,561,2.228,562,2.228,563,1.579,564,1.701,565,2.228,566,2.228,567,2.228,568,3.213,569,1.473,570,1.843,571,1.378,572,1.293,573,1.293,574,1.378,575,1.378,576,1.473,577,1.579,578,2.228,579,1.579,580,2.228,581,2.014,1350,4.252,1351,2.948]],["title/components/PasswordSpecsComponent.html",[0,0.251,108,0.865]],["body/components/PasswordSpecsComponent.html",[0,0.417,1,0.982,2,1.443,3,0.225,4,0.196,5,1.232,6,1.232,7,1.232,8,1.232,9,0.196,13,1.232,14,1.997,15,1.782,16,0.927,18,1.443,20,1.443,22,0.225,30,0.789,32,0.712,35,0.415,38,0.022,39,0.334,47,0.643,48,1.147,60,0.45,65,1.705,67,0.415,68,0.225,69,0.012,77,1.1,78,1.617,79,1.617,80,1.232,81,1.915,82,1.232,84,1.232,85,0.982,86,1.232,87,0.982,88,1.232,89,0.982,90,1.1,91,1.617,92,0.927,93,1.232,94,0.982,95,1.232,96,0.982,97,1.232,98,0.874,99,1.039,100,1.232,101,0.927,102,1.232,103,0.927,104,0.982,105,1.232,106,0.824,107,1.232,108,1.526,109,1.643,110,1.232,111,0.927,112,1.232,113,0.927,114,0.874,115,1.232,116,0.982,117,1.164,118,0.927,119,0.874,120,1.232,121,1.232,122,0.012,123,0.016,124,0.012,201,3.66,321,2.163,342,1.527,346,1.915,443,4.473,445,4.473,1293,4.473,1352,4.992,1353,3.41,1354,5.247,1355,5.855,1356,5.247,1357,3.999,1358,3.999,1359,4.473,1360,5.247,1361,5.247,1362,6.216,1363,5.247,1364,5.247,1365,5.247,1366,5.247,1367,5.247,1368,5.247,1369,5.247]],["title/classes/Post.html",[69,0.01,214,1.546]],["body/classes/Post.html",[3,0.225,4,0.196,9,0.196,22,0.225,23,0.737,24,1.325,25,1.147,32,0.638,35,0.533,37,0.523,38,0.022,39,0.396,40,0.552,41,0.523,58,1.232,68,0.225,69,0.012,119,1.28,122,0.012,123,0.016,124,0.012,129,3.894,214,3.038,251,2.415,283,1.857,297,1.869,299,1.286,315,1.869,321,2.904,323,3.66,326,5.484,330,4.696,333,2.732,336,2.732,424,2.507,461,2.301,644,2.732,939,3.027,1370,3.41,1371,6.454,1372,3.999,1373,3.999,1374,3.999,1375,3.999,1376,3.999,1377,3.964,1378,3.999,1379,3.999,1380,5.247,1381,3.999]],["title/injectables/PostProposalService.html",[147,2.033,279,0.684]],["body/injectables/PostProposalService.html",[3,0.209,4,0.182,9,0.182,16,1.643,22,0.209,23,0.701,24,0.677,25,1.091,30,0.751,32,0.607,35,0.512,37,0.738,38,0.023,39,0.359,40,0.512,41,0.738,47,0.97,48,1.091,54,1.738,55,1.738,58,0.967,60,0.679,67,0.385,68,0.209,69,0.011,90,1.66,117,1.888,122,0.011,123,0.015,124,0.011,126,1.44,147,2.879,204,1.627,214,2.906,251,1.724,279,0.969,281,1.44,283,1.021,303,1.627,305,2.058,306,2.843,311,1.738,321,2.058,348,2.493,402,2.333,424,1.358,440,3.12,515,3.473,523,2.487,533,2.333,648,4.142,667,2.487,717,2.534,929,2.817,938,3.741,960,1.853,980,4.255,1222,4.255,1382,3.163,1383,4.991,1384,4.991,1385,4.991,1386,4.991,1387,4.991,1388,1.987,1389,4.991,1390,1.987,1391,3.71,1392,3.71,1393,6.033,1394,3.71,1395,3.71,1396,3.71,1397,3.71,1398,3.71,1399,3.71,1400,3.71,1401,3.71,1402,3.71,1403,3.71,1404,3.71,1405,2.534,1406,3.71,1407,3.71,1408,3.71,1409,3.71,1410,3.71,1411,3.71,1412,3.71,1413,3.71,1414,3.71,1415,3.71,1416,3.71]],["title/classes/Proposal.html",[69,0.01,402,1.15]],["body/classes/Proposal.html",[3,0.239,4,0.208,9,0.208,22,0.239,23,0.766,24,1.321,25,0.928,32,0.773,35,0.532,37,0.555,38,0.022,39,0.27,40,0.554,41,0.788,58,1.201,68,0.239,69,0.019,122,0.013,123,0.016,124,0.013,129,4,251,2.395,283,1.943,285,2.339,315,1.983,321,2.621,323,3.766,348,3.419,363,2.652,402,2.361,424,2.564,425,3.618,667,2.711,798,3.206,939,3.475,1377,4.551,1417,3.618,1418,4.243,1419,4.243,1420,4.243,1421,4.243,1422,4.243,1423,4.243,1424,4.243,1425,4.243,1426,4.243,1427,4.243,1428,4.243]],["title/injectables/ProposalService.html",[148,2.033,279,0.684]],["body/injectables/ProposalService.html",[3,0.144,4,0.125,9,0.125,22,0.144,23,0.537,30,0.575,32,0.465,35,0.532,37,0.799,38,0.022,39,0.389,40,0.532,41,0.799,43,1.547,47,1.073,54,1.83,55,1.83,58,1.09,60,0.573,67,0.265,68,0.144,69,0.008,122,0.008,123,0.012,124,0.008,126,0.991,148,2.206,204,1.119,214,2.234,251,2.459,279,0.742,281,0.991,283,1.718,285,2.371,287,3.848,288,4.614,297,3.17,299,1.045,303,1.119,311,1.83,314,3.774,316,2.974,321,2.965,340,3.848,345,3.261,348,3.464,352,3.818,402,2.31,411,2.206,498,1.052,515,3.576,533,1.787,597,3.261,598,3.261,603,3.261,620,3.261,632,2.176,634,5.423,636,2.176,667,2.727,727,3.261,820,3.261,929,2.725,938,4.034,960,1.275,1388,1.367,1390,2.048,1405,1.743,1429,2.176,1430,4.586,1431,3.824,1432,3.824,1433,3.824,1434,3.824,1435,3.824,1436,3.824,1437,3.824,1438,3.824,1439,3.824,1440,3.824,1441,3.824,1442,2.552,1443,2.552,1444,2.552,1445,2.552,1446,2.552,1447,2.552,1448,2.552,1449,2.552,1450,5.094,1451,4.586,1452,2.552,1453,2.552,1454,2.552,1455,5.094,1456,2.552,1457,3.824,1458,2.552,1459,2.552,1460,2.552,1461,2.552,1462,2.552,1463,2.552,1464,2.552,1465,2.552,1466,2.552,1467,2.552,1468,2.552,1469,2.552,1470,2.552,1471,2.552,1472,2.552,1473,2.552,1474,2.552,1475,2.552,1476,2.552,1477,2.552,1478,2.552,1479,2.552,1480,2.552,1481,2.552,1482,2.552,1483,2.552,1484,2.552,1485,2.552,1486,2.552,1487,2.552,1488,2.552,1489,2.552,1490,2.552]],["title/components/RegisterComponent.html",[0,0.251,111,0.817]],["body/components/RegisterComponent.html",[0,0.264,1,0.725,2,0.812,3,0.209,4,0.09,5,0.909,6,0.564,7,0.564,8,0.564,9,0.09,11,1.056,13,0.564,14,1.784,15,1.592,16,0.684,17,1.845,18,0.812,20,0.812,22,0.103,23,0.415,24,1.029,25,0.811,26,1.474,28,2.918,30,0.444,32,0.359,35,0.516,37,0.239,38,0.023,39,0.348,40,0.432,41,0.239,43,1.342,45,2.325,46,2.279,47,0.878,48,1.091,54,1.438,55,1.889,56,1.558,58,0.729,60,0.635,64,0.754,65,1.08,67,0.19,68,0.103,69,0.005,77,0.503,78,0.909,79,0.909,80,0.564,81,1.438,82,0.564,84,0.564,85,0.449,86,0.564,87,0.449,88,0.564,89,0.449,90,1.02,91,0.909,92,0.424,93,0.564,94,0.449,95,0.564,96,0.449,97,0.564,98,0.4,99,0.476,100,0.564,101,0.424,102,0.564,103,0.424,104,0.449,105,0.564,106,0.377,107,0.564,108,0.725,109,1.441,110,0.564,111,0.986,112,0.564,113,0.424,114,0.4,115,0.564,116,0.449,117,0.533,118,0.424,119,1.34,120,0.564,121,0.564,122,0.006,123,0.009,124,0.006,153,2.279,163,1.056,165,1.382,182,0.754,188,3.966,201,1.144,202,1.382,205,1.25,228,2.23,236,1.382,245,1.294,250,0.859,251,0.632,259,1.925,266,0.71,267,1.474,293,2.893,299,0.958,306,1.217,311,1.143,342,0.859,346,1.311,367,1.25,370,1.25,387,0.98,388,1.056,393,1.382,394,1.474,398,2.5,399,2.279,400,2.038,424,1.827,451,2.455,453,2.14,461,2.473,462,1.734,464,0.98,469,2.5,475,2.455,491,2.14,504,2.182,505,1.144,522,1.703,523,1.754,533,1.989,537,1.581,540,2.279,542,1.703,554,0.98,556,1.845,558,2.325,563,1.581,564,2.14,569,0.914,571,1.38,572,1.294,573,2.819,574,1.734,575,2.182,576,1.474,577,2.279,579,2.279,732,1.581,733,1.581,735,2.66,737,0.98,742,1.382,745,2.23,747,0.98,749,1.056,767,0.914,782,1.703,825,2.516,831,2.016,865,1.987,879,2.907,903,2.516,904,1.382,905,3.771,906,2.016,908,3.215,939,1.703,1003,4.127,1007,1.56,1009,2.016,1011,1.56,1017,2.279,1018,1.144,1021,1.382,1023,1.144,1025,1.25,1026,1.144,1027,1.144,1030,1.56,1111,3.215,1226,1.56,1269,2.016,1314,1.56,1349,2.516,1359,2.516,1491,1.56,1492,3.709,1493,2.951,1494,3.709,1495,3.628,1496,3.628,1497,3.162,1498,3.709,1499,3.162,1500,4.991,1501,3.215,1502,1.56,1503,3.77,1504,3.162,1505,2.951,1506,1.83,1507,2.951,1508,1.83,1509,2.951,1510,2.951,1511,1.83,1512,2.951,1513,2.516,1514,2.951,1515,2.951,1516,2.951,1517,2.516,1518,1.83,1519,1.83,1520,2.951,1521,1.83,1522,2.23,1523,2.23,1524,2.23,1525,2.951,1526,1.83,1527,1.83,1528,1.83,1529,1.83,1530,1.83,1531,1.83,1532,1.83,1533,1.83,1534,1.83,1535,1.83,1536,2.319,1537,1.83,1538,1.25,1539,1.56,1540,1.83,1541,1.56,1542,1.56,1543,1.56,1544,1.56,1545,1.382,1546,1.382,1547,1.56,1548,1.83,1549,1.382,1550,3.215,1551,2.802,1552,1.83,1553,1.83,1554,3.628,1555,2.951,1556,1.83,1557,1.56,1558,1.83,1559,1.56,1560,1.56,1561,1.56,1562,1.56,1563,1.56,1564,2.951,1565,1.83,1566,1.83,1567,1.56,1568,1.56,1569,1.56,1570,1.56,1571,2.951,1572,1.83,1573,1.83,1574,1.83,1575,1.83,1576,1.56,1577,1.83,1578,1.56,1579,3.162,1580,1.83,1581,1.56,1582,1.56,1583,1.83,1584,1.83,1585,1.83,1586,1.83,1587,1.56,1588,2.516,1589,2.516,1590,2.516,1591,2.516,1592,2.802,1593,3.162,1594,2.516,1595,1.83,1596,1.83,1597,1.83,1598,1.25,1599,4.255,1600,4.127,1601,2.951,1602,2.516,1603,3.628,1604,3.628,1605,2.516,1606,2.951,1607,2.951,1608,2.951,1609,2.951,1610,1.56,1611,1.56,1612,1.56,1613,1.56,1614,1.56,1615,1.83,1616,2.951,1617,3.709,1618,1.83,1619,1.83,1620,1.83,1621,1.83,1622,1.83,1623,1.83,1624,1.83]],["title/components/ResetLinkComponent.html",[0,0.251,113,0.817]],["body/components/ResetLinkComponent.html",[0,0.324,1,0.931,2,1.043,3,0.256,4,0.124,5,0.778,6,0.778,7,0.778,8,0.778,9,0.124,11,1.456,13,0.778,14,1.886,15,1.683,16,1.174,17,2.371,18,1.043,20,1.043,22,0.142,23,0.533,24,0.692,25,0.552,26,1.894,29,3.233,30,0.57,32,0.307,35,0.516,37,0.33,38,0.023,39,0.29,40,0.429,41,0.33,43,1.174,45,2.351,46,2.031,47,0.814,48,1.187,53,1.18,54,1.404,55,1.823,56,1.388,58,0.433,60,0.685,64,1.04,65,1.326,67,0.262,68,0.142,69,0.007,77,0.694,78,1.168,79,1.168,80,0.778,81,1.757,82,0.778,84,0.778,85,0.62,86,0.778,87,0.62,88,0.778,89,0.62,90,0.694,91,1.168,92,0.585,93,0.778,94,0.62,95,0.778,96,0.62,97,0.778,98,0.552,99,0.656,100,0.778,101,0.585,102,0.778,103,0.585,104,0.62,105,0.778,106,0.52,107,0.778,108,0.931,109,1.544,110,0.778,111,0.585,112,0.778,113,1.174,114,1.48,115,0.778,116,0.62,117,0.735,118,0.585,119,0.552,120,0.778,121,0.778,122,0.008,123,0.011,124,0.008,149,2.713,182,1.04,201,1.578,202,1.907,205,1.724,239,4.507,247,1.907,248,1.907,250,1.475,266,0.98,267,1.894,299,0.692,306,1.878,342,1.104,346,1.561,387,1.352,394,1.261,398,2.44,399,1.352,400,1.472,420,1.456,440,2.371,451,2.922,462,2.129,464,1.352,469,2.908,491,2.922,492,2.59,504,1.773,523,1.563,554,2.44,556,2.371,558,1.878,571,1.18,572,1.107,573,2.594,574,1.18,575,1.18,576,1.261,577,2.031,579,2.713,719,1.907,732,1.352,733,1.352,737,1.352,747,1.352,749,1.456,767,1.261,782,1.456,865,1.352,867,1.578,879,3.46,886,4.309,899,2.865,905,3.166,934,2.865,991,4.629,999,2.152,1017,2.908,1023,1.578,1026,1.578,1027,1.578,1269,2.59,1348,2.152,1495,4.319,1496,4.319,1501,3.827,1503,4.47,1517,3.233,1522,2.865,1523,2.865,1524,2.865,1538,1.724,1539,2.152,1541,2.152,1542,2.152,1543,2.152,1544,2.152,1545,1.907,1546,1.907,1549,1.907,1550,1.907,1551,1.907,1554,2.152,1559,2.152,1560,2.152,1561,2.152,1562,2.152,1563,2.152,1567,2.152,1568,2.152,1592,1.907,1600,2.865,1603,4.319,1604,4.319,1605,3.233,1625,5.626,1626,2.152,1627,4.555,1628,3.792,1629,4.555,1630,4.629,1631,3.792,1632,2.524,1633,3.884,1634,3.792,1635,2.524,1636,2.524,1637,3.792,1638,5.065,1639,3.792,1640,2.524,1641,3.792,1642,3.792,1643,2.524,1644,2.524,1645,2.524,1646,3.792,1647,2.524,1648,2.524,1649,2.524,1650,2.524,1651,2.524,1652,2.524,1653,2.524,1654,3.792,1655,2.524,1656,2.524,1657,2.524,1658,3.792,1659,2.524,1660,2.524,1661,2.524,1662,2.524,1663,2.524,1664,2.524,1665,2.524,1666,2.524,1667,3.792,1668,2.524,1669,2.524,1670,2.524,1671,2.524]],["title/injectables/ResetPasswordService.html",[149,1.888,279,0.684]],["body/injectables/ResetPasswordService.html",[3,0.214,4,0.187,9,0.187,22,0.214,23,0.714,24,0.928,25,1.429,30,0.765,32,0.464,35,0.502,37,0.798,38,0.022,39,0.388,40,0.402,41,0.798,43,1.515,47,0.919,60,0.572,67,0.396,68,0.214,69,0.011,109,1.515,114,1.112,122,0.012,123,0.015,124,0.012,126,1.481,149,2.723,204,1.673,250,1.48,251,2.107,279,0.987,281,1.481,283,1.573,285,1.974,299,1.193,303,1.673,311,1.762,411,2.933,420,2.2,461,2.866,540,3.501,542,2.933,558,2.096,623,3.841,667,2.358,886,3.841,887,3.841,888,3.841,906,3.473,929,3.174,1184,4.335,1388,2.043,1390,3.268,1630,5.91,1633,4.877,1672,5.573,1673,3.252,1674,5.085,1675,5.72,1676,3.814,1677,5.085,1678,3.814,1679,5.085,1680,5.085,1681,6.101,1682,5.085,1683,5.085,1684,5.085,1685,3.814,1686,6.101,1687,5.085,1688,5.085,1689,4.335,1690,4.335,1691,5.085,1692,3.814,1693,5.085,1694,5.085,1695,5.085,1696,3.814,1697,4.321,1698,3.814,1699,4.877,1700,4.877,1701,3.814,1702,3.814,1703,3.814]],["title/components/ShareProposalComponent.html",[0,0.251,116,0.865]],["body/components/ShareProposalComponent.html",[0,0.443,1,0.879,2,1.341,3,0.201,4,0.176,5,1.104,6,1.104,7,1.104,8,1.104,9,0.176,13,1.104,14,1.974,15,1.761,16,0.83,18,1.341,20,1.341,22,0.201,24,0.654,25,0.783,30,0.733,35,0.283,38,0.022,39,0.31,43,1.13,45,1.477,47,0.576,48,1.066,56,1.311,60,0.669,64,1.477,65,1.613,66,2.067,67,0.372,68,0.201,69,0.011,77,0.986,78,1.502,79,1.502,80,1.104,81,1.832,82,1.104,84,1.104,85,0.879,86,1.104,87,0.879,88,1.104,89,0.879,90,0.986,91,1.502,92,0.83,93,1.104,94,1.36,95,1.104,96,0.879,97,1.104,98,0.783,99,0.931,100,1.104,101,0.83,102,1.104,103,0.83,104,0.879,105,1.104,106,0.738,107,1.104,108,0.879,109,0.83,110,1.104,111,0.83,112,1.104,113,0.83,114,0.783,115,1.104,116,1.575,117,1.995,118,0.83,119,1.3,120,1.104,121,1.104,122,0.011,123,0.015,124,0.011,181,3.054,182,2.01,230,3.683,231,3.047,238,2.812,250,1.419,259,1.477,283,0.986,305,2.565,311,1.707,316,2.138,338,3.047,339,3.683,342,1.419,346,1.832,401,2.707,402,2.179,405,4.724,406,4.156,411,2.812,416,3.054,420,2.067,423,3.054,424,1.784,450,4.156,451,2.812,452,4.156,462,2.278,504,1.674,563,2.611,612,4.156,643,4.156,1377,4.493,1598,3.329,1704,4.875,1705,3.582,1706,3.582,1707,3.582,1708,3.582,1709,3.582,1710,3.582,1711,3.582,1712,3.582,1713,4.875,1714,4.875,1715,4.875,1716,3.582,1717,4.875,1718,3.582,1719,4.875,1720,3.582,1721,3.582,1722,3.582,1723,3.582]],["title/injectables/SocialMediaAuthService.html",[150,1.761,279,0.684]],["body/injectables/SocialMediaAuthService.html",[3,0.198,4,0.173,9,0.173,22,0.198,23,0.677,24,1.166,25,1.054,30,0.725,32,0.429,35,0.54,37,0.719,38,0.023,39,0.35,40,0.467,41,0.719,43,1.118,47,1.07,48,1.054,53,1.648,54,1.087,55,1.087,56,1.291,58,1.121,60,0.696,67,0.366,68,0.198,69,0.01,90,1.327,104,1.184,119,1.054,122,0.011,123,0.015,124,0.011,126,1.369,150,2.409,151,2.713,159,4.01,162,2.035,204,1.547,244,1.762,259,1.454,266,1.369,279,0.936,281,1.369,289,3.644,293,3.266,299,1.277,300,2.762,303,1.547,306,1.988,311,1.968,370,4.226,381,2.664,474,3.171,497,3.436,498,1.454,499,2.205,511,2.035,512,3.015,540,2.583,543,3.294,667,1.454,904,4.464,929,2.951,1290,4.464,1388,1.889,1390,2.583,1513,4.112,1598,3.294,1697,2.664,1724,5.88,1725,3.007,1726,4.686,1727,4.112,1728,5.037,1729,5.037,1730,5.037,1731,4.823,1732,4.112,1733,3.527,1734,3.527,1735,3.527,1736,3.527,1737,3.527,1738,4.823,1739,3.527,1740,4.823,1741,5.908,1742,3.527,1743,3.527,1744,3.007,1745,3.007,1746,3.007,1747,3.527,1748,3.007,1749,3.527,1750,3.527,1751,3.007,1752,3.007,1753,3.007,1754,4.112]],["title/components/TeamComponent.html",[0,0.251,118,0.817]],["body/components/TeamComponent.html",[0,0.33,1,0.949,2,1.064,3,0.146,4,0.127,5,0.798,6,0.798,7,0.798,8,0.798,9,0.127,11,1.495,13,0.798,14,1.893,15,1.689,16,0.896,17,2.418,18,1.064,20,1.064,22,0.146,23,0.543,24,1.051,25,1.012,26,1.294,28,2.893,30,0.582,32,0.47,35,0.529,37,0.339,38,0.023,39,0.406,40,0.472,41,0.339,43,1.189,45,2.461,46,2.072,47,0.744,48,1.122,54,1.426,55,1.426,56,1.416,58,0.663,60,0.69,64,1.068,65,1.347,67,0.269,68,0.146,69,0.008,77,0.713,78,1.192,79,1.192,80,0.798,81,1.692,82,0.798,84,0.798,85,0.636,86,0.798,87,0.636,88,0.798,89,0.636,90,1.273,91,1.192,92,0.6,93,0.798,94,0.636,95,0.798,96,0.636,97,0.798,98,0.566,99,0.673,100,0.798,101,0.6,102,0.798,103,0.6,104,0.636,105,0.798,106,0.534,107,0.798,108,0.636,109,0.896,110,0.798,111,0.6,112,0.798,113,0.6,114,0.566,115,0.798,116,0.636,117,0.754,118,1.189,119,1.512,120,0.798,121,0.798,122,0.008,123,0.012,124,0.008,151,2.408,153,2.749,161,1.62,162,1.495,163,1.495,165,1.958,182,1.068,205,1.77,237,2.418,243,1.388,244,1.294,245,2.029,250,1.126,259,2.116,266,1.006,267,1.294,293,3.189,299,1.002,306,2.116,311,0.798,342,1.126,346,1.581,387,1.388,394,1.294,398,2.072,399,2.072,400,1.502,424,1.416,451,2.961,461,1.136,462,2.163,464,1.388,469,2.941,470,3.208,475,1.495,491,1.495,493,2.893,499,1.62,502,2.893,504,1.211,522,2.231,523,1.595,533,1.808,537,2.072,542,2.231,554,1.388,558,1.595,564,2.67,569,1.294,571,1.211,572,1.136,573,2.408,574,1.211,575,2.163,576,1.294,577,2.072,747,1.388,749,1.495,767,1.294,782,1.495,831,2.642,865,1.388,879,3.505,899,1.958,905,3.208,1003,3.877,1017,2.749,1018,1.62,1023,1.62,1025,1.77,1026,1.62,1027,1.62,1269,1.77,1497,3.946,1499,3.946,1501,3.877,1502,2.209,1503,4.352,1504,3.946,1523,2.922,1524,2.922,1545,1.958,1546,1.958,1547,2.209,1549,1.958,1550,1.958,1551,1.958,1569,2.209,1570,2.209,1576,2.209,1578,2.209,1579,2.209,1581,2.209,1582,2.209,1587,2.209,1588,3.298,1589,3.298,1590,3.298,1591,3.298,1592,2.922,1593,3.298,1594,3.298,1599,3.298,1600,2.922,1602,3.298,1610,2.209,1611,2.209,1612,2.209,1613,2.209,1614,2.209,1690,3.298,1755,2.209,1756,4.628,1757,3.868,1758,4.628,1759,3.946,1760,3.868,1761,2.591,1762,2.591,1763,2.591,1764,2.591,1765,2.591,1766,2.591,1767,2.591,1768,2.591,1769,2.591,1770,2.591,1771,2.591,1772,2.591,1773,2.591,1774,2.591,1775,2.591,1776,2.209,1777,2.591,1778,2.591,1779,2.591,1780,2.591,1781,2.591,1782,2.591,1783,2.591,1784,3.868,1785,2.591,1786,2.591]],["title/classes/Teams.html",[69,0.01,424,1.29]],["body/classes/Teams.html",[3,0.292,4,0.255,9,0.255,22,0.292,23,0.868,24,1.291,32,0.751,35,0.521,37,0.679,38,0.022,39,0.444,40,0.521,41,0.679,58,1.13,68,0.292,69,0.015,122,0.016,123,0.019,124,0.016,251,2.278,315,2.427,320,3.923,321,2.719,333,3.546,336,3.546,424,2.261,1787,4.427,1788,5.192,1789,5.192,1790,5.192]],["title/injectables/TeamsService.html",[279,0.684,1122,2.407]],["body/injectables/TeamsService.html",[3,0.28,4,0.244,9,0.244,22,0.28,23,0.847,30,0.907,32,0.606,35,0.512,37,0.652,38,0.022,39,0.317,40,0.476,41,0.652,47,0.801,54,1.535,55,1.535,58,0.854,60,0.757,67,0.517,68,0.28,69,0.015,122,0.015,123,0.018,124,0.015,126,1.934,204,2.185,279,1.17,281,1.934,303,2.185,311,1.535,424,2.206,498,2.054,515,3.228,929,3.236,938,3.477,960,2.489,1111,4.895,1122,4.116,1388,2.669,1390,2.669,1405,3.403,1791,4.248,1792,6.027,1793,4.983,1794,4.983,1795,4.983,1796,4.983,1797,4.983]],["title/injectables/TestServiceService.html",[279,0.684,417,2.407]],["body/injectables/TestServiceService.html",[0,0.419,3,0.269,4,0.234,9,0.234,32,0.828,35,0.378,38,0.023,60,0.661,67,0.496,68,0.269,69,0.014,119,1.045,122,0.014,123,0.018,124,0.014,126,1.856,129,3.671,182,1.971,250,1.984,279,1.14,281,1.856,283,1.75,303,2.097,305,2.423,316,2.577,402,1.559,417,4.014,424,2.151,462,2.974,463,3.978,465,3.265,474,2.758,475,3.931,504,2.235,939,2.758,1009,3.265,1798,5.011,1799,4.076,1800,5.877,1801,4.781,1802,5.877,1803,4.781,1804,6.363,1805,4.781,1806,4.781,1807,4.781,1808,4.781]],["title/injectables/TransferDataService.html",[151,1.546,279,0.684]],["body/injectables/TransferDataService.html",[2,1.656,3,0.28,4,0.244,9,0.244,22,0.28,23,0.846,25,1.549,30,0.906,35,0.476,37,0.651,38,0.022,39,0.316,40,0.393,41,0.651,43,1.395,47,0.799,48,1.087,60,0.677,67,0.516,68,0.28,69,0.015,122,0.015,123,0.018,124,0.015,126,1.931,151,2.64,279,0.965,281,1.931,493,4.047,667,2.05,960,2.484,1689,5.133,1744,5.133,1776,4.24,1809,5.52,1810,4.24,1811,6.02,1812,6.02,1813,4.973,1814,6.02,1815,4.973,1816,4.973,1817,4.973]],["title/classes/User.html",[69,0.01,299,0.643]],["body/classes/User.html",[3,0.251,4,0.219,9,0.219,22,0.251,23,0.791,24,1.314,25,0.976,32,0.685,35,0.528,37,0.584,38,0.022,39,0.446,40,0.559,41,0.584,58,1.228,68,0.251,69,0.013,119,1.545,122,0.013,123,0.017,124,0.013,251,2.356,283,1.229,299,1.307,315,2.088,318,3.808,320,3.374,321,2.544,323,3.857,326,5.38,330,4.662,333,3.847,336,3.847,461,2.991,485,3.051,1818,3.808,1819,4.466,1820,4.466,1821,4.466,1822,4.466,1823,4.466]],["title/injectables/UserLoginService.html",[152,1.647,279,0.684]],["body/injectables/UserLoginService.html",[3,0.197,4,0.172,9,0.172,22,0.197,23,0.674,24,1.23,30,0.722,32,0.425,35,0.544,37,0.771,38,0.023,39,0.375,40,0.504,41,0.771,43,1.112,47,1.068,48,1.049,53,1.636,54,1.078,55,1.078,56,1.281,58,1.227,60,0.616,67,0.363,68,0.197,69,0.01,104,1.178,109,1.652,122,0.011,123,0.014,124,0.011,126,1.359,152,2.242,204,1.535,259,1.443,279,0.931,281,1.359,289,3.624,290,2.644,299,1.23,300,2.242,303,1.535,311,1.963,370,4.539,381,3.624,474,3.397,497,3.422,498,1.443,511,2.019,537,2.569,667,1.978,929,2.942,1094,2.984,1290,4.449,1388,1.874,1390,2.569,1522,4.449,1726,4.667,1727,4.09,1728,5.021,1729,5.021,1730,4.09,1732,4.09,1745,2.984,1746,2.984,1748,2.984,1751,2.984,1752,2.984,1753,2.984,1754,4.09,1824,5.245,1825,2.984,1826,4.797,1827,4.797,1828,3.499,1829,4.797,1830,3.499,1831,4.797,1832,4.09,1833,3.499,1834,3.499,1835,3.499,1836,4.797,1837,3.499,1838,3.499,1839,3.499,1840,3.499,1841,3.499,1842,3.499,1843,3.499,1844,3.499,1845,3.499,1846,4.797,1847,3.499,1848,3.499]],["title/injectables/UserRegisterService.html",[153,1.888,279,0.684]],["body/injectables/UserRegisterService.html",[3,0.253,4,0.221,9,0.221,17,3.54,22,0.253,25,1.238,28,3.54,30,0.852,32,0.547,35,0.489,37,0.741,38,0.022,39,0.36,40,0.356,41,0.741,43,1.506,47,1.099,60,0.731,67,0.467,68,0.253,69,0.013,119,1.238,122,0.014,123,0.017,124,0.014,126,1.748,153,3.033,204,1.975,228,4.278,279,1.099,281,1.748,299,1.033,303,1.975,311,1.908,411,3.267,498,1.857,540,3.033,667,1.857,888,4.278,929,3.094,938,3.267,960,2.249,1110,5.541,1388,2.412,1390,2.412,1405,3.076,1536,3.54,1598,3.867,1697,4.278,1699,3.84,1700,3.84,1824,4.91,1832,4.828,1849,3.84,1850,5.662,1851,4.503,1852,5.662,1853,4.503,1854,5.662,1855,4.503,1856,5.662,1857,4.503,1858,4.503,1859,4.503,1860,4.503,1861,4.503]],["title/coverage.html",[1862,4.11]],["body/coverage.html",[0,0.507,1,0.874,9,0.174,10,3.034,11,2.053,12,3.034,38,0.022,40,0.281,61,2.053,69,0.02,85,0.874,87,0.874,89,0.874,92,0.825,94,0.874,96,0.874,98,0.778,101,0.825,103,0.825,106,0.733,108,0.874,111,0.825,113,0.825,116,0.874,118,0.825,122,0.011,123,0.015,124,0.011,125,3.034,146,2.053,147,2.053,148,2.053,149,1.906,150,1.778,151,1.561,152,1.664,153,1.906,159,2.053,178,2.689,179,2.431,201,2.225,206,2.431,214,1.561,230,2.689,231,2.225,233,2.053,239,2.431,250,1.036,279,1.34,280,2.431,282,3.034,296,2.053,299,0.65,314,2.053,316,2.967,317,3.034,337,3.034,393,2.689,401,3.666,402,1.161,417,2.431,424,1.303,453,3.782,458,2.053,460,3.772,472,2.225,582,3.034,587,3.034,648,2.225,789,2.225,790,3.034,791,3.034,810,3.034,872,3.034,873,3.034,912,3.034,913,3.034,984,3.034,1009,4.815,1017,2.599,1072,3.034,1073,2.689,1075,3.034,1076,3.034,1101,3.034,1122,2.431,1352,3.034,1353,3.034,1370,3.034,1382,3.034,1417,3.034,1429,3.034,1491,3.034,1536,2.225,1538,2.431,1557,3.034,1625,3.034,1626,3.034,1672,3.034,1673,3.034,1724,3.034,1725,3.034,1755,3.034,1787,3.034,1791,3.034,1798,3.034,1799,3.034,1809,3.034,1810,3.034,1818,3.034,1824,3.666,1825,3.034,1849,3.034,1862,3.034,1863,3.559,1864,3.559,1865,3.559,1866,3.559,1867,3.559,1868,5.522,1869,3.559,1870,3.034,1871,6.207,1872,5.522,1873,3.559,1874,3.559,1875,3.034,1876,3.559,1877,3.559,1878,3.559,1879,3.034,1880,3.559,1881,4.853,1882,4.853,1883,4.853,1884,3.559,1885,4.853,1886,3.559,1887,3.559,1888,3.559,1889,3.559,1890,3.559,1891,3.559,1892,3.559,1893,5.522,1894,3.559,1895,3.559,1896,3.559,1897,3.559,1898,3.559,1899,3.559,1900,3.559,1901,3.559,1902,3.559,1903,3.559,1904,3.559,1905,3.559,1906,3.559,1907,3.034,1908,3.559,1909,3.559,1910,3.559,1911,3.559,1912,3.034,1913,3.034,1914,5.931,1915,4.138,1916,3.034,1917,4.138,1918,3.034,1919,3.034,1920,3.559,1921,3.559]],["title/dependencies.html",[135,2.897,1922,2.938]],["body/dependencies.html",[38,0.022,67,0.521,122,0.015,123,0.018,124,0.015,135,3.428,137,3.792,167,5.161,168,4.574,182,2.069,209,5.161,210,3.792,211,3.792,236,4.574,237,3.784,238,2.896,243,2.688,244,2.507,245,2.201,266,1.949,650,3.792,960,2.507,1299,4.28,1923,5.019,1924,6.105,1925,5.019,1926,6.054,1927,5.019,1928,5.019,1929,5.019,1930,4.28,1931,5.019,1932,5.019,1933,5.019,1934,5.019,1935,5.019,1936,5.019,1937,5.019,1938,5.019,1939,5.019,1940,5.019,1941,5.019,1942,5.019,1943,5.019]],["title/miscellaneous/functions.html",[1153,3.205,1944,2.007]],["body/miscellaneous/functions.html",[22,0.316,37,0.734,38,0.021,39,0.357,41,0.734,122,0.017,123,0.02,124,0.017,1153,4.239,1538,4.415,1870,4.784,1944,3.832,1945,5.611,1946,5.611,1947,6.464,1948,5.611]],["title/index.html",[22,0.165,287,2.22,1949,2.938]],["body/index.html",[0,0.456,4,0.237,15,1.188,38,0.018,39,0.308,122,0.015,123,0.018,124,0.015,130,4.127,155,2.793,250,1.409,418,4.127,520,3.702,688,4.127,822,5.684,994,4.127,1066,5.049,1135,4.127,1319,4.127,1924,4.127,1930,5.455,1950,5.922,1951,4.841,1952,6.398,1953,4.841,1954,4.841,1955,6.838,1956,7.046,1957,4.841,1958,4.841,1959,4.841,1960,4.841,1961,4.841,1962,4.841,1963,4.841,1964,4.841,1965,4.841,1966,6.398,1967,6.398,1968,4.841,1969,6.838,1970,4.841,1971,4.841,1972,4.841,1973,4.841,1974,4.127,1975,5.922,1976,6.666,1977,5.922,1978,5.922,1979,4.841,1980,4.841,1981,4.841,1982,4.841,1983,6.398,1984,4.841,1985,4.841,1986,4.841]],["title/modules.html",[134,3.013]],["body/modules.html",[38,0.02,122,0.017,123,0.02,124,0.017,133,3.872,134,3.544,145,3.544,168,4.283,1987,5.669,1988,5.669,1989,6.503,1990,5.669,1991,5.669]],["title/overview.html",[1992,4.11]],["body/overview.html",[1,1.462,2,1.139,38,0.022,77,1.139,85,1.671,87,1.462,89,1.462,92,1.38,94,1.462,96,1.462,98,1.302,101,1.38,103,1.38,106,1.227,108,1.462,111,1.38,113,1.38,114,0.905,116,1.462,118,1.38,122,0.013,123,0.016,124,0.013,132,2.827,133,5.126,134,2.588,135,2.827,136,3.529,137,3.127,138,3.529,139,3.127,140,3.529,141,3.529,142,3.529,143,3.529,144,3.529,145,3.722,146,3.435,147,3.435,148,3.435,149,3.189,150,2.974,151,2.611,152,2.783,153,3.189,154,4.575,155,2.388,264,2.827,281,1.607,315,1.935,458,2.388,705,2.588,740,3.127,1875,3.529,1879,3.529,1907,4.575,1992,3.529]],["title/routes.html",[264,3.293]],["body/routes.html",[38,0.02,122,0.017,123,0.02,124,0.017,264,3.946]],["title/classes/teamList.html",[69,0.01,1536,2.203]],["body/classes/teamList.html",[3,0.302,4,0.264,9,0.264,22,0.302,23,0.886,24,1.151,32,0.654,35,0.498,37,0.704,38,0.021,39,0.342,40,0.498,41,0.704,58,1.147,68,0.302,69,0.016,122,0.016,123,0.019,124,0.016,315,2.513,420,3.102,1536,3.942,1759,5.706,1912,4.585,1993,5.377,1994,5.377,1995,5.377,1996,5.377]],["title/miscellaneous/variables.html",[1173,3.205,1944,2.007]],["body/miscellaneous/variables.html",[22,0.295,38,0.022,40,0.541,54,2.042,55,2.042,56,2.277,122,0.016,123,0.019,124,0.016,259,2.165,297,2.907,323,3.283,1173,3.968,1913,4.478,1915,5.841,1916,4.478,1917,4.478,1918,5.303,1919,5.303,1944,3.587,1974,5.303,1997,6.22,1998,5.252,1999,5.252,2000,5.252,2001,5.252]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["1/11",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":449,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1924,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":453,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1296,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["100px",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":399,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["11",{"_index":1875,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["12",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1668,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["13",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1294,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["16",{"_index":1879,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["17",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1em",{"_index":1295,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1fr",{"_index":1619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":390,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["2/15",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200",{"_index":1309,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["200px",{"_index":1624,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":779,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":759,"title":{},"body":{"components/FeedComponent.html":{}}}],["23",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["23/26",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["236",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["23px",{"_index":781,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":760,"title":{},"body":{"components/FeedComponent.html":{}}}],["250px",{"_index":1268,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["25px",{"_index":1671,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["3",{"_index":1162,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3.1.2",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["30)),new",{"_index":1216,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["300",{"_index":1305,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["30px",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["33",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["380px",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["4/23",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1786,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1314,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["400px",{"_index":1269,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1614,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":396,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":444,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["5/5",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["500",{"_index":448,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":581,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["5px",{"_index":783,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["6/20",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":1277,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["60px",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["62",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":785,"title":{},"body":{"components/FeedComponent.html":{}}}],["7/7",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":766,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["75",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1623,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1907,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["80",{"_index":393,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["83",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["9.1.0",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":864,"title":{},"body":{"components/FilterComponent.html":{}}}],["92",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["936da5,#58482e",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":969,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_teams",{"_index":1105,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["_teams:teams",{"_index":1202,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["absolute",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acces",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["activatedroute",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":121,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["adding",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{},"injectables/ProposalService.html":{}}}],["address",{"_index":907,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":800,"title":{},"body":{"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["af4261",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":575,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"error",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":571,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"there",{"_index":1232,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["align",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":964,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allowing",{"_index":578,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["allurl",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":963,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["along",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["already",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["angular",{"_index":1930,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["angular/compiler",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1667,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["api's",{"_index":915,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":85,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["application/json",{"_index":1096,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["applied",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{}}}],["appmodule",{"_index":133,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":145,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["arguments",{"_index":1124,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["arial",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrangement",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{}}}],["array",{"_index":939,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{}}}],["artifacts",{"_index":1970,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1641,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["auth.service",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1725,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1742,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1743,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1731,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:25",{"_index":1739,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:35",{"_index":1733,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:39",{"_index":1737,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1736,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:48",{"_index":1735,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:54",{"_index":1734,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth_token",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticate",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticateduser",{"_index":289,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":304,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authentication",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticationservice",{"_index":1080,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["autho",{"_index":1106,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["autho:authorizationservice",{"_index":1218,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorization",{"_index":290,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorization.service",{"_index":1197,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorizationservice",{"_index":280,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["authreq",{"_index":1092,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["autologin",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1961,"title":{},"body":{"index.html":{}}}],["available",{"_index":1991,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":1137,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["background",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1841,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["based",{"_index":1507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["basic",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["basis",{"_index":1178,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["between",{"_index":1814,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["black",{"_index":762,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["block",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":895,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":387,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":780,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":855,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom:1",{"_index":1313,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["box",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["browse",{"_index":1989,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":397,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":866,"title":{},"body":{"components/FilterComponent.html":{}}}],["build",{"_index":1969,"title":{},"body":{"index.html":{}}}],["button",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":786,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["called",{"_index":1140,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["calls",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["cancel",{"_index":1369,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate=false",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1364,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":867,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1962,"title":{},"body":{"index.html":{}}}],["changed",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{}}}],["changes",{"_index":1158,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["character",{"_index":1366,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":445,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checked",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checking",{"_index":1450,"title":{},"body":{"injectables/ProposalService.html":{}}}],["checks",{"_index":563,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["child",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":69,"title":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":315,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":386,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":291,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1952,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":452,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closes",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["closing",{"_index":1164,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cluster_appmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1964,"title":{},"body":{"index.html":{}}}],["color",{"_index":757,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["color:#3f51b5",{"_index":763,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#8b8a8a",{"_index":1316,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["color:#e9ebee",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":778,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":784,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":392,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":764,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["commendid",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment",{"_index":314,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":88,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":368,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":334,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":775,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":87,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":371,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":372,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror:string",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":369,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["comments:comment",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["communicate",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"overview.html":{}}}],["conditions",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1654,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after2____\",this.user",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":553,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"date\",this.edate",{"_index":846,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":559,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"in",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":1697,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["console.log(\"response",{"_index":549,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1775,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1415,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1410,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":899,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(error.status",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1749,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(this.comment",{"_index":376,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data",{"_index":1257,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1711,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.newfeed",{"_index":1265,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1720,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.type",{"_index":1249,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1778,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1481,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1078,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(authservice",{"_index":1120,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["constructor(description",{"_index":1372,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":1632,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(formbuilder",{"_index":1502,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":1388,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(id",{"_index":320,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(proposalwork",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(resetlinkservice",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(router",{"_index":292,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(startdate",{"_index":796,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1993,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1419,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1293,"title":{},"body":{"components/LandingPageComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["contains",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["content",{"_index":1095,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuation",{"_index":1694,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["continue",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["control",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controls",{"_index":1174,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["count",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1862,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatain",{"_index":1514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["create",{"_index":90,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1727,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1732,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["created",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{}}}],["createproposalcomponent",{"_index":89,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createurl",{"_index":1383,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1402,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creation",{"_index":328,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{}}}],["creationdate",{"_index":319,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":335,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["crimson",{"_index":870,"title":{},"body":{"components/FilterComponent.html":{}}}],["current",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/ProposalService.html":{}}}],["currently",{"_index":1510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cursor",{"_index":771,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserRegisterService.html":{}}}],["data)=>console.log(data",{"_index":1274,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data.id=id",{"_index":1407,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1412,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1414,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1810,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:13",{"_index":1813,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1815,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":975,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":980,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":554,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":547,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":843,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1661,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data:{name:this.user.id,post:post,teams:this._teams",{"_index":1278,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data:{prop:post.teams,teams:this._teams",{"_index":1270,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data=new",{"_index":1213,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data={\"data1",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1656,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":897,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1699,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["database",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["date",{"_index":322,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["date(),\"0\",\"3",{"_index":1217,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[0",{"_index":1245,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[1",{"_index":1247,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(this.startdate.setdate(this.startdate.getdate",{"_index":1215,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dateplusone",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["day",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{}}}],["deals",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":326,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["defines",{"_index":318,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{}}}],["delay",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["deletecomment",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1442,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1487,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1430,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1437,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1444,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1489,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1431,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1475,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["deleteproposal(1",{"_index":1138,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal(id",{"_index":1131,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal=new",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["deletes",{"_index":1133,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleting",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["deletion",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["delproposal",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":135,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":407,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["description:string",{"_index":1427,"title":{},"body":{"classes/Proposal.html":{}}}],["destroying",{"_index":1141,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["destroys",{"_index":302,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["destroysession",{"_index":1107,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["details",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/UserLoginService.html":{}}}],["dev",{"_index":1958,"title":{},"body":{"index.html":{}}}],["development",{"_index":1954,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog",{"_index":1220,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialog:matdialog,public",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":61,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1271,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["different",{"_index":961,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["differentiating",{"_index":410,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1968,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1972,"title":{},"body":{"index.html":{}}}],["dislike",{"_index":1455,"title":{},"body":{"injectables/ProposalService.html":{}}}],["disliking",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":787,"title":{},"body":{"components/FeedComponent.html":{}}}],["display:none",{"_index":1302,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["displaying",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dist",{"_index":1971,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1857,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":903,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1826,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1829,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1850,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1852,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["during",{"_index":1145,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dynamic",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":910,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1980,"title":{},"body":{"index.html":{}}}],["edate",{"_index":842,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1367,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emit",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{}}}],["emitdata",{"_index":1811,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1812,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emiting",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{}}}],["emits",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["emitted",{"_index":1161,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["emitter",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{}}}],["end",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":793,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":807,"title":{},"body":{"classes/FeedParams.html":{}}}],["endmessage",{"_index":1210,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["enter",{"_index":905,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["entered",{"_index":1681,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["environment",{"_index":1915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":558,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{}}}],["error'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":583,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":584,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":560,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorcomponent",{"_index":92,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandling",{"_index":1108,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errorhandling(error",{"_index":1142,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errormessage",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["etc",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["evenr",{"_index":1129,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["event",{"_index":1125,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["eventemitter",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["example",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/LandingPageComponent.html":{}}}],["execute",{"_index":1977,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1856,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["existing",{"_index":1517,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["exists",{"_index":904,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["expired",{"_index":1695,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":838,"title":{},"body":{"components/FilterComponent.html":{}}}],["false",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{}}}],["feature",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["feed'},{'name",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed/feed.component",{"_index":1193,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feed/share",{"_index":1195,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feedcomponent",{"_index":94,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":789,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["feedparams(new",{"_index":1214,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fetch",{"_index":1509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fetching",{"_index":1687,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["field",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1963,"title":{},"body":{"index.html":{}}}],["fill",{"_index":454,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":97,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter/filter.component",{"_index":1192,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["filtercomponent",{"_index":96,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredteams",{"_index":1494,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filters",{"_index":1177,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fixed",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["flag",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["flag=false",{"_index":1717,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1713,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["flex:1",{"_index":1300,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["following",{"_index":1360,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":394,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1714,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":99,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1701,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["forgetpasswordcomponent",{"_index":98,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":894,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgotten",{"_index":890,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":1503,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1709,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1805,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1803,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1706,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":1136,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["function",{"_index":296,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1153,"title":{"miscellaneous/functions.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1982,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1966,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1951,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1184,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["getall",{"_index":1109,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getallnextpost",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":972,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":940,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":970,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1438,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1446,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1485,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1432,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1471,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1500,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1439,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1448,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1483,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1433,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1474,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":836,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1728,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposals",{"_index":1121,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposals:getproposalsservice",{"_index":1221,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposalsservice",{"_index":146,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gets",{"_index":1152,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getteam",{"_index":1110,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/UserRegisterService.html":{}}}],["getteam():observable",{"_index":1860,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["getteamnextpost",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":942,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":977,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":945,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":974,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1111,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1796,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getting",{"_index":287,"title":{"index.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/ProposalService.html":{}}}],["getyour",{"_index":1112,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getyournextpost",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":947,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":982,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":949,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":979,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1985,"title":{},"body":{"index.html":{}}}],["google",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1990,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":857,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["group",{"_index":1800,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["h1",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["handled",{"_index":1130,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["handlelogin",{"_index":565,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["handles",{"_index":914,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["handling",{"_index":1418,"title":{},"body":{"classes/Proposal.html":{}}}],["happened",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["headers",{"_index":1094,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":398,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:500px",{"_index":1308,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:50px",{"_index":756,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:55px",{"_index":1312,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:60px",{"_index":770,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["height:auto",{"_index":773,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["hello",{"_index":1286,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["help",{"_index":1983,"title":{},"body":{"index.html":{}}}],["helps",{"_index":1686,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["here",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["hidden",{"_index":769,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["hide",{"_index":1495,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1496,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["home',component:homecomponent",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":102,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":101,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1194,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hostlisteners",{"_index":1118,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote",{"_index":1318,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote&nbsp",{"_index":1291,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":1390,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["http://localhost:4200",{"_index":1960,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1842,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1464,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1460,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1457,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":951,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":958,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":954,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1396,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1459,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1398,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1399,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1794,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1466,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1462,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1468,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":1405,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclientmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1088,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1084,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1089,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1087,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1073,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1082,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1662,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":333,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1428,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1411,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":309,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if((this.newfeed.length>0",{"_index":1254,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(array.isarray(data",{"_index":1243,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data!=null",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data===\"allpost",{"_index":1235,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"teampost",{"_index":1237,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"yourpost",{"_index":1239,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(error.status!=200",{"_index":570,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(error.status==200",{"_index":569,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["if(error.status==202",{"_index":1659,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["if(error.status==302",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==404",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["if(flag",{"_index":1718,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1723,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1722,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(result",{"_index":1272,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(team.id==item.id",{"_index":1716,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.innerwidth",{"_index":1284,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.loginform.valid",{"_index":566,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.menuvisibility",{"_index":1281,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.post.user.id==this.userid",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":852,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":856,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.type.includes(\"allpost",{"_index":1258,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"teampost",{"_index":1260,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"yourpost",{"_index":1262,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(user!=null",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ignore",{"_index":305,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{}}}],["image:linear",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["imports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["incase",{"_index":889,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["include",{"_index":944,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["includes",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["information",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["initial",{"_index":1155,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["initialiseformgroup",{"_index":1807,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["initializes",{"_index":1516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inject",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["injectable",{"_index":279,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1817,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"overview.html":{}}}],["innerwidth",{"_index":1201,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["input",{"_index":367,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["input,output,eventemitter",{"_index":365,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["instance",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["intercept",{"_index":1077,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1081,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1072,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1076,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1085,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1079,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1074,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":458,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{}}}],["intialization",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{}}}],["invalid",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1350,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1729,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1719,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["iteration",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1700,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["json.parse(this.authenticateduser",{"_index":312,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["jsonpipe",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1979,"title":{},"body":{"index.html":{}}}],["key",{"_index":1804,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":104,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["landingpagecomponent",{"_index":103,"title":{"components/LandingPageComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{}}}],["later",{"_index":576,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lato",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":865,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":788,"title":{},"body":{"components/FeedComponent.html":{}}}],["left:5",{"_index":1315,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1368,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1362,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":777,"title":{},"body":{"components/FeedComponent.html":{}}}],["liked",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["likesetup",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["link'},{'name",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1627,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1628,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1626,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:18",{"_index":1648,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:19",{"_index":1650,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1647,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1649,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1645,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1634,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:26",{"_index":1644,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:31",{"_index":1635,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:68",{"_index":1643,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:76",{"_index":1640,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:85",{"_index":1636,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link/reset",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"injectables/UserRegisterService.html":{}}}],["literal",{"_index":323,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1497,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loggedin",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":107,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1825,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1839,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1840,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1838,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1827,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:25",{"_index":1830,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1828,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1837,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:43",{"_index":1835,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:49",{"_index":1834,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:55",{"_index":1833,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":106,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logins",{"_index":1831,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["loginservice",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1290,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["logs",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["long",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1363,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":911,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["makes",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["mandatory",{"_index":442,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["manner",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{}}}],["map",{"_index":1745,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":768,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matbuttonmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":123,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1707,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matdividermodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":839,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":447,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{}}}],["menu",{"_index":1181,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menubutton=false",{"_index":1200,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menuvisibility=true",{"_index":1199,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{}}}],["message:string",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["message=null",{"_index":1198,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["method",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["minimum",{"_index":443,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1944,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":132,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":134,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1984,"title":{},"body":{"index.html":{}}}],["morepost=true",{"_index":1211,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["moz",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1652,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":472,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1780,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":336,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1959,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":862,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":446,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":1451,"title":{},"body":{"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":841,"title":{},"body":{"components/FilterComponent.html":{}}}],["newfeed",{"_index":1203,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["next",{"_index":1083,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1099,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1100,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1956,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["ngoninit",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments:boolean=true",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["non",{"_index":1301,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["none",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["not.a",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["notified",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["now",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["null",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":321,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes:number",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":297,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1222,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{}}}],["observable",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["occured",{"_index":572,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["ok",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{}}}],["onfilter",{"_index":1113,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onfilter(data",{"_index":1156,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["oninit",{"_index":65,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":837,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onresize",{"_index":1170,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onscroll",{"_index":1114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onsubmit",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":765,"title":{},"body":{"components/FeedComponent.html":{}}}],["opacity:20",{"_index":1297,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["open",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialog",{"_index":579,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare(post",{"_index":1167,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["opened",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["opens",{"_index":577,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["others",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{}}}],["out",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":374,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["overview",{"_index":1992,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1922,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":767,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{}}}],["padding:number",{"_index":1209,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page",{"_index":300,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["page'},{'name",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1103,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1104,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1101,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:111",{"_index":1148,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:123",{"_index":1150,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:137",{"_index":1176,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:154",{"_index":1157,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:175",{"_index":1159,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:199",{"_index":1168,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:223",{"_index":1163,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:259",{"_index":1179,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:271",{"_index":1169,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:292",{"_index":1127,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:301",{"_index":1143,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:317",{"_index":1139,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:333",{"_index":1132,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:35",{"_index":1182,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:37",{"_index":1186,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":1191,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1190,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:59",{"_index":1123,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:65",{"_index":1183,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:67",{"_index":1188,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:69",{"_index":1187,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:71",{"_index":1185,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:78",{"_index":1151,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:88",{"_index":1149,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:99",{"_index":1147,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/comment",{"_index":366,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":317,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:11",{"_index":327,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:13",{"_index":331,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":324,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:7",{"_index":329,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:9",{"_index":325,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:32",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:38",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:46",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:59",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:133",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:146",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:173",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:206",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:213",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:221",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:234",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:52",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:55",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:58",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:61",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:67",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:74",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:80",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:89",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:99",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":810,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:105",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:114",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:51",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:73",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:82",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1429,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:14",{"_index":1465,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1461,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1469,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1467,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:26",{"_index":1463,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:29",{"_index":1458,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:32",{"_index":1441,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:45",{"_index":1452,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:54",{"_index":1456,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:63",{"_index":1454,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:73",{"_index":1449,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:81",{"_index":1447,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:89",{"_index":1443,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:98",{"_index":1445,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1798,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":808,"title":{},"body":{"classes/FeedParams.html":{}}}],["page=0",{"_index":1207,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pagination",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["param",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":792,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["params.ts",{"_index":791,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:11",{"_index":799,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:14",{"_index":801,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:17",{"_index":802,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:2",{"_index":797,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:20",{"_index":805,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:23",{"_index":804,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":803,"title":{},"body":{"classes/FeedParams.html":{}}}],["parent",{"_index":1102,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["parentfunction",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":375,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":845,"title":{},"body":{"components/FilterComponent.html":{}}}],["particular",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["password",{"_index":109,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1663,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:13",{"_index":893,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":891,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":892,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1673,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:16",{"_index":1685,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:26",{"_index":1678,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:35",{"_index":1692,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1676,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1696,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":108,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{}}}],["per",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{}}}],["person",{"_index":1285,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["photo",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1845,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":573,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":772,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1669,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["position:fixed",{"_index":1303,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["post",{"_index":214,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["post.description",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:postproposalservice",{"_index":1219,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postbutton",{"_index":1310,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postcomment",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1476,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror:string",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1434,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1470,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1440,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1453,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1480,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1435,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1473,"title":{},"body":{"injectables/ProposalService.html":{}}}],["posted",{"_index":332,"title":{},"body":{"classes/Comment.html":{}}}],["posting",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1478,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1436,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1472,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1386,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1391,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1409,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":147,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":861,"title":{},"body":{"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["present",{"_index":1688,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["private",{"_index":306,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["priyanka",{"_index":1642,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["process",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1973,"title":{},"body":{"index.html":{}}}],["production",{"_index":1974,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1950,"title":{},"body":{"index.html":{}}}],["prop",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":402,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.component.css",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:23",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:31",{"_index":1705,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:38",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:41",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:47",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.service",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.service.ts",{"_index":1382,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:15",{"_index":1397,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:17",{"_index":1400,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:19",{"_index":1389,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:29",{"_index":1395,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:39",{"_index":1392,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposalerror:string",{"_index":1204,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["proposalid",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposals",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service.ts",{"_index":913,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:17",{"_index":953,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:19",{"_index":952,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:21",{"_index":957,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:23",{"_index":955,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":959,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:27",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:37",{"_index":941,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:46",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:55",{"_index":946,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:67",{"_index":943,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:77",{"_index":950,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:89",{"_index":948,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":148,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["propose",{"_index":1292,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["propsal",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["protractor",{"_index":1981,"title":{},"body":{"index.html":{}}}],["provide",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":303,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["provider",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["put",{"_index":1637,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["radius",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1986,"title":{},"body":{"index.html":{}}}],["real",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["receive",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["recieved",{"_index":1144,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirects",{"_index":1741,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["refreshs",{"_index":1166,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["register",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register',component:registercomponent",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":112,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register.component.css",{"_index":1492,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1493,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1849,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:18",{"_index":1853,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:27",{"_index":1855,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:9",{"_index":1851,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":111,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":888,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["registerform",{"_index":1498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1730,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1836,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["registraion",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":1513,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["reload",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":455,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["removing",{"_index":1134,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["req",{"_index":1086,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1093,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1091,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1638,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":908,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["reset",{"_index":114,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["resetlink",{"_index":1674,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink(data",{"_index":1677,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink/:token",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":113,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1629,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetlinkservice",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword",{"_index":1633,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1684,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":149,"title":{"injectables/ResetPasswordService.html":{}},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{},"overview.html":{}}}],["resize",{"_index":1115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resp",{"_index":1859,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{}}}],["response'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":57,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:23",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1501,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["responsible",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["responsive",{"_index":1180,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resposible",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"classes/Proposal.html":{}}}],["result",{"_index":122,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":124,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":311,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["returned",{"_index":1393,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["rgb(211",{"_index":758,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(236",{"_index":1317,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rgb(238",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":388,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["root'},{'name",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":293,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":307,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["routermodule",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":264,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1955,"title":{},"body":{"index.html":{}}}],["running",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["runs",{"_index":1160,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rxjs",{"_index":960,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1746,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["same",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["sans",{"_index":1612,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["saved",{"_index":1639,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["saying",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["sbsi",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1965,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["scrollable",{"_index":1306,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["scrolling",{"_index":1146,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sdate",{"_index":840,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1299,"title":{},"body":{"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["select",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selectapi",{"_index":1116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selectapi(data",{"_index":1175,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selected",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["selected(team",{"_index":1721,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1499,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selection",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":863,"title":{},"body":{"components/FilterComponent.html":{}}}],["seletion",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":868,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["senddata",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddate",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sends",{"_index":887,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["sent",{"_index":909,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1401,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1613,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1957,"title":{},"body":{"index.html":{}}}],["server",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["service",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service.service",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1799,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:8",{"_index":1801,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/reset",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["service/social",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["session",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{}}}],["sessionstorage.clear",{"_index":313,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1754,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1753,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1751,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sets",{"_index":1171,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["setting",{"_index":1682,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["setup",{"_index":1154,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["share",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{}}}],["shared",{"_index":1377,"title":{},"body":{"classes/Post.html":{},"classes/Proposal.html":{},"components/ShareProposalComponent.html":{}}}],["shareproposal",{"_index":1387,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1394,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1406,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":116,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1384,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1404,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["sharing",{"_index":1704,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["shine",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["showing",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["showmenu",{"_index":1117,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["shown",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["shows",{"_index":1832,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["sign",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["signed",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":809,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1738,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":150,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{},"overview.html":{}}}],["socialuser",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":391,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":456,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{}}}],["spacing",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1365,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1359,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{}}}],["specs",{"_index":1354,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1355,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1356,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1353,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1358,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1357,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:12",{"_index":294,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:19",{"_index":295,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:29",{"_index":301,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1870,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":582,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":585,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":586,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":790,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/forget",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":912,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":316,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:105",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:136",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":1351,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:81",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1352,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1370,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:11",{"_index":1376,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:13",{"_index":1378,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:15",{"_index":1379,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:17",{"_index":1381,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1373,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1374,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:9",{"_index":1375,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1417,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:12",{"_index":1425,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:13",{"_index":1424,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:14",{"_index":1421,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:15",{"_index":1423,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:16",{"_index":1422,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:2",{"_index":1420,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1491,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:103",{"_index":1506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:115",{"_index":1518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:19",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":1505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:35",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:37",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:43",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:53",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:66",{"_index":1511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":1508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1625,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1075,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1672,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1724,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1809,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1824,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1755,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:18",{"_index":1766,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:19",{"_index":1770,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1765,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1769,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1768,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1772,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1771,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1760,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:32",{"_index":1764,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1767,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:40",{"_index":1763,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:48",{"_index":1761,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:62",{"_index":1762,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1912,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1994,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1995,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1791,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1793,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1792,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1787,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1788,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1789,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1790,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.ts",{"_index":1818,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:11",{"_index":1820,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:13",{"_index":1823,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1819,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":1821,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:9",{"_index":1822,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":794,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":806,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate=new",{"_index":1212,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["started",{"_index":1949,"title":{"index.html":{}},"body":{}}],["state",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["store",{"_index":1165,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stored",{"_index":1135,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["stores",{"_index":1689,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/TransferDataService.html":{}}}],["string",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["string?,array",{"_index":1241,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stroke",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1816,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submit",{"_index":451,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":564,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["successful",{"_index":556,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["successfully",{"_index":1854,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["successmessage",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1646,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1666,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["such",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["support",{"_index":1987,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1988,"title":{},"body":{"modules.html":{}}}],["system",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["table",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":298,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["tap",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserRegisterService.html":{}}}],["team',component:teamcomponent",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team's",{"_index":956,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["team.component.css",{"_index":1756,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1757,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":450,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team/team.component",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":118,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1758,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":795,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":1536,"title":{"classes/teamList.html":{}},"body":{"components/RegisterComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1759,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1996,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":966,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":1189,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams",{"_index":424,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams.service",{"_index":1196,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams:any",{"_index":1773,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teams:teamsservice",{"_index":1223,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teamsservice",{"_index":1122,"title":{"injectables/TeamsService.html":{}},"body":{"components/LandingPageComponent.html":{},"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":965,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility=true",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1976,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":1802,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["testserviceservice",{"_index":417,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":869,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":83,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":973,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":971,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":978,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":976,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":983,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":981,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._teams=data",{"_index":1229,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":308,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1090,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1098,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1784,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":378,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":380,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":384,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":382,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":377,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":383,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":379,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1844,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":850,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.enddate=new",{"_index":1246,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.page=this.page.tostring",{"_index":1251,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.post.description",{"_index":438,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":436,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1715,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.data.startdate=new",{"_index":1244,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":437,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(createproposalcomponent",{"_index":1276,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":580,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialog.open(shareproposalcomponent",{"_index":1267,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialogref.close",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":848,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":853,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.endmessage",{"_index":1253,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.error=\"email",{"_index":902,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":901,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errorhandling(error",{"_index":1231,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed",{"_index":1242,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed=this.feed.concat(this.newfeed",{"_index":1264,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":896,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1808,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getall",{"_index":1236,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallnextpost(this.data).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1259,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallposts(this.data).subscribe((data)=>this.feed=data,(error",{"_index":1230,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamnextpost(this.data,this.user.team.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1261,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamposts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error",{"_index":1233,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyournextpost(this.data,this.user.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1263,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyourposts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error",{"_index":1234,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteam",{"_index":1238,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteams",{"_index":1226,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getyour",{"_index":1240,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":1861,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1843,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1797,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgotpassword",{"_index":1702,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1858,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validatetoken",{"_index":1703,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1747,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1413,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1488,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1490,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1486,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1484,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1477,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1482,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1479,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1408,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1416,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/resetpassword",{"_index":1698,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":434,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":551,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":900,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe",{"_index":567,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":552,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.menuvisibility=false",{"_index":1282,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.menuvisibility=true",{"_index":1283,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.message",{"_index":854,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"this",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.morepost=true",{"_index":1252,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.msg=\"your",{"_index":1665,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":847,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":849,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newfeed",{"_index":1266,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.nocomments=false",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.page",{"_index":1256,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page=0",{"_index":1250,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page==0)&&this.morepost",{"_index":1255,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":385,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":860,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1846,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.post.postproposal(result,this.user.id).subscribe",{"_index":1279,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.post.shareproposal(result,post.id).subscribe",{"_index":1273,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.prop",{"_index":439,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":441,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalerror",{"_index":1280,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1750,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1847,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":550,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1752,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":548,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1748,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1653,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetlinkservice.resetlink(data).subscribe",{"_index":898,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1664,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.tokenverification(data).subscribe",{"_index":1657,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resize",{"_index":1227,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.responsedialog",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":310,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":562,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.router.navigate(['/welcome",{"_index":557,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":851,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selectapi(this.type",{"_index":1225,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.senddata(this.data",{"_index":858,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":859,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1712,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.share.emit(this.post",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":546,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":555,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1777,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1785,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1779,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.getteams().subscribe",{"_index":1228,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.teams=data",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":435,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1655,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":561,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.type=data",{"_index":1248,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.update.emit(post",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1708,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.user.email",{"_index":1288,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.name",{"_index":1287,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.team.name",{"_index":1289,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user=this.autho.authorization",{"_index":1224,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.userdata",{"_index":1776,"title":{},"body":{"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1782,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1781,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1774,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":568,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1783,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":381,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.userservice.getteam().subscribe",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validtoken=false",{"_index":1660,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1658,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["those",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["three",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{}}}],["time",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["timer",{"_index":1683,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["timing",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1426,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1630,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["tokenverification",{"_index":1675,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tokenverification(data",{"_index":1691,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tools",{"_index":871,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":782,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{}}}],["total",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1744,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/TransferDataService.html":{}}}],["transferdataservice",{"_index":151,"title":{"injectables/TransferDataService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"overview.html":{}}}],["transferdataservice:transferdataservice",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":574,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["tslib",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["type=\"teampost",{"_index":1206,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["typepost=\"teampost",{"_index":844,"title":{},"body":{"components/FilterComponent.html":{}}}],["types",{"_index":962,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["udata",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unique",{"_index":330,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["unit",{"_index":1975,"title":{},"body":{"index.html":{}}}],["unlike",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["up",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":440,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["update=new",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{}}}],["updated",{"_index":1690,"title":{},"body":{"injectables/ResetPasswordService.html":{},"components/TeamComponent.html":{}}}],["updateform",{"_index":1710,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1385,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1403,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updation",{"_index":403,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["uppercase",{"_index":1361,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["upvotes",{"_index":1380,"title":{},"body":{"classes/Post.html":{}}}],["upvotescount",{"_index":1371,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1795,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1967,"title":{},"body":{"index.html":{}}}],["used",{"_index":1679,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["user",{"_index":299,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["user:user",{"_index":1205,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["user_name_session_attribute_name",{"_index":1726,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":761,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":373,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":152,"title":{"injectables/UserLoginService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":370,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":153,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1504,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["usevalue",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":906,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["validating",{"_index":1693,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["validation",{"_index":1515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validations",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1806,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1631,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1651,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1172,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["values:testserviceservice",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":81,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1173,"title":{"miscellaneous/variables.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":1680,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["verifies",{"_index":1740,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["version",{"_index":1953,"title":{},"body":{"index.html":{}}}],["via",{"_index":1978,"title":{},"body":{"index.html":{}}}],["view",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["visibility",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":774,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["want",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["webkit",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":395,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["welcome",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["whether",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/UserRegisterService.html":{}}}],["white",{"_index":389,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["whitesmoke",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["widows",{"_index":1307,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width",{"_index":400,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:100",{"_index":1311,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:24",{"_index":1304,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:35",{"_index":457,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1670,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:70px",{"_index":1298,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:87",{"_index":776,"title":{},"body":{"components/FeedComponent.html":{}}}],["width:number",{"_index":1208,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window",{"_index":1128,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1097,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1848,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["window.location.reload",{"_index":1275,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize",{"_index":1119,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize(event",{"_index":1126,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["write",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["yes",{"_index":798,"title":{},"body":{"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"classes/Proposal.html":{}}}],["yournexturl",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":968,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":967,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["z0",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:23\n                \n            \n\n\n            \n                \n                    This method closes the Dialog Box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n /**\n  * This method closes the Dialog Box\n  */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nResetPasswordService\n\nResetPasswordService\n\nAppModule -->\n\nResetPasswordService->AppModule\n\n\n\n\n\nSocialMediaAuthService\n\nSocialMediaAuthService\n\nAppModule -->\n\nSocialMediaAuthService->AppModule\n\n\n\n\n\nTransferDataService\n\nTransferDataService\n\nAppModule -->\n\nTransferDataService->AppModule\n\n\n\n\n\nUserLoginService\n\nUserLoginService\n\nAppModule -->\n\nUserLoginService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            ResetPasswordService\n                        \n                        \n                            SocialMediaAuthService\n                        \n                        \n                            TransferDataService\n                        \n                        \n                            UserLoginService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SocialMediaAuthService } from './service/social-media-auth.service';\nimport { TransferDataService } from './service/transfer-data.service';\nimport { UserLoginService } from './service/user-login.service';\n\nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\n\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\nimport { ResetPasswordService } from './service/reset-password.service';\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    UserLoginService,\n    TransferDataService,\n    ResetPasswordService,\n    SocialMediaAuthService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n            \n                Description\n            \n            \n                AuthorizationService deals with the session \n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            like getting data from session and deleting session\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:19\n                \n            \n\n\n            \n                \n                    function returns the session data as object and if there is no session takes user to login page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:29\n                \n            \n\n\n            \n                \n                    this function destroys the session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:12\n                            \n                        \n\n                \n                    \n                        user object as a string\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n/** AuthorizationService deals with the session \n * @example\n * like getting data from session and deleting session\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  /**user object as a string*/\n  authenticatedUser:string\n  constructor(\n    /**@ignore */\n    private router:Router) { }\n  /**\n   * function returns the session data as object and if there is no session takes user to login page\n  */\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  /**\n   * this function destroys the session\n  */\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n            \n                Description\n            \n            \n                defines the comment object \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:9\n                            \n                        \n\n                \n                    \n                        define string type comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:11\n                            \n                        \n\n                \n                    \n                        define the date of creation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the comment (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:13\n                            \n                        \n\n                \n                    \n                        define user data that posted the comment\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        /**define id of the comment (unique) */\n        public id:number,\n        /**define string type comment*/\n        public comment:string,\n        /**define the date of creation*/\n        public creationDate:Date,\n        /**define user data that posted the comment*/\n        public user:{\n            /**define id of the user*/\n            id:number,\n            /**define name of the user */\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n    \n        Description\n    \n    \n        CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:32\n                            \n                        \n                \n                    \n                        UserId of the user from the current session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:38\n                            \n                        \n                \n                    \n                        This the emitter to the FeedComponent\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:46\n                \n            \n\n\n            \n                \n                    This method is resposible for the comment data to show on the Page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\n\nimport {Comment} from 'src/app/landing-page/comment'\n/**\n * CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  /**@ignore */\n  @Input() comment:Comment;\n\n  /**@ignore */\n  public commentId;\n\n  /**@ignore */\n  public userName;\n\n  /**@ignore */\n  public commentData;\n\n  /**@ignore */\n  public commentedUserId:number;\n\n  /** UserId of the user from the current session \n   * @example\n   * Input from the FeedComponent\n   */\n  @Input() userId:number;\n\n  /** \n   * This the emitter to the FeedComponent\n   */\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n \n  /**@ignore */\n  constructor() { }\n\n  /**\n   * This method is resposible for the comment data to show on the Page.\n   */\n  ngOnInit(): void {\n\n     console.log(this.comment)\n\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n\n  }\n  /**\n   * This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n   */\n  deleteComment()\n  {\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n\n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:41\n                            \n                        \n\n                \n                    \n                        This is the description of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:38\n                            \n                        \n\n                \n                    \n                        This is the Title of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:23\n                            \n                        \n\n                \n                    \n                        This is the Id of user from Current Session.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n/**\n * This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n */\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n\n  /**@ignore */\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n  /** This is the Id of user from Current Session.*/\n  userId:string\n\n  /**@ignore */\n  teamVisibility=true\n\n  /**@ignore */\n  dialogTitle:string=\"Create Proposal\"\n\n  /**@ignore */\n  id:number=null\n\n  /**@ignore */\n  values:TestServiceService;\n\n  /** This is the Title of proposal*/\n  public tit \n\n  /**This is the description of proposal*/\n  public descrip\n\n  /**@ignore */\n  public prop\n\n  /**This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal */\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n    \n        Description\n    \n    \n        This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor of the FeedComponent \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the ProposalService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:61\n                            \n                        \n                \n                    \n                        Input from the current Session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:58\n                            \n                        \n                \n                    \n                        EventEmitter for the delete button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:55\n                            \n                        \n                \n                    \n                        EventEmitter for the Share button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:52\n                            \n                        \n                \n                    \n                        EventEmitter for the Update button on the Proposals \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:99\n                \n            \n\n\n            \n                \n                    This method is Resposible for the arrangement of the comments as per a particular manner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:234\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the proposal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:133\n                \n            \n\n\n            \n                \n                    This method checks total number of like on a post and whether a user with current session has liked it or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:80\n                \n            \n\n\n            \n                \n                    calls three methods in the same component on intialization -\nupdateApproval(),   likeSetup(),     commentsSetup()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:221\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the comment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is the id of the comment which user wants to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:213\n                \n            \n\n\n            \n                \n                    This method emits the proposal which a user want to update and open a update dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is an object of a proposal\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:206\n                \n            \n\n\n            \n                \n                    This method emits the Post to which user want to open a share dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:146\n                \n            \n\n\n            \n                \n                    This method is resposible for posting a comment on a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is proposalId of the proposal to which a user want to post a comment.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:173\n                \n            \n\n\n            \n                \n                    This method is resposible for the feature of liking a Proposal and Unlike feature too.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:89\n                \n            \n\n\n            \n                \n                    This method checks whether user can Update a particular proposal or not.A user can those Proposal \nthat are created by a user not others.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:74\n                            \n                        \n\n                \n                    \n                        Instance of the ProposalService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n/**\n * This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  /**@ignore */\n  @Input() post:Post;\n\n  /**@ignore */\n  public new_comment:string;\n\n  /**@ignore */\n  public canUpdate=false;\n\n  /**@ignore */\n  public numberLikes:number;\n\n  /**@ignore */\n  public comments:Comment[]=[];\n\n  /**@ignore */\n  public noComments:boolean=true;\n\n  /**@ignore */\n  public height:number;\n\n  /**@ignore */\n  public commentVisibility=false;\n\n  /**@ignore */\n  public commentsMessage=\"Comments\";\n\n  /**@ignore */\n  commentError:string;\n\n  /**@ignore */\n  postCommentError:string;\n\n  /** EventEmitter for the Update button on the Proposals */\n  @Output() update=new EventEmitter;\n\n  /**EventEmitter for the Share button on the Proposals */\n  @Output() share=new EventEmitter;\n\n  /**EventEmitter for the delete button on the Proposals */\n  @Output() deleteProposal=new EventEmitter;\n\n  /**Input from the current Session */\n  @Input() userId:number;\n\n  /**@ignore */\n  @Input() type:string;\n\n  /**@ignore */\n  public hasLiked=false;\n\n  /**\n   * Constructor of the FeedComponent \n   * @constructor\n   * @param proposalWork Instance of the ProposalService\n   */\n  constructor(public proposalWork:ProposalService) { }\n\n  /** \n   * calls three methods in the same component on intialization -\n   * updateApproval(),   likeSetup(),     commentsSetup()\n  */\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n  /**This method checks whether user can Update a particular proposal or not.A user can those Proposal \n   * that are created by a user not others.\n  */\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n  /**This method is Resposible for the arrangement of the comments as per a particular manner.\n  */\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n  /**This method checks total number of like on a post and whether a user with current session has liked it or not\n  */\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  /**\n   * This method is resposible for posting a comment on a post\n   * @param {number} id This is proposalId of the proposal to which a user want to post a comment.\n   */\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          alert(\"Some error has occured sending the comment please try again.\")\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n/**\n * This method is resposible for the feature of liking a Proposal and Unlike feature too.\n */\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n  /**\n   * This method emits the Post to which user want to open a share dialog.\n   */\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n  /**\n   * This method emits the proposal which a user want to update and open a update dialog\n   * @param {object} post this is an object of a proposal\n   */\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the comment.\n   * @param {number} commentId this is the id of the comment which user wants to delete.\n   */\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the proposal.\n   */\n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n\n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n    font-weight: bold;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n            \n                Description\n            \n            \n                this is the feed Params class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:11\n                            \n                        \n\n                \n                    \n                        endDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n                \n                    \n                        startDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:23\n                            \n                        \n\n                \n                    \n                        This is the teamId of the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:20\n                            \n                        \n\n                \n                    \n                        This is the userId from Current session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    /**\n     * @constructor\n     */\n    constructor(\n    /** startDate of the advanced filter*/\n    public startDate:Date,\n\n    /** endDate of the advanced filter*/\n    public endDate:Date,\n\n    /** @ignore */\n    public page:string,\n\n    /** @ignore */\n    public size:string,\n\n    /** This is the userId from Current session */\n    public userId?,\n\n    /**This is the teamId of the user */\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n    \n        Description\n    \n    \n        FilterComponent is the child component of the landing-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:51\n                            \n                        \n                \n                    \n                        This is the EventEmitter emits to Landing-page\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:73\n                \n            \n\n\n            \n                \n                    This function is resposible for adding a day to a end Date user selected\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:82\n                \n            \n\n\n            \n                \n                    This function is resposible for the Validations applied on the start date and end date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:105\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this function send the data to sendDate method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:114\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this method emit the information to the landing-page\nand landing-page calls the api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n  \n/**\n * FilterComponent is the child component of the landing-page.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\n\nexport class FilterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  @Input()\n  public sDate\n\n  /**\n   * @ignore\n   */\n  public newEdate\n\n  /**\n   * @ignore\n   */\n  public eDate\n\n  /**\n   * @ignore\n   */\n  public data:Date[]\n\n  /**\n   * @ignore\n   */\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n  /**\n   * This is the EventEmitter emits to Landing-page\n   */\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n\n /**\n   * @ignore\n   */ \n public message;\n  /**\n   * @ignore\n   */ \n  constructor() { \n  \n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  \n  }\n\n  /**\n   * This function is resposible for adding a day to a end Date user selected\n   */\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n\n  /**\n   * This function is resposible for the Validations applied on the start date and end date.\n   */\n  processFilter()\n  { \n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  /**\n   * As user changed the seletion on the select post this function send the data to sendDate method.\n   */\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n  /**\n   * As user changed the seletion on the select post this method emit the information to the landing-page\n   * and landing-page calls the api\n   */\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resetLinkService: ResetPasswordService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resetLinkService\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:33\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ResetPasswordService } from './../service/reset-password.service';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private resetLinkService: ResetPasswordService) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n/**\n * This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n */\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.resetLinkService.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n        if(error.status==200){\n          this.error=\"Reset link has been send to your email.\"\n          \n        }\n        else if(error.status==406){\n          this.error=\"Email id doesnot exists. Please try again!\"\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n            \n                Description\n            \n            \n                handles all type of feed api's\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:46\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts includes pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:37\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:67\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:55\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:89\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:77\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get created type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:19\n                            \n                        \n\n                \n                    \n                        get all posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:17\n                            \n                        \n\n                \n                    \n                        get all posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:23\n                            \n                        \n\n                \n                    \n                        get team's posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:21\n                            \n                        \n\n                \n                    \n                        get team's posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                        get created type posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:25\n                            \n                        \n\n                \n                    \n                        get created type posts url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n/**\n * handles all type of feed api's\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Proposal to get different types of posts\n*/\nexport class GetProposalsService {\n  /**get all posts url*/\n  allUrl=\"http://localhost:8080/feed/all\"\n  /**get all posts url include pagination*/\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  /**get team's posts url*/\n  teamUrl=\"http://localhost:8080/feed/team\"\n  /**get team's posts url include pagination*/\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  /**get created type posts url*/\n  yourUrl=\"http://localhost:8080/feed/create\"\n  /**get created type posts url include pagination*/\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(\n    /**@ignore*/\n    private _http:HttpClient) { }\n  /**\n   * This function makes a post api call to get all posts\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  /**\n   * This function makes a post api call to get all posts includes pagination\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get team type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get created type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:24\n                \n            \n\n\n            \n                \n                    This method makes the islogin flag true to make the Log In Component visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n  /**\n   * This method makes the islogin flag true to make the Log In Component visible\n   */\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n    \n        Description\n    \n    \n        Landing page parent to feed, and filter components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _teams\n                            \n                            \n                                    Public\n                                autho\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                feed\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                destroySession\n                            \n                            \n                                errorHandling\n                            \n                            \n                                getAll\n                            \n                            \n                                getTeam\n                            \n                            \n                                getTeams\n                            \n                            \n                                getYour\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                onScroll\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                resize\n                            \n                            \n                                selectApi\n                            \n                            \n                                showMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: SocialAuthService, autho: AuthorizationService, router: Router, post: PostProposalService, dialog: MatDialog, getProposals: GetProposalsService, teams: TeamsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autho\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        post\n                                                  \n                                                        \n                                                                        PostProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getProposals\n                                                  \n                                                        \n                                                                        GetProposalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                        TeamsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:292\n                \n            \n\n\n            \n                \n                    window resize evenr handled\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProposal(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:333\n                \n            \n\n\n            \n                \n                    This method deletes a proposal in real time by removing it from the array stored on frontend and also sending an api call to backend at the same time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            deleteProposal(1)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroySession\n                        \n                        \n                    \n                \n            \n            \n                \ndestroySession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:317\n                \n            \n\n\n            \n                \n                    This method destroys a session when called\n\n\n                    \n                        Example :\n                        \n                            destroySession()\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns to Home page of the application after destroying session\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorHandling\n                        \n                        \n                    \n                \n            \n            \n                \nerrorHandling(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:301\n                \n            \n\n\n            \n                \n                    This method handles the error that is recieved during scrolling api calls\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:99\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:111\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:88\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to Team posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYour\n                        \n                        \n                    \n                \n            \n            \n                \ngetYour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:123\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:78\n                \n            \n\n\n            \n                \n                    gets the session data and calls functions to setup the initial view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilter\n                        \n                        \n                    \n                \n            \n            \n                \nonFilter(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:154\n                \n            \n\n\n            \n                \n                    This method is called when filter components sends a data to filter feed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls select api function to select which feed api to call or changes the date to filter api feed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:175\n                \n            \n\n\n            \n                \n                    This method runs when a scroll event is emitted\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        returns new 3 proposals every time scroll event is emitted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:223\n                \n            \n\n\n            \n                \n                    This method opens a Create proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to store proposal and refreshs the page\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:199\n                \n            \n\n\n            \n                \n                    This method opens a Share proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to update teams of a proposal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:271\n                \n            \n\n\n            \n                \n                    This method is called by OnResize() and sets values of different variables that controls the padding and width\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectApi\n                        \n                        \n                    \n                \n            \n            \n                \nselectApi(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:137\n                \n            \n\n\n            \n                \n                    This method filters the api calls on the basis of which type is selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls different service methods to call different post api's\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMenu\n                        \n                        \n                    \n                \n            \n            \n                \nshowMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:259\n                \n            \n\n\n            \n                \n                    This method checks the responsive filter menu is open or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Teams[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:35\n                            \n                        \n\n                \n                    \n                        teams array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autho\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        session generation and deletion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:37\n                            \n                        \n\n                \n                    \n                        feed array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PostProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:69\n                            \n                        \n\n                \n                    \n                        posts proposal and update proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:45\n                            \n                        \n\n                \n                    \n                        type of feed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:43\n                            \n                        \n\n                \n                    \n                        User session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FilterComponent } from './filter/filter.component';\nimport { FeedComponent } from './feed/feed.component';\n\nimport { SocialAuthService } from 'angularx-social-login';\nimport { Component, OnInit ,HostListener, NgModule} from '@angular/core';\nimport { GetProposalsService } from '../get-proposals.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { CreateProposalComponent } from './create-proposal/create-proposal.component';\nimport { ShareProposalComponent } from './feed/share-proposal/share-proposal.component';\nimport {PostProposalService} from 'src/app/post-proposal.service'\nimport { FeedParams } from '../feed-params';\nimport {TeamsService} from '../teams.service'\nimport {Teams} from '../teams'\nimport {Router} from '@angular/router'\nimport {User} from '../user';\nimport {AuthorizationService} from '../authorization.service';\n/**Landing page parent to feed, and filter components*/\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css'],\n \n})\n\nexport class LandingPageComponent implements OnInit {\n/**@ignore */\n  message=null;\n  /**@ignore */\n  menuVisibility=true;\n  /**@ignore */\n  menuButton=false;\n  /**@ignore */\n  innerWidth;\n  /**teams array */\n  _teams:Teams[];\n  /**feed array */\n  feed=[];\n  /**@ignore */\n  newFeed=[];\n  /**@ignore */\n  proposalError:string;\n  /**User session */\n  user:User;\n  /**type of feed */\n  type=\"teamPost\";\n  /**@ignore */\n  page=0;\n  /**@ignore */\n  width:number;\n  /**@ignore */\n  padding:number;\n  /**@ignore */\n  endMessage=\"\";\n  /**@ignore */\n  morePost=true;\n  /**@ignore */\n  startDate=new Date()\n  /**@ignore */\n  data=new FeedParams(new Date(this.startDate.setDate(this.startDate.getDate()-30)),new Date(),\"0\",\"3\")\n  \n  constructor(\n    /**@ignore */\n    private authService: SocialAuthService,\n    /**session generation and deletion*/\n    public autho:AuthorizationService,\n    /**@ignore */\n    public router:Router,\n    /**posts proposal and update proposal*/\n    public post:PostProposalService,\n    /**@ignore */\n    public dialog:MatDialog,\n    /**gets all the posts from the backend*/\n    private getProposals:GetProposalsService,\n    /**teams objects api call*/\n    private teams:TeamsService) { }\n    \n/**gets the session data and calls functions to setup the initial view*/\n  ngOnInit(): void {\n    this.user=this.autho.authorization()\n    this.selectApi(this.type)\n    this.getTeams()\n    this.resize()\n  }\n\n/**\n  * This method calls a service method that is an api call to Team posts\n  */ \n  getTeams(){\n    this.teams.getTeams().subscribe(\n      (data)=>{\n        this._teams=data\n      }\n    );\n  }\n\n  /**\n  * This method calls a service method that is an api call to all posts\n  */ \n  getAll(){\n    this.getProposals.getAllPosts(this.data).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n/**\n * This method calls a service method that is an api call to all created posts\n */ \n  getTeam(){\n    this.getProposals.getTeamPosts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method calls a service method that is an api call to all created posts\n */ \n  getYour(){\n    this.getProposals.getYourPosts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method filters the api calls on the basis of which type is selected\n * @param {string}\n * @returns Calls different service methods to call different post api's\n */ \n  selectApi(data){\n    if(data===\"allPost\"){\n      this.getAll()\n    }\n    else if(data===\"teamPost\"){\n      this.getTeam()\n    }\n    else if(data===\"yourPost\"){\n      this.getYour()\n    }\n  }\n\n  /**\n * This method is called when filter components sends a data to filter feed\n * @param {string?,array?}\n * @returns Calls select api function to select which feed api to call or changes the date to filter api feed\n */ \n  onFilter(data){\n    this.feed=[]\n    if(Array.isArray(data)){\n      this.data.startDate=new Date(data[0])\n      this.data.endDate=new Date(data[1])\n    }\n    else{\n      this.type=data;\n      console.log(this.type)\n    }\n    this.page=0\n    this.data.page=this.page.toString()\n    this.selectApi(this.type)\n    this.morePost=true\n    this.endMessage=\"\"\n  }\n\n  /**\n * This method runs when a scroll event is emitted\n * @returns returns new 3 proposals every time scroll event is emitted\n */ \n  onScroll(){\n    if((this.newFeed.length>0 || this.page==0)&&this.morePost){\n      this.page++\n      this.data.page=this.page.toString()\n      console.log(this.data)\n      if(this.type.includes(\"allPost\")){\n        this.getProposals.getAllNextPost(this.data).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"teamPost\")){\n        this.getProposals.getTeamNextPost(this.data,this.user.team.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"yourPost\")){\n        this.getProposals.getYourNextPost(this.data,this.user.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }      \n      this.feed=this.feed.concat(this.newFeed)\n      console.log(this.newFeed)\n      this.newFeed=[]\n    }\n  }\n\n/**\n * This method opens a Share proposal dialog\n * @returns After closing calls an api to update teams of a proposal\n */ \n  openDialogshare(post){\n    let dialogRef = this.dialog.open(ShareProposalComponent, {\n      height: '250px',\n      width: '400px',\n      data:{prop:post.teams,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result =>{\n      if(result){\n        this.post.shareProposal(result,post.id).subscribe(\n          (data)=>console.log(data),\n          (error)=>{\n            if(error.status==200){\n              window.location.reload()\n            }\n          })\n      }\n    })\n\n  }\n\n/**\n * This method opens a Create proposal dialog\n * @returns After closing calls an api to store proposal and refreshs the page\n */ \n  openDialog(post?){\n    let dialogRef = this.dialog.open(CreateProposalComponent, {\n      height: '400px',\n      width: '600px',\n      data:{name:this.user.id,post:post,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.post.postProposal(result,this.user.id).subscribe(\n          (data)=>{\n            this.selectApi(this.type)\n            this.page=0\n            this.data.page=this.page.toString()\n            window.location.reload()\n            this.proposalError=\"\"\n          },\n          (error)=>{\n            if(error.status==200){\n              this.selectApi(this.type)\n              this.page=0\n              this.data.page=this.page.toString()\n              window.location.reload()\n              this.proposalError=\"\"\n            }\n            else{\n              alert(\"Some error has occured! please try again later.\")\n            }\n          }\n        ) \n      }\n    });\n  }\n  \n/**\n * This method checks the responsive filter menu is open or not\n */\n  showMenu(){\n    if(this.menuVisibility){\n      this.menuVisibility=false\n    }\n    else{\n      this.menuVisibility=true\n    }\n  }\n  \n  /**\n * This method is called by OnResize() and sets values of different variables that controls the padding and width\n */\n  resize(){\n    if(this.innerWidth item.id != id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n        \n        \n        \n        \n            person\n        \n        \n            Hello, {{this.user.name}}\n            Email : {{this.user.email}}\n            Team  : {{this.user.team.name}}\n            Logout\n        \n    \n    \n        \n        \n            \n                \n            \n            \n                \n                    \n                         how_to_vote&nbsp;\n                        Propose an improvement...\n                    \n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                    {{this.endMessage}}\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .contain{\n    overflow-x: hidden;\n    width: 100%;\n    ;\n}\n.endMessage{\n    font-size: 15px;\n    text-align: center;\n    color: black;\n}\n.header{\n    height:60px;\n    margin-bottom: 1em;\n    position: fixed;\n    z-index: 1000;\n}\n.menu{\n    opacity:20%;\n    width:70px;\n}\n.search-results {\n    height: 100%;\n}\n.space{\n    flex:1 1 auto;\n}\n.non-scroll{\n    overflow-y: hidden;\n    height: 500px;\n    display:none;\n    position:fixed;\n    z-index: 1000;\n}\n\n\n.filter{\n    background-color: white; \n    position:fixed;\n    width:24%;\n    z-index: 300;\n    height: 100%;\n}\n.scrollable{\n    widows: 50%;\n    height:500px;\n}\n.feed{\n    margin-right: 2%;\n    background-color: white;\n    z-index: 200;\n}\n.postButton{\n    width:100%;\n    height:55px;\n    margin-bottom:1%;\n    font-weight: 400;\n    font-size: 20px;\n    border-radius: 50px;\n    padding-left:5%;\n    text-align: left;\n    color:#8b8a8a;\n    background-color: rgb(236, 236, 236);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                                            person                            Hello, {{this.user.name}}            Email : {{this.user.email}}            Team  : {{this.user.team.name}}            Logout                                                                                                                                                 how_to_vote                         Propose an improvement...                                                                                                                                                                                                            {{this.endMessage}}                                        '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n                    You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:105\n                \n            \n\n\n            \n                \n                    This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:136\n                \n            \n\n\n            \n                \n                    This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:81\n                \n            \n\n\n            \n                \n                    This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n                \n              \n              \n               -->\n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                                                           -->                                        Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n            \n                Description\n            \n            \n                The object type of a post that is created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n                \n                    \n                        define description of a post (string)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:9\n                            \n                        \n\n                \n                    \n                        define id of the post (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:11\n                            \n                        \n\n                \n                    \n                        define teams array that its shared to \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:13\n                            \n                        \n\n                \n                    \n                        define title of the post (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:15\n                            \n                        \n\n                \n                    \n                        define number of upvotes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:17\n                            \n                        \n\n                \n                    \n                        define the user data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        /**define description of a post (string)*/\n        public description: string,\n        /**define id of the post (unique) */\n        public id: number,\n        /**define teams array that its shared to */\n        public teams:[],\n        /**define title of the post (string) */\n        public title: string,\n        /**define number of upvotes */\n        public upvotesCount: number,\n        /**define the user data */\n        public user: {\n            /**define id of the user (unique) */\n            id: number,\n            /**define name of the user */\n            name: string,\n            /**define email of the user */\n            email: string,\n            /**define team the user is in */\n            teams:{\n                /**define id of the team (unique) */\n                id:number,\n                /**define name of the team (string) */\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is the post-proposal service \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:39\n                \n            \n\n\n            \n                \n                    calls a post api to create proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable is returned of type void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:29\n                \n            \n\n\n            \n                \n                    share proposal calls a post api to share proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable is returned \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:15\n                            \n                        \n\n                \n                    \n                        a url to create proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:19\n                            \n                        \n\n                \n                    \n                        url to share proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        url to update proposal api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n/** This is the post-proposal service */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  /**@ignore */\n  public sentTeams:{}[]\n  /**\n   * a url to create proposal api\n  */\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  /**url to update proposal api*/\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  /**url to share proposal api*/\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  constructor(\n    /**@ignore */\n    private http:HttpClient) { }\n  /**\n   * share proposal calls a post api to share proposal api\n   * @param {objects of teams}\n   * @param {number}\n   * @returns an observable is returned \n  */\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  /**\n   * calls a post api to create proposal api\n   * @param {objects of post}\n   * @param {number}\n   * @returns an observable is returned of type void\n  */\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n            \n                Description\n            \n            \n                This is a proposal class resposible for handling proposal data \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:2\n                            \n                        \n\n                \n                    \n                            this is the constructor of proposal class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the UserId from session.\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the title of the Proposal.\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the description of the Proposal.\n\n                                                        \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the array of teams to which it shared.\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                This is the Proposal id. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:14\n                            \n                        \n\n                \n                    \n                        This is the description of the Proposal.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:16\n                            \n                        \n\n                \n                    \n                        This is the Proposal id. \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:15\n                            \n                        \n\n                \n                    \n                        This is the array of teams to which it shared.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:13\n                            \n                        \n\n                \n                    \n                        This is the title of the Proposal.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:12\n                            \n                        \n\n                \n                    \n                        This is the UserId from session.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    /**\n     * this is the constructor of proposal class\n     * @param userId This is the UserId from session.\n     * @param title This is the title of the Proposal.\n     * @param description This is the description of the Proposal.\n     * @param teams This is the array of teams to which it shared.\n     * @param {number} id This is the Proposal id. \n     */\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is Proposal Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:89\n                \n            \n\n\n            \n                \n                    This is the method for deleting a comment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:98\n                \n            \n\n\n            \n                \n                    This is the method for deleting a proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:81\n                \n            \n\n\n            \n                \n                    This is the method for getting all comments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:73\n                \n            \n\n\n            \n                \n                    This is the method for checking whether a user liked a post or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:45\n                \n            \n\n\n            \n                \n                    This is the method for posting a comment to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the comment user wants to post.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:63\n                \n            \n\n\n            \n                \n                    This is the method for posting a dislike to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:54\n                \n            \n\n\n            \n                \n                    This is the method for posting a like to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:29\n                            \n                        \n\n                \n                    \n                        Url for deleting comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                        Url for deleting a proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url for getting all comments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:26\n                            \n                        \n\n                \n                    \n                        Url for checking user has upvoted or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        Url for adding Comment \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:23\n                            \n                        \n\n                \n                    \n                        Url for Posting disLike\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:20\n                            \n                        \n\n                \n                    \n                        Url for Posting Like\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n/**\n * This is Proposal Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n\n  /**Url for adding Comment */\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n\n  /**Url for getting all comments*/\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n\n  /**Url for Posting Like*/\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n\n  /**Url for Posting disLike*/\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n\n  /**Url for checking user has upvoted or not*/\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n\n  /**Url for deleting comment*/\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n\n  /**Url for deleting a proposal*/\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http:HttpClient) { }\n\n  /**This is the method for posting a comment to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {string} new_comment This is the comment user wants to post.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n\n  /**This is the method for posting a like to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for posting a dislike to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n\n  /**This is the method for checking whether a user liked a post or not.\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for getting all comments\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a comment\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a proposal\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getTeams\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:103\n                \n            \n\n\n            \n                \n                    This method returns error message based on email field validations.\n\n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:85\n                \n            \n\n\n            \n                \n                    This Method calls the Get Team Service to fetch the list of teams currently in the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:66\n                \n            \n\n\n            \n                \n                    Creates a registration form with creatain validation checks.\nInitializes a array of existing teams in the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:115\n                \n            \n\n\n            \n                \n                    This method calls the User Register Service to send data to register a user into the system.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:43\n                \n            \n\n\n            \n                \n                    This method opens dialog box displaying required specifications for the password field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:53\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the details, showing the response saying if the registraion was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    \n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n/**\n * This method opens dialog box displaying required specifications for the password field.\n */\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n/**\n * This Method opens a Dialog Box, after you submit the details, showing the response saying if the registraion was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n/**\n * Creates a registration form with creatain validation checks.\n * \n * Initializes a array of existing teams in the database.\n */\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n\n  this.getTeams();\n  }\n\n/**\n * This Method calls the Get Team Service to fetch the list of teams currently in the database.\n */\n  getTeams(){\n    this.userService.getTeam().subscribe(\n      (data)=> {this.teams=data\n        this.filteredTeams=this.teams.slice();\n      },\n      (error)=>{\n       if(error.status==404){\n        this.filteredTeams=this.teams.slice();\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      }); \n  }\n  \n  /**\n   * This method returns error message based on email field validations.\n   */\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n/**\n * This method calls the User Register Service to send data to register a user into the system.\n */\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":{\n          \"name\":this.registerForm.value.team}\n      ,\"user\":{\n        \"name\": this.registerForm.value.userName,\n        \"email\": this.registerForm.value.email,\n        \"password\" :this.registerForm.value.password}\n      }\n\n    }\n\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n        },\n        (error)=>{\n          if(error.status==200){\n            console.log(error.status)\n            this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n         \n          }\n          else if(error.status==302){\n            this.message=\"This email Id already exists, Please try again!\"\n            this.responseDialog()\n            this.loading=false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n}\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:85\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:76\n                \n            \n\n\n            \n                \n                    ask Priyanka\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:68\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.resetPassword.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n        if(error.status==202){\n          this.validToken=true;\n        }\n        else if(error.status==406){\n          this.validToken=false;\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      \n       }\n     );\n    \n  }\n/**\n * This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n/** ask Priyanka*/\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n/** \n * This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n*/\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                            \n                                resetPassword\n                            \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:26\n                \n            \n\n\n            \n                \n                    This method is used for verification of valid email id entered by the user, \ngeneration of the token link and setting up the timer for the same.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email registered email of the user who wants to reset the password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:16\n                \n            \n\n\n            \n                \n                    This method helps in fetching the token from the database and sends an error if token is not present in the database.\nstores the updated password in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new password entered by the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:35\n                \n            \n\n\n            \n                \n                    This method helps in validating the token whether the session is in continuation or expired \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the token \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  /**\n   * This method helps in fetching the token from the database and sends an error if token is not present in the database.\n\t * stores the updated password in the database\n\t * @param data new password entered by the user\n   */\n \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/resetPassword\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n /**\n   * This method is used for verification of valid email id entered by the user, \n\t * generation of the token link and setting up the timer for the same.\n   * @param data email registered email of the user who wants to reset the password.\n   */\nresetLink(data){\n  console.log(\"inside forgetPassword\")\n  return this.http.post(\"http://localhost:8080/forgotPassword\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n/**\n * This method helps in validating the token whether the session is in continuation or expired \n * @param data Id of the token \n */\ntokenVerification(data){\n  console.log(\"inside tokenVerification\")\n  return this.http.post(\"http://localhost:8080/validateToken\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:31\n                \n            \n\n\n            \n                \n                    This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n/**\n * This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n */\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n\n  /**@ignore */\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n\n  /**@ignore */\n  updateForm: FormGroup;\n    \n   /**\n   * This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n   */\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n\n  /**@ignore */\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:25\n                \n            \n\n\n            \n                \n                    This method verifies that the user exists in our database or not.\n if the user already exists then it returns all the information of that user and redirects to landing page.\n else user redirects to create team page for registration.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  /**\n   * This method verifies that the user exists in our database or not.\n   \t * if the user already exists then it returns all the information of that user and redirects to landing page.\n   \t * else user redirects to create team page for registration.\n   * @param data \n   */\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        this.registerSuccessfulLogin();\n      }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:62\n                \n            \n\n\n            \n                \n                    This method calls the User Register Service to send data to register a user into the system.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:40\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the team name, showing the response saying if the team was updated or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n   \n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n/**\n * This Method opens a Dialog Box, after you submit the team name, showing the response saying if the team was updated or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.userService.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n/**\n * This method calls the User Register Service to send data to register a user into the system.\n */\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up! Now please login again to continue.\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       },\n       (error)=>{\n        if(error.status==200){\n         \n          this.message=\"You have been signed up! Now please login again to continue.\"\n          this.responseDialog()\n          this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       \n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      });\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n            \n                Description\n            \n            \n                This is the form Group of component \n\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:8\n                            \n                        \n\n                \n                    \n                            This is the Constructor for testService\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n/** This is the form Group of component */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n  /**\n   * This is the Constructor for testService\n  */\n  constructor() { }\n  /**@ignore */\n  form: FormGroup = new FormGroup({\n  /**This is the key of form */ key: new FormControl(null),\n  /**This is the form title */  title: new FormControl(' ',[Validators.required]),\n  /**This is the Description */  description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n  /**This is the teams array */  teams: new FormControl(),\n  });\n  \n  /**@ignore */\n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:13\n                \n            \n\n\n            \n                \n                    This method stores data to transfer data between components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n\n/**\n * This method stores data to transfer data between components.\n * @param data \n */\n  emitData(data) {\n    this.userData = data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n            \n                Description\n            \n            \n                defines the user data type\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:11\n                            \n                        \n\n                \n                    \n                        define email of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the user (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:9\n                            \n                        \n\n                \n                    \n                        define name of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:13\n                            \n                        \n\n                \n                    \n                        define team the user is in \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        /**define id of the user (unique) */\n        public id:number,\n        /**define name of the user (string) */\n        public name:string,\n        /**define email of the user (string) */\n        public email:string,\n        /**define team the user is in */\n        public team:{\n            /**define id of the team (unique) */\n            id:number,\n            /**define name of the team (string) */\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:25\n                \n            \n\n\n            \n                \n                    \nThis method returns all details of user when the user logins into the system and shows that details on the landing page.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n/**\n * * This method returns all details of user when the user logins into the system and shows that details on the landing page.\n * @param username \n * @param password \n */\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:18\n                \n            \n\n\n            \n                \n                    This method returns the response message which shows whether the user has successfully registered or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:27\n                \n            \n\n\n            \n                \n                    This method returns list of the team which are already exist in our database.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { teamList } from './../teamList';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n/**\n * This method returns the response message which shows whether the user has successfully registered or not.\n * @param data \n */\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n // return resp\n}\n/**\n * This method returns list of the team which are already exist in our database.\n */\ngetTeam():Observable{\n  console.log(\"inside GetTeam\")\n  return this.http.get(\"http://localhost:8080/getTeam\")\n  \n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                17 %\n                (4/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                30 %\n                (6/20)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nResetPasswordService\n\nResetPasswordService\n\nAppModule -->\n\nResetPasswordService->AppModule\n\n\n\n\n\nSocialMediaAuthService\n\nSocialMediaAuthService\n\nAppModule -->\n\nSocialMediaAuthService->AppModule\n\n\n\n\n\nTransferDataService\n\nTransferDataService\n\nAppModule -->\n\nTransferDataService->AppModule\n\n\n\n\n\nUserLoginService\n\nUserLoginService\n\nAppModule -->\n\nUserLoginService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
