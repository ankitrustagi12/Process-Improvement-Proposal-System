var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ApiResponseComponent.html",[0,0.279,1,0.865]],["body/components/ApiResponseComponent.html",[0,0.443,1,1.474,2,1.442,3,0.206,4,0.18,5,1.13,6,1.13,7,1.13,8,1.13,9,0.18,10,5.728,11,3.876,12,3.127,13,1.13,14,1.979,15,1.766,16,1.557,17,4.222,18,1.362,19,5.607,20,1.362,21,4.952,22,0.18,23,0.648,24,1.108,25,1.453,26,2.999,27,4.222,28,3.382,29,4.781,30,0.696,31,6.005,32,0.602,33,3.667,34,6.271,35,0.522,36,4.952,37,0.48,38,0.022,39,0.357,40,0.447,41,0.48,42,3.667,43,0.552,44,1.021,45,3.667,46,4.952,47,3.667,48,3.667,49,1.714,50,1.068,51,1.068,52,1.424,53,3.667,54,0.629,55,3.667,56,0.631,57,2.116,58,2.771,59,3.667,60,1.512,61,1.068,62,2.116,63,0.381,64,0.206,65,0.011,66,3.667,67,3.667,68,3.667,69,3.667,70,3.667,71,3.667,72,4.222,73,1.009,74,1.526,75,1.526,76,1.13,77,1.85,78,1.13,79,3.667,80,1.13,81,0.9,82,1.13,83,0.9,84,1.13,85,0.9,86,1.068,87,1.526,88,0.85,89,1.13,90,0.9,91,1.13,92,0.9,93,1.13,94,0.802,95,0.953,96,1.13,97,0.85,98,1.13,99,0.85,100,1.009,101,1.13,102,0.756,103,1.13,104,0.9,105,0.9,106,1.13,107,0.85,108,1.13,109,0.85,110,0.85,111,1.13,112,0.9,113,1.068,114,0.85,115,0.85,116,1.13,117,1.13,118,0.011,119,0.015,120,0.011]],["title/components/AppComponent.html",[0,0.279,81,0.865]],["body/components/AppComponent.html",[0,0.482,1,1.067,2,1.612,3,0.245,4,0.213,5,1.34,6,1.34,7,1.34,8,1.34,9,0.213,13,1.34,14,2.013,15,1.796,16,1.008,18,1.524,20,1.524,22,0.213,23,0.725,35,0.344,38,0.022,39,0.352,40,0.31,50,1.266,51,1.266,54,0.745,56,0.489,63,0.451,64,0.245,65,0.013,73,1.196,74,1.706,75,1.706,76,1.34,77,1.977,78,1.34,80,1.34,81,1.575,82,1.34,83,1.067,84,1.34,85,1.067,86,1.266,87,1.706,88,1.008,89,1.34,90,1.067,91,1.34,92,1.067,93,1.34,94,0.951,95,1.13,96,1.34,97,1.008,98,1.34,99,1.008,100,1.196,101,1.34,102,0.896,103,1.34,104,1.067,105,1.067,106,1.34,107,1.008,108,1.34,109,1.008,110,1.008,111,1.34,112,1.067,113,1.266,114,1.008,115,1.008,116,1.34,117,1.34,118,0.013,119,0.017,120,0.013,121,3.707,122,2.15,123,6.094,124,5.538,125,3.516,126,4.722,127,4.348]],["title/modules/AppModule.html",[128,2.407,129,2.407]],["body/modules/AppModule.html",[1,1.438,3,0.153,4,0.133,9,0.133,11,1.566,15,0.666,16,0.629,38,0.023,56,0.825,58,2.051,60,1.119,63,0.282,64,0.153,65,0.008,73,0.747,81,1.627,83,1.438,85,1.438,88,1.358,90,1.438,92,1.438,94,1.281,95,0.706,97,1.358,99,1.358,100,1.667,102,1.207,104,1.438,105,0.666,107,1.358,109,1.358,110,0.928,112,1.438,114,1.358,118,0.008,119,0.012,120,0.008,128,1.854,129,5.015,130,1.697,131,1.854,132,4.055,133,3.594,134,4.476,135,2.051,136,2.314,137,2.314,138,2.314,139,2.314,140,2.314,141,3.662,142,3.38,143,3.38,144,3.38,145,3.138,146,3.413,147,1.566,148,2.714,149,3.413,150,1.566,151,2.051,152,4.004,153,3.413,154,2.051,155,2.734,156,2.714,157,2.714,158,4.004,159,2.714,160,4.004,161,2.714,162,2.314,163,2.314,164,2.051,165,1.854,166,3.025,167,3.413,168,1.651,169,4.004,170,4.757,171,1.854,172,4.004,173,2.714,174,2.051,175,4.004,176,2.714,177,4.004,178,2.714,179,4.004,180,2.314,181,4.757,182,2.714,183,4.004,184,2.714,185,4.004,186,2.714,187,1.697,188,2.051,189,4.004,190,1.19,191,1.854,192,1.854,193,2.314,194,4.004,195,2.314,196,2.051,197,2.051,198,2.714,199,2.714,200,1.19,201,2.051,202,2.314,203,4.004,204,2.714,205,2.714,206,4.004,207,2.714,208,4.004,209,2.714,210,4.004,211,2.314,212,4.004,213,2.714,214,2.714,215,2.714,216,2.051,217,1.697,218,2.314,219,1.566,220,1.854,221,4.004,222,2.051,223,1.697,224,1.566,225,1.854,226,2.314,227,4.004,228,5.25,229,2.144,230,2,231,1.756,232,2.734,233,2.714,234,1.385,235,1.465,236,4.004,237,4.004,238,2.714,239,2.714,240,2.714,241,2.714,242,2.714,243,1.119,244,2.714,245,2.714]],["title/modules/AppRoutingModule.html",[128,2.407,141,2.203]],["body/modules/AppRoutingModule.html",[3,0.272,4,0.237,9,0.237,38,0.022,56,0.806,58,3.655,63,0.502,64,0.272,65,0.014,88,1.121,97,1.121,99,1.121,100,1.331,102,0.997,107,1.121,109,1.121,110,1.121,114,1.121,118,0.015,119,0.018,120,0.015,130,3.024,135,3.655,141,3.7,149,4.124,155,4.043,162,4.124,163,4.124,180,4.124,192,3.304,193,4.124,218,4.124,225,3.304,226,4.124,246,4.837,247,4.837,248,4.369,249,5.919,250,1.878,251,2.416,252,7.112,253,4.837,254,4.837,255,4.837,256,4.837,257,4.837,258,4.837,259,4.837,260,4.837,261,4.837,262,4.837]],["title/injectables/AuthorizationService.html",[263,0.684,264,2.407]],["body/injectables/AuthorizationService.html",[3,0.258,4,0.225,9,0.225,22,0.225,23,0.749,25,1.327,30,0.804,32,0.696,35,0.517,37,0.6,38,0.022,39,0.292,40,0.408,41,0.6,43,0.984,44,0.945,54,1.07,56,0.644,63,0.476,64,0.258,65,0.014,118,0.014,119,0.017,120,0.014,122,1.779,231,2.511,250,1.779,263,1.111,264,3.911,265,1.779,266,3.908,267,4.326,268,4.941,269,6.54,270,3.908,271,3.267,272,5.725,273,4.584,274,3.773,275,3.011,276,3.057,277,5.725,278,1.348,279,2.86,280,4.584,281,4.882,282,2.01,283,4.584,284,2.01,285,1.89,286,3.908,287,4.584,288,4.584,289,4.584,290,1.412,291,4.584,292,4.584]],["title/classes/Comment.html",[65,0.01,293,2.033]],["body/classes/Comment.html",[3,0.249,4,0.217,9,0.217,22,0.217,23,0.732,24,1.233,25,1.297,32,0.68,35,0.526,37,0.579,38,0.022,39,0.356,40,0.506,41,0.579,54,1.142,64,0.249,65,0.013,118,0.013,119,0.017,120,0.013,235,2.49,276,2.067,278,1.454,293,4.166,294,2.067,295,2.983,296,3.77,297,1.442,298,3.77,299,6.455,300,3.34,301,2.532,302,4.549,303,3.839,304,4.421,305,4.421,306,5.371,307,4.421,308,4.772,309,4.421,310,4.229,311,4.421,312,5.597,313,3.823,314,4.421,315,4.421,316,3.02]],["title/components/CommentComponent.html",[0,0.279,83,0.865]],["body/components/CommentComponent.html",[0,0.507,1,0.808,2,1.338,3,0.185,4,0.161,5,1.014,6,1.014,7,1.014,8,1.014,9,0.161,13,1.014,14,1.954,15,1.744,16,0.762,18,1.264,20,1.264,22,0.161,24,0.983,25,1.228,30,0.646,32,0.4,35,0.453,38,0.022,39,0.337,40,0.327,43,0.691,44,1.092,56,0.517,61,1.542,63,0.341,64,0.185,65,0.01,73,0.905,74,1.416,75,1.416,76,1.014,77,1.767,78,1.014,80,1.014,81,0.808,82,1.014,83,1.535,84,1.014,85,0.808,86,0.958,87,1.416,88,0.762,89,1.014,90,1.607,91,1.014,92,0.808,93,1.014,94,0.719,95,0.855,96,1.014,97,0.762,98,1.014,99,0.762,100,0.905,101,1.014,102,0.678,103,1.014,104,0.808,105,0.808,106,1.014,107,0.762,108,1.014,109,0.762,110,0.762,111,1.014,112,0.808,113,0.958,114,0.762,115,0.762,116,1.014,117,1.014,118,0.01,119,0.014,120,0.01,234,0.958,275,2.016,278,0.947,279,2.296,284,2.742,293,3.702,295,2.742,297,1.073,301,1.356,317,2.805,318,2.873,319,4.333,320,3.473,321,3.919,322,1.338,323,5.298,324,4.596,325,4.89,326,1.767,327,3.919,328,2.865,329,3.473,330,4.596,331,3.29,332,2.873,333,3.473,334,3.29,335,4.596,336,3.29,337,2.099,338,4.596,339,4.596,340,3.919,341,3.919,342,2.652,343,3.29,344,3.139,345,3.919,346,3.29,347,3.29,348,3.618,349,3.29,350,2.805,351,3.618,352,5.298,353,3.29,354,2.805,355,2.805,356,2.486,357,3.29,358,3.29,359,3.29,360,3.29,361,3.29,362,3.29,363,2.486,364,3.29,365,3.29,366,3.29,367,3.29,368,3.919,369,1.762,370,1.898,371,2.247,372,2.486,373,2.805,374,3.29,375,3.919,376,1.643,377,2.247,378,2.805,379,3.29,380,1.762,381,2.462,382,1.277]],["title/components/CreateProposalComponent.html",[0,0.279,85,0.865]],["body/components/CreateProposalComponent.html",[0,0.503,1,0.782,2,1.308,3,0.179,4,0.156,5,0.982,6,0.982,7,0.982,8,0.982,9,0.156,13,0.982,14,1.947,15,1.737,16,0.738,18,1.236,20,1.236,22,0.156,23,0.588,24,1.113,25,0.738,30,0.631,35,0.447,38,0.022,39,0.286,40,0.227,43,0.479,44,0.657,54,0.546,56,0.586,60,1.314,61,1.516,62,1.838,63,0.331,64,0.179,65,0.009,73,0.876,74,1.385,75,1.385,76,0.982,77,1.742,78,0.982,80,0.982,81,0.782,82,0.982,83,0.782,84,0.982,85,1.388,86,1.891,87,1.385,88,0.738,89,0.982,90,0.782,91,0.982,92,0.782,93,0.982,94,0.697,95,0.828,96,0.982,97,0.738,98,0.982,99,0.738,100,1.432,101,0.982,102,0.657,103,0.982,104,0.782,105,0.782,106,0.982,107,0.738,108,0.982,109,0.738,110,0.738,111,0.982,112,0.782,113,0.928,114,0.738,115,0.738,116,0.982,117,0.982,118,0.01,119,0.014,120,0.01,125,3.262,164,4.505,165,4.073,174,4.505,235,1.645,275,1.971,278,0.926,279,2.245,284,2.848,295,2.615,297,1.698,308,4.821,318,2.809,322,1.308,326,1.742,328,2.245,332,2.809,337,1.645,344,3.862,382,1.237,383,2.407,384,2.298,385,5.655,386,4.494,387,4.439,388,3.832,389,5.207,390,5.207,391,3.186,392,4.494,393,3.069,394,1.971,395,4.494,396,3.186,397,3.186,398,3.186,399,2.716,400,2.176,401,2.716,402,3.186,403,1.838,404,3.186,405,3.186,406,2.716,407,1.166,408,2.716,409,3.186,410,3.186,411,3.186,412,3.186,413,5.207,414,3.186,415,3.186,416,3.186,417,3.186,418,3.186,419,3.186,420,3.186,421,3.186,422,3.186,423,1.992,424,3.186,425,5.655,426,4.821,427,3.832,428,5.276,429,4.494,430,4.494,431,3.832,432,4.494,433,3.832,434,2.593,435,3.832,436,1.838,437,2.716,438,3.186,439,2.716,440,3.186]],["title/interfaces/DialogData.html",[57,2.033,441,2.033]],["body/interfaces/DialogData.html",[0,0.397,3,0.168,4,0.146,9,0.146,14,0.822,15,0.733,16,0.692,18,0.822,20,0.822,22,0.146,23,0.562,24,0.861,26,1.492,30,0.419,38,0.023,39,0.19,40,0.213,44,0.884,49,2.006,52,2.132,54,0.941,56,0.76,57,2.476,60,1.231,61,1.25,62,1.723,63,0.31,64,0.283,65,0.013,94,0.653,95,0.776,102,0.615,105,1.233,110,0.995,118,0.013,119,0.013,120,0.009,147,2.476,150,1.723,168,1.231,171,2.04,219,1.723,220,2.04,229,2.691,230,2.743,231,2.736,232,2.04,234,1.599,243,2.398,250,1.159,251,2.144,271,2.509,275,1.31,276,2.006,278,1.391,285,2.398,290,0.92,322,1.25,326,0.92,337,1.571,382,1.159,384,0.974,394,1.882,441,1.723,442,2.986,443,2.04,444,2.831,445,1.492,446,2.04,447,1.867,448,1.723,449,2.256,450,2.683,451,2.256,452,2.348,453,3.433,454,1.6,455,2.04,456,3.243,457,3.243,458,3.243,459,2.299,460,1.6,461,2.04,462,2.683,463,4.149,464,2.683,465,2.256,466,3.168,467,2.476,468,3.243,469,2.256,470,2.256,471,2.256,472,2.256,473,2.256,474,2.256,475,2.256,476,2.256,477,2.04,478,2.256,479,2.256,480,2.256,481,2.256,482,2.04,483,1.723,484,3.431,485,1.867,486,2.256,487,2.256,488,2.256,489,1.867,490,1.231,491,1.867,492,2.256,493,2.256,494,1.867,495,2.256,496,2.006,497,1.867,498,2.256,499,2.256,500,4.149,501,2.256,502,2.256,503,1.723,504,2.04,505,2.256,506,2.256,507,1.6,508,2.256,509,2.256,510,3.243,511,2.256,512,3.14,513,2.256,514,1.867,515,2.348,516,2.256,517,2.256,518,2.256,519,2.256,520,2.256,521,2.256,522,2.256,523,2.256,524,2.256,525,2.476,526,3.243,527,2.256,528,1.867,529,2.04,530,2.931,531,2.256,532,2.931,533,3.796,534,1.867,535,2.04,536,2.256,537,2.256,538,2.256,539,2.256,540,2.256,541,2.256,542,2.256,543,4.149,544,4.149,545,2.256,546,1.6,547,3.796,548,3.431,549,3.796,550,2.071,551,2.04,552,2.04,553,2.04,554,2.04,555,1.6,556,1.723,557,2.256,558,2.256,559,2.256,560,3.243,561,1.492,562,1.867,563,1.396,564,1.31,565,1.31,566,1.396,567,1.396,568,1.492,569,1.723,570,1.867,571,2.256,572,1.6,573,2.256,574,2.04]],["title/components/ErrorComponent.html",[0,0.279,88,0.817]],["body/components/ErrorComponent.html",[0,0.471,1,1.018,2,1.564,3,0.233,4,0.203,5,1.278,6,1.278,7,1.278,8,1.278,9,0.203,13,1.278,14,2.004,15,1.788,16,0.961,18,1.478,20,1.478,22,0.203,23,0.703,30,0.755,32,0.724,35,0.471,38,0.022,39,0.342,40,0.296,43,0.624,44,1.107,50,1.208,51,1.208,54,0.711,56,0.467,61,1.735,63,0.431,64,0.233,65,0.012,73,1.141,74,1.656,75,1.656,76,1.278,77,1.942,78,1.278,80,1.278,81,1.018,82,1.278,83,1.018,84,1.278,85,1.018,86,1.208,87,1.656,88,1.461,89,1.278,90,1.018,91,1.278,92,1.018,93,1.278,94,0.907,95,1.078,96,1.278,97,0.961,98,1.278,99,0.961,100,1.141,101,1.278,102,0.855,103,1.278,104,1.018,105,1.018,106,1.278,107,0.961,108,1.278,109,0.961,110,0.961,111,1.278,112,1.018,113,1.208,114,0.961,115,0.961,116,1.278,117,1.278,118,0.013,119,0.016,120,0.013,322,1.564,326,1.942,482,4.46,550,2.599,564,2.356,575,3.537,576,5.96,577,5.373,578,5.373,579,4.149]],["title/components/FeedComponent.html",[0,0.279,90,0.865]],["body/components/FeedComponent.html",[0,0.404,1,0.421,2,0.816,3,0.097,4,0.084,5,0.529,6,0.529,7,0.529,8,0.529,9,0.084,13,0.529,14,1.761,15,1.571,16,0.398,18,0.771,20,0.771,22,0.084,23,0.367,24,0.995,25,0.95,30,0.576,32,0.498,35,0.496,37,0.591,38,0.023,39,0.325,40,0.38,41,0.591,43,0.853,44,1.197,56,0.575,61,1.034,63,0.178,64,0.097,65,0.005,73,0.472,74,0.863,75,0.863,76,0.529,77,1.263,78,0.529,80,0.529,81,0.421,82,0.529,83,0.688,84,0.529,85,0.421,86,1.034,87,0.863,88,0.398,89,0.529,90,1.189,91,0.529,92,0.421,93,0.529,94,0.375,95,0.446,96,0.529,97,0.398,98,0.529,99,0.398,100,1.242,101,0.529,102,0.354,103,0.529,104,0.421,105,0.421,106,0.529,107,0.398,108,0.529,109,0.398,110,0.398,111,0.529,112,0.688,113,1.651,114,0.398,115,0.398,116,0.529,117,0.529,118,0.005,119,0.008,120,0.005,125,0.99,144,2.948,155,1.172,166,1.297,200,2.644,201,1.297,217,1.073,235,1.653,275,1.797,276,1.659,278,1.293,279,2.047,284,2.644,293,3.578,295,2.78,297,1.473,301,2.274,318,1.751,319,3.096,320,4.027,321,2.389,322,0.816,326,1.263,327,2.389,328,1.399,329,2.117,332,2.561,333,4.554,337,2.343,340,4.131,341,4.131,342,1.616,344,3.641,345,1.463,348,3.309,350,3.027,355,1.463,356,3.096,369,2.195,370,2.048,371,1.172,372,2.682,373,3.494,376,2.553,377,2.425,378,1.463,380,0.919,381,0.919,382,0.666,384,2.023,393,2.799,394,1.797,403,0.99,423,3.546,431,1.463,515,1.31,550,2.443,555,2.195,561,2.255,562,1.751,563,1.915,564,1.557,565,1.98,566,1.659,567,1.659,572,1.501,580,1.463,581,4.545,582,3.55,583,2.802,584,4.098,585,4.845,586,4.098,587,4.845,588,2.802,589,3.494,590,2.389,591,2.389,592,4.845,593,2.389,594,1.716,595,1.716,596,3.027,597,1.716,598,1.716,599,4.131,600,1.716,601,1.716,602,1.716,603,2.802,604,2.802,605,3.494,606,2.802,607,1.716,608,3.494,609,3.494,610,3.494,611,1.716,612,2.802,613,2.389,614,1.716,615,2.802,616,2.389,617,2.802,618,2.802,619,1.716,620,2.389,621,1.716,622,3.494,623,3.494,624,1.716,625,1.463,626,1.716,627,2.389,628,2.802,629,1.463,630,1.716,631,4.098,632,3.55,633,2.802,634,1.716,635,2.802,636,2.389,637,1.914,638,2.802,639,1.716,640,1.716,641,1.073,642,1.716,643,1.297,644,1.716,645,1.716,646,1.716,647,1.716,648,1.716,649,1.716,650,1.716,651,1.716,652,1.716,653,1.716,654,1.716,655,1.716,656,1.716,657,1.716,658,1.716,659,1.716,660,2.561,661,1.716,662,1.716,663,1.716,664,3.55,665,1.716,666,1.716,667,1.716,668,1.716,669,1.716,670,1.716,671,1.716,672,1.716,673,1.716,674,4.098,675,4.098,676,2.802,677,1.716,678,1.716,679,1.716,680,2.802,681,2.389,682,1.716,683,1.716,684,1.716,685,1.716,686,1.716,687,1.716,688,2.802,689,2.802,690,1.716,691,1.463,692,1.716,693,1.716,694,1.716,695,1.716,696,2.802,697,4.098,698,1.751,699,2.802,700,1.716,701,1.716,702,2.802,703,2.802,704,1.716,705,1.716,706,1.716,707,1.716,708,1.463,709,1.716,710,1.172,711,2.802,712,1.297,713,1.716,714,1.463,715,1.716,716,2.802,717,2.802,718,2.802,719,2.802,720,2.802,721,2.389,722,2.802,723,2.802,724,2.802,725,2.389,726,1.902,727,1.501,728,2.389,729,2.561,730,2.802,731,2.195,732,1.716,733,1.716,734,2.117,735,2.682,736,1.297,737,2.682,738,1.716,739,1.297,740,2.802,741,1.902,742,1.716,743,0.99,744,1.716,745,2.682,746,1.463,747,1.716,748,1.463,749,1.463,750,1.716,751,1.172,752,1.716,753,1.716,754,1.716,755,1.716,756,1.297,757,2.802,758,1.716,759,2.802,760,2.389,761,1.399,762,1.716,763,2.117,764,1.463,765,1.716,766,1.716,767,1.716,768,1.716,769,1.716,770,1.716,771,1.716,772,1.716,773,2.802,774,1.716,775,1.716,776,0.99,777,1.716,778,1.716,779,2.802,780,1.716,781,1.716,782,1.716]],["title/classes/FeedParams.html",[65,0.01,783,2.203]],["body/classes/FeedParams.html",[3,0.241,4,0.21,9,0.21,22,0.21,23,0.718,24,1.253,32,0.736,35,0.542,37,0.561,38,0.022,39,0.273,40,0.47,41,0.863,54,1.157,64,0.241,65,0.016,118,0.013,119,0.017,120,0.013,224,3.681,275,2.406,278,1.131,279,3.187,284,2.406,294,2.002,297,1.397,302,4.609,328,3.427,332,3.429,342,2.472,731,3.418,783,3.429,784,5.923,785,3.653,786,3.237,787,6.748,788,6.596,789,5.849,790,4.284,791,4.284,792,4.145,793,4.284,794,5.44,795,4.284,796,4.284,797,4.284,798,4.284,799,4.284,800,4.284,801,4.284,802,4.284,803,4.284]],["title/components/FilterComponent.html",[0,0.279,92,0.865]],["body/components/FilterComponent.html",[0,0.443,1,0.668,2,1.168,3,0.153,4,0.133,5,0.839,6,0.839,7,0.839,8,0.839,9,0.133,13,0.839,14,1.907,15,1.702,16,1.104,18,1.104,20,1.104,22,0.133,24,1.005,25,1.104,28,2.741,30,0.564,32,0.331,35,0.443,37,0.356,38,0.023,39,0.303,40,0.194,41,0.356,43,0.791,44,1.155,56,0.592,61,1.168,63,0.283,64,0.153,65,0.008,73,0.749,74,1.236,75,1.236,76,0.839,77,1.62,78,0.839,80,0.839,81,0.668,82,0.839,83,0.668,84,0.839,85,0.668,86,0.793,87,1.236,88,0.631,89,0.839,90,0.668,91,0.839,92,1.44,93,0.839,94,0.595,95,0.708,96,0.839,97,0.631,98,0.839,99,0.631,100,1.748,101,0.839,102,0.561,103,0.839,104,0.668,105,0.668,106,0.839,107,0.631,108,0.839,109,0.631,110,0.631,111,0.839,112,0.668,113,0.793,114,0.631,115,1.104,116,0.839,117,0.839,118,0.008,119,0.012,120,0.008,200,2.873,211,2.322,223,4.096,224,3.591,234,0.793,274,3.383,278,1.209,279,3.109,284,2.729,295,2.572,297,0.888,302,4.614,318,2.508,322,1.168,326,0.839,329,3.032,333,3.973,337,1.925,342,3.033,344,3.591,348,1.86,356,2.057,370,1.571,382,1.85,427,4.063,436,1.571,504,2.741,515,1.876,565,1.194,622,3.421,641,1.702,643,2.057,726,2.552,727,2.816,728,2.322,729,2.508,751,1.86,761,1.36,794,3.421,804,2.322,805,4.765,806,4.013,807,5.258,808,5.258,809,5.258,810,4.013,811,4.013,812,2.723,813,2.723,814,3.421,815,4.013,816,5.307,817,3.421,818,2.723,819,3.421,820,4.013,821,5.865,822,2.723,823,5.258,824,5.258,825,3.421,826,4.013,827,4.013,828,2.723,829,4.013,830,2.723,831,2.723,832,2.723,833,2.723,834,2.723,835,2.723,836,2.723,837,2.723,838,2.723,839,2.723,840,2.723,841,4.013,842,2.723,843,2.723,844,2.723,845,2.723,846,2.723,847,2.723,848,4.765,849,2.322,850,2.723,851,2.723,852,2.723,853,2.723,854,2.723,855,3.032,856,2.723,857,2.723,858,4.013,859,2.149,860,2.723,861,2.979,862,2.723,863,2.723,864,2.723,865,2.723]],["title/components/ForgetPasswordComponent.html",[0,0.279,94,0.771]],["body/components/ForgetPasswordComponent.html",[0,0.405,1,0.758,2,1.28,3,0.174,4,0.151,5,0.952,6,0.952,7,0.952,8,0.952,9,0.151,13,0.952,14,1.939,15,1.731,16,0.716,18,1.209,20,1.209,22,0.151,23,0.575,25,1.186,30,0.617,32,0.375,35,0.509,37,0.404,38,0.022,39,0.326,40,0.42,41,0.404,43,0.77,44,1.149,49,1.444,50,0.899,51,0.899,52,1.199,54,0.956,56,0.576,61,1.49,63,0.32,64,0.174,65,0.009,72,3.748,73,0.85,74,1.355,75,1.355,76,0.952,77,1.816,78,0.952,80,0.952,81,0.758,82,0.952,83,0.758,84,0.952,85,0.758,86,0.899,87,1.355,88,0.716,89,0.952,90,0.758,91,0.952,92,0.758,93,0.952,94,1.219,95,1.728,96,0.952,97,0.716,98,0.952,99,0.716,100,0.85,101,0.952,102,0.636,103,0.952,104,0.758,105,1.547,106,0.952,107,0.716,108,0.952,109,0.716,110,1.46,111,0.952,112,0.758,113,0.899,114,0.716,115,0.716,116,0.952,117,0.952,118,0.009,119,0.013,120,0.009,168,1.273,219,3.782,234,1.28,235,2.157,243,1.273,278,0.906,322,1.28,326,1.718,337,1.609,434,2.536,444,3.144,452,2.392,453,2.748,454,1.654,490,1.273,496,1.444,497,1.931,515,2.055,525,2.536,546,1.654,550,2.598,556,2.536,561,1.543,563,1.444,564,1.354,565,2.446,566,2.055,567,2.055,568,1.543,710,2.109,712,2.333,825,3.748,866,5.589,867,2.633,868,5.119,869,4.396,870,4.396,871,5.119,872,5.577,873,3.809,874,3.088,875,3.486,876,4.396,877,4.396,878,3.088,879,3.088,880,3.088,881,5.492,882,3.748,883,5.577,884,4.396,885,4.396,886,3.088,887,3.088,888,3.088,889,2.633,890,2.633,891,3.088,892,3.088,893,3.088,894,3.088,895,3.088,896,2.333,897,3.088,898,4.396,899,3.088,900,2.633,901,2.633,902,2.748,903,3.321,904,3.748,905,3.321,906,4.396,907,4.396,908,4.396]],["title/injectables/GetProposalsService.html",[142,2.033,263,0.684]],["body/injectables/GetProposalsService.html",[3,0.149,4,0.13,9,0.13,16,1.528,22,0.13,23,0.514,25,1.346,30,0.552,32,0.478,35,0.526,37,0.787,38,0.023,39,0.383,40,0.508,41,0.787,43,0.992,50,1.69,51,1.69,54,0.995,56,0.624,63,0.275,64,0.149,65,0.008,115,1.346,118,0.008,119,0.012,120,0.008,122,1.028,142,2.268,190,1.161,200,2.891,263,0.763,265,1.028,274,3.803,282,1.161,284,1.161,285,1.092,290,1.789,297,0.864,301,2.139,328,2.591,342,3.197,384,0.864,507,3.531,637,3.966,660,4.012,710,3.202,783,4.337,786,2.001,789,4.423,855,5.482,909,5.732,910,2.258,911,3.352,912,3.352,913,3.932,914,3.932,915,3.932,916,3.932,917,3.932,918,3.932,919,3.932,920,3.932,921,3.932,922,3.932,923,3.932,924,3.932,925,2.649,926,2.342,927,3.932,928,2.649,929,2.649,930,2.649,931,5.621,932,5.621,933,3.932,934,6.592,935,3.703,936,4.503,937,2.649,938,2.649,939,2.649,940,2.649,941,6.419,942,2.649,943,2.649,944,2.649,945,2.649,946,2.649,947,2.649,948,3.932,949,2.649,950,2.649,951,3.932,952,2.649,953,5.188,954,2.649,955,3.932,956,2.649,957,1.323,958,2.258,959,2.649,960,2.649,961,2.649,962,2.649,963,2.649,964,2.649,965,2.649,966,2.649,967,2.649,968,2.649,969,2.649,970,2.649,971,2.649,972,3.932,973,2.649,974,2.649,975,2.649,976,2.649,977,3.352,978,2.649,979,2.649,980,2.649]],["title/components/HomeComponent.html",[0,0.279,97,0.817]],["body/components/HomeComponent.html",[0,0.384,1,0.693,2,1.199,3,0.159,4,0.138,5,0.87,6,0.87,7,0.87,8,0.87,9,0.138,13,0.87,14,1.916,15,1.71,16,0.654,18,1.133,20,1.133,22,0.202,23,0.539,24,1.018,27,3.513,30,0.579,32,0.343,35,0.45,37,0.369,38,0.022,39,0.34,40,0.347,41,0.369,43,0.62,44,1.003,49,1.926,56,0.464,61,1.416,63,0.293,64,0.159,65,0.008,73,0.776,74,1.269,75,1.269,76,0.87,77,1.648,78,0.87,80,0.87,81,0.693,82,0.87,83,0.693,84,0.87,85,0.693,86,0.822,87,1.269,88,0.654,89,0.87,90,0.693,91,0.87,92,0.693,93,0.87,94,0.617,95,0.734,96,0.87,97,1.24,98,0.87,99,0.654,100,0.776,101,0.87,102,0.582,103,0.87,104,0.693,105,0.693,106,0.87,107,0.654,108,0.87,109,0.654,110,0.654,111,0.87,112,0.693,113,0.822,114,0.654,115,0.654,116,0.87,117,0.87,118,0.009,119,0.012,120,0.012,196,2.132,231,1.807,250,1.096,274,1.628,297,1.344,322,1.199,326,1.648,368,2.406,370,3.282,371,1.928,372,2.132,376,2.967,377,1.928,380,3.047,381,1.512,382,2.209,384,1.344,436,3.282,437,4.85,490,1.164,528,2.575,529,2.814,599,2.406,698,3.041,726,3.537,727,1.512,729,3.834,731,2.606,735,3.113,736,3.113,741,3.49,745,2.132,748,2.406,751,4.45,756,3.113,760,2.406,761,2.058,763,2.132,776,2.377,849,2.406,859,2.865,861,1.764,981,2.406,982,3.513,983,4.865,984,4.12,985,4.12,986,5.349,987,2.822,988,4.561,989,4.12,990,2.822,991,2.822,992,2.822,993,2.822,994,2.822,995,2.406,996,2.822,997,2.822,998,2.822,999,3.513,1000,4.12,1001,2.822,1002,2.822,1003,2.406,1004,2.822,1005,3.323,1006,2.822,1007,2.406,1008,2.822,1009,2.822,1010,3.513,1011,2.822,1012,2.822,1013,3.282,1014,2.575,1015,2.406,1016,2.406,1017,2.132,1018,6.134,1019,1.764,1020,2.822,1021,1.928,1022,1.764,1023,1.764,1024,4.12,1025,2.822,1026,2.406,1027,2.822,1028,2.406,1029,4.12,1030,5.361,1031,4.865,1032,2.822,1033,2.822,1034,5.689,1035,5.349,1036,2.822,1037,2.822,1038,2.822,1039,2.822,1040,3.513,1041,2.822,1042,2.822,1043,2.822,1044,2.822,1045,2.822,1046,4.12,1047,4.12,1048,6.287,1049,2.822,1050,2.822,1051,2.822,1052,2.822,1053,2.822,1054,2.822,1055,2.822,1056,2.822,1057,2.822,1058,2.822,1059,2.822,1060,2.822,1061,2.822,1062,2.406,1063,2.822,1064,2.822,1065,2.822,1066,2.822,1067,2.822]],["title/interceptors/HttpInterceptorService.html",[1068,3.005,1069,2.663]],["body/interceptors/HttpInterceptorService.html",[3,0.257,4,0.224,9,0.224,22,0.224,30,0.802,32,0.555,35,0.451,37,0.748,38,0.023,39,0.364,40,0.444,41,0.748,43,0.687,56,0.735,63,0.474,64,0.257,65,0.014,118,0.014,119,0.017,120,0.014,190,2.003,234,1.33,251,2.282,263,1.109,268,3.451,278,0.941,290,1.76,322,1.33,460,3.499,461,3.12,490,1.883,503,2.635,698,2.855,935,3.596,957,2.282,1069,4.316,1070,4.568,1071,5.315,1072,3.894,1073,5.713,1074,4.568,1075,4.568,1076,5.713,1077,5.713,1078,6.532,1079,6.234,1080,6.532,1081,4.568,1082,4.568,1083,5.713,1084,4.568,1085,5.713,1086,4.568,1087,4.568,1088,4.568,1089,4.568,1090,3.894,1091,4.568,1092,4.568,1093,4.568,1094,4.568,1095,4.568,1096,4.568]],["title/components/LandingPageComponent.html",[0,0.279,99,0.817]],["body/components/LandingPageComponent.html",[0,0.251,1,0.36,2,1.306,3,0.083,4,0.072,5,0.452,6,0.452,7,0.452,8,0.452,9,0.072,13,0.452,14,1.701,15,1.518,16,1.504,18,0.677,20,0.677,22,0.203,23,0.322,24,0.968,25,1.159,26,1.229,30,0.523,32,0.299,35,0.516,37,0.624,38,0.023,39,0.331,40,0.424,41,0.624,43,0.97,44,1.245,50,0.717,51,0.717,54,0.422,56,0.67,60,0.605,61,0.925,63,0.152,64,0.083,65,0.004,73,0.404,74,0.758,75,0.758,76,0.452,77,1.147,78,0.452,80,0.452,81,0.36,82,0.452,83,0.36,84,0.452,85,0.604,86,1.083,87,0.758,88,0.34,89,0.452,90,0.604,91,0.452,92,0.604,93,0.452,94,0.321,95,0.381,96,0.452,97,0.34,98,0.452,99,0.862,100,1.478,101,0.452,102,0.302,103,0.452,104,0.36,105,0.36,106,0.452,107,0.34,108,0.452,109,0.34,110,0.34,111,0.452,112,0.604,113,0.925,114,0.34,115,0.961,116,0.452,117,0.452,118,0.004,119,0.007,120,0.007,142,1.834,143,2.147,155,1.002,165,1.002,166,1.859,192,4.484,197,3.132,200,2.193,201,1.109,202,1.251,217,0.917,223,2.326,224,3.184,229,0.786,230,0.733,231,0.644,234,0.717,235,0.901,250,0.57,264,2.542,271,2.498,274,1.42,275,2.193,278,0.982,279,2.381,281,1.251,284,2.649,285,1.311,286,1.251,295,2.879,297,0.479,302,2.171,322,0.717,326,1.147,337,2.476,342,3.528,354,2.098,369,0.786,370,0.847,371,1.681,376,1.588,377,1.002,380,2.22,382,1.609,384,1.88,394,2.193,407,1.966,423,2.326,436,1.834,439,1.251,444,1.15,459,1.993,462,2.326,494,1.538,512,1.987,515,2.97,525,3.099,528,1.538,530,1.002,550,2.062,555,1.318,561,1.229,562,1.987,563,0.686,564,0.644,565,1.632,566,1.739,567,0.686,568,1.859,569,2.147,572,1.318,574,1.002,581,2.098,589,2.098,593,2.098,608,1.251,609,3.173,610,2.098,616,1.251,620,2.098,623,2.098,637,2.542,641,0.917,660,1.538,691,1.251,698,0.917,708,1.251,725,2.098,726,1.318,727,1.318,729,1.987,731,1.318,734,1.109,735,1.109,737,1.109,739,1.109,741,1.703,743,0.847,745,1.859,746,1.251,749,1.251,751,2.542,756,1.109,761,1.588,763,1.859,764,1.251,783,0.917,786,1.109,792,1.109,817,2.098,855,4.17,859,0.786,861,0.917,882,2.098,911,1.251,912,2.098,932,5.002,936,2.832,958,3.826,982,1.251,1013,0.847,1014,0.917,1015,1.251,1016,3.173,1017,1.109,1028,1.251,1040,2.098,1097,1.251,1098,2.461,1099,3.179,1100,2.461,1101,2.461,1102,3.721,1103,3.721,1104,2.461,1105,3.721,1106,3.173,1107,2.811,1108,3.721,1109,2.461,1110,3.721,1111,4.146,1112,2.461,1113,3.721,1114,2.461,1115,2.461,1116,1.467,1117,2.461,1118,2.171,1119,1.467,1120,1.467,1121,4.146,1122,1.467,1123,1.467,1124,1.467,1125,1.467,1126,1.467,1127,1.467,1128,1.467,1129,1.467,1130,1.467,1131,1.251,1132,1.467,1133,2.461,1134,1.467,1135,1.467,1136,4.146,1137,1.467,1138,1.467,1139,1.467,1140,1.467,1141,1.467,1142,1.467,1143,1.467,1144,1.467,1145,1.467,1146,1.467,1147,1.467,1148,3.179,1149,1.859,1150,2.461,1151,2.461,1152,2.461,1153,1.467,1154,2.461,1155,1.467,1156,2.461,1157,3.721,1158,2.461,1159,1.467,1160,3.721,1161,2.461,1162,2.461,1163,2.461,1164,1.467,1165,1.467,1166,2.461,1167,2.461,1168,2.461,1169,1.859,1170,2.461,1171,2.461,1172,1.467,1173,2.461,1174,2.461,1175,1.467,1176,2.461,1177,4.146,1178,1.467,1179,1.467,1180,2.461,1181,1.467,1182,1.467,1183,1.467,1184,1.467,1185,1.467,1186,1.467,1187,1.467,1188,1.467,1189,1.467,1190,1.467,1191,1.467,1192,1.467,1193,1.467,1194,1.467,1195,1.467,1196,1.467,1197,1.467,1198,1.467,1199,1.467,1200,1.467,1201,1.467,1202,1.467,1203,1.467,1204,1.467,1205,1.467,1206,2.461,1207,1.467,1208,1.467,1209,1.467,1210,1.467,1211,1.467,1212,1.467,1213,1.467,1214,1.467,1215,1.467,1216,1.467,1217,1.467,1218,1.251,1219,1.467,1220,1.467,1221,3.721,1222,1.251,1223,1.467,1224,1.467,1225,1.467,1226,1.467,1227,3.179,1228,3.179,1229,1.467,1230,1.467,1231,1.467,1232,1.467,1233,1.467,1234,1.467,1235,1.467,1236,1.467,1237,1.467,1238,1.467,1239,1.467,1240,1.467,1241,1.467,1242,1.467,1243,1.467,1244,1.467,1245,1.467,1246,3.179,1247,3.721,1248,1.467,1249,3.179,1250,1.467,1251,1.467,1252,1.467,1253,1.467,1254,1.467,1255,1.467,1256,1.467,1257,1.467,1258,1.467,1259,1.467,1260,1.467,1261,1.467,1262,1.467,1263,1.467,1264,1.467,1265,1.681,1266,1.467,1267,2.461,1268,2.461,1269,1.467,1270,1.467,1271,3.179,1272,1.467,1273,1.467,1274,1.467,1275,1.467,1276,2.461,1277,1.467,1278,1.467,1279,1.467,1280,1.467,1281,2.461,1282,2.461,1283,2.461,1284,2.461,1285,2.461,1286,1.859,1287,1.467,1288,2.461,1289,1.251,1290,1.467,1291,1.467,1292,2.461,1293,1.467,1294,1.467,1295,1.251,1296,1.467,1297,1.467,1298,1.467,1299,2.461,1300,1.467,1301,1.467,1302,1.467,1303,1.467,1304,1.467,1305,1.467,1306,1.467,1307,1.467,1308,1.467,1309,1.467,1310,1.251,1311,1.467,1312,1.467,1313,1.467,1314,1.467]],["title/components/LoginComponent.html",[0,0.279,102,0.726]],["body/components/LoginComponent.html",[0,0.38,1,0.477,2,0.902,3,0.109,4,0.095,5,0.599,6,0.599,7,0.599,8,0.599,9,0.095,13,0.599,14,1.805,15,1.61,16,0.895,18,0.852,20,0.852,22,0.095,23,0.405,24,0.987,26,0.971,30,0.619,32,0.236,35,0.532,37,0.254,38,0.023,39,0.306,40,0.42,41,0.254,43,0.724,44,1.108,49,2.059,50,1.401,51,1.401,52,1.71,54,0.825,56,0.69,57,1.121,60,0.801,61,1.124,62,1.121,63,0.202,64,0.217,65,0.009,73,0.535,74,0.954,75,0.954,76,0.599,77,1.357,78,0.599,80,0.599,81,0.477,82,0.599,83,0.477,84,0.599,85,0.477,86,0.566,87,0.954,88,0.45,89,0.599,90,0.477,91,0.599,92,0.477,93,0.599,94,0.677,95,0.805,96,0.599,97,0.45,98,0.599,99,0.45,100,0.535,101,0.599,102,0.908,103,0.599,104,0.477,105,1.505,106,0.599,107,0.45,108,0.599,109,0.45,110,1.247,111,0.599,112,0.477,113,0.566,114,0.45,115,0.45,116,0.599,117,0.599,118,0.009,119,0.009,120,0.006,147,2.542,150,1.121,168,0.801,171,1.328,219,1.121,220,1.328,229,2.069,230,2.404,231,2.449,232,1.328,234,1.401,243,2.302,250,0.755,251,1.547,270,1.657,271,2.561,275,1.359,276,2.059,278,1.394,285,2.373,290,0.599,322,1.124,326,1.357,337,1.613,369,1.041,376,1.547,381,1.659,382,1.203,384,1.01,394,2.359,441,1.121,443,1.328,444,2.948,445,2.404,446,1.328,447,1.215,448,2.228,449,1.469,450,2.414,451,1.469,452,2.059,453,2.754,454,1.041,455,1.328,456,2.341,457,2.341,458,2.341,459,2.577,460,2.36,461,1.328,462,2.754,463,4.064,464,2.414,465,1.469,466,2.776,467,1.787,468,2.341,469,1.469,470,1.469,471,1.469,472,1.469,473,1.469,474,2.341,475,2.918,476,1.469,477,1.328,478,2.918,479,2.918,480,1.469,481,2.918,482,3.287,483,1.787,484,3.502,485,2.414,486,2.918,487,2.918,488,2.918,489,2.414,490,0.801,491,1.215,492,1.469,493,1.469,494,2.414,495,1.469,496,1.448,497,1.215,498,2.918,499,2.341,500,4.219,501,2.341,502,2.341,503,1.787,504,2.116,505,2.341,506,2.341,507,1.659,508,2.341,509,2.341,510,3.329,511,2.341,512,3.205,513,2.341,514,1.936,515,2.397,516,3.329,517,1.469,518,1.469,519,1.469,520,1.469,521,1.469,522,1.469,523,1.469,524,2.341,525,2.542,526,3.874,527,2.341,528,1.936,529,2.116,530,3.009,531,2.341,532,3.009,533,4.219,534,1.936,535,3.009,536,1.469,537,1.469,538,1.469,539,1.469,540,1.469,541,1.469,542,1.469,543,3.329,544,3.329,545,1.469,546,1.041,547,2.918,548,2.638,549,2.918,550,1.592,551,1.328,552,1.328,553,1.328,554,1.328,555,1.659,556,1.787,557,3.329,558,1.469,559,1.469,560,2.341,561,0.971,562,1.215,563,0.909,564,0.852,565,2.11,566,0.909,567,0.909,568,0.971,569,1.787,570,1.936,571,2.341,572,2.36,573,1.469,574,1.328,726,1.041,727,1.041,731,1.041,737,1.469,741,1.041,743,1.121,761,0.971,776,1.121,859,1.041,861,1.215,902,2.754,903,3.329,904,3.756,905,3.329,1010,1.657,1013,2.958,1014,1.215,1019,1.215,1021,1.328,1022,1.936,1023,1.936,1030,1.657,1315,2.641,1316,4.406,1317,3.098,1318,3.098,1319,3.098,1320,1.944,1321,1.944,1322,1.944,1323,1.944,1324,1.944,1325,1.944,1326,1.944,1327,1.944,1328,1.944,1329,1.944,1330,1.944,1331,1.944,1332,1.944,1333,1.944,1334,1.944,1335,1.944,1336,1.944,1337,1.944,1338,1.944,1339,1.944,1340,3.098,1341,3.098,1342,1.944,1343,1.944,1344,1.657,1345,1.657]],["title/classes/MyErrorStateMatcher.html",[65,0.01,464,2.203]],["body/classes/MyErrorStateMatcher.html",[0,0.39,3,0.163,4,0.142,9,0.142,14,0.797,15,0.711,16,0.671,18,0.797,20,0.797,22,0.142,24,0.847,26,1.447,30,0.694,35,0.229,37,0.379,38,0.023,39,0.267,40,0.206,41,0.379,43,0.436,44,0.865,49,2.308,52,2.102,54,0.72,56,0.755,57,1.671,60,1.195,61,1.222,62,1.671,63,0.301,64,0.278,65,0.012,94,0.633,95,0.753,102,0.597,105,1.212,110,0.973,118,0.013,119,0.013,120,0.009,147,2.422,150,1.671,168,1.195,171,1.979,219,1.671,220,1.979,229,2.645,230,2.705,231,2.712,232,1.979,234,1.577,243,2.37,250,1.125,251,2.097,271,2.467,275,1.271,276,1.963,278,1.383,285,2.37,290,0.893,294,1.354,322,1.438,326,0.893,337,1.537,382,1.125,384,0.945,394,1.841,441,1.671,443,1.979,444,2.308,445,1.447,446,1.979,447,1.811,448,1.671,449,2.189,450,2.625,451,2.189,452,2.308,453,3.747,454,1.552,455,1.979,456,4.092,457,4.092,458,3.731,459,2.249,460,1.552,461,1.979,462,2.625,463,4.092,464,3.087,465,3.172,466,3.654,467,3.124,468,3.172,469,2.189,470,3.172,471,2.189,472,2.189,473,2.189,474,2.189,475,2.189,476,2.189,477,1.979,478,2.189,479,2.189,480,2.189,481,2.189,482,1.979,483,1.671,484,3.373,485,1.811,486,2.189,487,2.189,488,2.189,489,1.811,490,1.195,491,1.811,492,2.189,493,2.189,494,1.811,495,2.189,496,1.963,497,1.811,498,2.189,499,2.189,500,4.092,501,2.189,502,2.189,503,1.671,504,1.979,505,2.189,506,2.189,507,1.552,508,2.189,509,2.189,510,3.172,511,2.189,512,3.087,513,2.189,514,1.811,515,2.308,516,2.189,517,2.189,518,2.189,519,2.189,520,2.189,521,2.189,522,2.189,523,2.189,524,2.189,525,2.422,526,3.172,527,2.189,528,1.811,529,1.979,530,2.868,531,2.189,532,2.868,533,3.731,534,1.811,535,1.979,536,2.189,537,2.189,538,2.189,539,2.189,540,2.189,541,2.189,542,2.189,543,4.092,544,4.092,545,2.189,546,1.552,547,3.731,548,3.373,549,3.731,550,2.036,551,1.979,552,1.979,553,1.979,554,1.979,555,1.552,556,1.671,557,2.189,558,2.189,559,2.189,560,3.172,561,1.447,562,1.811,563,1.354,564,1.271,565,1.271,566,1.354,567,1.354,568,1.447,569,1.671,570,1.811,571,2.189,572,1.552,573,2.189,574,1.979,1346,4.199,1347,2.897]],["title/components/PasswordSpecsComponent.html",[0,0.279,104,0.865]],["body/components/PasswordSpecsComponent.html",[0,0.46,1,0.971,2,1.516,3,0.222,4,0.194,5,1.218,6,1.218,7,1.218,8,1.218,9,0.194,13,1.218,14,1.995,15,1.78,16,0.916,18,1.433,20,1.433,22,0.194,30,0.732,32,0.708,35,0.412,38,0.022,39,0.331,43,0.595,44,1.073,56,0.445,61,1.695,63,0.41,64,0.222,65,0.012,73,1.088,74,1.605,75,1.605,76,1.218,77,1.907,78,1.218,80,1.218,81,0.971,82,1.218,83,0.971,84,1.218,85,0.971,86,1.151,87,1.605,88,0.916,89,1.218,90,0.971,91,1.218,92,0.971,93,1.218,94,0.865,95,1.028,96,1.218,97,0.916,98,1.218,99,0.916,100,1.088,101,1.218,102,0.815,103,1.218,104,1.519,105,1.737,106,1.218,107,0.916,108,1.218,109,0.916,110,0.916,111,1.218,112,0.971,113,1.151,114,0.916,115,0.916,116,1.218,117,1.218,118,0.012,119,0.016,120,0.012,187,3.64,301,2.147,322,1.516,326,1.907,426,4.44,428,4.44,1289,4.44,1348,4.965,1349,3.372,1350,5.208,1351,5.823,1352,5.208,1353,3.955,1354,3.955,1355,4.44,1356,5.208,1357,5.208,1358,6.189,1359,5.208,1360,5.208,1361,5.208,1362,5.208,1363,5.208,1364,5.208,1365,5.208]],["title/classes/Post.html",[65,0.01,200,1.546]],["body/classes/Post.html",[3,0.222,4,0.194,9,0.194,22,0.194,23,0.681,24,1.243,25,1.207,32,0.633,35,0.532,37,0.517,38,0.022,39,0.394,40,0.497,41,0.517,54,1.231,64,0.222,65,0.012,115,1.349,118,0.012,119,0.016,120,0.012,125,3.884,200,3.031,235,2.554,276,1.848,278,1.449,294,1.848,297,2.196,301,2.899,303,3.64,306,5.478,310,4.676,313,2.701,316,2.701,407,2.501,444,2.434,637,2.701,936,3.557,1366,3.372,1367,6.431,1368,3.955,1369,3.955,1370,3.955,1371,3.955,1372,3.955,1373,4.44,1374,3.955,1375,3.955,1376,5.208,1377,3.955]],["title/injectables/PostProposalService.html",[143,2.033,263,0.684]],["body/injectables/PostProposalService.html",[3,0.209,4,0.182,9,0.182,16,1.643,22,0.182,23,0.653,24,0.636,25,1.156,30,0.701,32,0.606,35,0.512,37,0.738,38,0.023,39,0.359,40,0.462,41,0.738,43,0.907,44,1.028,50,1.642,51,1.642,54,0.967,56,0.679,63,0.385,64,0.209,65,0.011,86,1.756,113,1.888,118,0.011,119,0.015,120,0.011,122,1.44,143,2.879,190,1.626,200,2.761,235,1.826,263,0.968,265,1.44,282,1.626,284,2.188,285,2.843,290,1.738,301,2.057,328,2.493,384,2.312,407,1.357,423,3.119,507,3.473,515,2.82,641,4.141,660,3.771,710,2.533,926,2.817,935,3.74,957,1.852,977,4.255,1218,4.255,1378,3.162,1379,4.99,1380,4.99,1381,4.99,1382,4.99,1383,4.99,1384,1.986,1385,4.99,1386,1.986,1387,3.709,1388,3.709,1389,6.032,1390,3.709,1391,3.709,1392,3.709,1393,3.709,1394,3.709,1395,3.709,1396,3.709,1397,3.709,1398,3.709,1399,3.709,1400,3.709,1401,2.533,1402,3.709,1403,3.709,1404,3.709,1405,3.709,1406,3.709,1407,3.709,1408,3.709,1409,3.709,1410,3.709,1411,3.709,1412,3.709]],["title/classes/Proposal.html",[65,0.01,384,1.15]],["body/classes/Proposal.html",[3,0.264,4,0.23,9,0.23,22,0.23,23,0.761,24,1.255,32,0.707,35,0.546,37,0.615,38,0.022,39,0.299,40,0.508,41,0.826,54,1.222,64,0.264,65,0.014,118,0.014,119,0.018,120,0.014,125,3.806,235,2.415,294,2.196,297,2.152,301,2.603,303,3.947,328,3.154,384,1.896,407,2.482,408,4.006,792,3.55,1413,4.006,1414,4.699,1415,4.699,1416,4.699,1417,4.699,1418,4.699,1419,4.699,1420,4.699,1421,4.699,1422,4.699,1423,4.699]],["title/injectables/ProposalService.html",[144,2.033,263,0.684]],["body/injectables/ProposalService.html",[3,0.141,4,0.123,9,0.123,22,0.123,23,0.493,30,0.529,32,0.458,35,0.53,37,0.794,38,0.022,39,0.386,40,0.478,41,0.794,43,1.001,50,1.717,51,1.717,54,1.085,56,0.567,63,0.26,64,0.141,65,0.007,118,0.008,119,0.011,120,0.008,122,0.971,144,2.174,190,1.097,200,2.212,235,2.601,263,0.731,265,0.971,275,2.662,276,3.16,278,1.171,282,1.097,290,1.818,293,3.758,295,2.964,297,2.026,301,2.96,320,3.81,325,3.212,328,3.455,332,3.795,337,2.435,384,2.305,393,2.573,490,1.032,507,3.563,525,2.174,590,3.212,591,3.212,596,3.212,613,3.212,625,2.133,627,5.396,629,2.133,660,4.118,714,5.176,721,3.212,814,3.212,926,2.702,935,4.024,957,1.25,1384,1.34,1386,2.018,1401,1.709,1424,2.133,1425,4.532,1426,3.768,1427,3.768,1428,3.768,1429,3.768,1430,3.768,1431,3.768,1432,3.768,1433,3.768,1434,3.768,1435,3.768,1436,3.768,1437,2.502,1438,2.502,1439,2.502,1440,2.502,1441,2.502,1442,2.502,1443,4.3,1444,2.502,1445,2.502,1446,5.043,1447,4.532,1448,2.502,1449,2.502,1450,2.502,1451,5.043,1452,2.502,1453,3.768,1454,2.502,1455,2.502,1456,2.502,1457,2.502,1458,2.502,1459,2.502,1460,2.502,1461,2.502,1462,2.502,1463,2.502,1464,2.502,1465,2.502,1466,2.502,1467,2.502,1468,2.502,1469,2.502,1470,2.502,1471,2.502,1472,2.502,1473,2.502,1474,2.502,1475,2.502,1476,2.502,1477,2.502,1478,2.502,1479,2.502,1480,2.502,1481,2.502,1482,2.502,1483,2.502,1484,2.502,1485,2.502,1486,2.502]],["title/components/RegisterComponent.html",[0,0.279,107,0.817]],["body/components/RegisterComponent.html",[0,0.295,1,0.73,2,0.866,3,0.21,4,0.091,5,0.916,6,0.569,7,0.569,8,0.569,9,0.091,11,1.065,13,0.569,14,1.787,15,1.595,16,0.689,18,0.818,20,0.818,22,0.091,23,0.389,24,0.97,25,0.428,26,1.485,28,3.599,30,0.418,32,0.361,35,0.517,37,0.242,38,0.023,39,0.349,40,0.39,41,0.242,43,0.824,44,1.033,50,1.365,51,1.789,52,1.661,54,0.733,56,0.637,60,0.761,61,1.087,63,0.192,64,0.104,65,0.005,73,0.508,74,0.916,75,0.916,76,0.569,77,1.445,78,0.569,80,0.569,81,0.453,82,0.569,83,0.453,84,0.569,85,0.453,86,1.087,87,0.916,88,0.428,89,0.569,90,0.453,91,0.569,92,0.453,93,0.569,94,0.404,95,0.48,96,0.569,97,0.428,98,0.569,99,0.428,100,0.508,101,0.569,102,0.381,103,0.569,104,0.73,105,1.53,106,0.569,107,0.991,108,0.569,109,0.428,110,0.428,111,0.569,112,0.453,113,0.538,114,0.428,115,1.376,116,0.569,117,0.569,118,0.006,119,0.009,120,0.006,145,2.291,150,1.065,151,1.395,168,0.761,174,3.981,187,1.154,188,1.395,191,1.261,222,1.395,231,1.304,234,0.866,235,0.676,243,1.934,250,0.717,251,1.485,271,2.901,278,0.769,285,1.226,290,1.15,322,0.866,326,1.318,337,1.088,348,1.261,351,1.261,369,0.989,370,1.065,375,1.574,376,1.485,380,2.512,381,2.291,382,2.046,394,2.481,407,1.566,434,1.715,436,2.153,444,2.644,452,1.744,454,0.989,459,2.512,467,2.891,483,2.153,496,2.192,497,1.154,514,1.859,532,2.031,534,1.859,546,0.989,550,2.447,555,1.592,556,2.153,561,0.922,563,1.39,564,1.304,565,2.824,566,1.744,567,2.192,568,1.485,569,2.468,570,2.674,572,2.291,726,1.592,727,1.592,729,2.674,731,0.989,736,1.395,739,2.246,741,0.989,743,1.065,761,0.922,776,1.715,819,2.535,859,1.999,873,2.922,900,2.535,901,1.574,902,3.78,903,2.246,905,3.232,936,2.031,999,3.648,1003,1.574,1005,2.031,1007,1.574,1013,2.468,1014,1.154,1017,1.395,1019,1.154,1021,1.261,1022,1.154,1023,1.154,1026,1.574,1107,3.232,1222,1.574,1265,2.031,1310,1.574,1345,2.535,1355,2.535,1487,1.574,1488,3.732,1489,2.973,1490,3.732,1491,3.648,1492,3.648,1493,3.182,1494,3.732,1495,3.182,1496,5.011,1497,3.232,1498,1.574,1499,3.786,1500,3.182,1501,2.973,1502,1.847,1503,2.973,1504,1.847,1505,1.847,1506,2.973,1507,4.278,1508,2.973,1509,2.973,1510,2.973,1511,2.535,1512,1.847,1513,1.847,1514,4.278,1515,1.847,1516,2.973,1517,2.973,1518,1.847,1519,1.847,1520,1.847,1521,1.847,1522,1.847,1523,1.847,1524,1.847,1525,1.847,1526,1.847,1527,1.847,1528,2.333,1529,1.847,1530,1.261,1531,1.574,1532,1.847,1533,1.574,1534,1.574,1535,1.574,1536,1.574,1537,1.395,1538,1.395,1539,1.574,1540,1.847,1541,1.395,1542,3.232,1543,2.82,1544,1.847,1545,1.847,1546,3.648,1547,2.973,1548,1.847,1549,1.847,1550,1.847,1551,1.574,1552,1.574,1553,1.574,1554,1.574,1555,1.574,1556,2.973,1557,1.847,1558,1.847,1559,1.574,1560,1.574,1561,1.574,1562,1.574,1563,2.973,1564,1.847,1565,1.847,1566,1.847,1567,1.847,1568,1.574,1569,1.847,1570,1.574,1571,3.182,1572,1.847,1573,1.574,1574,1.574,1575,1.847,1576,1.847,1577,1.847,1578,1.847,1579,1.574,1580,2.535,1581,2.535,1582,2.535,1583,2.535,1584,2.82,1585,3.182,1586,2.535,1587,1.847,1588,1.847,1589,1.847,1590,1.574,1591,4.273,1592,4.141,1593,2.973,1594,2.535,1595,3.648,1596,3.648,1597,2.535,1598,2.973,1599,2.973,1600,2.973,1601,2.973,1602,1.574,1603,1.574,1604,1.574,1605,1.574,1606,1.574,1607,1.847,1608,2.535,1609,3.732,1610,1.847,1611,1.847,1612,1.847,1613,1.847,1614,1.847,1615,1.847,1616,1.847]],["title/components/ResetLinkComponent.html",[0,0.279,109,0.817]],["body/components/ResetLinkComponent.html",[0,0.356,1,0.917,2,1.088,3,0.253,4,0.121,5,0.762,6,0.762,7,0.762,8,0.762,9,0.121,11,1.427,13,0.762,14,1.88,15,1.678,16,1.162,17,3.185,18,1.028,20,1.028,22,0.121,23,0.489,24,0.64,25,0.573,26,1.866,29,3.185,30,0.525,32,0.301,35,0.513,37,0.324,38,0.023,39,0.286,40,0.383,41,0.324,43,0.754,44,1.109,49,1.156,50,1.31,51,1.711,52,1.45,54,0.424,56,0.681,60,1.02,61,1.31,63,0.257,64,0.139,65,0.007,73,0.681,74,1.151,75,1.151,76,0.762,77,1.744,78,0.762,80,0.762,81,0.607,82,0.762,83,0.607,84,0.762,85,0.607,86,0.72,87,1.151,88,0.573,89,0.762,90,0.607,91,0.762,92,0.607,93,0.762,94,0.541,95,0.643,96,0.762,97,0.573,98,0.762,99,0.573,100,0.681,101,0.762,102,0.51,103,0.762,104,0.917,105,1.629,106,0.762,107,0.573,108,0.762,109,1.162,110,1.563,111,0.762,112,0.607,113,0.72,114,0.573,115,0.573,116,0.762,117,0.762,118,0.007,119,0.011,120,0.007,168,1.02,187,1.546,188,1.869,191,1.69,225,4.489,234,1.46,250,0.96,251,1.866,278,0.77,285,1.856,322,1.088,326,1.545,337,1.835,369,1.325,376,1.236,380,2.411,381,1.325,382,1.45,394,2.482,403,1.427,423,2.335,434,2.893,452,2.104,454,1.325,459,2.883,483,2.893,484,2.551,496,1.746,515,1.746,546,2.411,548,2.551,550,1.856,563,1.156,564,1.085,565,2.577,566,1.156,567,1.156,568,1.236,569,2.155,570,2.335,572,2.686,712,1.869,726,1.325,727,1.325,731,1.325,741,1.325,743,1.427,761,1.236,776,1.427,859,1.325,861,1.546,873,3.425,875,3.134,881,4.826,889,2.109,890,2.109,896,2.822,902,3.134,931,3.185,988,4.59,995,2.109,1013,3.105,1019,1.546,1022,1.546,1023,1.546,1265,2.551,1344,2.109,1491,4.275,1492,4.275,1497,3.788,1499,4.44,1511,3.185,1530,1.69,1531,2.109,1533,2.109,1534,2.109,1535,2.109,1536,2.109,1537,1.869,1538,1.869,1541,1.869,1542,1.869,1543,1.869,1546,2.109,1551,2.109,1552,2.109,1553,2.109,1554,2.109,1555,2.109,1559,2.109,1560,2.109,1584,1.869,1592,2.822,1595,4.275,1596,4.275,1597,3.185,1617,5.603,1618,2.109,1619,4.501,1620,3.736,1621,4.501,1622,5.383,1623,3.736,1624,2.474,1625,3.837,1626,3.736,1627,2.474,1628,2.474,1629,3.736,1630,5.014,1631,3.736,1632,2.474,1633,3.736,1634,3.736,1635,2.474,1636,3.736,1637,3.736,1638,3.736,1639,2.474,1640,2.474,1641,3.736,1642,2.474,1643,2.474,1644,2.474,1645,2.474,1646,2.474,1647,2.474,1648,2.474,1649,3.736,1650,2.474,1651,2.474,1652,2.474,1653,3.736,1654,2.474,1655,2.474,1656,2.474,1657,2.474,1658,2.474,1659,2.474,1660,2.474,1661,2.474,1662,3.736,1663,2.474,1664,2.474,1665,2.474,1666,2.474]],["title/injectables/ResetPasswordService.html",[263,0.684,875,2.203]],["body/injectables/ResetPasswordService.html",[3,0.256,4,0.224,9,0.224,22,0.224,23,0.747,24,0.978,25,1.444,30,0.802,32,0.554,35,0.531,37,0.854,38,0.022,39,0.415,40,0.406,41,0.854,43,0.937,56,0.642,63,0.473,64,0.256,65,0.013,118,0.014,119,0.017,120,0.014,122,1.77,190,2,263,1.107,265,1.77,282,2,290,1.919,403,2.631,875,3.567,926,3.357,1384,2.442,1386,3.496,1625,5.311,1667,5.846,1668,3.888,1669,5.707,1670,6.229,1671,4.56,1672,5.707,1673,4.56,1674,5.707,1675,4.56,1676,5.707,1677,4.56,1678,4.56,1679,4.706,1680,4.56,1681,5.311,1682,4.706,1683,4.56,1684,4.56,1685,4.56]],["title/components/ShareProposalComponent.html",[0,0.279,112,0.865]],["body/components/ShareProposalComponent.html",[0,0.489,1,0.867,2,1.406,3,0.199,4,0.173,5,1.089,6,1.089,7,1.089,8,1.089,9,0.173,13,1.089,14,1.971,15,1.759,16,0.819,18,1.329,20,1.329,22,0.173,24,0.606,25,0.819,30,0.678,35,0.279,38,0.022,39,0.307,43,0.532,44,0.995,52,1.372,56,0.665,60,1.457,61,1.602,62,2.039,63,0.367,64,0.199,65,0.01,73,0.972,74,1.488,75,1.488,76,1.089,77,1.822,78,1.089,80,1.089,81,0.867,82,1.089,83,0.867,84,1.089,85,0.867,86,1.029,87,1.488,88,0.819,89,1.089,90,1.351,91,1.089,92,0.867,93,1.089,94,0.773,95,0.918,96,1.089,97,0.819,98,1.089,99,0.819,100,0.972,101,1.089,102,0.728,103,1.089,104,0.867,105,0.867,106,1.089,107,0.819,108,1.089,109,0.819,110,0.819,111,1.089,112,1.569,113,1.989,114,0.819,115,1.37,116,1.089,117,1.089,118,0.011,119,0.015,120,0.011,167,3.013,168,1.991,216,3.649,217,3.019,224,2.786,234,1.406,243,1.457,284,2.715,290,1.695,295,2.118,297,1.153,318,3.019,319,3.649,322,1.406,326,1.822,337,1.768,383,2.67,384,2.172,387,4.691,388,4.117,393,3.298,394,1.55,399,3.013,403,2.039,406,3.013,407,1.768,433,4.117,434,2.786,435,4.117,452,2.257,496,1.652,555,2.587,605,4.117,636,4.117,1373,5.042,1590,4.117,1686,4.829,1687,3.534,1688,3.534,1689,3.534,1690,3.534,1691,3.534,1692,3.534,1693,3.534,1694,3.534,1695,4.829,1696,4.829,1697,4.829,1698,3.534,1699,4.829,1700,3.534,1701,4.829,1702,3.534,1703,3.534,1704,3.534,1705,3.534]],["title/injectables/SocialMediaAuthService.html",[263,0.684,448,2.033]],["body/injectables/SocialMediaAuthService.html",[3,0.2,4,0.174,9,0.174,22,0.174,23,0.635,24,1.098,25,0.824,30,0.681,32,0.432,35,0.541,37,0.722,38,0.023,39,0.351,40,0.422,41,0.722,43,0.963,44,1,49,1.663,50,1.036,51,1.036,52,1.381,54,1.123,56,0.698,63,0.369,64,0.2,65,0.011,115,0.824,118,0.011,119,0.015,120,0.011,122,1.381,190,1.56,230,1.777,243,1.467,250,1.381,263,0.941,265,1.381,267,3.665,271,3.274,278,1.279,279,1.777,282,1.56,285,2,290,2.019,351,4.239,363,3.665,445,3.1,447,2.224,448,2.799,450,4.352,466,3.185,489,3.451,490,1.467,491,2.224,503,2.052,535,3.314,550,1.467,551,2.43,552,2.43,553,2.43,554,2.43,926,2.962,1286,4.48,1384,1.906,1386,2.599,1679,3.665,1682,2.688,1706,5.889,1707,3.033,1708,4.707,1709,4.136,1710,5.056,1711,5.056,1712,5.056,1713,4.852,1714,4.136,1715,3.558,1716,3.558,1717,3.558,1718,3.558,1719,3.558,1720,5.521,1721,3.558,1722,3.558,1723,3.558,1724,3.558,1725,3.033,1726,3.033,1727,3.558,1728,3.558,1729,3.558,1730,3.033,1731,3.558,1732,3.558,1733,3.558,1734,3.033,1735,3.033,1736,3.033,1737,4.136]],["title/components/TeamComponent.html",[0,0.279,114,0.817]],["body/components/TeamComponent.html",[0,0.372,1,0.971,2,1.152,3,0.15,4,0.131,5,0.823,6,0.823,7,0.823,8,0.823,9,0.131,11,1.54,13,0.823,14,1.902,15,1.697,16,0.917,18,1.088,20,1.088,22,0.131,23,0.518,24,0.998,25,0.619,26,1.334,28,3.218,30,0.556,32,0.481,35,0.532,37,0.349,38,0.023,39,0.394,40,0.429,41,0.349,43,0.709,44,1.073,50,1.372,51,1.372,52,1.536,54,0.678,56,0.696,60,1.101,61,1.372,63,0.277,64,0.15,65,0.008,73,0.735,74,1.219,75,1.219,76,0.823,77,1.713,78,0.823,80,0.823,81,0.655,82,0.823,83,0.655,84,0.823,85,0.655,86,1.372,87,1.219,88,0.619,89,0.823,90,0.655,91,0.823,92,0.655,93,0.823,94,0.584,95,0.694,96,0.823,97,0.619,98,0.823,99,0.619,100,0.735,101,0.823,102,0.55,103,0.823,104,0.655,105,0.971,106,0.823,107,0.619,108,0.823,109,0.619,110,0.619,111,0.823,112,0.655,113,0.777,114,1.207,115,1.572,116,0.823,117,0.823,118,0.008,119,0.012,120,0.008,145,2.79,150,1.54,151,2.017,168,1.101,191,1.824,223,2.472,229,1.43,230,1.334,231,2.066,234,1.152,243,2.147,250,1.037,251,1.334,271,3.212,278,0.55,285,2.147,290,0.823,322,1.152,326,1.605,369,1.43,376,1.334,380,2.118,381,2.118,382,1.536,394,2.439,407,1.448,434,2.282,444,1.248,445,2.778,446,1.824,447,1.669,452,2.202,454,1.43,459,2.979,462,3.256,467,1.54,483,1.54,485,2.945,491,1.669,494,2.945,496,1.248,514,2.472,534,2.472,546,1.43,550,1.631,556,2.718,561,1.334,563,1.248,564,1.171,565,2.439,566,1.248,567,2.202,568,1.334,741,1.43,743,1.54,761,1.334,776,1.54,859,1.43,873,3.557,896,2.017,902,3.256,1013,3.005,1014,1.669,1019,1.669,1021,1.824,1022,1.669,1023,1.669,1265,1.824,1493,4.017,1495,4.017,1497,3.935,1498,2.277,1499,4.4,1500,4.017,1537,2.017,1538,2.017,1539,2.277,1541,2.017,1542,2.017,1543,2.017,1561,2.277,1562,2.277,1568,2.277,1570,2.277,1571,2.277,1573,2.277,1574,2.277,1579,2.277,1580,3.372,1581,3.372,1582,3.372,1583,3.372,1584,2.988,1585,3.372,1586,3.372,1591,3.372,1592,2.988,1594,3.372,1602,2.277,1603,2.277,1604,2.277,1605,2.277,1606,2.277,1738,2.277,1739,4.711,1740,3.955,1741,4.711,1742,4.017,1743,3.955,1744,2.67,1745,2.67,1746,2.67,1747,2.67,1748,2.67,1749,2.67,1750,2.67,1751,2.67,1752,2.67,1753,2.67,1754,2.67,1755,2.67,1756,2.67,1757,2.67,1758,2.67,1759,2.277,1760,2.67,1761,2.67,1762,2.67,1763,2.67,1764,2.67,1765,2.67,1766,2.67,1767,3.955,1768,2.67,1769,2.67]],["title/classes/Teams.html",[65,0.01,407,1.29]],["body/classes/Teams.html",[3,0.291,4,0.254,9,0.254,22,0.254,23,0.806,24,1.211,32,0.749,35,0.52,37,0.677,38,0.022,39,0.443,40,0.469,41,0.677,54,1.128,64,0.291,65,0.015,118,0.016,119,0.019,120,0.016,235,2.41,294,2.417,300,3.907,301,2.714,313,3.532,316,3.532,407,2.256,1770,4.409,1771,5.171,1772,5.171,1773,5.171]],["title/injectables/TeamsService.html",[263,0.684,1118,2.407]],["body/injectables/TeamsService.html",[3,0.279,4,0.243,9,0.243,22,0.243,23,0.786,30,0.844,32,0.602,35,0.511,37,0.648,38,0.022,39,0.315,40,0.428,41,0.648,43,0.745,50,1.443,51,1.443,54,0.85,56,0.756,63,0.514,64,0.279,65,0.015,118,0.015,119,0.018,120,0.015,122,1.924,190,2.173,263,1.166,265,1.924,282,2.173,290,1.527,407,2.199,490,2.043,507,3.218,926,3.229,935,3.466,957,2.476,1107,4.884,1118,4.103,1384,2.655,1386,2.655,1401,3.385,1774,4.226,1775,6.007,1776,4.956,1777,4.956,1778,4.956,1779,4.956,1780,4.956]],["title/injectables/TestServiceService.html",[263,0.684,400,2.407]],["body/injectables/TestServiceService.html",[3,0.261,4,0.227,9,0.227,22,0.227,23,0.755,30,0.81,32,0.763,35,0.496,38,0.022,40,0.331,43,0.698,44,0.956,50,1.351,51,1.351,56,0.649,63,0.482,64,0.261,65,0.014,115,1.075,118,0.014,119,0.017,120,0.014,122,1.802,125,3.622,168,1.913,234,2.086,263,1.12,265,1.802,282,2.035,295,2.881,297,1.882,384,1.513,400,3.941,407,2.112,452,3.158,453,4.305,455,3.169,466,2.677,467,3.622,496,2.697,1005,3.169,1781,5.6,1782,3.956,1783,6.569,1784,4.64,1785,4.64,1786,6.279,1787,5.77,1788,5.77,1789,4.64,1790,4.64,1791,4.64]],["title/injectables/TransferDataService.html",[263,0.684,445,1.761]],["body/injectables/TransferDataService.html",[3,0.283,4,0.247,9,0.247,22,0.247,23,0.793,24,0.863,25,1.405,30,0.852,35,0.479,37,0.658,38,0.022,39,0.32,40,0.358,41,0.658,43,0.757,44,1.037,56,0.682,63,0.522,64,0.283,65,0.015,118,0.015,119,0.018,120,0.015,122,1.954,234,1.465,263,0.977,265,1.954,445,3.028,485,4.068,957,2.514,1759,4.291,1792,5.548,1793,4.291,1794,6.063,1795,6.063,1796,5.032,1797,5.032,1798,6.063,1799,5.032,1800,5.032,1801,5.032,1802,5.032,1803,5.032]],["title/classes/User.html",[65,0.01,278,0.726]],["body/classes/User.html",[3,0.249,4,0.217,9,0.217,22,0.217,23,0.733,24,1.233,25,1.026,32,0.681,35,0.527,37,0.579,38,0.022,39,0.445,40,0.503,41,0.579,54,1.226,64,0.249,65,0.013,115,1.636,118,0.013,119,0.017,120,0.013,235,2.491,278,1.475,294,2.07,297,1.444,298,3.776,300,3.346,301,2.534,303,3.842,306,5.373,310,4.644,313,3.827,316,3.827,444,3.181,477,3.025,1804,3.776,1805,4.429,1806,4.429,1807,4.429,1808,4.429,1809,4.429]],["title/injectables/UserLoginService.html",[263,0.684,460,1.888]],["body/injectables/UserLoginService.html",[3,0.203,4,0.177,9,0.177,22,0.177,23,0.64,24,1.163,30,0.687,32,0.438,35,0.547,37,0.78,38,0.023,39,0.379,40,0.458,41,0.78,43,0.967,44,1.008,49,1.683,50,1.049,51,1.049,52,1.398,54,1.231,56,0.625,63,0.374,64,0.203,65,0.011,105,1.75,118,0.011,119,0.015,120,0.011,122,1.398,190,1.579,243,1.485,263,0.949,265,1.398,267,3.696,268,2.721,278,1.284,282,1.579,290,1.981,351,4.491,363,3.696,460,2.62,466,3.438,489,3.473,490,1.485,503,2.078,926,2.977,1090,3.071,1286,4.503,1384,1.929,1386,2.62,1708,4.737,1709,4.171,1710,5.082,1711,5.082,1712,4.171,1714,4.171,1725,3.071,1726,3.071,1730,3.071,1734,3.071,1735,3.071,1736,3.071,1737,4.171,1810,5.27,1811,3.071,1812,4.892,1813,4.892,1814,3.602,1815,4.892,1816,3.602,1817,3.602,1818,3.602,1819,3.602,1820,4.892,1821,3.602,1822,3.602,1823,3.602,1824,3.602,1825,3.602,1826,3.602,1827,3.602,1828,3.602,1829,3.602,1830,4.892,1831,3.602,1832,3.602]],["title/injectables/UserRegisterService.html",[145,1.888,263,0.684]],["body/injectables/UserRegisterService.html",[3,0.27,4,0.235,9,0.235,22,0.235,25,1.113,30,0.828,32,0.584,35,0.504,37,0.771,38,0.022,39,0.375,40,0.342,41,0.771,43,0.886,56,0.748,63,0.498,64,0.27,65,0.014,118,0.015,119,0.018,120,0.015,122,1.864,145,3.156,190,2.106,263,1.143,265,1.864,282,2.106,290,1.964,490,1.98,926,3.185,935,3.4,957,2.399,1106,5.668,1384,2.572,1386,2.572,1401,3.28,1528,3.684,1679,4.452,1681,4.094,1682,3.628,1810,5.022,1833,4.094,1834,5.893,1835,4.802,1836,5.893,1837,4.802,1838,4.802,1839,4.802,1840,4.802,1841,4.802,1842,4.802,1843,4.802]],["title/coverage.html",[1844,4.11]],["body/coverage.html",[0,0.561,1,0.862,9,0.172,10,2.993,11,2.025,12,2.993,38,0.022,40,0.25,57,2.025,65,0.02,81,0.862,83,0.862,85,0.862,88,0.813,90,0.862,92,0.862,94,0.767,97,0.813,99,0.813,102,0.723,104,0.862,107,0.813,109,0.813,112,0.862,114,0.813,118,0.011,119,0.015,120,0.011,121,2.993,142,2.025,143,2.025,144,2.025,145,1.88,164,2.652,165,2.397,187,2.194,192,2.397,200,1.539,216,2.652,217,2.194,219,2.025,225,2.397,234,1.022,263,1.337,264,2.397,266,2.993,274,2.025,278,0.723,293,2.025,295,2.958,296,2.993,317,2.993,383,3.632,384,1.145,400,2.397,407,1.285,436,3.563,441,2.025,443,3.745,445,1.753,448,2.025,450,2.194,460,1.88,464,2.194,575,2.993,580,2.993,641,2.194,783,2.194,784,2.993,785,2.993,804,2.993,866,2.993,867,2.993,875,2.194,909,2.993,910,2.993,981,2.993,1005,4.965,1068,2.993,1069,2.652,1071,2.993,1072,2.993,1097,2.993,1118,2.397,1348,2.993,1349,2.993,1366,2.993,1378,2.993,1413,2.993,1424,2.993,1487,2.993,1528,2.194,1530,2.397,1608,2.993,1617,2.993,1618,2.993,1667,2.993,1668,2.993,1706,2.993,1707,2.993,1738,2.993,1770,2.993,1774,2.993,1781,2.993,1782,2.993,1792,2.993,1793,2.993,1804,2.993,1810,3.632,1811,2.993,1833,2.993,1844,2.993,1845,3.51,1846,3.51,1847,3.51,1848,3.51,1849,5.482,1850,3.51,1851,3.51,1852,2.993,1853,6.177,1854,6.177,1855,3.51,1856,3.51,1857,2.993,1858,3.51,1859,3.51,1860,3.51,1861,4.807,1862,4.807,1863,4.807,1864,4.807,1865,3.51,1866,3.51,1867,3.51,1868,3.51,1869,3.51,1870,3.51,1871,3.51,1872,3.51,1873,3.51,1874,5.897,1875,3.51,1876,3.51,1877,3.51,1878,3.51,1879,3.51,1880,3.51,1881,3.51,1882,3.51,1883,3.51,1884,3.51,1885,3.51,1886,2.993,1887,2.993,1888,5.897,1889,4.099,1890,2.993,1891,4.099,1892,2.993,1893,2.993,1894,3.51,1895,3.51]],["title/dependencies.html",[131,2.897,1896,2.938]],["body/dependencies.html",[38,0.022,63,0.518,118,0.015,119,0.018,120,0.015,131,3.411,133,3.773,153,5.146,154,4.56,168,2.059,195,5.146,196,3.773,197,3.773,222,4.56,223,3.773,224,2.881,229,2.675,230,2.494,231,2.19,250,1.939,643,3.773,957,2.494,1295,4.258,1897,4.994,1898,6.099,1899,4.994,1900,6.035,1901,4.994,1902,4.994,1903,4.994,1904,4.258,1905,4.994,1906,4.994,1907,4.994,1908,4.994,1909,4.994,1910,4.994,1911,4.994,1912,4.994,1913,4.994,1914,4.994,1915,4.994,1916,4.994,1917,4.994]],["title/miscellaneous/functions.html",[1149,3.205,1918,2.007]],["body/miscellaneous/functions.html",[22,0.275,37,0.733,38,0.021,39,0.356,41,0.733,118,0.017,119,0.02,120,0.017,1149,4.232,1530,4.411,1852,4.776,1918,3.826,1919,5.602,1920,5.602,1921,6.459,1922,5.602]],["title/index.html",[22,0.144,1443,2.505,1923,2.938]],["body/index.html",[0,0.504,4,0.236,15,1.181,38,0.018,39,0.306,118,0.015,119,0.018,120,0.015,126,4.102,147,2.775,234,1.401,401,4.102,512,3.688,681,4.102,816,5.671,1062,5.03,1131,4.102,1315,4.102,1898,4.102,1904,5.44,1924,5.899,1925,4.811,1926,6.381,1927,4.811,1928,4.811,1929,6.826,1930,7.037,1931,4.811,1932,4.811,1933,4.811,1934,4.811,1935,4.811,1936,4.811,1937,4.811,1938,4.811,1939,4.811,1940,6.381,1941,6.381,1942,4.811,1943,6.826,1944,4.811,1945,4.811,1946,4.811,1947,4.811,1948,4.811,1949,4.102,1950,5.899,1951,6.652,1952,5.899,1953,5.899,1954,4.811,1955,4.811,1956,4.811,1957,4.811,1958,6.381,1959,4.811,1960,4.811,1961,4.811]],["title/modules.html",[130,3.013]],["body/modules.html",[38,0.02,118,0.017,119,0.02,120,0.017,129,3.868,130,3.54,141,3.54,154,4.278,1962,5.662,1963,5.662,1964,6.499,1965,5.662,1966,5.662]],["title/overview.html",[1967,4.11]],["body/overview.html",[1,1.481,2,1.239,38,0.022,73,1.171,81,1.682,83,1.481,85,1.481,88,1.398,90,1.481,92,1.481,94,1.319,97,1.398,99,1.398,102,1.243,104,1.481,107,1.398,109,1.398,110,0.986,112,1.481,114,1.398,118,0.013,119,0.017,120,0.013,128,2.907,129,5.118,130,2.661,131,2.907,132,3.629,133,3.216,134,3.629,135,3.216,136,3.629,137,3.629,138,3.629,139,3.629,140,3.629,141,3.771,142,3.481,143,3.481,144,3.481,145,3.231,146,4.658,147,2.456,248,2.907,265,1.652,294,1.989,441,2.456,698,2.661,734,3.216,1857,3.629,1967,3.629,1968,4.256,1969,5.463]],["title/routes.html",[248,3.293]],["body/routes.html",[38,0.02,118,0.017,119,0.02,120,0.017,248,3.944]],["title/classes/teamList.html",[65,0.01,1528,2.203]],["body/classes/teamList.html",[3,0.302,4,0.263,9,0.263,22,0.263,23,0.824,24,1.079,32,0.652,35,0.498,37,0.702,38,0.021,39,0.341,40,0.448,41,0.702,54,1.146,64,0.302,65,0.016,118,0.016,119,0.019,120,0.016,294,2.506,403,3.093,1528,3.936,1742,5.699,1886,4.571,1970,5.361,1971,5.361,1972,5.361,1973,5.361]],["title/miscellaneous/variables.html",[1169,3.205,1918,2.007]],["body/miscellaneous/variables.html",[22,0.257,38,0.022,40,0.487,50,1.926,51,1.926,52,2.409,118,0.016,119,0.019,120,0.016,243,2.158,276,2.901,303,3.271,1169,3.954,1887,4.462,1889,5.834,1890,4.462,1891,4.462,1892,5.292,1893,5.292,1918,3.574,1949,5.292,1974,6.206,1975,5.233,1976,5.233,1977,5.233,1978,5.233]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["0.125fr",{"_index":1613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0.7.1",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{}}}],["0s",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":698,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["1/9",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":432,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["10.1.4",{"_index":1898,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":436,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1292,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["100px",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["1091774612794",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["10px",{"_index":381,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["11",{"_index":1857,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["120",{"_index":1663,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["13/14",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1290,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["16",{"_index":1968,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["1em",{"_index":1291,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1fr",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1px",{"_index":372,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":734,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["2.3.7",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["200",{"_index":1305,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["200px",{"_index":1616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["20px",{"_index":737,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["212",{"_index":773,"title":{},"body":{"components/FeedComponent.html":{}}}],["218",{"_index":753,"title":{},"body":{"components/FeedComponent.html":{}}}],["23",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["23/26",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["236",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["23px",{"_index":775,"title":{},"body":{"components/FeedComponent.html":{}}}],["250",{"_index":754,"title":{},"body":{"components/FeedComponent.html":{}}}],["250px",{"_index":1264,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["25px",{"_index":1666,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["3",{"_index":1158,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3.1.2",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["30)),new",{"_index":1212,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["300",{"_index":1301,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["30px",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["380px",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["3fr",{"_index":1612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3s",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.5.3",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["4/20",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["4/23",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1769,"title":{},"body":{"components/TeamComponent.html":{}}}],["400",{"_index":1310,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["400px",{"_index":1265,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["45",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["450",{"_index":378,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["5",{"_index":427,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FilterComponent.html":{}}}],["5/5",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["500",{"_index":431,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{}}}],["500px",{"_index":574,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["50px",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["5px",{"_index":777,"title":{},"body":{"components/FeedComponent.html":{}}}],["5vw",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":1273,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["60px",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["62",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":779,"title":{},"body":{"components/FeedComponent.html":{}}}],["7/8",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":760,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["71",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["75px",{"_index":1615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8",{"_index":1969,"title":{},"body":{"overview.html":{}}}],["80",{"_index":375,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{}}}],["83",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["9.1.0",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["90",{"_index":858,"title":{},"body":{"components/FilterComponent.html":{}}}],["92",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["936da5,#58482e",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["9])(?=.*[$@$!%*?&])[a",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["_http",{"_index":928,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_http:httpclient",{"_index":966,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["_teams",{"_index":1101,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["_teams:teams",{"_index":1198,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["absolute",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["accept",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acceptterms",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acces",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["activatedroute",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["activatedroute:activatedroute",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetLinkComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["adding",{"_index":814,"title":{},"body":{"components/FilterComponent.html":{},"injectables/ProposalService.html":{}}}],["address",{"_index":904,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["advanced",{"_index":794,"title":{},"body":{"classes/FeedParams.html":{},"components/FilterComponent.html":{}}}],["af4261",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":567,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"error",{"_index":713,"title":{},"body":{"components/FeedComponent.html":{}}}],["alert(\"some",{"_index":563,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["alert(\"there",{"_index":1228,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["align",{"_index":727,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["allnexturl",{"_index":913,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allnexturl=\"http://localhost:8080/feed/all",{"_index":961,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allowing",{"_index":571,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["allurl",{"_index":914,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["allurl=\"http://localhost:8080/feed/all",{"_index":960,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["along",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["already",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["angular",{"_index":1904,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":643,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["angular/compiler",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{}}}],["angular/material/dialog",{"_index":60,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["angular/material/divider",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["another",{"_index":1662,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["api",{"_index":16,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["api's",{"_index":912,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["apiresponsecomponent",{"_index":1,"title":{"components/ApiResponseComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"index.html":{}}}],["app.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":81,"title":{"components/AppComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["application/json",{"_index":1092,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["applied",{"_index":820,"title":{},"body":{"components/FilterComponent.html":{}}}],["appmodule",{"_index":129,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":141,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["arguments",{"_index":1120,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["arial",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrangement",{"_index":603,"title":{},"body":{"components/FeedComponent.html":{}}}],["array",{"_index":936,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{}}}],["artifacts",{"_index":1944,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1633,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["auth.service",{"_index":451,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["auth.service.ts",{"_index":1707,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:11",{"_index":1722,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:12",{"_index":1723,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:14",{"_index":1713,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:24",{"_index":1721,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:43",{"_index":1715,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:47",{"_index":1719,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:51",{"_index":1718,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:56",{"_index":1717,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth.service.ts:62",{"_index":1716,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["auth_token",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticate",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticateduser",{"_index":267,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["authenticateduser:string",{"_index":283,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authentication",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["authenticationservice",{"_index":1076,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["autho",{"_index":1102,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["autho:authorizationservice",{"_index":1214,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorization",{"_index":268,"title":{},"body":{"injectables/AuthorizationService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["authorization.service",{"_index":1193,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["authorizationservice",{"_index":264,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["authreq",{"_index":1088,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["authservice",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["auto",{"_index":735,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["autologin",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":1935,"title":{},"body":{"index.html":{}}}],["available",{"_index":1966,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":1133,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["background",{"_index":741,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["base_path",{"_index":1825,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["based",{"_index":1503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["basic",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["basis",{"_index":1174,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["black",{"_index":756,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["block",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["bold",{"_index":748,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["boolean",{"_index":49,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["boolean=true",{"_index":892,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":369,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["border:1px",{"_index":774,"title":{},"body":{"components/FeedComponent.html":{}}}],["both",{"_index":849,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{}}}],["bottom",{"_index":739,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom:1",{"_index":1309,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["box",{"_index":570,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["browse",{"_index":1964,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["btndelete",{"_index":379,"title":{},"body":{"components/CommentComponent.html":{}}}],["bton",{"_index":860,"title":{},"body":{"components/FilterComponent.html":{}}}],["build",{"_index":1943,"title":{},"body":{"index.html":{}}}],["button",{"_index":599,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{}}}],["buttoncontainer",{"_index":780,"title":{},"body":{"components/FeedComponent.html":{}}}],["calibri",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":932,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["called",{"_index":1136,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["calls",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["cancel",{"_index":1365,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["canupdate=false",{"_index":646,"title":{},"body":{"components/FeedComponent.html":{}}}],["case",{"_index":1360,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["center",{"_index":861,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["centered",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1936,"title":{},"body":{"index.html":{}}}],["changed",{"_index":823,"title":{},"body":{"components/FilterComponent.html":{}}}],["changes",{"_index":1154,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["character",{"_index":1362,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["characters",{"_index":428,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["chat_bubble_outline",{"_index":724,"title":{},"body":{"components/FeedComponent.html":{}}}],["check",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["check:boolean=false",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checked",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["checking",{"_index":1446,"title":{},"body":{"injectables/ProposalService.html":{}}}],["checks",{"_index":555,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["child",{"_index":318,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ShareProposalComponent.html":{}}}],["ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":65,"title":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"classes/teamList.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["classes",{"_index":294,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/Teams.html":{},"classes/User.html":{},"overview.html":{},"classes/teamList.html":{}}}],["clear",{"_index":368,"title":{},"body":{"components/CommentComponent.html":{},"components/HomeComponent.html":{}}}],["clearsession",{"_index":269,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["cli",{"_index":1926,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":435,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["closing",{"_index":1160,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cluster_appmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1938,"title":{},"body":{"index.html":{}}}],["color",{"_index":751,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["color:#3f51b5",{"_index":757,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:#8b8a8a",{"_index":1312,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["color:#e9ebee",{"_index":742,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(218",{"_index":772,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(66",{"_index":778,"title":{},"body":{"components/FeedComponent.html":{}}}],["color:rgb(80",{"_index":374,"title":{},"body":{"components/CommentComponent.html":{}}}],["color:white",{"_index":758,"title":{},"body":{"components/FeedComponent.html":{}}}],["columns",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["commendid",{"_index":339,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment",{"_index":293,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["comment'},{'name",{"_index":84,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["comment.component.css",{"_index":323,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":324,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment/comment.component",{"_index":640,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment:comment",{"_index":349,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment:string",{"_index":314,"title":{},"body":{"classes/Comment.html":{}}}],["commentboxlength",{"_index":769,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentcomponent",{"_index":83,"title":{"components/CommentComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentdata",{"_index":352,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteduserid:number",{"_index":353,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenterror:string",{"_index":653,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentid",{"_index":350,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["comments",{"_index":320,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["comments:comment",{"_index":648,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentsmessage=\"comments",{"_index":652,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentssetup",{"_index":585,"title":{},"body":{"components/FeedComponent.html":{}}}],["commenttext",{"_index":733,"title":{},"body":{"components/FeedComponent.html":{}}}],["commentvisibility=false",{"_index":651,"title":{},"body":{"components/FeedComponent.html":{}}}],["communicate",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["component",{"_index":0,"title":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:errorcomponent",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:resetlinkcomponent",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpass",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1649,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["confirmpassword.validator",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(\"password",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["confirmpasswordvalidator(controlname",{"_index":1920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(\"after2____\",this.user",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"data",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"date\",this.edate",{"_index":840,"title":{},"body":{"components/FilterComponent.html":{}}}],["console.log(\"error",{"_index":551,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["console.log(\"in",{"_index":690,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(\"inside",{"_index":1679,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["console.log(\"response",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(\"test",{"_index":1758,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log(\"updated",{"_index":1411,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data",{"_index":710,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["console.log(data.key",{"_index":1406,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["console.log(data1",{"_index":896,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["console.log(error",{"_index":715,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(error.status",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(id+this.userid+this.new_comment",{"_index":692,"title":{},"body":{"components/FeedComponent.html":{}}}],["console.log(res",{"_index":1731,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["console.log(this.comment",{"_index":358,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.data",{"_index":1253,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.data.teams,this.data.prop",{"_index":1693,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.newfeed",{"_index":1261,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.registerform.value.team",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.sentteam",{"_index":1702,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["console.log(this.type",{"_index":1245,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.userdata[\"name\"],this.userdata.email",{"_index":1761,"title":{},"body":{"components/TeamComponent.html":{}}}],["console.log({'id':id,'userid':userid",{"_index":1477,"title":{},"body":{"injectables/ProposalService.html":{}}}],["const",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["constructor(_http",{"_index":925,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["constructor(activatedroute",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(authenticationservice",{"_index":1074,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["constructor(authservice",{"_index":1116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["constructor(description",{"_index":1368,"title":{},"body":{"classes/Post.html":{}}}],["constructor(dialog",{"_index":1624,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["constructor(dialogref",{"_index":33,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["constructor(formbuilder",{"_index":1498,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["constructor(http",{"_index":1384,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(id",{"_index":300,"title":{},"body":{"classes/Comment.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["constructor(proposalwork",{"_index":594,"title":{},"body":{"components/FeedComponent.html":{}}}],["constructor(public",{"_index":403,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"classes/teamList.html":{}}}],["constructor(resetlinkservice",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["constructor(router",{"_index":270,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["constructor(startdate",{"_index":790,"title":{},"body":{"classes/FeedParams.html":{}}}],["constructor(teamname",{"_index":1970,"title":{},"body":{"classes/teamList.html":{}}}],["constructor(userid",{"_index":1414,"title":{},"body":{"classes/Proposal.html":{}}}],["contact",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactresults",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["contain",{"_index":1289,"title":{},"body":{"components/LandingPageComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["container",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetLinkComponent.html":{}}}],["contains",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["content",{"_index":1091,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["context",{"_index":1892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["control",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["controlname",{"_index":1922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controls",{"_index":1170,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["count",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1844,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatain",{"_index":1508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["create",{"_index":86,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["createbasicauthtoken",{"_index":1709,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["createbasicauthtoken(username",{"_index":1714,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["created",{"_index":637,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{}}}],["createproposalcomponent",{"_index":85,"title":{"components/CreateProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createurl",{"_index":1379,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["createurl=\"http://localhost:8080/proposal/add",{"_index":1398,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["creation",{"_index":308,"title":{},"body":{"classes/Comment.html":{},"components/CreateProposalComponent.html":{}}}],["creationdate",{"_index":299,"title":{},"body":{"classes/Comment.html":{}}}],["creationdate:date",{"_index":315,"title":{},"body":{"classes/Comment.html":{}}}],["credentials",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["crimson",{"_index":864,"title":{},"body":{"components/FilterComponent.html":{}}}],["current",{"_index":332,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/ProposalService.html":{}}}],["cursor",{"_index":765,"title":{},"body":{"components/FeedComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserRegisterService.html":{}}}],["data)=>console.log(data",{"_index":1270,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data.id=id",{"_index":1403,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=\"null",{"_index":1408,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.key=data.key.tostring",{"_index":1410,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["data.service",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["data.service.ts",{"_index":1793,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1796,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.service.ts:7",{"_index":1797,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["data.teamid=teamid",{"_index":972,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["data.userid=userid",{"_index":977,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{}}}],["data1",{"_index":546,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["data1:any",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["data:date",{"_index":837,"title":{},"body":{"components/FilterComponent.html":{}}}],["data:{data:this.message",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data:{data:this.msg",{"_index":1656,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data:{name:this.user.id,post:post,teams:this._teams",{"_index":1274,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data:{prop:post.teams,teams:this._teams",{"_index":1266,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data=new",{"_index":1209,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["data={\"data1",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["data={\"data1\":{\"id\":this.token",{"_index":1651,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["data={\"data1\":{\"mail\":this.forgetpasswordform.value.email",{"_index":894,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["data[\"data1\"],{responsetype:'text",{"_index":1681,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/UserRegisterService.html":{}}}],["database",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["date",{"_index":302,"title":{},"body":{"classes/Comment.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["date(),\"0\",\"3",{"_index":1213,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[0",{"_index":1241,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(data[1",{"_index":1243,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["date(this.startdate.setdate(this.startdate.getdate",{"_index":1211,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dateplusone",{"_index":807,"title":{},"body":{"components/FilterComponent.html":{}}}],["day",{"_index":815,"title":{},"body":{"components/FilterComponent.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":306,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["defines",{"_index":298,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{}}}],["delay",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete",{"_index":341,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["deletecomment",{"_index":325,"title":{},"body":{"components/CommentComponent.html":{},"injectables/ProposalService.html":{}}}],["deletecomment(id",{"_index":1437,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecomment(id:number):observable",{"_index":1483,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletecommenturl",{"_index":1425,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost",{"_index":1432,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id",{"_index":1439,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deletepost(id:number):observable",{"_index":1485,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl",{"_index":1426,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteposturl=\"http://localhost:8080/proposal/delete",{"_index":1471,"title":{},"body":{"injectables/ProposalService.html":{}}}],["deleteproposal",{"_index":593,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["deleteproposal(1",{"_index":1134,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal(id",{"_index":1127,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleteproposal=new",{"_index":657,"title":{},"body":{"components/FeedComponent.html":{}}}],["deletes",{"_index":1129,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["deleting",{"_index":714,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["deletion",{"_index":610,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["delproposal",{"_index":586,"title":{},"body":{"components/FeedComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrip",{"_index":389,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["description",{"_index":297,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["description:string",{"_index":1422,"title":{},"body":{"classes/Proposal.html":{}}}],["destroying",{"_index":1137,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["destroys",{"_index":281,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["destroysession",{"_index":1103,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["details",{"_index":1636,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["dev",{"_index":1932,"title":{},"body":{"index.html":{}}}],["development",{"_index":1928,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":394,"title":{},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["dialog:matdialog",{"_index":1216,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialog:matdialog,public",{"_index":404,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["dialogdata",{"_index":57,"title":{"interfaces/DialogData.html":{}},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["dialogref",{"_index":26,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1267,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialogtitle:string=\"create",{"_index":410,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["different",{"_index":958,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["differentiating",{"_index":392,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["direction",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1942,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1946,"title":{},"body":{"index.html":{}}}],["dislike",{"_index":1451,"title":{},"body":{"injectables/ProposalService.html":{}}}],["disliking",{"_index":700,"title":{},"body":{"components/FeedComponent.html":{}}}],["display",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["display:inline",{"_index":781,"title":{},"body":{"components/FeedComponent.html":{}}}],["display:none",{"_index":1298,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["displaying",{"_index":1514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dist",{"_index":1945,"title":{},"body":{"index.html":{}}}],["do_register",{"_index":1839,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["documentation",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["doesnot",{"_index":900,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dologin",{"_index":1812,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dologin(username",{"_index":1815,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["doregister",{"_index":1834,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["doregister(data",{"_index":1836,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["duration",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["during",{"_index":1141,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dynamic",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":907,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["e2e",{"_index":1955,"title":{},"body":{"index.html":{}}}],["edate",{"_index":836,"title":{},"body":{"components/FilterComponent.html":{}}}],["eight",{"_index":1363,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["email",{"_index":444,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"classes/User.html":{}}}],["email:string",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/User.html":{}}}],["emit",{"_index":829,"title":{},"body":{"components/FilterComponent.html":{}}}],["emitdata",{"_index":1794,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emitdata(data",{"_index":1795,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["emiting",{"_index":338,"title":{},"body":{"components/CommentComponent.html":{}}}],["emits",{"_index":622,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["emitted",{"_index":1157,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["emitter",{"_index":335,"title":{},"body":{"components/CommentComponent.html":{}}}],["end",{"_index":816,"title":{},"body":{"components/FilterComponent.html":{},"index.html":{}}}],["enddate",{"_index":787,"title":{},"body":{"classes/FeedParams.html":{}}}],["enddate:date",{"_index":801,"title":{},"body":{"classes/FeedParams.html":{}}}],["endmessage",{"_index":1206,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["enter",{"_index":902,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["environment",{"_index":1889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":550,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["error'},{'name",{"_index":89,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["error.component.css",{"_index":576,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":577,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["error['error",{"_index":552,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["errorcomponent",{"_index":88,"title":{"components/ErrorComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandling",{"_index":1104,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errorhandling(error",{"_index":1138,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["errormessage",{"_index":482,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["etc",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["evenr",{"_index":1125,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["event",{"_index":1121,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["eventemitter",{"_index":333,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["example",{"_index":354,"title":{},"body":{"components/CommentComponent.html":{},"components/LandingPageComponent.html":{}}}],["execute",{"_index":1952,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1511,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["exists",{"_index":901,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extralocaledataindex",{"_index":832,"title":{},"body":{"components/FilterComponent.html":{}}}],["false",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["favorite",{"_index":719,"title":{},"body":{"components/FeedComponent.html":{}}}],["feature",{"_index":631,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed",{"_index":342,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["feed'},{'name",{"_index":91,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["feed.component.css",{"_index":582,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":583,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed/feed.component",{"_index":1189,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feed/share",{"_index":1191,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feedcomponent",{"_index":90,"title":{"components/FeedComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["feedparams",{"_index":783,"title":{"classes/FeedParams.html":{}},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["feedparams(new",{"_index":1210,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["field",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["files",{"_index":1937,"title":{},"body":{"index.html":{}}}],["fill",{"_index":437,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/HomeComponent.html":{}}}],["filter",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"dependencies.html":{}}}],["filter'},{'name",{"_index":93,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["filter.component.css",{"_index":805,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":806,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter/filter.component",{"_index":1188,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["filtercomponent",{"_index":92,"title":{"components/FilterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredteams",{"_index":1490,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filters",{"_index":1173,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fixed",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["flag",{"_index":1948,"title":{},"body":{"index.html":{}}}],["flag=false",{"_index":1699,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flag=true",{"_index":1695,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["flex",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["flex:1",{"_index":1296,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["following",{"_index":1356,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["font",{"_index":376,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["for(let",{"_index":1696,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["forgetpassword",{"_index":1683,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["forgetpasswordcomponent",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgetpasswordform",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordform:formgroup",{"_index":891,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["forgotten",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["form",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["form.submitted",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formarray",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formbuilder",{"_index":1499,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["formcontainer",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["formcontrol",{"_index":453,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/TestServiceService.html":{}}}],["formcontrol('0",{"_index":1691,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formcontrol(null",{"_index":1787,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formcontrol,validators",{"_index":1790,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["formgroup",{"_index":452,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["formgroup,formcontrol,validators",{"_index":1688,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["formgroupdirective",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":1132,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["function",{"_index":274,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1149,"title":{"miscellaneous/functions.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1957,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1940,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1925,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1180,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getall",{"_index":1105,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getallnextpost",{"_index":919,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data",{"_index":929,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallnextpost(data:feedparams):observable",{"_index":969,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts",{"_index":920,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data",{"_index":937,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getallposts(data:feedparams",{"_index":967,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getcomment",{"_index":1433,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id",{"_index":1441,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcomment(id:number):observable",{"_index":1481,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl",{"_index":1427,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getcommenturl=\"http://localhost:8080/comment/all",{"_index":1467,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getemailerror",{"_index":1496,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getlike",{"_index":1434,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id",{"_index":1444,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlike(id:number,userid:number):observable",{"_index":1479,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl",{"_index":1428,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlikeurl=\"http://localhost:8080/upvotes/hasupvoted",{"_index":1470,"title":{},"body":{"injectables/ProposalService.html":{}}}],["getlocaledateformat",{"_index":830,"title":{},"body":{"components/FilterComponent.html":{}}}],["getloggedinusername",{"_index":1710,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["getproposals",{"_index":1117,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposals:getproposalsservice",{"_index":1217,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getproposalsservice",{"_index":142,"title":{"injectables/GetProposalsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gets",{"_index":1148,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getteam",{"_index":1106,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/UserRegisterService.html":{}}}],["getteam():observable",{"_index":1842,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["getteamnextpost",{"_index":921,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data",{"_index":939,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamnextpost(data:feedparams,teamid):observable",{"_index":974,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts",{"_index":922,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data",{"_index":942,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteamposts(data:feedparams,teamid",{"_index":971,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getteams",{"_index":1107,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"injectables/TeamsService.html":{}}}],["getteams():observable",{"_index":1779,"title":{},"body":{"injectables/TeamsService.html":{}}}],["getting",{"_index":1443,"title":{"index.html":{}},"body":{"injectables/ProposalService.html":{}}}],["getyour",{"_index":1108,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["getyournextpost",{"_index":923,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data",{"_index":944,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyournextpost(data:feedparams,userid):observable",{"_index":979,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts",{"_index":924,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data",{"_index":946,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["getyourposts(data:feedparams,userid",{"_index":976,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["go",{"_index":1960,"title":{},"body":{"index.html":{}}}],["google",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleloginprovider",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["googleloginprovider(\"1091774612794",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["googleloginprovider.provider_id",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["googlesignin",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["gotologin",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(#f3ec78",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(50deg,#d4c15f",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["gradient(to",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1965,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":851,"title":{},"body":{"components/FilterComponent.html":{}}}],["grid",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["h1",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["handled",{"_index":1126,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["handlelogin",{"_index":557,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["handles",{"_index":911,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["happened",{"_index":699,"title":{},"body":{"components/FeedComponent.html":{}}}],["hasliked=false",{"_index":659,"title":{},"body":{"components/FeedComponent.html":{}}}],["header",{"_index":749,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["headers",{"_index":1090,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"injectables/UserLoginService.html":{}}}],["height",{"_index":380,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["height:500px",{"_index":1304,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:50px",{"_index":750,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:55px",{"_index":1308,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["height:60px",{"_index":764,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["height:auto",{"_index":767,"title":{},"body":{"components/FeedComponent.html":{}}}],["height:number",{"_index":650,"title":{},"body":{"components/FeedComponent.html":{}}}],["hello",{"_index":1282,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["help",{"_index":1958,"title":{},"body":{"index.html":{}}}],["here",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["hidden",{"_index":763,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["hide",{"_index":1491,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1",{"_index":1492,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide1=true",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["hide=true",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["highlight",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["home',component:homecomponent",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home'},{'name",{"_index":98,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["home.component.css",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":97,"title":{"components/HomeComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1190,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hostlisteners",{"_index":1114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote",{"_index":1314,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["how_to_vote&nbsp",{"_index":1287,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["http",{"_index":1386,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["http://localhost:4200",{"_index":1934,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1826,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["http://localhost:8080/comment/add",{"_index":1460,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/all",{"_index":1456,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/comment/delete",{"_index":1453,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/feed/all",{"_index":948,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/create",{"_index":955,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/feed/team",{"_index":951,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["http://localhost:8080/proposal/add",{"_index":1392,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/delete",{"_index":1455,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/proposal/share",{"_index":1394,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/proposal/update",{"_index":1395,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["http://localhost:8080/team/all",{"_index":1777,"title":{},"body":{"injectables/TeamsService.html":{}}}],["http://localhost:8080/upvotes/dislike",{"_index":1462,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/hasupvoted",{"_index":1458,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http://localhost:8080/upvotes/like",{"_index":1464,"title":{},"body":{"injectables/ProposalService.html":{}}}],["http:httpclient",{"_index":1401,"title":{},"body":{"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclient",{"_index":926,"title":{},"body":{"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["httpclientmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1084,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httphandler",{"_index":1080,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpheaders",{"_index":1085,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":1083,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["httpinterceptorservice",{"_index":1069,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["httprequest",{"_index":1078,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["id",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id\":this.token",{"_index":1657,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["id:number",{"_index":313,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["id:number=null",{"_index":411,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["id?:number",{"_index":1423,"title":{},"body":{"classes/Proposal.html":{}}}],["identifier",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["if(!data.key",{"_index":1407,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["if(!this.authenticateduser",{"_index":288,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["if(!this.loggedin",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if((this.newfeed.length>0",{"_index":1250,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(array.isarray(data",{"_index":1239,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data!=null",{"_index":672,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data.length==1",{"_index":673,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(data===\"allpost",{"_index":1231,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"teampost",{"_index":1233,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(data===\"yourpost",{"_index":1235,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(error.status!=200",{"_index":562,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(error.status==200",{"_index":561,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["if(error.status==202",{"_index":1654,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["if(error.status==302",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==404",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(error.status==406",{"_index":712,"title":{},"body":{"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["if(flag",{"_index":1700,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(flag==false",{"_index":1705,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(item.id==team.id",{"_index":1704,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(result",{"_index":1268,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(team.id==item.id",{"_index":1698,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["if(this.data.post",{"_index":415,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["if(this.hasliked",{"_index":694,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.innerwidth",{"_index":1280,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.loginform.valid",{"_index":558,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["if(this.menuvisibility",{"_index":1277,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.post.user.id==this.userid",{"_index":665,"title":{},"body":{"components/FeedComponent.html":{}}}],["if(this.registerform.controls.email.haserror('email",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.sdate==null",{"_index":846,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.sdate>=this.edate",{"_index":850,"title":{},"body":{"components/FilterComponent.html":{}}}],["if(this.type.includes(\"allpost",{"_index":1254,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"teampost",{"_index":1256,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(this.type.includes(\"yourpost",{"_index":1258,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["if(user!=null",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ignore",{"_index":284,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ShareProposalComponent.html":{}}}],["image:linear",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["img",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":322,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvement",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["incase",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["include",{"_index":941,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["includes",{"_index":933,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["infinitescrollmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"classes/teamList.html":{}}}],["information",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["initial",{"_index":1151,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["initialiseformgroup",{"_index":1783,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["initializes",{"_index":1510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inject",{"_index":62,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ShareProposalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":46,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["injectable",{"_index":263,"title":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1799,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["injectables",{"_index":265,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"overview.html":{}}}],["innerwidth",{"_index":1197,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["input",{"_index":348,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["input,output,eventemitter",{"_index":346,"title":{},"body":{"components/CommentComponent.html":{}}}],["inputs",{"_index":327,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["instance",{"_index":596,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["intercept",{"_index":1073,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["intercept(req",{"_index":1077,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor",{"_index":1068,"title":{"interceptors/HttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service.ts",{"_index":1072,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":1081,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptor.service.ts:8",{"_index":1075,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interceptors",{"_index":1070,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["interface",{"_index":441,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":442,"title":{},"body":{"interfaces/DialogData.html":{}}}],["intialization",{"_index":617,"title":{},"body":{"components/FeedComponent.html":{}}}],["invalid",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["invalidlogin",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":1346,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["islogin",{"_index":27,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/HomeComponent.html":{}}}],["islogin:boolean",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["islogin:boolean=true",{"_index":67,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["isregister",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["isregister:boolean",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["issubmit",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["issubmitted",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isuserloggedin",{"_index":1711,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["item",{"_index":1701,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["item.id",{"_index":708,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["iteration",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1682,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserRegisterService.html":{}}}],["json.parse(this.authenticateduser",{"_index":291,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["jsonpipe",{"_index":642,"title":{},"body":{"components/FeedComponent.html":{}}}],["justify",{"_index":728,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["karma",{"_index":1954,"title":{},"body":{"index.html":{}}}],["key",{"_index":1786,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["label",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["landing",{"_index":100,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["landingpagecomponent",{"_index":99,"title":{"components/LandingPageComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["large",{"_index":732,"title":{},"body":{"components/FeedComponent.html":{}}}],["later",{"_index":568,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lato",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":859,"title":{},"body":{"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["left:2",{"_index":782,"title":{},"body":{"components/FeedComponent.html":{}}}],["left:5",{"_index":1311,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["length",{"_index":1364,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["letter",{"_index":1358,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["lightgray",{"_index":740,"title":{},"body":{"components/FeedComponent.html":{}}}],["lightskyblue",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["likebutton",{"_index":771,"title":{},"body":{"components/FeedComponent.html":{}}}],["liked",{"_index":613,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["likesetup",{"_index":587,"title":{},"body":{"components/FeedComponent.html":{}}}],["liking",{"_index":632,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":736,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["linear",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["link'},{'name",{"_index":111,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["link.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":1619,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.html",{"_index":1620,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts",{"_index":1618,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:18",{"_index":1643,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:19",{"_index":1645,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:20",{"_index":1642,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:21",{"_index":1644,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1640,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:23",{"_index":1626,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:26",{"_index":1639,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:31",{"_index":1627,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:68",{"_index":1635,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:76",{"_index":1632,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link.component.ts:85",{"_index":1628,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["link/reset",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["list",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":303,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1493,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["local",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loggedin",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["login.component.css",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.component.html",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["login.service.ts",{"_index":1811,"title":{},"body":{"injectables/UserLoginService.html":{},"coverage.html":{}}}],["login.service.ts:11",{"_index":1823,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:13",{"_index":1824,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:14",{"_index":1822,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:15",{"_index":1813,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:21",{"_index":1816,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:31",{"_index":1814,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:35",{"_index":1821,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:39",{"_index":1819,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:45",{"_index":1818,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login.service.ts:51",{"_index":1817,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["login/:id',component:homecomponent",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":58,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginservice",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice:userloginservice",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["loginsuccess",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsuccess=false",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["logout",{"_index":1286,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["logs",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["long",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["lower",{"_index":1359,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["mail",{"_index":908,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["make",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["makes",{"_index":931,"title":{},"body":{"injectables/GetProposalsService.html":{},"components/ResetLinkComponent.html":{}}}],["mandatory",{"_index":425,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["manner",{"_index":606,"title":{},"body":{"components/FeedComponent.html":{}}}],["map",{"_index":1725,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["margin",{"_index":729,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:2em",{"_index":762,"title":{},"body":{"components/FeedComponent.html":{}}}],["mat",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":59,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matbuttonmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matcheckboxmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matcher",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":119,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdatepickermodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["matdialog,@inject(mat_dialog_data",{"_index":1689,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["matdialog,mat_dialog_data",{"_index":399,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["matdialogmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":34,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["matdividermodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectfiltermodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["matstartdate",{"_index":833,"title":{},"body":{"components/FilterComponent.html":{}}}],["mattoolbarmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":430,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["media",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["medium",{"_index":738,"title":{},"body":{"components/FeedComponent.html":{}}}],["menu",{"_index":1177,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menubutton=false",{"_index":1196,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["menuvisibility=true",{"_index":1195,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["message",{"_index":28,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/FilterComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["message:string",{"_index":68,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["message=null",{"_index":1194,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["method",{"_index":337,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["minimum",{"_index":426,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/PasswordSpecsComponent.html":{}}}],["miscellaneous",{"_index":1918,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":128,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1959,"title":{},"body":{"index.html":{}}}],["morepost=true",{"_index":1207,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["moz",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["ms",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["msg",{"_index":29,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["msg:any",{"_index":66,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["msg:string=\"reset",{"_index":1647,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["myerrorstatematcher",{"_index":464,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/teamList.html":{}}}],["name\":this.registerform.value.team",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name\":this.teamname",{"_index":1763,"title":{},"body":{"components/TeamComponent.html":{}}}],["name:string",{"_index":316,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["navigate",{"_index":1933,"title":{},"body":{"index.html":{}}}],["nbsp;{{message",{"_index":856,"title":{},"body":{"components/FilterComponent.html":{}}}],["needed",{"_index":429,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["new",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/DialogData.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"coverage.html":{},"index.html":{}}}],["new_comment",{"_index":1447,"title":{},"body":{"injectables/ProposalService.html":{}}}],["new_comment:string",{"_index":645,"title":{},"body":{"components/FeedComponent.html":{}}}],["newedate",{"_index":835,"title":{},"body":{"components/FilterComponent.html":{}}}],["newfeed",{"_index":1199,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["next",{"_index":1079,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(authreq",{"_index":1095,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["next.handle(req",{"_index":1096,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["ng",{"_index":1930,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":457,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["ngoninit",{"_index":326,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["ngx",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nocomments:boolean=true",{"_index":649,"title":{},"body":{"components/FeedComponent.html":{}}}],["non",{"_index":1297,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["none",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["not.a",{"_index":635,"title":{},"body":{"components/FeedComponent.html":{}}}],["notified",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["now",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["null",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{}}}],["number",{"_index":301,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"classes/Teams.html":{},"classes/User.html":{}}}],["numberlikes:number",{"_index":647,"title":{},"body":{"components/FeedComponent.html":{}}}],["object",{"_index":276,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1218,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{}}}],["observable",{"_index":935,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/UserRegisterService.html":{}}}],["observer",{"_index":1800,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["occured",{"_index":564,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["ok",{"_index":72,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["ondelete",{"_index":588,"title":{},"body":{"components/FeedComponent.html":{}}}],["ondelete(commentid",{"_index":618,"title":{},"body":{"components/FeedComponent.html":{}}}],["onfilter",{"_index":1109,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onfilter(data",{"_index":1152,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["oninit,input,output,eventemitter",{"_index":831,"title":{},"body":{"components/FilterComponent.html":{}}}],["onnoclick",{"_index":31,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["onok",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["onresize",{"_index":1166,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onscroll",{"_index":1110,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["onsubmit",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["opacity",{"_index":759,"title":{},"body":{"components/FeedComponent.html":{}}}],["opacity:20",{"_index":1293,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["open",{"_index":623,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialog",{"_index":572,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["opendialog(post",{"_index":620,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare",{"_index":589,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["opendialogshare(post",{"_index":1163,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["opened",{"_index":395,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["opens",{"_index":569,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["others",{"_index":638,"title":{},"body":{"components/FeedComponent.html":{}}}],["out",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":356,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["outputs",{"_index":329,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["overflow",{"_index":745,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["overview",{"_index":1967,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["package",{"_index":1896,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":761,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["padding:5px",{"_index":744,"title":{},"body":{"components/FeedComponent.html":{}}}],["padding:number",{"_index":1205,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page",{"_index":279,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/SocialMediaAuthService.html":{}}}],["page'},{'name",{"_index":101,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["page.component",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1099,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1100,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1097,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:111",{"_index":1144,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:123",{"_index":1146,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:137",{"_index":1172,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:154",{"_index":1153,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:175",{"_index":1155,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:199",{"_index":1164,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:223",{"_index":1159,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:259",{"_index":1175,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:271",{"_index":1165,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:292",{"_index":1123,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:301",{"_index":1139,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:317",{"_index":1135,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:333",{"_index":1128,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:35",{"_index":1178,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:37",{"_index":1182,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":1187,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1186,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:59",{"_index":1119,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:65",{"_index":1179,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:67",{"_index":1184,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:69",{"_index":1183,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:71",{"_index":1181,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:78",{"_index":1147,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:88",{"_index":1145,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:99",{"_index":1143,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/comment",{"_index":347,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/comment.ts",{"_index":296,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["page/comment.ts:11",{"_index":307,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:13",{"_index":311,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:4",{"_index":304,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:7",{"_index":309,"title":{},"body":{"classes/Comment.html":{}}}],["page/comment.ts:9",{"_index":305,"title":{},"body":{"classes/Comment.html":{}}}],["page/create",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/comment/comment.component.ts",{"_index":317,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["page/feed/comment/comment.component.ts:32",{"_index":331,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:38",{"_index":334,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:46",{"_index":343,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/comment/comment.component.ts:59",{"_index":336,"title":{},"body":{"components/CommentComponent.html":{}}}],["page/feed/feed.component",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["page/feed/feed.component.ts",{"_index":580,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["page/feed/feed.component.ts:133",{"_index":611,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:146",{"_index":626,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:173",{"_index":630,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:206",{"_index":624,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:213",{"_index":621,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:221",{"_index":619,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:234",{"_index":607,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:52",{"_index":601,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:55",{"_index":600,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:58",{"_index":598,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:61",{"_index":597,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:67",{"_index":595,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:74",{"_index":639,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:80",{"_index":614,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:89",{"_index":634,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/feed.component.ts:99",{"_index":602,"title":{},"body":{"components/FeedComponent.html":{}}}],["page/feed/share",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["page/filter/filter.component.ts",{"_index":804,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["page/filter/filter.component.ts:105",{"_index":822,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:114",{"_index":828,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:51",{"_index":812,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:73",{"_index":813,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/filter/filter.component.ts:82",{"_index":818,"title":{},"body":{"components/FilterComponent.html":{}}}],["page/landing",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page/proposal.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["page/proposal.service.ts",{"_index":1424,"title":{},"body":{"injectables/ProposalService.html":{},"coverage.html":{}}}],["page/proposal.service.ts:14",{"_index":1461,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:17",{"_index":1457,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:20",{"_index":1465,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:23",{"_index":1463,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:26",{"_index":1459,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:29",{"_index":1454,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:32",{"_index":1436,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:45",{"_index":1448,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:54",{"_index":1452,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:63",{"_index":1450,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:73",{"_index":1445,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:81",{"_index":1442,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:89",{"_index":1438,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/proposal.service.ts:98",{"_index":1440,"title":{},"body":{"injectables/ProposalService.html":{}}}],["page/test",{"_index":1781,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["page:string",{"_index":802,"title":{},"body":{"classes/FeedParams.html":{}}}],["page=0",{"_index":1203,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pagination",{"_index":934,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["param",{"_index":660,"title":{},"body":{"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"miscellaneous/functions.html":{},"classes/teamList.html":{}}}],["params",{"_index":786,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["params.ts",{"_index":785,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["params.ts:11",{"_index":793,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:14",{"_index":795,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:17",{"_index":796,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:2",{"_index":791,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:20",{"_index":799,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:23",{"_index":798,"title":{},"body":{"classes/FeedParams.html":{}}}],["params.ts:8",{"_index":797,"title":{},"body":{"classes/FeedParams.html":{}}}],["parent",{"_index":1098,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["parentfunction",{"_index":330,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunction:eventemitter",{"_index":357,"title":{},"body":{"components/CommentComponent.html":{}}}],["parentfunctionfilter",{"_index":811,"title":{},"body":{"components/FilterComponent.html":{}}}],["parentfunctionfilter:eventemitter",{"_index":839,"title":{},"body":{"components/FilterComponent.html":{}}}],["particular",{"_index":605,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{}}}],["password\":this.resetlinkform.controls.password.value",{"_index":1658,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["password'},{'name",{"_index":96,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["password.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["password.component.css",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.html",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:13",{"_index":888,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":887,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.service",{"_index":890,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["password.service.ts",{"_index":1668,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1675,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:17",{"_index":1673,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:23",{"_index":1677,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:7",{"_index":1671,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:9",{"_index":1678,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forget",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordspecscomponent",{"_index":104,"title":{"components/PasswordSpecsComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":720,"title":{},"body":{"components/FeedComponent.html":{}}}],["per",{"_index":604,"title":{},"body":{"components/FeedComponent.html":{}}}],["person",{"_index":1281,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["photo",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe(map((res",{"_index":1829,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["play",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":565,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["pointer",{"_index":766,"title":{},"body":{"components/FeedComponent.html":{}}}],["position",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["position:absolute",{"_index":1664,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["position:fixed",{"_index":1299,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["post",{"_index":200,"title":{"classes/Post.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"coverage.html":{}}}],["post.description",{"_index":718,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.title",{"_index":717,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.user.name",{"_index":716,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:post",{"_index":644,"title":{},"body":{"components/FeedComponent.html":{}}}],["post:postproposalservice",{"_index":1215,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postbutton",{"_index":1306,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["postcomment",{"_index":590,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id",{"_index":625,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postcomment(id:number",{"_index":686,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcomment(id:number,new_comment:string,userid:number):observable",{"_index":1472,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenterror:string",{"_index":654,"title":{},"body":{"components/FeedComponent.html":{}}}],["postcommenturl",{"_index":1429,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postcommenturl=\"http://localhost:8080/comment/add",{"_index":1466,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike",{"_index":1435,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id",{"_index":1449,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislike(id:number,userid:number):observable",{"_index":1476,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl",{"_index":1430,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postdislikeurl=\"http://localhost:8080/upvotes/dislike",{"_index":1469,"title":{},"body":{"injectables/ProposalService.html":{}}}],["posted",{"_index":312,"title":{},"body":{"classes/Comment.html":{}}}],["posting",{"_index":627,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike",{"_index":591,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id",{"_index":629,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["postlike(id:number",{"_index":693,"title":{},"body":{"components/FeedComponent.html":{}}}],["postlike(id:number,userid:number):observable",{"_index":1474,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl",{"_index":1431,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postlikeurl=\"http://localhost:8080/upvotes/like",{"_index":1468,"title":{},"body":{"injectables/ProposalService.html":{}}}],["postproposal",{"_index":1382,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data",{"_index":1387,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposal(data,userid",{"_index":1405,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["postproposalservice",{"_index":143,"title":{"injectables/PostProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["posts",{"_index":855,"title":{},"body":{"components/FilterComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{}}}],["private",{"_index":285,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["priyanka",{"_index":1634,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["process",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["processfilter",{"_index":808,"title":{},"body":{"components/FilterComponent.html":{}}}],["prod",{"_index":1947,"title":{},"body":{"index.html":{}}}],["production",{"_index":1949,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1924,"title":{},"body":{"index.html":{}}}],["prop",{"_index":413,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["proposal",{"_index":384,"title":{"classes/Proposal.html":{}},"body":{"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["proposal'},{'name",{"_index":87,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["proposal.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.component.css",{"_index":387,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.html",{"_index":388,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["proposal.component.ts",{"_index":383,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposal.component.ts:23",{"_index":398,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:31",{"_index":1687,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["proposal.component.ts:38",{"_index":397,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:41",{"_index":396,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.component.ts:47",{"_index":391,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["proposal.service",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposal.service.ts",{"_index":1378,"title":{},"body":{"injectables/PostProposalService.html":{},"coverage.html":{}}}],["proposal.service.ts:14",{"_index":1393,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:16",{"_index":1396,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:18",{"_index":1385,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:28",{"_index":1391,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal.service.ts:38",{"_index":1388,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["proposal/create",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["proposal/share",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/ShareProposalComponent.html":{},"coverage.html":{}}}],["proposalerror:string",{"_index":1200,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["proposalid",{"_index":628,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposals",{"_index":581,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{}}}],["proposals.service.ts",{"_index":910,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["proposals.service.ts:17",{"_index":950,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:19",{"_index":949,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:21",{"_index":954,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:23",{"_index":952,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:25",{"_index":956,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:27",{"_index":927,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:37",{"_index":938,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:46",{"_index":930,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:55",{"_index":943,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:67",{"_index":940,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:77",{"_index":947,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposals.service.ts:89",{"_index":945,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["proposalservice",{"_index":144,"title":{"injectables/ProposalService.html":{}},"body":{"modules/AppModule.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"coverage.html":{},"overview.html":{}}}],["proposalsystem",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["proposalwork",{"_index":584,"title":{},"body":{"components/FeedComponent.html":{}}}],["proposalwork:proposalservice",{"_index":661,"title":{},"body":{"components/FeedComponent.html":{}}}],["propose",{"_index":1288,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["propsal",{"_index":386,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["protractor",{"_index":1956,"title":{},"body":{"index.html":{}}}],["provide",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":282,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["provider",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ApiResponseComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["put",{"_index":1629,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["radius",{"_index":743,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["reactiveformsmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/ShareProposalComponent.html":{}}}],["readme",{"_index":1961,"title":{},"body":{"index.html":{}}}],["real",{"_index":608,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["receive",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["recieved",{"_index":1140,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["refreshs",{"_index":1162,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["register",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register',component:registercomponent",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register'},{'name",{"_index":108,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["register.component.css",{"_index":1488,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1489,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.service",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["register.service.ts",{"_index":1833,"title":{},"body":{"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["register.service.ts:15",{"_index":1837,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:22",{"_index":1838,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register.service.ts:9",{"_index":1835,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["register/register.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":107,"title":{"components/RegisterComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["registerform",{"_index":1494,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersuccessfullogin",{"_index":1712,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["registersuccessfullogin(username",{"_index":1820,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["registration",{"_index":1507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":681,"title":{},"body":{"components/FeedComponent.html":{},"index.html":{}}}],["remaining",{"_index":438,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["removing",{"_index":1130,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["req",{"_index":1082,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.clone",{"_index":1089,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["req.url.indexof('basicauth",{"_index":1087,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["request",{"_index":1630,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["require",{"_index":1893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":905,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["res[\"name",{"_index":1732,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["reset",{"_index":110,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"overview.html":{}}}],["resetlink",{"_index":1669,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink(data",{"_index":1672,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetlink/:token",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetlinkcomponent",{"_index":109,"title":{"components/ResetLinkComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetlinkform",{"_index":1621,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["resetlinkservice",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword",{"_index":1625,"title":{},"body":{"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{}}}],["resetpassword(data",{"_index":1674,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resetpasswordservice",{"_index":875,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["resize",{"_index":1111,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resp",{"_index":1841,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["response",{"_index":17,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/ResetLinkComponent.html":{}}}],["response'},{'name",{"_index":80,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["response.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["response.component.css",{"_index":19,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.html",{"_index":21,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts",{"_index":12,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["response.component.ts:11",{"_index":55,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:12",{"_index":53,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:13",{"_index":36,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:15",{"_index":48,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:16",{"_index":47,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response.component.ts:21",{"_index":42,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["response/api",{"_index":11,"title":{},"body":{"components/ApiResponseComponent.html":{},"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{}}}],["responsedialog",{"_index":1497,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["responsible",{"_index":319,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["responsive",{"_index":1176,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["resposible",{"_index":344,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":680,"title":{},"body":{"components/FeedComponent.html":{}}}],["return",{"_index":290,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["returned",{"_index":1389,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["rgb(211",{"_index":752,"title":{},"body":{"components/FeedComponent.html":{}}}],["rgb(236",{"_index":1313,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rgb(238",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":370,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{}}}],["root'},{'name",{"_index":82,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["router",{"_index":271,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["router:router",{"_index":286,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LandingPageComponent.html":{}}}],["routermodule",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":248,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1929,"title":{},"body":{"index.html":{}}}],["running",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["runs",{"_index":1156,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rxjs",{"_index":957,"title":{},"body":{"injectables/GetProposalsService.html":{},"interceptors/HttpInterceptorService.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{},"injectables/TransferDataService.html":{},"injectables/UserRegisterService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1726,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["same",{"_index":616,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sans",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["saved",{"_index":1631,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["saying",{"_index":1638,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sbsi",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1939,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["scrollable",{"_index":1302,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["scrolling",{"_index":1142,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sdate",{"_index":834,"title":{},"body":{"components/FilterComponent.html":{}}}],["search",{"_index":1295,"title":{},"body":{"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["select",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["selectapi",{"_index":1112,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selectapi(data",{"_index":1171,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["selected",{"_index":817,"title":{},"body":{"components/FilterComponent.html":{},"components/LandingPageComponent.html":{}}}],["selected(team",{"_index":1703,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["selectedteam",{"_index":1495,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selection",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["selectionchanged",{"_index":809,"title":{},"body":{"components/FilterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["selectp",{"_index":857,"title":{},"body":{"components/FilterComponent.html":{}}}],["seletion",{"_index":824,"title":{},"body":{"components/FilterComponent.html":{}}}],["self",{"_index":862,"title":{},"body":{"components/FilterComponent.html":{}}}],["send",{"_index":825,"title":{},"body":{"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["senddata",{"_index":810,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddata(data",{"_index":827,"title":{},"body":{"components/FilterComponent.html":{}}}],["senddate",{"_index":826,"title":{},"body":{"components/FilterComponent.html":{}}}],["sending",{"_index":691,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["sends",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{}}}],["sent",{"_index":906,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sentteam",{"_index":406,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["sentteams",{"_index":1397,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["serif",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["serve",{"_index":1931,"title":{},"body":{"index.html":{}}}],["server",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["service",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{}}}],["service.service",{"_index":402,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["service.service.ts",{"_index":1782,"title":{},"body":{"injectables/TestServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":1789,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:17",{"_index":1785,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service.service.ts:7",{"_index":1784,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["service/reset",{"_index":889,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetLinkComponent.html":{}}}],["service/social",{"_index":449,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["service/transfer",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["service/user",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["service:testserviceservice,@inject(mat_dialog_data",{"_index":405,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["session",{"_index":275,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/ProposalService.html":{}}}],["sessionstorage.clear",{"_index":292,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["sessionstorage.getitem(this.user_name_session_attribute_name",{"_index":1737,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.removeitem(this.user_name_session_attribute_name",{"_index":1736,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sessionstorage.setitem(this.user_name_session_attribute_name",{"_index":1734,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["sets",{"_index":1167,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["setup",{"_index":1150,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["share",{"_index":113,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["share=new",{"_index":656,"title":{},"body":{"components/FeedComponent.html":{}}}],["shared",{"_index":1373,"title":{},"body":{"classes/Post.html":{},"components/ShareProposalComponent.html":{}}}],["shareproposal",{"_index":1383,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data",{"_index":1390,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposal(data,id):observable",{"_index":1402,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareproposalcomponent",{"_index":112,"title":{"components/ShareProposalComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shareurl",{"_index":1380,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["shareurl=\"http://localhost:8080/proposal/share",{"_index":1400,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["sharing",{"_index":1686,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["shine",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["short",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["show",{"_index":345,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["showing",{"_index":1637,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["showmenu",{"_index":1113,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["shown",{"_index":321,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["sign",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["signed",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["size",{"_index":731,"title":{},"body":{"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["size:string",{"_index":803,"title":{},"body":{"classes/FeedParams.html":{}}}],["social",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"dependencies.html":{}}}],["socialauthservice",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{}}}],["socialauthserviceconfig",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["socialdata",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialloginmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["socialmedia",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(data",{"_index":1720,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmedia(frontend",{"_index":1727,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["socialmediaauth",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["socialmediaauth:socialmediaauthservice",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["socialmediaauthservice",{"_index":448,"title":{"injectables/SocialMediaAuthService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["socialuser",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["solid",{"_index":373,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"index.html":{},"classes/teamList.html":{}}}],["space",{"_index":439,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{}}}],["spacing",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["spec\\.ts",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1361,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specifications",{"_index":1355,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{}}}],["specs",{"_index":1350,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs'},{'name",{"_index":106,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["specs.component",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["specs.component.css",{"_index":1351,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.html",{"_index":1352,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts",{"_index":1349,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["specs.component.ts:12",{"_index":1354,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs.component.ts:8",{"_index":1353,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["specs/password",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["split",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../confirmpassword.validator.ts",{"_index":1919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":10,"title":{},"body":{"components/ApiResponseComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authorization.service.ts",{"_index":266,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/authorization.service.ts:15",{"_index":273,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:25",{"_index":280,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/authorization.service.ts:8",{"_index":272,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/confirmpassword.validator.ts",{"_index":1852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/error/error.component.ts",{"_index":575,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:10",{"_index":578,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:14",{"_index":579,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/feed",{"_index":784,"title":{},"body":{"classes/FeedParams.html":{},"coverage.html":{}}}],["src/app/forget",{"_index":866,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/get",{"_index":909,"title":{},"body":{"injectables/GetProposalsService.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/landing",{"_index":295,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":443,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:105",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:136",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":1347,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:81",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/password",{"_index":1348,"title":{},"body":{"components/PasswordSpecsComponent.html":{},"coverage.html":{}}}],["src/app/post",{"_index":641,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"coverage.html":{}}}],["src/app/post.ts",{"_index":1366,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:11",{"_index":1372,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:13",{"_index":1374,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:15",{"_index":1375,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:17",{"_index":1377,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":1369,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:7",{"_index":1370,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:9",{"_index":1371,"title":{},"body":{"classes/Post.html":{}}}],["src/app/proposal.ts",{"_index":1413,"title":{},"body":{"classes/Proposal.html":{},"coverage.html":{}}}],["src/app/proposal.ts:1",{"_index":1415,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:3",{"_index":1420,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:4",{"_index":1419,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:5",{"_index":1416,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:6",{"_index":1418,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/proposal.ts:7",{"_index":1417,"title":{},"body":{"classes/Proposal.html":{}}}],["src/app/register/register.component.ts",{"_index":1487,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:101",{"_index":1502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:111",{"_index":1512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:19",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":1501,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:35",{"_index":1518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:37",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:43",{"_index":1513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:53",{"_index":1515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:66",{"_index":1505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:83",{"_index":1504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/reset",{"_index":1617,"title":{},"body":{"components/ResetLinkComponent.html":{},"coverage.html":{}}}],["src/app/service/http",{"_index":1071,"title":{},"body":{"interceptors/HttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/service/reset",{"_index":1667,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/service/social",{"_index":1706,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"coverage.html":{}}}],["src/app/service/transfer",{"_index":1792,"title":{},"body":{"injectables/TransferDataService.html":{},"coverage.html":{}}}],["src/app/service/user",{"_index":1810,"title":{},"body":{"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts",{"_index":1738,"title":{},"body":{"components/TeamComponent.html":{},"coverage.html":{}}}],["src/app/team/team.component.ts:18",{"_index":1749,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:19",{"_index":1753,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:20",{"_index":1748,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:21",{"_index":1752,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:22",{"_index":1751,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:23",{"_index":1755,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:24",{"_index":1754,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:25",{"_index":1743,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:32",{"_index":1747,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:34",{"_index":1750,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:38",{"_index":1746,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:46",{"_index":1744,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/team/team.component.ts:58",{"_index":1745,"title":{},"body":{"components/TeamComponent.html":{}}}],["src/app/teamlist.ts",{"_index":1886,"title":{},"body":{"coverage.html":{},"classes/teamList.html":{}}}],["src/app/teamlist.ts:1",{"_index":1971,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teamlist.ts:2",{"_index":1972,"title":{},"body":{"classes/teamList.html":{}}}],["src/app/teams.service.ts",{"_index":1774,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/app/teams.service.ts:11",{"_index":1776,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.service.ts:9",{"_index":1775,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/app/teams.ts",{"_index":1770,"title":{},"body":{"classes/Teams.html":{},"coverage.html":{}}}],["src/app/teams.ts:1",{"_index":1771,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:3",{"_index":1772,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/teams.ts:4",{"_index":1773,"title":{},"body":{"classes/Teams.html":{}}}],["src/app/user.ts",{"_index":1804,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:11",{"_index":1806,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:13",{"_index":1809,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":1805,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":1807,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:9",{"_index":1808,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":1887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":821,"title":{},"body":{"components/FilterComponent.html":{}}}],["startdate",{"_index":788,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate:date",{"_index":800,"title":{},"body":{"classes/FeedParams.html":{}}}],["startdate=new",{"_index":1208,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["started",{"_index":1923,"title":{"index.html":{}},"body":{}}],["state",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["statements",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["storage",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["store",{"_index":1161,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stored",{"_index":1131,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"classes/FeedParams.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"classes/teamList.html":{}}}],["string?,array",{"_index":1237,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["stroke",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["subject",{"_index":1798,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["submission",{"_index":1517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submit",{"_index":434,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["submitted",{"_index":556,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["subscriber",{"_index":1801,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["success",{"_index":1516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successful",{"_index":548,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/ResetLinkComponent.html":{}}}],["successmessage",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["sucessfull",{"_index":1641,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["sucessfully",{"_index":1661,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["such",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["support",{"_index":1962,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1963,"title":{},"body":{"modules.html":{}}}],["system",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["table",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":277,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["tap",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["team",{"_index":115,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"classes/Post.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"classes/User.html":{}}}],["team',component:teamcomponent",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["team's",{"_index":953,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["team.component.css",{"_index":1739,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.component.html",{"_index":1740,"title":{},"body":{"components/TeamComponent.html":{}}}],["team.name",{"_index":433,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/ShareProposalComponent.html":{}}}],["team/team.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["teamcomponent",{"_index":114,"title":{"components/TeamComponent.html":{}},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamform",{"_index":1741,"title":{},"body":{"components/TeamComponent.html":{}}}],["teamid",{"_index":789,"title":{},"body":{"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{}}}],["teamlist",{"_index":1528,"title":{"classes/teamList.html":{}},"body":{"components/RegisterComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{}}}],["teamname",{"_index":1742,"title":{},"body":{"components/TeamComponent.html":{},"classes/teamList.html":{}}}],["teamname:string",{"_index":1973,"title":{},"body":{"classes/teamList.html":{}}}],["teamnexturl",{"_index":915,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamnexturl=\"http://localhost:8080/feed/team",{"_index":963,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teampost",{"_index":1185,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams",{"_index":407,"title":{"classes/Teams.html":{}},"body":{"components/CreateProposalComponent.html":{},"components/LandingPageComponent.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"components/RegisterComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["teams.service",{"_index":1192,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teams:any",{"_index":1756,"title":{},"body":{"components/TeamComponent.html":{}}}],["teams:teamlist",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["teams:teamsservice",{"_index":1219,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["teamsservice",{"_index":1118,"title":{"injectables/TeamsService.html":{}},"body":{"components/LandingPageComponent.html":{},"injectables/TeamsService.html":{},"coverage.html":{}}}],["teamurl",{"_index":916,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamurl=\"http://localhost:8080/feed/team",{"_index":962,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["teamvisibility=true",{"_index":409,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["terms",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":401,"title":{},"body":{"components/CreateProposalComponent.html":{},"index.html":{}}}],["tests",{"_index":1951,"title":{},"body":{"index.html":{}}}],["testserviceservice",{"_index":400,"title":{"injectables/TestServiceService.html":{}},"body":{"components/CreateProposalComponent.html":{},"injectables/TestServiceService.html":{},"coverage.html":{}}}],["text",{"_index":726,"title":{},"body":{"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["textmessage",{"_index":863,"title":{},"body":{"components/FilterComponent.html":{}}}],["thankyou",{"_index":71,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["thankyou!{{msg",{"_index":79,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this._http.post(this.allnexturl,data",{"_index":970,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.allurl,data,{responsetype:'json",{"_index":968,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamnexturl,data",{"_index":975,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.teamurl,data",{"_index":973,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yournexturl,data",{"_index":980,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._http.post(this.yoururl,data",{"_index":978,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["this._teams=data",{"_index":1225,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authenticateduser=sessionstorage.getitem('authenticateduser",{"_index":287,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authenticationservice.isuserloggedin",{"_index":1086,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authenticationservice.password",{"_index":1094,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["this.authservice.authstate.subscribe((user",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.authservice.signout",{"_index":1767,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.canupdate=false",{"_index":667,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.canupdate=true",{"_index":666,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comment.comment",{"_index":360,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.id",{"_index":362,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.id",{"_index":366,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment.user.name",{"_index":364,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentdata",{"_index":359,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteduserid",{"_index":365,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenterror",{"_index":671,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commenterror=\"some",{"_index":682,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentid",{"_index":361,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments",{"_index":669,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.concat(data",{"_index":670,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.comments=this.comments.filter(item",{"_index":707,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage",{"_index":723,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"comments",{"_index":675,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentsmessage=\"no",{"_index":678,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentssetup",{"_index":664,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.commentvisibility=true",{"_index":674,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.createbasicauthtoken(username",{"_index":1828,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.data",{"_index":844,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.data.enddate=new",{"_index":1242,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.page=this.page.tostring",{"_index":1247,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.data.post.description",{"_index":421,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.post.title",{"_index":419,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.data.prop",{"_index":1697,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.data.startdate=new",{"_index":1240,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.deleteproposal.emit(this.post.id",{"_index":711,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.descrip",{"_index":420,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.dialog.open(apiresponsecomponent",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.dialog.open(createproposalcomponent",{"_index":1272,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialog.open(forgetpasswordcomponent",{"_index":573,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.dialog.open(passwordspecscomponent",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["this.dialog.open(shareproposalcomponent",{"_index":1263,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.edate",{"_index":842,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.edate==null",{"_index":847,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.endmessage",{"_index":1249,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.error=\"email",{"_index":899,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.error=\"reset",{"_index":898,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errorhandling(error",{"_index":1227,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed",{"_index":1238,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.feed=this.feed.concat(this.newfeed",{"_index":1260,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.filteredteams=this.teams.slice",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.forgetpasswordform",{"_index":893,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.form.setvalue",{"_index":1791,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["this.formbuilder.group",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.getall",{"_index":1232,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallnextpost(this.data).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1255,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getallposts(this.data).subscribe((data)=>this.feed=data,(error",{"_index":1226,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamnextpost(this.data,this.user.team.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1257,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getteamposts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error",{"_index":1229,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyournextpost(this.data,this.user.id).subscribe((data)=>this.newfeed=data,(error)=>this.errorhandling(error",{"_index":1259,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getproposals.getyourposts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error",{"_index":1230,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteam",{"_index":1234,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.getteams",{"_index":1222,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getyour",{"_index":1236,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.hasliked=data,console.log(this.hasliked",{"_index":685,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=false",{"_index":696,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hasliked=true",{"_index":702,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=200",{"_index":677,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.height=95",{"_index":676,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.http.get(\"http://localhost:8080/getteam",{"_index":1843,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.get(`http://localhost:8080/signin",{"_index":1827,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.http.get(this.url",{"_index":1780,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.http.post(\"http://localhost:8080/forgotpassword",{"_index":1684,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(\"http://localhost:8080/getsocialinfo\",data[\"data1\"],{responsetype:'text",{"_index":1728,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(\"http://localhost:8080/userregister",{"_index":1840,"title":{},"body":{"injectables/UserRegisterService.html":{}}}],["this.http.post(\"http://localhost:8080/validate_token",{"_index":1685,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.http.post(`http://localhost:8080/getsocialinfo`,data).pipe(map((res",{"_index":1729,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.http.post(this.createurl,data",{"_index":1409,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.deletecommenturl,{'id':id",{"_index":1484,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.deleteposturl,{'id':id",{"_index":1486,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getcommenturl,{'id':id",{"_index":1482,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.getlikeurl,{'id':id,'userid':userid",{"_index":1480,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postcommenturl,{'id':id,'text':new_comment,'userid':userid",{"_index":1473,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postdislikeurl,{\"userid\":userid,\"id\":id",{"_index":1478,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.postlikeurl,{'id':id,'userid':userid",{"_index":1475,"title":{},"body":{"injectables/ProposalService.html":{}}}],["this.http.post(this.shareurl,data",{"_index":1404,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.post(this.updateurl,data",{"_index":1412,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["this.http.put(\"http://localhost:8080/reset_password",{"_index":1680,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.id=this.data.post.id",{"_index":417,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.invalidlogin",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.islogin=(this.activatedroute.snapshot.parammap.get('id')==='true",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.islogin=true",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmit",{"_index":897,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.likesetup",{"_index":663,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loading",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loading=false",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.loggedin",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginform",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginservice.dologin(this.loginform.get('email').value,this.loginform.get('password').value).subscribe",{"_index":559,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.loginsuccess",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.menuvisibility=false",{"_index":1278,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.menuvisibility=true",{"_index":1279,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.message",{"_index":848,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.message=\"this",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message=\"you",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.morepost=true",{"_index":1248,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.msg=\"your",{"_index":1660,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.msg=data.data",{"_index":69,"title":{},"body":{"components/ApiResponseComponent.html":{}}}],["this.new_comment",{"_index":688,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.newedate",{"_index":841,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newedate.setdate(this.newedate.getdate()+1",{"_index":843,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.newfeed",{"_index":1262,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.nocomments=false",{"_index":679,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.nocomments=true",{"_index":689,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes",{"_index":697,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes+=1",{"_index":703,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.numberlikes=this.post.upvotescount",{"_index":683,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.observer.asobservable",{"_index":1802,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.observer.next(data",{"_index":1803,"title":{},"body":{"injectables/TransferDataService.html":{}}}],["this.page",{"_index":1252,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page=0",{"_index":1246,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.page==0)&&this.morepost",{"_index":1251,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.parentfunction.emit(this.commentid",{"_index":367,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.parentfunctionfilter.emit(data",{"_index":854,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.password",{"_index":1830,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.post.postproposal(result,this.user.id).subscribe",{"_index":1275,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.post.shareproposal(result,post.id).subscribe",{"_index":1269,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.prop",{"_index":422,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.prop=\"create",{"_index":424,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.proposalerror",{"_index":1276,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.proposalwork.deletecomment(commentid).subscribe((data)=>console.log(data",{"_index":706,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.deletepost(this.post.id).subscribe",{"_index":709,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getcomment(this.post.id).subscribe",{"_index":668,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.getlike(this.post.id,this.userid).subscribe",{"_index":684,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postcomment(id,this.new_comment,this.userid).subscribe",{"_index":687,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postdislike(id,this.userid).subscribe((data",{"_index":695,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.proposalwork.postlike(id,this.userid).subscribe((data",{"_index":701,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.registerform",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('pattern",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.haserror('required",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersuccessfullogin",{"_index":1733,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["this.registersuccessfullogin(username",{"_index":1831,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["this.res",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res.message",{"_index":1735,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.res=data1",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.res=res",{"_index":1730,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.resetlinkform",{"_index":1648,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetlinkservice.resetlink(data).subscribe",{"_index":895,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.resetpassword.resetpassword(data).subscribe",{"_index":1659,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resetpassword.tokenverification(data).subscribe",{"_index":1652,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.resize",{"_index":1223,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.responsedialog",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate",{"_index":289,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.router.navigate(['/home",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.router.navigate(['/team",{"_index":554,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.router.navigate(['/welcome",{"_index":549,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.sdate,this.newedate",{"_index":845,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selectapi(this.type",{"_index":1221,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.senddata(this.data",{"_index":852,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.senddata(this.typepost",{"_index":853,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.sentteam=this.data.teams.filter(item",{"_index":1694,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.share.emit(this.post",{"_index":704,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.socialdata={\"name\":this.user[\"name\"],\"email\":this.user[\"email",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmedia",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.socialmediaauth.socialmedia(this.socialdata).subscribe",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.submitted",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.successmessage",{"_index":547,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.teamform",{"_index":1760,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamform.invalid",{"_index":1768,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teamname=this.teamform.value.team",{"_index":1762,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.teams.getteams().subscribe",{"_index":1224,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.teams=data",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.teamvisibility=false",{"_index":416,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.tit",{"_index":418,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.token=this.activatedroute.snapshot.parammap.get('token",{"_index":1650,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.transferdataservice.emitdata(error['error",{"_index":553,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{}}}],["this.type=data",{"_index":1244,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.update.emit(post",{"_index":705,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateapproval",{"_index":662,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.updateform",{"_index":1690,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["this.user",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.user.email",{"_index":1284,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.name",{"_index":1283,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user.team.name",{"_index":1285,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.user=this.autho.authorization",{"_index":1220,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.userdata",{"_index":1759,"title":{},"body":{"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["this.userdata.email",{"_index":1765,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata.name",{"_index":1764,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=(this.transferdataservice.userdata",{"_index":1757,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userdata=sessionstorage.getitem('authenticateduser",{"_index":560,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.userdata[\"name\"]+\"@123",{"_index":1766,"title":{},"body":{"components/TeamComponent.html":{}}}],["this.userid=this.data.userid",{"_index":414,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["this.username",{"_index":363,"title":{},"body":{"components/CommentComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["this.userservice.doregister(data).subscribe",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.userservice.getteam().subscribe",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["this.validtoken=false",{"_index":1655,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["this.validtoken=true",{"_index":1653,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["those",{"_index":636,"title":{},"body":{"components/FeedComponent.html":{},"components/ShareProposalComponent.html":{}}}],["three",{"_index":615,"title":{},"body":{"components/FeedComponent.html":{}}}],["time",{"_index":609,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["timing",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["tit",{"_index":390,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["title",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/Post.html":{},"classes/Proposal.html":{},"injectables/TestServiceService.html":{}}}],["title:string",{"_index":1421,"title":{},"body":{"classes/Proposal.html":{}}}],["token",{"_index":1622,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["tokenverification",{"_index":1670,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tokenverification(data",{"_index":1676,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["tools",{"_index":865,"title":{},"body":{"components/FilterComponent.html":{}}}],["top",{"_index":776,"title":{},"body":{"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["top:1",{"_index":730,"title":{},"body":{"components/FeedComponent.html":{}}}],["total",{"_index":612,"title":{},"body":{"components/FeedComponent.html":{}}}],["transfer",{"_index":1724,"title":{},"body":{"injectables/SocialMediaAuthService.html":{}}}],["transferdataservice",{"_index":445,"title":{"injectables/TransferDataService.html":{}},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{},"coverage.html":{}}}],["transferdataservice:transferdataservice",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{}}}],["transform",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["translate",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["transparent",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["true",{"_index":52,"title":{},"body":{"components/ApiResponseComponent.html":{},"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":566,"title":{},"body":{"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["tslib",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/HomeComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/Teams.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"classes/teamList.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":658,"title":{},"body":{"components/FeedComponent.html":{}}}],["type=\"teampost",{"_index":1202,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["typepost=\"teampost",{"_index":838,"title":{},"body":{"components/FilterComponent.html":{}}}],["types",{"_index":959,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["udata",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["unique",{"_index":310,"title":{},"body":{"classes/Comment.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["unit",{"_index":1950,"title":{},"body":{"index.html":{}}}],["unlike",{"_index":633,"title":{},"body":{"components/FeedComponent.html":{}}}],["up",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["update",{"_index":423,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PostProposalService.html":{},"components/ResetLinkComponent.html":{}}}],["update=new",{"_index":655,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateapproval",{"_index":592,"title":{},"body":{"components/FeedComponent.html":{}}}],["updateform",{"_index":1692,"title":{},"body":{"components/ShareProposalComponent.html":{}}}],["updateurl",{"_index":1381,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updateurl=\"http://localhost:8080/proposal/update",{"_index":1399,"title":{},"body":{"injectables/PostProposalService.html":{}}}],["updation",{"_index":385,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["uppercase",{"_index":1357,"title":{},"body":{"components/PasswordSpecsComponent.html":{}}}],["upvoted",{"_index":721,"title":{},"body":{"components/FeedComponent.html":{},"injectables/ProposalService.html":{}}}],["upvotes",{"_index":1376,"title":{},"body":{"classes/Post.html":{}}}],["upvotescount",{"_index":1367,"title":{},"body":{"classes/Post.html":{}}}],["url",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{},"injectables/GetProposalsService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"injectables/TeamsService.html":{}}}],["url=\"http://localhost:8080/team/all",{"_index":1778,"title":{},"body":{"injectables/TeamsService.html":{}}}],["use",{"_index":1941,"title":{},"body":{"index.html":{}}}],["user",{"_index":278,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"interceptors/HttpInterceptorService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Post.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"classes/User.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["user:user",{"_index":1201,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["user_name_session_attribute_name",{"_index":1708,"title":{},"body":{"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userblock",{"_index":755,"title":{},"body":{"components/FeedComponent.html":{}}}],["usercomment",{"_index":747,"title":{},"body":{"components/FeedComponent.html":{}}}],["userdata",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/TeamComponent.html":{},"injectables/TransferDataService.html":{}}}],["userid",{"_index":328,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"classes/FeedParams.html":{},"injectables/GetProposalsService.html":{},"injectables/PostProposalService.html":{},"classes/Proposal.html":{},"injectables/ProposalService.html":{}}}],["userid:number",{"_index":355,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["userid:string",{"_index":408,"title":{},"body":{"components/CreateProposalComponent.html":{},"classes/Proposal.html":{}}}],["userloginservice",{"_index":460,"title":{"injectables/UserLoginService.html":{}},"body":{"interfaces/DialogData.html":{},"interceptors/HttpInterceptorService.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/UserLoginService.html":{},"coverage.html":{}}}],["username",{"_index":351,"title":{},"body":{"components/CommentComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocialMediaAuthService.html":{},"injectables/UserLoginService.html":{}}}],["userregisterservice",{"_index":145,"title":{"injectables/UserRegisterService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TeamComponent.html":{},"injectables/UserRegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":1500,"title":{},"body":{"components/RegisterComponent.html":{},"components/TeamComponent.html":{}}}],["usevalue",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":903,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":1509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validations",{"_index":819,"title":{},"body":{"components/FilterComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.email",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.maxlength(30",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(2",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["validators.pattern('(?=.*[a",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["validators.pattern('[a",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{}}}],["validators.required,validators.maxlength(300",{"_index":1788,"title":{},"body":{"injectables/TestServiceService.html":{}}}],["validators.requiredtrue",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validtoken",{"_index":1623,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["validtoken:boolean",{"_index":1646,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/GetProposalsService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/PostProposalService.html":{},"injectables/ProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TeamsService.html":{},"injectables/TestServiceService.html":{},"injectables/UserLoginService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1168,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["values:testserviceservice",{"_index":412,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ApiResponseComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PasswordSpecsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"components/TeamComponent.html":{}}}],["variable",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1169,"title":{"miscellaneous/variables.html":{}},"body":{"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1927,"title":{},"body":{"index.html":{}}}],["via",{"_index":1953,"title":{},"body":{"index.html":{}}}],["view",{"_index":725,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["visibility",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visibility_off",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["visible",{"_index":768,"title":{},"body":{"components/FeedComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/ApiResponseComponent.html":{},"injectables/AuthorizationService.html":{},"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorComponent.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PasswordSpecsComponent.html":{},"injectables/PostProposalService.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/ShareProposalComponent.html":{},"injectables/SocialMediaAuthService.html":{},"components/TeamComponent.html":{},"injectables/TestServiceService.html":{},"injectables/TransferDataService.html":{},"injectables/UserLoginService.html":{}}}],["want",{"_index":340,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{}}}],["webkit",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["weight",{"_index":377,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["welcome",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome',component:landingpagecomponent",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["whether",{"_index":393,"title":{},"body":{"components/CreateProposalComponent.html":{},"components/FeedComponent.html":{},"injectables/ProposalService.html":{},"components/ShareProposalComponent.html":{}}}],["white",{"_index":371,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["whitesmoke",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["widows",{"_index":1303,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width",{"_index":382,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateProposalComponent.html":{},"interfaces/DialogData.html":{},"components/FeedComponent.html":{},"components/FilterComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{},"components/TeamComponent.html":{}}}],["width:100",{"_index":1307,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:24",{"_index":1300,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:35",{"_index":440,"title":{},"body":{"components/CreateProposalComponent.html":{}}}],["width:40",{"_index":1665,"title":{},"body":{"components/ResetLinkComponent.html":{}}}],["width:70px",{"_index":1294,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["width:87",{"_index":770,"title":{},"body":{"components/FeedComponent.html":{}}}],["width:number",{"_index":1204,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window",{"_index":1124,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window.btoa(this.authenticationservice.username",{"_index":1093,"title":{},"body":{"interceptors/HttpInterceptorService.html":{}}}],["window.btoa(username",{"_index":1832,"title":{},"body":{"injectables/UserLoginService.html":{}}}],["window.location.reload",{"_index":1271,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize",{"_index":1115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window:resize(event",{"_index":1122,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["write",{"_index":722,"title":{},"body":{"components/FeedComponent.html":{}}}],["x",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":746,"title":{},"body":{"components/FeedComponent.html":{},"components/LandingPageComponent.html":{}}}],["yes",{"_index":792,"title":{},"body":{"classes/FeedParams.html":{},"components/LandingPageComponent.html":{},"classes/Proposal.html":{}}}],["yournexturl",{"_index":917,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yournexturl=\"http://localhost:8080/feed/create",{"_index":965,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl",{"_index":918,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["yoururl=\"http://localhost:8080/feed/create",{"_index":964,"title":{},"body":{"injectables/GetProposalsService.html":{}}}],["z",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{}}}],["z0",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z\\d$@$!%*?&].{8",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[0",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z])(?=.*[a",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["z]{1,63",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetLinkComponent.html":{}}}],["zone.js",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ApiResponseComponent.html":{"url":"components/ApiResponseComponent.html","title":"component - ApiResponseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiResponseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/api-response/api-response.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-response\n            \n\n            \n                styleUrls\n                ./api-response.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-response.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                islogin\n                            \n                            \n                                message\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-response/api-response.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-response/api-response.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { DialogData } from './../login/login.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-api-response',\n  templateUrl: './api-response.component.html',\n  styleUrls: ['./api-response.component.css']\n})\nexport class ApiResponseComponent {\n  msg:any\n  islogin:boolean=true;\n  message:string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data) {\n      this.msg=data.data\n      \n    }\n \n  onNoClick(): void {\n    \n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Thankyou!\n\n\n{{msg}}\n\n\n\n  \n     Ok \n  \n\n -->\n\n    \n\n    \n                \n                    ./api-response.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Thankyou!{{msg}}       Ok    -->'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiResponseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProposalSystem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProposalSystem';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiResponseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            CreateProposalComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            ForgetPasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordSpecsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetLinkComponent\n                        \n                        \n                            ShareProposalComponent\n                        \n                        \n                            TeamComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GetProposalsService\n                        \n                        \n                            PostProposalService\n                        \n                        \n                            ProposalService\n                        \n                        \n                            UserRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { UserRegisterService } from './service/user-register.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorComponent } from './error/error.component';\nimport {CreateProposalComponent} from './landing-page/create-proposal/create-proposal.component'\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RegisterComponent } from './register/register.component';\n\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PasswordSpecsComponent } from './password-specs/password-specs.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiResponseComponent } from './api-response/api-response.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FilterComponent } from './landing-page/filter/filter.component';\nimport { FeedComponent } from './landing-page/feed/feed.component';\nimport {PostProposalService} from './post-proposal.service';\nimport {GetProposalsService} from './get-proposals.service';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ProposalService} from './landing-page/proposal.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommentComponent } from './landing-page/feed/comment/comment.component';\nimport { ShareProposalComponent } from './landing-page/feed/share-proposal/share-proposal.component';\nimport { TeamComponent } from './team/team.component';\nimport { ForgetPasswordComponent} from './forget-password/forget-password.component';\nimport { MatSelectFilterModule } from 'mat-select-filter';\nimport { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { SocialLoginModule, SocialAuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider} from \"angularx-social-login\";\n\n// let config = new SocialAuthServiceConfig ([\n//   {\n//   id: GoogleLoginProvider.PROVIDER_ID,\n//   provider: new GoogleLoginProvider(\"1091774612794-pi3m6cm0fbpqm3c3trpgp715bgbuc1rp.apps.googleusercontent.com\")\n//   }\n//   ]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    RegisterComponent,\n    PasswordSpecsComponent,\n    ApiResponseComponent,\n    LandingPageComponent,\n   FeedComponent,\n   ShareProposalComponent,\n   CreateProposalComponent,\n   FilterComponent,\n    TeamComponent,\n    CommentComponent,\n    ForgetPasswordComponent,\n    ResetLinkComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatIconModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    InfiniteScrollModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatSelectFilterModule,\n    SocialLoginModule\n  ],\n  providers: [\n    UserRegisterService,\n    ProposalService,\n    PostProposalService,\n    GetProposalsService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '1091774612794-ck1f5rcf8j2fov97b6b85ar9ougd0k5j.apps.googleusercontent.com'\n            ),\n          }\n        ],\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ResetLinkComponent } from './reset-link/reset-link.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ErrorComponent} from './error/error.component';\nimport {TeamComponent} from './team/team.component';\n\nconst routes: Routes = [\n  {path : '',component:HomeComponent},\n  {path : 'login/:id',component:HomeComponent},\n  {path : 'register',component:RegisterComponent},\n  {path : 'home',component:HomeComponent},\n  {path : 'welcome',component:LandingPageComponent},\n  {path : 'team',component:TeamComponent},\n  {path : 'resetLink/:token', component:ResetLinkComponent},\n  {path : '**',component:ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                clearSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authorization.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:15\n                \n            \n\n\n            \n                \n                    function returns the session data as object and if there is no session takes user to login page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSession\n                        \n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/authorization.service.ts:25\n                \n            \n\n\n            \n                \n                    this function destroys the session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authorization.service.ts:8\n                            \n                        \n\n                \n                    \n                        user object as a string\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  /**user object as a string*/\n  authenticatedUser:string\n  constructor(\n    /**@ignore */\n    private router:Router) { }\n  /**\n   * function returns the session data as object and if there is no session takes user to login page\n  */\n  authorization(){\n  this.authenticatedUser=sessionStorage.getItem('authenticatedUser')\n    if(!this.authenticatedUser){\n      this.router.navigate([''])\n    }\n    return JSON.parse(this.authenticatedUser)\n  }\n  /**\n   * this function destroys the session\n  */\n  clearSession(){\n    sessionStorage.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/comment.ts\n        \n\n            \n                Description\n            \n            \n                defines the comment object \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, comment: string, creationDate: Date, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/comment.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:9\n                            \n                        \n\n                \n                    \n                        define string type comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:11\n                            \n                        \n\n                \n                    \n                        define the date of creation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the comment (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/comment.ts:13\n                            \n                        \n\n                \n                    \n                        define user data that posted the comment\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Comment {\n    constructor(\n        /**define id of the comment (unique) */\n        public id:number,\n        /**define string type comment*/\n        public comment:string,\n        /**define the date of creation*/\n        public creationDate:Date,\n        /**define user data that posted the comment*/\n        public user:{\n            /**define id of the user*/\n            id:number,\n            /**define name of the user */\n            name:string\n        }\n        \n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/comment/comment.component.ts\n\n\n    \n        Description\n    \n    \n        CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunction\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:32\n                            \n                        \n                \n                    \n                        UserId of the user from the current session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/comment/comment.component.ts:38\n                            \n                        \n                \n                    \n                        This the emitter to the FeedComponent\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/comment/comment.component.ts:46\n                \n            \n\n\n            \n                \n                    This method is resposible for the comment data to show on the Page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Input,Output,EventEmitter } from '@angular/core';\n\nimport {Comment} from 'src/app/landing-page/comment'\n/**\n * CommentComponent is the child Component of FeedComponent and responsible for all the comments shown the feedComponent.\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  /**@ignore */\n  @Input() comment:Comment;\n\n  /**@ignore */\n  public commentId;\n\n  /**@ignore */\n  public userName;\n\n  /**@ignore */\n  public commentData;\n\n  /**@ignore */\n  public commentedUserId:number;\n\n  /** UserId of the user from the current session \n   * @example\n   * Input from the FeedComponent\n   */\n  @Input() userId:number;\n\n  /** \n   * This the emitter to the FeedComponent\n   */\n  @Output() \n parentFunction:EventEmitter = new EventEmitter();\n \n  /**@ignore */\n  constructor() { }\n\n  /**\n   * This method is resposible for the comment data to show on the Page.\n   */\n  ngOnInit(): void {\n\n     console.log(this.comment)\n\n    this.commentData = this.comment.comment;\n    this.commentId = this.comment.id;\n    this.userName = this.comment.user.name;\n    this.commentedUserId = this.comment.user.id;\n\n  }\n  /**\n   * This method is responsible for emiting the commendId of the comment which we want to delete to Feed Component.\n   */\n  deleteComment()\n  {\n       this.parentFunction.emit(this.commentId) \n  }\n\n}\n\n    \n\n    \n        \n\n    {{userName}}\n  \n      {{commentData}}            \n  \n  \n    \n      \n        clear\n      \n    \n  \n\n    \n\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                .name{\n\n    border-right: white 1px solid;\n    color:rgb(80, 80, 80);\n    font-weight: 450;\n\n}\n.data{\n  \n}\n.btnDelete{\n   height: 10px;\n   width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName}}        {{commentData}}                                  clear                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProposalComponent.html":{"url":"components/CreateProposalComponent.html","title":"component - CreateProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/create-proposal/create-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-proposal\n            \n\n            \n                styleUrls\n                ./create-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                descrip\n                            \n                            \n                                    Public\n                                tit\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            descrip\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:41\n                            \n                        \n\n                \n                    \n                        This is the description of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tit\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:38\n                            \n                        \n\n                \n                    \n                        This is the Title of proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/create-proposal/create-proposal.component.ts:23\n                            \n                        \n\n                \n                    \n                        This is the Id of user from Current Session.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { TestServiceService } from '../test-service.service';\n/**\n * This Component is child Component of Landing-page and resposible for creation of Proposal and updation of propsal.\n */\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.css']\n})\nexport class CreateProposalComponent implements OnInit {\n\n  /**@ignore */\n  constructor(public dialog:MatDialog,public service:TestServiceService,@Inject(MAT_DIALOG_DATA) public data){}\n\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n  /** This is the Id of user from Current Session.*/\n  userId:string\n\n  /**@ignore */\n  teamVisibility=true\n\n  /**@ignore */\n  dialogTitle:string=\"Create Proposal\"\n\n  /**@ignore */\n  id:number=null\n\n  /**@ignore */\n  values:TestServiceService;\n\n  /** This is the Title of proposal*/\n  public tit \n\n  /**This is the description of proposal*/\n  public descrip\n\n  /**@ignore */\n  public prop\n\n  /**This method is Resposible for differentiating whether dialog is opened  for creation of proposal or updation of proposal */\n  ngOnInit(){\n    this.userId=this.data.userId\n    if(this.data.post){\n      this.teamVisibility=false\n      this.id=this.data.post.id\n      this.tit = this.data.post.title\n      this.descrip = this.data.post.description\n      this.prop= \"Update Proposal\"\n     }\n     else{\n       this.prop=\"Create Proposal\"\n     }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n         {{prop}}\n        \n    \n    \n\n\n\n    \n        \n        \n            Title\n            \n            This field is Mandatory\n            Minimum 5 characters needed\n        \n        \n        \n            Proposal\n             \n            This field is Mandatory\n            Maximum 500 characters\n            Minimum 10 characters\n        \n        \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n       submit\n       close\n    \n  \n\n\n    \n\n    \n                \n                    ./create-proposal.component.css\n                \n                .field{\n    width: 100%;\n}\n.fill-remaining-space{\n    width:35%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{prop}}                                                Title                        This field is Mandatory            Minimum 5 characters needed                                    Proposal                         This field is Mandatory            Maximum 500 characters            Minimum 10 characters                                                    {{team.name}}                                     submit       close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Some Error Occured\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = \"Some Error Occured\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/feed.component.ts\n\n\n    \n        Description\n    \n    \n        This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                proposalWork\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                commentsSetup\n                            \n                            \n                                delProposal\n                            \n                            \n                                likeSetup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                postComment\n                            \n                            \n                                postLike\n                            \n                            \n                                updateApproval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                share\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalWork: ProposalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/feed/feed.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor of the FeedComponent \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        proposalWork\n                                                  \n                                                        \n                                                                        ProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the ProposalService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:61\n                            \n                        \n                \n                    \n                        Input from the current Session \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteProposal\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:58\n                            \n                        \n                \n                    \n                        EventEmitter for the delete button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        share\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:55\n                            \n                        \n                \n                    \n                        EventEmitter for the Share button on the Proposals \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:52\n                            \n                        \n                \n                    \n                        EventEmitter for the Update button on the Proposals \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commentsSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncommentsSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:99\n                \n            \n\n\n            \n                \n                    This method is Resposible for the arrangement of the comments as per a particular manner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndelProposal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:234\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the proposal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            likeSetup\n                        \n                        \n                    \n                \n            \n            \n                \nlikeSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:133\n                \n            \n\n\n            \n                \n                    This method checks total number of like on a post and whether a user with current session has liked it or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:80\n                \n            \n\n\n            \n                \n                    calls three methods in the same component on intialization -\nupdateApproval(),   likeSetup(),     commentsSetup()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(commentId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:221\n                \n            \n\n\n            \n                \n                    This method is responsible for the real-time deletion of the comment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commentId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is the id of the comment which user wants to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:213\n                \n            \n\n\n            \n                \n                    This method emits the proposal which a user want to update and open a update dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is an object of a proposal\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:206\n                \n            \n\n\n            \n                \n                    This method emits the Post to which user want to open a share dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:146\n                \n            \n\n\n            \n                \n                    This method is resposible for posting a comment on a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is proposalId of the proposal to which a user want to post a comment.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:173\n                \n            \n\n\n            \n                \n                    This method is resposible for the feature of liking a Proposal and Unlike feature too.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateApproval\n                        \n                        \n                    \n                \n            \n            \n                \nupdateApproval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/feed.component.ts:89\n                \n            \n\n\n            \n                \n                    This method checks whether user can Update a particular proposal or not.A user can those Proposal \nthat are created by a user not others.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            proposalWork\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/feed/feed.component.ts:74\n                            \n                        \n\n                \n                    \n                        Instance of the ProposalService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { ShareProposalComponent } from './share-proposal/share-proposal.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { Component, OnInit ,Input, Output, EventEmitter, NgModule} from '@angular/core';\nimport { Post } from 'src/app/post';\nimport {ProposalService} from '../proposal.service';\nimport {Comment} from '../comment'\nimport { JsonPipe } from '@angular/common';\n/**\n * This is the child component of the landing-page and resposible for all the Proposals Shown on the landing-Page.\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\n\nexport class FeedComponent implements OnInit {\n  /**@ignore */\n  @Input() post:Post;\n\n  /**@ignore */\n  public new_comment:string;\n\n  /**@ignore */\n  public canUpdate=false;\n\n  /**@ignore */\n  public numberLikes:number;\n\n  /**@ignore */\n  public comments:Comment[]=[];\n\n  /**@ignore */\n  public noComments:boolean=true;\n\n  /**@ignore */\n  public height:number;\n\n  /**@ignore */\n  public commentVisibility=false;\n\n  /**@ignore */\n  public commentsMessage=\"Comments\";\n\n  /**@ignore */\n  commentError:string;\n\n  /**@ignore */\n  postCommentError:string;\n\n  /** EventEmitter for the Update button on the Proposals */\n  @Output() update=new EventEmitter;\n\n  /**EventEmitter for the Share button on the Proposals */\n  @Output() share=new EventEmitter;\n\n  /**EventEmitter for the delete button on the Proposals */\n  @Output() deleteProposal=new EventEmitter;\n\n  /**Input from the current Session */\n  @Input() userId:number;\n\n  /**@ignore */\n  @Input() type:string;\n\n  /**@ignore */\n  public hasLiked=false;\n\n  /**\n   * Constructor of the FeedComponent \n   * @constructor\n   * @param proposalWork Instance of the ProposalService\n   */\n  constructor(public proposalWork:ProposalService) { }\n\n  /** \n   * calls three methods in the same component on intialization -\n   * updateApproval(),   likeSetup(),     commentsSetup()\n  */\n  ngOnInit(): void {\n    this.updateApproval()\n    this.likeSetup()\n    this.commentsSetup()\n    \n  }\n  /**This method checks whether user can Update a particular proposal or not.A user can those Proposal \n   * that are created by a user not others.\n  */\n  updateApproval(){\n    if(this.post.user.id==this.userId){\n      this.canUpdate=true\n    }\n    else{\n      this.canUpdate=false\n    }\n  }\n  /**This method is Resposible for the arrangement of the comments as per a particular manner.\n  */\n  commentsSetup(){\n    this.proposalWork.getComment(this.post.id).subscribe(\n      (data)=>{\n        this.comments=[]\n        this.comments=this.comments.concat(data)\n        this.commentError=\"\"\n        if(data!=null){\n          if(data.length==1){\n            this.commentVisibility=true\n            this.commentsMessage=\"Comments\"\n            this.height=95\n          }\n          else{\n            this.commentsMessage=\"Comments\"\n            this.height=200\n          }\n        }\n        else{\n          this.commentVisibility=true\n          this.commentsMessage=\"No comments on this post yet\"\n          this.noComments=false\n          this.height=95\n        }\n      },\n      (error)=>{\n        if(error.status!=200){\n          alert(\"Some error has occured retrieving the comments please reload\")\n          this.commentError=\"Some error has occured retrieving the comments please reload\"\n        }\n      }\n    )\n  }\n  /**This method checks total number of like on a post and whether a user with current session has liked it or not\n  */\n  likeSetup(){\n    this.numberLikes=this.post.upvotesCount;\n    this.proposalWork.getLike(this.post.id,this.userId).subscribe(\n      (data)=>{\n        this.hasLiked=data,console.log(this.hasLiked)\n      }\n    )\n  }\n\n  /**\n   * This method is resposible for posting a comment on a post\n   * @param {number} id This is proposalId of the proposal to which a user want to post a comment.\n   */\n  postComment(id:number){\n    this.proposalWork.postComment(id,this.new_comment,this.userId).subscribe(\n      (data)=>{\n          this.new_comment=\"\"\n          this.commentsMessage=\"Comments\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsSetup()\n      },(error)=>{\n        if(error.status==200){\n          console.log(\"in error\")\n          this.new_comment=\"\"\n          this.commentVisibility=true\n          this.noComments=true\n          this.commentsMessage=\"Comments\"\n          this.commentsSetup()\n        }\n        if(error.status!=200){\n          alert(\"Some error has occured sending the comment please try again.\")\n        }\n      } \n    );\n    console.log(id+this.userId+this.new_comment)\n  }\n/**\n * This method is resposible for the feature of liking a Proposal and Unlike feature too.\n */\n  postLike(id:number){\n    if(this.hasLiked){\n      this.proposalWork.postDislike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=false\n        this.numberLikes-=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=false\n          this.numberLikes-=1;\n        }\n        else{\n          alert(\"Some error has happened while disliking, please try again\")\n        }\n      })\n    }\n    else{\n      this.proposalWork.postLike(id,this.userId).subscribe((data)=>{\n        this.hasLiked=true\n        this.numberLikes+=1;\n      },(error)=>{\n        if(error.status==200){\n          this.hasLiked=true\n          this.numberLikes+=1;\n        }\n        else{\n          alert(\"Some error has happened while liking, please try again\")\n        }\n      })\n    }\n  }\n  /**\n   * This method emits the Post to which user want to open a share dialog.\n   */\n  openDialogshare(){\n    this.share.emit(this.post)\n  }\n  /**\n   * This method emits the proposal which a user want to update and open a update dialog\n   * @param {object} post this is an object of a proposal\n   */\n  openDialog(post){\n    this.update.emit(post)\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the comment.\n   * @param {number} commentId this is the id of the comment which user wants to delete.\n   */\n  onDelete(commentId){\n    this.proposalWork.deleteComment(commentId).subscribe((data)=>console.log(data),\n      (error)=>{\n        if(error.status==200){\n          this.comments=this.comments.filter(item => item.id != commentId);\n        }\n      }\n    )\n  }\n\n  /**\n   * This method is responsible for the real-time deletion of the proposal.\n   */\n  delProposal()\n  {\n    this.proposalWork.deletePost(this.post.id).subscribe( \n      (data)=>{\n       console.log(data)\n        this.deleteProposal.emit(this.post.id)\n      },\n      (error)=>{\n        if(error.status==406){\n          alert(\"Error deleting proposal\")\n        }\n        else if(error.status==200){\n          console.log(error)\n          this.deleteProposal.emit(this.post.id)\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{post.user.name}}\n            \n            \n                {{post.title}}\n            \n        \n        \n        {{post.description}}\n    \n    \n        \n            favorite\n        \n        \n            share\n        \n        {{this.numberLikes}} people upvoted this\n        \n            \n                create\n            \n            \n                delete\n            \n                \n    \n    \n    \n        \n            Write a comment...\n            \n        \n        Comment\n    \n\n    {{this.commentsMessage}} -->\n    \n        chat_bubble_outline\n        View Comments\n    \n    \n        \n            \n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .text{\n    text-align: justify;\n    margin-top:1%;\n    font-size: large;\n\n}\n.commentText{\n    text-align: justify;\n    margin: 2% auto;\n    line-height: 20px;\n    font-size: medium;\n    border-bottom: lightgray 1px solid;\n    background-color:#e9ebee;\n    border-radius: 10px;\n    padding:5px;\n}\n.comments{\n    overflow-y: auto;\n}\n.userComment{\n    border-right: white 1px solid;\n    font-weight: bold;\n}\n.header{\n    height:50px;\n    /* background-color: rgb(211, 218, 250); */\n}\n.userBlock{\n    border-right: 1px black solid;\n    /* background-color:#3f51b5;\n    color:white; */\n    /* width: 20px; */\n    /* opacity: 70%; */\n    font-size: 20px;\n    padding-top:1%;\n    color:#3F51B5;\n    font-weight: 500;\n\n}\n.post{\n    margin:2em auto;\n}\n.hidden{\n    height:60px;\n    overflow: hidden;\n    cursor: pointer;\n}\n.show{\n    height:auto;\n    overflow: visible;\n}\n.commentBoxLength{\n    width:87%;\n    margin-right: 2%;\n}\n.likeButton{\n    color:rgb(218, 212, 212);\n    /* border:1px solid lightgray; */\n    opacity: 70%;\n}\n.title{\n    font-weight: 450;\n    font-size: 23px;\n    padding-top: 5px;\n    color:rgb(66, 65, 65)\n}\n.buttonContainer{\n    display:inline;\n    margin-left:2%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{post.user.name}}                                        {{post.title}}                                    {{post.description}}                            favorite                            share                {{this.numberLikes}} people upvoted this                                    create                                        delete                                                            Write a comment...                            Comment        {{this.commentsMessage}} -->            chat_bubble_outline        View Comments                                                                    '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeedParams.html":{"url":"classes/FeedParams.html","title":"class - FeedParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeedParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed-params.ts\n        \n\n            \n                Description\n            \n            \n                this is the feed Params class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                teamId\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, endDate: Date, page: string, size: string, userId?, teamId?)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed-params.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamId\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:11\n                            \n                        \n\n                \n                    \n                        endDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed-params.ts:8\n                            \n                        \n\n                \n                    \n                        startDate of the advanced filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            teamId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:23\n                            \n                        \n\n                \n                    \n                        This is the teamId of the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/feed-params.ts:20\n                            \n                        \n\n                \n                    \n                        This is the userId from Current session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FeedParams {\n    /**\n     * @constructor\n     */\n    constructor(\n    /** startDate of the advanced filter*/\n    public startDate:Date,\n\n    /** endDate of the advanced filter*/\n    public endDate:Date,\n\n    /** @ignore */\n    public page:string,\n\n    /** @ignore */\n    public size:string,\n\n    /** This is the userId from Current session */\n    public userId?,\n\n    /**This is the teamId of the user */\n    public teamId?\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/filter/filter.component.ts\n\n\n    \n        Description\n    \n    \n        FilterComponent is the child component of the landing-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                datePlusOne\n                            \n                            \n                                processFilter\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentFunctionFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parentFunctionFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/landing-page/filter/filter.component.ts:51\n                            \n                        \n                \n                    \n                        This is the EventEmitter emits to Landing-page\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            datePlusOne\n                        \n                        \n                    \n                \n            \n            \n                \ndatePlusOne()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:73\n                \n            \n\n\n            \n                \n                    This function is resposible for adding a day to a end Date user selected\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processFilter\n                        \n                        \n                    \n                \n            \n            \n                \nprocessFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:82\n                \n            \n\n\n            \n                \n                    This function is resposible for the Validations applied on the start date and end date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:105\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this function send the data to sendDate method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendData\n                        \n                        \n                    \n                \n            \n            \n                \nsendData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/filter/filter.component.ts:114\n                \n            \n\n\n            \n                \n                    As user changed the seletion on the select post this method emit the information to the landing-page\nand landing-page calls the api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { getLocaleDateFormat } from '@angular/common';\nimport { Component, OnInit,Input,Output,EventEmitter, ɵExtraLocaleDataIndex } from '@angular/core';\nimport { MatStartDate } from '@angular/material/datepicker';\nimport { Post } from 'src/app/post';\n  \n/**\n * FilterComponent is the child component of the landing-page.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\n\nexport class FilterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  @Input()\n  public sDate\n\n  /**\n   * @ignore\n   */\n  public newEdate\n\n  /**\n   * @ignore\n   */\n  public eDate\n\n  /**\n   * @ignore\n   */\n  public data:Date[]\n\n  /**\n   * @ignore\n   */\n  public typePost=\"teamPost\";\n  \n\n \n \n  \n  /**\n   * This is the EventEmitter emits to Landing-page\n   */\n @Output() \n parentFunctionFilter:EventEmitter = new EventEmitter();\n\n /**\n   * @ignore\n   */ \n public message;\n  /**\n   * @ignore\n   */ \n  constructor() { \n  \n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  \n  }\n\n  /**\n   * This function is resposible for adding a day to a end Date user selected\n   */\n  datePlusOne(){\n    console.log(\"date\",this.eDate)\n    this.newEdate = this.eDate;\n    this.newEdate = this.newEdate.setDate(this.newEdate.getDate()+1);\n  }\n\n  /**\n   * This function is resposible for the Validations applied on the start date and end date.\n   */\n  processFilter()\n  { \n    \n    this.data = [this.sDate,this.newEdate];\n    \n    if(this.sDate==null || this.eDate==null)\n    this.message = \"Please select both Start date and End date !!\"\n    else\n    if(this.sDate>=this.eDate)\n    this.message = \"Start Date can not be Greater then End Date\"\n    else\n    {\n     this.sendData(this.data);\n     this.message=\"\"\n    }\n\n\n   \n  }\n\n  /**\n   * As user changed the seletion on the select post this function send the data to sendDate method.\n   */\n  selectionChanged()\n  { \n    \n     this.sendData(this.typePost);\n  }\n  /**\n   * As user changed the seletion on the select post this method emit the information to the landing-page\n   * and landing-page calls the api\n   */\n  sendData(data)\n  {\n         this.parentFunctionFilter.emit(data) \n  }\n\n}\n\n    \n\n    \n        \n\n  \n     Filter Your Feed\n  \n  \n  \n    Select posts\n    \n        \n            Your Post\n        \n        \n            Team Post\n        \n        \n          All Post\n      \n    \n  \n\n\n  \n  \n    Advanced Filter\n  \n      \n  &nbsp;{{message}}\n        \n\n  Select Start Date\n  \n  \n  \n\n\n  \n    Select End Date\n    \n    \n    \n  \n  \n\n\n  Filter Feed\n\n\n  \n              \n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./filter.component.css\n                \n                \n.selectp{\nwidth: 90%;\ntext-align: justify;\npadding-left: 5%;\n\n}\n\n.bton\n{\n    width: 90%;\n    text-align: center;\n   margin-left: 5%;\n    align-self: center;\n}\n\n.textMessage\n{\n    color: crimson;\n    text-align: center;\n}\n\n.tools{\n    width: 100%;\n    margin-right: 5%;\n}\n   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Filter Your Feed          Select posts                        Your Post                            Team Post                          All Post                    Advanced Filter           {{message}}          Select Start Date            Select End Date                  Filter Feed                                '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forget-password/forget-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                styleUrls\n                ./forget-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                forgetPasswordForm\n                            \n                            \n                                isSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOk\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resetLinkService: ResetPasswordService)\n                    \n                \n                        \n                            \n                                Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resetLinkService\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOk\n                        \n                        \n                    \n                \n            \n            \n                \nonOk()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forget-password/forget-password.component.ts:33\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forget-password/forget-password.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ResetPasswordService } from './../service/reset-password.service';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\n\nexport class ForgetPasswordComponent implements OnInit {\nforgetPasswordForm:FormGroup;\n\ndata: string;\nerror: string;\nisSubmit : boolean=true;\n\n  constructor(private resetLinkService: ResetPasswordService) {\n   \n   }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      \n    });\n    \n  }\n/**\n * This method calls the Reset Link Service, which sends a link to the submitted registered Email ID from which the user can reset their password incase forgotten.\n */\n  onSubmit(){\n    var data={\"data1\":{\"mail\":this.forgetPasswordForm.value.email}}\n    console.log(data)\n    this.resetLinkService.resetLink(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.isSubmit = false;\n         this.error=\"Reset link has been send to your email.\"\n        \n       },\n       (error)=>{\n        if(error.status==200){\n          this.error=\"Reset link has been send to your email.\"\n          \n        }\n        else if(error.status==406){\n          this.error=\"Email id doesnot exists. Please try again!\"\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n       }\n     );\n\n  }\n\n  onOk(){\n\n  }\n\n}\n\n    \n\n    \n        Forget Password?\n\n\n    \n\n        \n            Email\n            \n            \n            \n              Please enter a valid email address\n            \n            \n              Email is required\n            \n            {{error}}\n          \n    \n\n    \n      The Reset Link has been sent to registered E-Mail ID.\n    \n\n\n\n  \n     Submit\n  \n\n  \n    Ok\n \n\n\n    \n\n    \n                \n                    ./forget-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Forget Password?                        Email                                                  Please enter a valid email address                                      Email is required                        {{error}}                        The Reset Link has been sent to registered E-Mail ID.           Submit        Ok '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetProposalsService.html":{"url":"injectables/GetProposalsService.html","title":"injectable - GetProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/get-proposals.service.ts\n        \n\n            \n                Description\n            \n            \n                handles all type of feed api's\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allNextUrl\n                            \n                            \n                                allUrl\n                            \n                            \n                                teamNextUrl\n                            \n                            \n                                teamUrl\n                            \n                            \n                                yourNextUrl\n                            \n                            \n                                yourUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllNextPost\n                            \n                            \n                                getAllPosts\n                            \n                            \n                                getTeamNextPost\n                            \n                            \n                                getTeamPosts\n                            \n                            \n                                getYourNextPost\n                            \n                            \n                                getYourPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllNextPost(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:46\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts includes pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPosts(data: FeedParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:37\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get all posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamNextPost(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:67\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeamPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeamPosts(data: FeedParams, teamId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:55\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teamId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourNextPost\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourNextPost(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:89\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get team type posts include pagination\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYourPosts\n                        \n                        \n                    \n                \n            \n            \n                \ngetYourPosts(data: FeedParams, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/get-proposals.service.ts:77\n                \n            \n\n\n            \n                \n                    This function makes a post api call to get created type posts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FeedParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of posts\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:19\n                            \n                        \n\n                \n                    \n                        get all posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:17\n                            \n                        \n\n                \n                    \n                        get all posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:23\n                            \n                        \n\n                \n                    \n                        get team's posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/team\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:21\n                            \n                        \n\n                \n                    \n                        get team's posts url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourNextUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:27\n                            \n                        \n\n                \n                    \n                        get created type posts url include pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yourUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/feed/create\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/get-proposals.service.ts:25\n                            \n                        \n\n                \n                    \n                        get created type posts url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Feed } from './feed';\nimport {FeedParams} from './feed-params'\n/**\n * handles all type of feed api's\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Proposal to get different types of posts\n*/\nexport class GetProposalsService {\n  /**get all posts url*/\n  allUrl=\"http://localhost:8080/feed/all\"\n  /**get all posts url include pagination*/\n  allNextUrl=\"http://localhost:8080/feed/all\"\n  /**get team's posts url*/\n  teamUrl=\"http://localhost:8080/feed/team\"\n  /**get team's posts url include pagination*/\n  teamNextUrl=\"http://localhost:8080/feed/team\"\n  /**get created type posts url*/\n  yourUrl=\"http://localhost:8080/feed/create\"\n  /**get created type posts url include pagination*/\n  yourNextUrl=\"http://localhost:8080/feed/create\"\n  \n  constructor(\n    /**@ignore*/\n    private _http:HttpClient) { }\n  /**\n   * This function makes a post api call to get all posts\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllPosts(data:FeedParams): Observable{\n    console.log(data)\n    return this._http.post(this.allUrl,data,{responseType:'json'});\n  }\n  /**\n   * This function makes a post api call to get all posts includes pagination\n   * @param {FeedParams}\n   * @returns array of posts\n  */\n  getAllNextPost(data:FeedParams):Observable{\n    return this._http.post(this.allNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get team type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamPosts(data:FeedParams,teamId): Observable{\n    data.teamId=teamId\n    console.log(data)\n    return this._http.post(this.teamUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getTeamNextPost(data:FeedParams,teamId):Observable{\n    data.teamId=teamId\n    return this._http.post(this.teamNextUrl,data);\n  }\n  /**\n   * This function makes a post api call to get created type posts\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourPosts(data:FeedParams,userId): Observable{\n    data.userId=userId\n    console.log(data)\n    return this._http.post(this.yourUrl,data);\n   \n  }\n  /**\n   * This function makes a post api call to get team type posts include pagination\n   * @param {FeedParams}\n   * @param {number}\n   * @returns array of posts\n  */\n  getYourNextPost(data:FeedParams,userId):Observable{\n    data.userId=userId\n    return this._http.post(this.yourNextUrl,data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                islogin\n                            \n                            \n                                    Public\n                                isregister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToLogIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            islogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isregister\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public islogin:boolean;\n  public isregister:boolean;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.paramMap.get('id'))\n    {\n      this.islogin=(this.activatedRoute.snapshot.paramMap.get('id')==='true')\n    }\n    \n  }\n\n  goToLogIn(){\n    this.islogin=true\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n      Login\n      Register\n    \n    \n  \n    \n      \n        \n          Process Improvement Proposal System\n          \n        \n      \n      \n      \n        \n        \n        \n        -->\n        -->\n        \n          \n        \n    \n   \n\n\n\n\n\nContact\nResults\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacing {\n    flex: 1 1 auto;\n}\n\na {\n    color: aqua;\n    margin: 0 auto; \n    width: 100px; \n    clear: both; \n    display: block;\n}\n\nbody {\n    font-family: Arial;\n    color: white;\n  }\n  \n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    overflow-x: hidden;\n    padding-top: 0px;\n    margin: 0px;\n  }\n  \n  .left {\n    left: 0;\n    margin: 0px;\n  \n  }\n  \n  .right {\n    right: 0;\n    background-color: whitesmoke;\n    margin: 0px;\n  }\n  \n  .centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n  \n  .right img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  .left img{\n    height: 100%;\n    width: 100%;\n    margin: 0px;\n  }\n\n  h1{\n    font-size: 30px;\n  }\n\n  button{\n    background-color: lightskyblue;\n    color : black;\n    margin-right: 10px;\n  }\n\n  /* .description{\n   \n   \n    font-size: 50px;\n    line-height: 60px;\n  background: -webkit-linear-gradient(#f3ec78, #af4261);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\t\n  } */\n\n  .description{\n    /* background-image:linear-gradient(to right, gray, rgb(238, 236, 236)); */\n    font-family: 'calibri';\n    font-size: 5vw;\n    line-height: 60px;\n    font-weight: bold;\n    width: 70%;\n    -webkit-text-stroke: 1px black;\n  \n    background: -webkit-linear-gradient(50deg,#d4c15f , #936da5,#58482e) ;\n    -webkit-background-clip: text;\n    -ms-background-clip: text;\n    -moz-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -ms-text-fill-color: transparent;\n    -moz-text-fill-color: transparent;\n    \n    /* animation-duration: 3s;\n    animation-timing-function: linear;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: none;\n    animation-play-state: running;\n    animation-name: shine;\n    -webkit-tap-highlight-color: rgba(0,0,0,0); */\n    \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Login      Register                                      Process Improvement Proposal System                                                                    -->        -->                                 ContactResults'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpInterceptorService.html":{"url":"interceptors/HttpInterceptorService.html","title":"interceptor - HttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: UserLoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http-interceptor.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http-interceptor.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserLoginService } from './user-login.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n    constructor(private authenticationService: UserLoginService) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n            const authReq = req.clone({\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json',\n                    'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n                })\n            });\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n    \n        Description\n    \n    \n        Landing page parent to feed, and filter components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _teams\n                            \n                            \n                                    Public\n                                autho\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                feed\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProposal\n                            \n                            \n                                destroySession\n                            \n                            \n                                errorHandling\n                            \n                            \n                                getAll\n                            \n                            \n                                getTeam\n                            \n                            \n                                getTeams\n                            \n                            \n                                getYour\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                onScroll\n                            \n                            \n                                openDialog\n                            \n                            \n                                openDialogshare\n                            \n                            \n                                resize\n                            \n                            \n                                selectApi\n                            \n                            \n                                showMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: SocialAuthService, autho: AuthorizationService, router: Router, post: PostProposalService, dialog: MatDialog, getProposals: GetProposalsService, teams: TeamsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autho\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        post\n                                                  \n                                                        \n                                                                        PostProposalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getProposals\n                                                  \n                                                        \n                                                                        GetProposalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                        TeamsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:292\n                \n            \n\n\n            \n                \n                    window resize evenr handled\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProposal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProposal(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:333\n                \n            \n\n\n            \n                \n                    This method deletes a proposal in real time by removing it from the array stored on frontend and also sending an api call to backend at the same time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            deleteProposal(1)\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroySession\n                        \n                        \n                    \n                \n            \n            \n                \ndestroySession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:317\n                \n            \n\n\n            \n                \n                    This method destroys a session when called\n\n\n                    \n                        Example :\n                        \n                            destroySession()\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns to Home page of the application after destroying session\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorHandling\n                        \n                        \n                    \n                \n            \n            \n                \nerrorHandling(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:301\n                \n            \n\n\n            \n                \n                    This method handles the error that is recieved during scrolling api calls\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:99\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:111\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:88\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to Team posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getYour\n                        \n                        \n                    \n                \n            \n            \n                \ngetYour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:123\n                \n            \n\n\n            \n                \n                    This method calls a service method that is an api call to all created posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:78\n                \n            \n\n\n            \n                \n                    gets the session data and calls functions to setup the initial view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilter\n                        \n                        \n                    \n                \n            \n            \n                \nonFilter(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:154\n                \n            \n\n\n            \n                \n                    This method is called when filter components sends a data to filter feed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls select api function to select which feed api to call or changes the date to filter api feed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:175\n                \n            \n\n\n            \n                \n                    This method runs when a scroll event is emitted\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        returns new 3 proposals every time scroll event is emitted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(post?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:223\n                \n            \n\n\n            \n                \n                    This method opens a Create proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to store proposal and refreshs the page\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialogshare\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialogshare(post)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:199\n                \n            \n\n\n            \n                \n                    This method opens a Share proposal dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        After closing calls an api to update teams of a proposal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:271\n                \n            \n\n\n            \n                \n                    This method is called by OnResize() and sets values of different variables that controls the padding and width\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectApi\n                        \n                        \n                    \n                \n            \n            \n                \nselectApi(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:137\n                \n            \n\n\n            \n                \n                    This method filters the api calls on the basis of which type is selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Calls different service methods to call different post api's\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMenu\n                        \n                        \n                    \n                \n            \n            \n                \nshowMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:259\n                \n            \n\n\n            \n                \n                    This method checks the responsive filter menu is open or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Teams[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:35\n                            \n                        \n\n                \n                    \n                        teams array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autho\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        session generation and deletion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:37\n                            \n                        \n\n                \n                    \n                        feed array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PostProposalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:69\n                            \n                        \n\n                \n                    \n                        posts proposal and update proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"teamPost\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:45\n                            \n                        \n\n                \n                    \n                        type of feed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/landing-page.component.ts:43\n                            \n                        \n\n                \n                    \n                        User session \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FilterComponent } from './filter/filter.component';\nimport { FeedComponent } from './feed/feed.component';\n\nimport { SocialAuthService } from 'angularx-social-login';\nimport { Component, OnInit ,HostListener, NgModule} from '@angular/core';\nimport { GetProposalsService } from '../get-proposals.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { CreateProposalComponent } from './create-proposal/create-proposal.component';\nimport { ShareProposalComponent } from './feed/share-proposal/share-proposal.component';\nimport {PostProposalService} from 'src/app/post-proposal.service'\nimport { FeedParams } from '../feed-params';\nimport {TeamsService} from '../teams.service'\nimport {Teams} from '../teams'\nimport {Router} from '@angular/router'\nimport {User} from '../user';\nimport {AuthorizationService} from '../authorization.service';\n/**Landing page parent to feed, and filter components*/\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css'],\n \n})\n\nexport class LandingPageComponent implements OnInit {\n/**@ignore */\n  message=null;\n  /**@ignore */\n  menuVisibility=true;\n  /**@ignore */\n  menuButton=false;\n  /**@ignore */\n  innerWidth;\n  /**teams array */\n  _teams:Teams[];\n  /**feed array */\n  feed=[];\n  /**@ignore */\n  newFeed=[];\n  /**@ignore */\n  proposalError:string;\n  /**User session */\n  user:User;\n  /**type of feed */\n  type=\"teamPost\";\n  /**@ignore */\n  page=0;\n  /**@ignore */\n  width:number;\n  /**@ignore */\n  padding:number;\n  /**@ignore */\n  endMessage=\"\";\n  /**@ignore */\n  morePost=true;\n  /**@ignore */\n  startDate=new Date()\n  /**@ignore */\n  data=new FeedParams(new Date(this.startDate.setDate(this.startDate.getDate()-30)),new Date(),\"0\",\"3\")\n  \n  constructor(\n    /**@ignore */\n    private authService: SocialAuthService,\n    /**session generation and deletion*/\n    public autho:AuthorizationService,\n    /**@ignore */\n    public router:Router,\n    /**posts proposal and update proposal*/\n    public post:PostProposalService,\n    /**@ignore */\n    public dialog:MatDialog,\n    /**gets all the posts from the backend*/\n    private getProposals:GetProposalsService,\n    /**teams objects api call*/\n    private teams:TeamsService) { }\n    \n/**gets the session data and calls functions to setup the initial view*/\n  ngOnInit(): void {\n    this.user=this.autho.authorization()\n    this.selectApi(this.type)\n    this.getTeams()\n    this.resize()\n  }\n\n/**\n  * This method calls a service method that is an api call to Team posts\n  */ \n  getTeams(){\n    this.teams.getTeams().subscribe(\n      (data)=>{\n        this._teams=data\n      }\n    );\n  }\n\n  /**\n  * This method calls a service method that is an api call to all posts\n  */ \n  getAll(){\n    this.getProposals.getAllPosts(this.data).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n/**\n * This method calls a service method that is an api call to all created posts\n */ \n  getTeam(){\n    this.getProposals.getTeamPosts(this.data,this.user.team.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method calls a service method that is an api call to all created posts\n */ \n  getYour(){\n    this.getProposals.getYourPosts(this.data,this.user.id).subscribe((data)=>this.feed=data,(error)=>{\n      this.errorHandling(error)\n      if(error.status!=200){\n        alert(\"There was some error at server please try later\")\n      }\n    });\n  }\n\n  /**\n * This method filters the api calls on the basis of which type is selected\n * @param {string}\n * @returns Calls different service methods to call different post api's\n */ \n  selectApi(data){\n    if(data===\"allPost\"){\n      this.getAll()\n    }\n    else if(data===\"teamPost\"){\n      this.getTeam()\n    }\n    else if(data===\"yourPost\"){\n      this.getYour()\n    }\n  }\n\n  /**\n * This method is called when filter components sends a data to filter feed\n * @param {string?,array?}\n * @returns Calls select api function to select which feed api to call or changes the date to filter api feed\n */ \n  onFilter(data){\n    this.feed=[]\n    if(Array.isArray(data)){\n      this.data.startDate=new Date(data[0])\n      this.data.endDate=new Date(data[1])\n    }\n    else{\n      this.type=data;\n      console.log(this.type)\n    }\n    this.page=0\n    this.data.page=this.page.toString()\n    this.selectApi(this.type)\n    this.morePost=true\n    this.endMessage=\"\"\n  }\n\n  /**\n * This method runs when a scroll event is emitted\n * @returns returns new 3 proposals every time scroll event is emitted\n */ \n  onScroll(){\n    if((this.newFeed.length>0 || this.page==0)&&this.morePost){\n      this.page++\n      this.data.page=this.page.toString()\n      console.log(this.data)\n      if(this.type.includes(\"allPost\")){\n        this.getProposals.getAllNextPost(this.data).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"teamPost\")){\n        this.getProposals.getTeamNextPost(this.data,this.user.team.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }\n      else if(this.type.includes(\"yourPost\")){\n        this.getProposals.getYourNextPost(this.data,this.user.id).subscribe((data)=>this.newFeed=data,(error)=>this.errorHandling(error))\n      }      \n      this.feed=this.feed.concat(this.newFeed)\n      console.log(this.newFeed)\n      this.newFeed=[]\n    }\n  }\n\n/**\n * This method opens a Share proposal dialog\n * @returns After closing calls an api to update teams of a proposal\n */ \n  openDialogshare(post){\n    let dialogRef = this.dialog.open(ShareProposalComponent, {\n      height: '250px',\n      width: '400px',\n      data:{prop:post.teams,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result =>{\n      if(result){\n        this.post.shareProposal(result,post.id).subscribe(\n          (data)=>console.log(data),\n          (error)=>{\n            if(error.status==200){\n              window.location.reload()\n            }\n          })\n      }\n    })\n\n  }\n\n/**\n * This method opens a Create proposal dialog\n * @returns After closing calls an api to store proposal and refreshs the page\n */ \n  openDialog(post?){\n    let dialogRef = this.dialog.open(CreateProposalComponent, {\n      height: '400px',\n      width: '600px',\n      data:{name:this.user.id,post:post,teams:this._teams}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.post.postProposal(result,this.user.id).subscribe(\n          (data)=>{\n            this.selectApi(this.type)\n            this.page=0\n            this.data.page=this.page.toString()\n            window.location.reload()\n            this.proposalError=\"\"\n          },\n          (error)=>{\n            if(error.status==200){\n              this.selectApi(this.type)\n              this.page=0\n              this.data.page=this.page.toString()\n              window.location.reload()\n              this.proposalError=\"\"\n            }\n            else{\n              alert(\"Some error has occured! please try again later.\")\n            }\n          }\n        ) \n      }\n    });\n  }\n  \n/**\n * This method checks the responsive filter menu is open or not\n */\n  showMenu(){\n    if(this.menuVisibility){\n      this.menuVisibility=false\n    }\n    else{\n      this.menuVisibility=true\n    }\n  }\n  \n  /**\n * This method is called by OnResize() and sets values of different variables that controls the padding and width\n */\n  resize(){\n    if(this.innerWidth item.id != id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            menu\n        \n        \n        \n        \n            person\n        \n        \n            Hello, {{this.user.name}}\n            Email : {{this.user.email}}\n            Team  : {{this.user.team.name}}\n            Logout\n        \n    \n    \n        \n        \n            \n                \n            \n            \n                \n                    \n                         how_to_vote&nbsp;\n                        Propose an improvement...\n                    \n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                    {{this.endMessage}}\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .contain{\n    overflow-x: hidden;\n    width: 100%;\n    ;\n}\n.endMessage{\n    font-size: 15px;\n    text-align: center;\n    color: black;\n}\n.header{\n    height:60px;\n    margin-bottom: 1em;\n    position: fixed;\n    z-index: 1000;\n}\n.menu{\n    opacity:20%;\n    width:70px;\n}\n.search-results {\n    height: 100%;\n}\n.space{\n    flex:1 1 auto;\n}\n.non-scroll{\n    overflow-y: hidden;\n    height: 500px;\n    display:none;\n    position:fixed;\n    z-index: 1000;\n}\n\n\n.filter{\n    background-color: white; \n    position:fixed;\n    width:24%;\n    z-index: 300;\n    height: 100%;\n}\n.scrollable{\n    widows: 50%;\n    height:500px;\n}\n.feed{\n    margin-right: 2%;\n    background-color: white;\n    z-index: 200;\n}\n.postButton{\n    width:100%;\n    height:55px;\n    margin-bottom:1%;\n    font-weight: 400;\n    font-size: 20px;\n    border-radius: 50px;\n    padding-left:5%;\n    text-align: left;\n    color:#8b8a8a;\n    background-color: rgb(236, 236, 236);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                                            person                            Hello, {{this.user.name}}            Email : {{this.user.email}}            Team  : {{this.user.team.name}}            Logout                                                                                                                                                 how_to_vote                         Propose an improvement...                                                                                                                                                                                                            {{this.endMessage}}                                        '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                invalidLogin\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                matcher\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                socialData\n                            \n                            \n                                successMessage\n                            \n                            \n                                uData\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                handleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transferDataService: TransferDataService, socialMediaAuth: SocialMediaAuthService, dialog: MatDialog, loginService: UserLoginService, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialMediaAuth\n                                                  \n                                                        \n                                                                        SocialMediaAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserLoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            googleSignIn\n                        \n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n                    You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:105\n                \n            \n\n\n            \n                \n                    This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:136\n                \n            \n\n\n            \n                \n                    This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:81\n                \n            \n\n\n            \n                \n                    This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Invalid Credentials\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserLoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socialData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SocialUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n    \n        \n\n  Welcome! \n\t\n\t    \n\n            \n                Email\n                \n               \n                \n                  Please enter a valid email address\n                \n                \n                  Email is required\n                \n              \n        \n    \n        \n            \n                Password\n                \n               \n                \n                  Please enter a valid email address\n                 -->\n                \n                  Password is required\n                \n                \n              \n              \n               -->\n                \n        \n        \n        Log In\n        \n        \n        \n        {{errorMessage}}\n        \n          Reset Password?\n       \n        \n  \n  \nOr\n\n\n\n\n  \n    \n    Sign In With Google\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                p {\n    font-family: Lato;\n  }\n\n.container {\n  padding: 10px;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-size: 20px;\n    width: 75%;\n    -webkit-transform: translate(-50%, -50%);\n    background: whitesmoke;\n    border-radius: 10px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome! \t\t                                Email                                                                 Please enter a valid email address                                                  Email is required                                                                              Password                                                                 Please enter a valid email address                 -->                                  Password is required                                                                           -->                                        Log In                                {{errorMessage}}                  Reset Password?                   Or          Sign In With Google      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TransferDataService } from './../service/transfer-data.service';\nimport { SocialMediaAuthService } from './../service/social-media-auth.service';\nimport { ForgetPasswordComponent } from './../forget-password/forget-password.component';\nimport { Component, OnInit ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { UserLoginService } from '../service/user-login.service';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\nexport interface DialogData {\n  email: string;\n  \n}\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  check:boolean=false\n  email:string;\n  loginForm: FormGroup;\n  invalidLogin = false\n  loginSuccess=false;\n  successMessage: string;\n  errorMessage = \"Invalid Credentials\"\n  userData;\n  socialData;\n  uData\n  private user: SocialUser;\n  private loggedIn: boolean;\n  public res\n\n  constructor(private router: Router,\n    private transferDataService:TransferDataService,\n   private socialMediaAuth:SocialMediaAuthService,\n    public dialog: MatDialog,\n    public loginService:UserLoginService,\n    private authService: SocialAuthService,\n) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  matcher = new MyErrorStateMatcher()\n  ngOnInit(): void {\n    \n  }\n  /**\n * You are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc. along with the auth_token. You can communicate the auth_token to your server to authenticate the user in server and make API calls from server.\n */\n  googleSignIn(){\n      this.authService.authState.subscribe((user) => {\n        if(user!=null)\n        {this.user = user;\n        this.loggedIn = (user != null);\n        this.socialMedia()\n        }});\n        if(!this.loggedIn){\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)}\n  }\n\n\n  /**\n * This methods calls the Social Media Authentication service to log the user into a session to acces the Proposal Improvement System Application. The credentials are checked in the Database to either Sign Up or Sign In the user.\n */\n  socialMedia(){\n    this.socialData={\"name\":this.user[\"name\"],\"email\":this.user[\"email\"]}\n      console.log(\"after2____\",this.user)\n    this.socialMediaAuth.socialMedia(this.socialData).subscribe(\n      (data1:any) => {\n        this.res=data1\n      console.log(\"Response----\",this.res);\n     this.invalidLogin = false;\n          this.loginSuccess = true;\n          console.log(\"data\", data1)\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n    }\n    ,\n    (error)=>{\n      console.log(\"error------\",error['error']);\n      this.transferDataService.emitData(error['error'])\n      this.router.navigate(['/team']);\n    }\n  );\n  }\n    /**\n * This method calls the Log In Service which checks the Submitted credentials to the database to Sign the user into the Application.\n */\n  handleLogin() {\n    if(this.loginForm.valid) {\n         this.loginService.doLogin(this.loginForm.get('email').value,this.loginForm.get('password').value).subscribe(\n           (result)=> {\n          this.userData=sessionStorage.getItem('authenticatedUser')\n          this.invalidLogin = false;\n          this.loginSuccess = true;\n          this.successMessage = 'Login Successful.';\n          this.router.navigate(['/welcome']);\n        }, (error) => {\n          if(error.status==200){\n              this.userData=sessionStorage.getItem('authenticatedUser')\n              this.invalidLogin = false;\n              this.loginSuccess = true;\n              this.successMessage = 'Login Successful.';\n              this.router.navigate(['/welcome']);\n          }\n          else if(error.status!=200){\n            this.invalidLogin = true;\n            this.loginSuccess = false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n\n    }\n  }\n/**\n * This method opens the Reset Password component as Dialog Box allowing the user to Reset their Password.\n */\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ForgetPasswordComponent, {\n      width: '500px',\n     \n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordSpecsComponent.html":{"url":"components/PasswordSpecsComponent.html","title":"component - PasswordSpecsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordSpecsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-specs/password-specs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-specs\n            \n\n            \n                styleUrls\n                ./password-specs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./password-specs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/password-specs/password-specs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/password-specs/password-specs.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-specs',\n  templateUrl: './password-specs.component.html',\n  styleUrls: ['./password-specs.component.css']\n})\nexport class PasswordSpecsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Password Specifications\n  \n      Password should contain the following:\n      \n    At least a uppercase letter\n     At least a lower case letter\n     At least a number\n\n     At least a special character - $@$!%*?&\n     Minimum eight characters in length\n\n\n\n  Cancel\n\n    \n\n    \n                \n                    ./password-specs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Password Specifications        Password should contain the following:          At least a uppercase letter     At least a lower case letter     At least a number     At least a special character - $@$!%*?&     Minimum eight characters in length  Cancel'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordSpecsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n            \n                Description\n            \n            \n                The object type of a post that is created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                upvotesCount\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, id: number, teams, title: string, upvotesCount: number, user: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upvotesCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:7\n                            \n                        \n\n                \n                    \n                        define description of a post (string)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:9\n                            \n                        \n\n                \n                    \n                        define id of the post (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/post.ts:11\n                            \n                        \n\n                \n                    \n                        define teams array that its shared to \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:13\n                            \n                        \n\n                \n                    \n                        define title of the post (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvotesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:15\n                            \n                        \n\n                \n                    \n                        define number of upvotes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:17\n                            \n                        \n\n                \n                    \n                        define the user data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    constructor(  \n        /**define description of a post (string)*/\n        public description: string,\n        /**define id of the post (unique) */\n        public id: number,\n        /**define teams array that its shared to */\n        public teams:[],\n        /**define title of the post (string) */\n        public title: string,\n        /**define number of upvotes */\n        public upvotesCount: number,\n        /**define the user data */\n        public user: {\n            /**define id of the user (unique) */\n            id: number,\n            /**define name of the user */\n            name: string,\n            /**define email of the user */\n            email: string,\n            /**define team the user is in */\n            teams:{\n                /**define id of the team (unique) */\n                id:number,\n                /**define name of the team (string) */\n                name:string\n            }\n        } \n    )\n    {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProposalService.html":{"url":"injectables/PostProposalService.html","title":"injectable - PostProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post-proposal.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUrl\n                            \n                            \n                                    Private\n                                shareUrl\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postProposal\n                            \n                            \n                                shareProposal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/post-proposal.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postProposal\n                        \n                        \n                    \n                \n            \n            \n                \npostProposal(data, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:38\n                \n            \n\n\n            \n                \n                    calls a post api to create proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable is returned of type void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shareProposal\n                        \n                        \n                    \n                \n            \n            \n                \nshareProposal(data, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post-proposal.service.ts:28\n                \n            \n\n\n            \n                \n                    share proposal calls a post api to share proposal api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable is returned \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        a url to create proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shareUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/share\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:18\n                            \n                        \n\n                \n                    \n                        url to share proposal api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post-proposal.service.ts:16\n                            \n                        \n\n                \n                    \n                        url to update proposal api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Proposal} from './proposal'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostProposalService {\n  /**@ignore */\n  public sentTeams:{}[]\n  /**\n   * a url to create proposal api\n  */\n  private createUrl=\"http://localhost:8080/proposal/add\";\n  /**url to update proposal api*/\n  private updateUrl=\"http://localhost:8080/proposal/update\";\n  /**url to share proposal api*/\n  private shareUrl=\"http://localhost:8080/proposal/share\";\n  constructor(\n    /**@ignore */\n    private http:HttpClient) { }\n  /**\n   * share proposal calls a post api to share proposal api\n   * @param {objects of teams}\n   * @param {number}\n   * @returns an observable is returned \n  */\n  shareProposal(data,id):Observable{\n    data.id=id\n    return this.http.post(this.shareUrl,data)\n  }\n  /**\n   * calls a post api to create proposal api\n   * @param {objects of post}\n   * @param {number}\n   * @returns an observable is returned of type void\n  */\n  postProposal(data,userId){\n    data.userId=userId\n    console.log(data.key)\n    if(!data.key){\n      data.key=\"null\"\n      data.userId=userId\n      return this.http.post(this.createUrl,data)\n    }\n    else{\n      data.key=data.key.toString()\n      console.log(\"Updated\")\n      console.log(data)\n      return this.http.post(this.updateUrl,data)\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Proposal.html":{"url":"classes/Proposal.html","title":"class - Proposal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Proposal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/proposal.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                teams\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, title: string, description: string, teams: literal type[], id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/proposal.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/proposal.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Proposal {\n    constructor(\n        public userId:string,\n        public title:string,\n        public description:string,\n        public teams:{}[],\n        public id?:number\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalService.html":{"url":"injectables/ProposalService.html","title":"injectable - ProposalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProposalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/proposal.service.ts\n        \n\n            \n                Description\n            \n            \n                This is Proposal Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCommentUrl\n                            \n                            \n                                deletePostUrl\n                            \n                            \n                                getCommentUrl\n                            \n                            \n                                getLikeUrl\n                            \n                            \n                                postCommentUrl\n                            \n                            \n                                postDislikeUrl\n                            \n                            \n                                postLikeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                deletePost\n                            \n                            \n                                getComment\n                            \n                            \n                                getLike\n                            \n                            \n                                postComment\n                            \n                            \n                                postDislike\n                            \n                            \n                                postLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the instance of object HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:89\n                \n            \n\n\n            \n                \n                    This is the method for deleting a comment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePost\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePost(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:98\n                \n            \n\n\n            \n                \n                    This is the method for deleting a proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComment\n                        \n                        \n                    \n                \n            \n            \n                \ngetComment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:81\n                \n            \n\n\n            \n                \n                    This is the method for getting all comments\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLike\n                        \n                        \n                    \n                \n            \n            \n                \ngetLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:73\n                \n            \n\n\n            \n                \n                    This is the method for checking whether a user liked a post or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postComment\n                        \n                        \n                    \n                \n            \n            \n                \npostComment(id: number, new_comment: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:45\n                \n            \n\n\n            \n                \n                    This is the method for posting a comment to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    new_comment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the comment user wants to post.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postDislike\n                        \n                        \n                    \n                \n            \n            \n                \npostDislike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:63\n                \n            \n\n\n            \n                \n                    This is the method for posting a dislike to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLike\n                        \n                        \n                    \n                \n            \n            \n                \npostLike(id: number, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/proposal.service.ts:54\n                \n            \n\n\n            \n                \n                    This is the method for posting a like to a Proposal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the proposal id.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the userId from current session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Object of Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:29\n                            \n                        \n\n                \n                    \n                        Url for deleting comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/proposal/delete\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:32\n                            \n                        \n\n                \n                    \n                        Url for deleting a proposal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:17\n                            \n                        \n\n                \n                    \n                        Url for getting all comments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/hasUpvoted\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:26\n                            \n                        \n\n                \n                    \n                        Url for checking user has upvoted or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postCommentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/comment/add\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:14\n                            \n                        \n\n                \n                    \n                        Url for adding Comment \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postDislikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/dislike\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:23\n                            \n                        \n\n                \n                    \n                        Url for Posting disLike\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLikeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/upvotes/like\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/proposal.service.ts:20\n                            \n                        \n\n                \n                    \n                        Url for Posting Like\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Comment} from './comment'\n/**\n * This is Proposal Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n\n  /**Url for adding Comment */\n  postCommentUrl=\"http://localhost:8080/comment/add\"\n\n  /**Url for getting all comments*/\n  getCommentUrl=\"http://localhost:8080/comment/all\"\n\n  /**Url for Posting Like*/\n  postLikeUrl=\"http://localhost:8080/upvotes/like\"\n\n  /**Url for Posting disLike*/\n  postDislikeUrl=\"http://localhost:8080/upvotes/dislike\"\n\n  /**Url for checking user has upvoted or not*/\n  getLikeUrl=\"http://localhost:8080/upvotes/hasUpvoted\"\n\n  /**Url for deleting comment*/\n  deleteCommentUrl =\"http://localhost:8080/comment/delete\"\n\n  /**Url for deleting a proposal*/\n  deletePostUrl=\"http://localhost:8080/proposal/delete\"\n\n  /**@constructor\n   * @param http This is the instance of object HttpClient\n  */\n  constructor(private http:HttpClient) { }\n\n  /**This is the method for posting a comment to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {string} new_comment This is the comment user wants to post.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postComment(id:number,new_comment:string,userId:number):Observable{\n    return this.http.post(this.postCommentUrl,{'id':id,'text':new_comment,'userId':userId})\n  }\n\n  /**This is the method for posting a like to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postLike(id:number,userId:number):Observable{\n    return this.http.post(this.postLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for posting a dislike to a Proposal\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  postDislike(id:number,userId:number):Observable{\n    console.log({'id':id,'userId':userId})\n    return this.http.post(this.postDislikeUrl,{\"userId\":userId,\"id\":id})\n  }\n\n  /**This is the method for checking whether a user liked a post or not.\n   * @param {number} id This is the proposal id.\n   * @param {number} userId This is the userId from current session.\n   * @returns Object of Observable\n  */\n  getLike(id:number,userId:number):Observable{\n    return this.http.post(this.getLikeUrl,{'id':id,'userId':userId})\n  }\n\n  /**This is the method for getting all comments\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  getComment(id:number):Observable{\n    return this.http.post(this.getCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a comment\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deleteComment(id:number):Observable\n  {\n    return this.http.post(this.deleteCommentUrl,{'id':id})\n  }\n\n  /**This is the method for deleting a proposal\n   * @param {number} id This is the proposal id.\n   * @returns Object of Observable\n  */\n  deletePost(id:number):Observable\n  {\n    return this.http.post(this.deletePostUrl,{'id':id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                filteredTeams\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                getTeams\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialog: MatDialog, userService: UserRegisterService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailError\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:101\n                \n            \n\n\n            \n                \n                    returns error message based on email field validations.\n\n\n                    \n                        Returns :     \"Please enter a value\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:66\n                \n            \n\n\n            \n                \n                    Creates a registration form with creatain validation checks.\nInitializes a array of existing teams in the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:43\n                \n            \n\n\n            \n                \n                    This method opens dialog box displaying required specifications for the password field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:53\n                \n            \n\n\n            \n                \n                    Opens dialog box displaying success or error message after submission of registration form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTeams\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         teamList[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { teamList } from './../teamList';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmPasswordValidator} from '../confirmPassword.Validator';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  message: any;\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n  selectedTeam: string='';\n  teams:teamList[]\n  hide=true\n  hide1=true\n  \n  public filteredTeams;\n\n \n  constructor(\n    \n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n  ) { }\n\n/**\n * This method opens dialog box displaying required specifications for the password field.\n */\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n\n/**\n * Opens dialog box displaying success or error message after submission of registration form.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n/**\n * Creates a registration form with creatain validation checks.\n * \n * Initializes a array of existing teams in the database.\n */\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userName: ['',[ Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      email: ['', [Validators.required,  Validators.email,, Validators.minLength(2), Validators.maxLength(30), Validators.pattern('[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{1,63}$')]],\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      password: ['', [Validators.required, , Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPass: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPass\")\n  });\n\n  this.getTeams();\n  }\n\n\n  getTeams(){\n    this.userService.getTeam().subscribe(\n      (data)=> {this.teams=data\n        this.filteredTeams=this.teams.slice();\n      },\n      (error)=>{\n       if(error.status==404){\n        this.filteredTeams=this.teams.slice();\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      }); \n  }\n  \n  /**\n   * returns error message based on email field validations.\n   */\n  getEmailError() {\n    if (this.registerForm.controls.email.hasError('required')) {\n      return 'Please enter a value';\n    }\n\n    if(this.registerForm.controls.email.hasError('email') || this.registerForm.controls.email.hasError('pattern') ){\n      return 'Please enter a valid email';\n    }\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    console.log(this.registerForm.value.team);\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    var data={\"data1\":\n      {\"team\":{\n          \"name\":this.registerForm.value.team}\n      ,\"user\":{\n        \"name\": this.registerForm.value.userName,\n        \"email\": this.registerForm.value.email,\n        \"password\" :this.registerForm.value.password}\n      }\n\n    }\n\n    this.userService.doRegister(data).subscribe(\n       (data1) => {\n          this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n        },\n        (error)=>{\n          if(error.status==200){\n            console.log(error.status)\n            this.message=\"You have been signed up! Now please login again to continue.\"\n            this.responseDialog()\n            this.loading=false;\n            this.router.navigate(['/home']) ;\n         \n          }\n          else if(error.status==302){\n            this.message=\"This email Id already exists, Please try again!\"\n            this.responseDialog()\n            this.loading=false;\n          }\n          else{\n            alert(\"Some error has occured! please try again later.\")\n          }\n        });\n}\n}\n\n\n    \n\n    \n        \n\n    \n    \n     \n        \n             Register Here \n        \n        \n            \n         -->\n            User Name :\n            \n            \n            \n                \n                Please enter a value\n                Too short\n                Too long\n              \n            \n                \n         -->\n\n         -->\n            \n            Email :\n            \n            \n            \n                \n                {{getEmailError()}}\n                \n                Too long\n            \n            \n            \n         -->\n\n         -->\n            \n            SBSI Team : \n            \n            \n            \n                \n            \n                \n                Create a new team\n                {{team}}     \n            \n            Please make a selection\n        \n        \n        \n         -->\n        \n        \n            \n         -->\n            Enter Team Name:\n        \n        \n            \n                \n                Too short\n                Too long\n            \n        \n        \n         -->\n         -->\n\n         -->\n            \n            Password : \n            \n            \n            \n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too short -->\n                Too long\n                \n             \n            \n            \n            info\n             \n         -->\n\n         -->\n            \n            Confirm Password : \n            \n            \n            \n                \n                {{hide1 ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Password doesnot match -->\n            \n            \n            \n         -->\n\n        \n        \n        \n            Accept terms and conditions\n            This field is required\n        \n        \n        \n        \n        \n            \n                \n                Submit\n            \n        \n        \n    \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .formContainer{\n  \n    \n    /* font-size: 50%; */\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 75%;\n    height: 80%;\n    border-radius: 10px;\n    \n}\n\n\n\n/* label{\n    margin-top: 20%;\n    width : 400%;\n} */\n\n/* .x {\n    display: grid;\n    grid-template-columns: 1fr 3fr 0.125fr;\n    grid-gap: 75px;\n    text-align: left;\n    line-height: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n  } */\n\n  \n  \n   /* input {\n    /* margin-bottom: 30px; */\n   \n    /* text-align : right; */\n    /* height: 100%;   */\n     /* flex: 0 0 200px; */\n    /* width: 100%; */\n   /* } */ \n  \n\n  /* mat-form-field{ */\n    /* width: 75%; */\n    /* margin-left : 20%; */\n  /* } */\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Register Here                                      -->            User Name :                                                                    Please enter a value                Too short                Too long                                                   -->         -->                        Email :                                                                    {{getEmailError()}}                                Too long                                             -->         -->                        SBSI Team :                                                                                                 Create a new team                {{team}}                             Please make a selection                                 -->                                     -->            Enter Team Name:                                                            Too short                Too long                                     -->         -->         -->                        Password :                                                                     {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too short -->                Too long                                                                 info                      -->         -->                        Confirm Password :                                                                     {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Password doesnot match -->                                             -->                                    Accept terms and conditions            This field is required                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetLinkComponent.html":{"url":"components/ResetLinkComponent.html","title":"component - ResetLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-link/reset-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-link\n            \n\n            \n                styleUrls\n                ./reset-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hide\n                            \n                            \n                                hide1\n                            \n                            \n                                msg\n                            \n                            \n                                resetLinkForm\n                            \n                            \n                                token\n                            \n                            \n                                validToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, activatedRoute: ActivatedRoute, resetPassword: ResetPasswordService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPassword\n                                                  \n                                                        \n                                                                        ResetPasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:85\n                \n            \n\n\n            \n                \n                    This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:76\n                \n            \n\n\n            \n                \n                    ask Priyanka\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-link/reset-link.component.ts:68\n                \n            \n\n\n            \n                \n                    This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"reset sucessfull!\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetLinkForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-link/reset-link.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PasswordSpecsComponent } from './../password-specs/password-specs.component';\nimport { ResetPasswordService } from './../service/reset-password.service';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmPasswordValidator } from '../confirmPassword.Validator';\n\n\n@Component({\n  selector: 'app-reset-link',\n  templateUrl: './reset-link.component.html',\n  styleUrls: ['./reset-link.component.css']\n})\nexport class ResetLinkComponent implements OnInit {\n\n  resetLinkForm: FormGroup\n  validToken:boolean;\n  msg:string=\"reset sucessfull!\"\n  token\n  hide=true;\n  hide1=true;\n  \n\n  constructor(public dialog: MatDialog,\n    private activatedRoute:ActivatedRoute,\n    private resetPassword: ResetPasswordService,\n    private formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.resetLinkForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]], \n      confirmPassword: ['', Validators.required]\n  },\n  {\n    validator: ConfirmPasswordValidator(\"password\", \"confirmPassword\")\n  });\n   \n\n    this.token=this.activatedRoute.snapshot.paramMap.get('token')\n    var data={\"data1\":{\"id\":this.token}}\n\n    this.resetPassword.tokenVerification(data).subscribe(\n      (data1) => {\n        this.validToken=true\n         console.log(data1);\n        \n       },\n       (error)=>{\n        if(error.status==202){\n          this.validToken=true;\n        }\n        else if(error.status==406){\n          this.validToken=false;\n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      \n       }\n     );\n    \n  }\n/**\n * This Method opens a Dialog Box, after you submit the new password details, showing the response saying if the password reset was successful or not.\n */\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.msg}\n    });\n  }\n/** ask Priyanka*/\n  openDialog() {\n    const dialogRef = this.dialog.open(PasswordSpecsComponent, {\n      height: '380px',\n      width: '400px',\n    });\n  }\n/** \n * This method calls the Reset Link API that makes a PUT request to update the existing credentials saved by the user.\n*/\n  onSubmit(){\n    this.responseDialog()\n    var data ={\"data1\":{\n      \"id\":this.token,\n      \"password\":this.resetLinkForm.controls.password.value\n    }}\n    this.resetPassword.resetPassword(data).subscribe(\n      (data1) => {\n         console.log(data1);\n         this.msg=\"Your password has been reset sucessfully!\"\n        \n       },\n       (error)=>{\n         \n      \n       }\n     );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n          \n          \n        \n      \n\n\n\n    \n      \n        \n            \n                New Password:\n                \n                {{hide ? 'visibility_off' : 'visibility'}}\n                Please enter a value\n                Invalid password!\n                Too long\n                \n              \n              \n        \n        \n          info\n        \n        \n        \n            \n                Confirm Password:\n                \n                       {{hide1 ? 'visibility_off' : 'visibility'}}\n                \n                       Please enter a value\n              \n        \n        \n        \n        Submit\n        \n       \n  \n\n\n\n This is an invalid Token, Please request another reset link.\n\n\n\n\n    \n\n    \n                \n                    ./reset-link.component.css\n                \n                .container{\n    font-size: 120%; \n    position:absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    width:40%;\n    height: 50%;\n    border-radius: 10px;\n    padding: 25px;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            New Password:                                {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                Please enter a value                Invalid password!                Too long                                                                      info                                                    Confirm Password:                                       {{hide1 ? \\'visibility_off\\' : \\'visibility\\'}}                                       Please enter a value                                              Submit                  This is an invalid Token, Please request another reset link.'\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/reset-password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetLink\n                            \n                            \n                                resetPassword\n                            \n                            \n                                tokenVerification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/reset-password.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLink\n                        \n                        \n                    \n                \n            \n            \n                \nresetLink(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenVerification\n                        \n                        \n                    \n                \n            \n            \n                \ntokenVerification(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/reset-password.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/reset-password.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(public http: HttpClient) { }\n  \n  resetPassword(data){\n    console.log(\"inside resetPassword\")\n    return this.http.put(\"http://localhost:8080/reset_password\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n}\n\nresetLink(data){\n  console.log(\"inside forgetPassword\")\n  return this.http.post(\"http://localhost:8080/forgotPassword\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n\ntokenVerification(data){\n  console.log(\"inside tokenVerification\")\n  return this.http.post(\"http://localhost:8080/validate_token\",\n  data[\"data1\"],{responseType:'text' as 'json'})\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShareProposalComponent.html":{"url":"components/ShareProposalComponent.html","title":"component - ShareProposalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShareProposalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n\n\n    \n        Description\n    \n    \n        This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-share-proposal\n            \n\n            \n                styleUrls\n                ./share-proposal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./share-proposal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/feed/share-proposal/share-proposal.component.ts:31\n                \n            \n\n\n            \n                \n                    This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n/**\n * This is a shareProposalComponent and a child component of feedComponent responsible for Sharing a Proposal.\n */\n@Component({\n  selector: 'app-share-proposal',\n  templateUrl: './share-proposal.component.html',\n  styleUrls: ['./share-proposal.component.css']\n})\nexport class ShareProposalComponent implements OnInit {\n  /**@ignore */\n  sentTeam=[]\n\n  /**@ignore */\n  Teams:{}[]=[]\n\n  /**@ignore */\n  constructor(public dialog: MatDialog,@Inject(MAT_DIALOG_DATA) public data) {this.updateForm= new FormGroup({\n    teams: new FormControl('0', [Validators.required]),\n  });} \n\n  /**@ignore */\n  updateForm: FormGroup;\n    \n   /**\n   * This method checks whether a proposal is already shared to a particular team and filter those to which it is not shared.\n   */\n  ngOnInit(): void {\n    console.log(this.data.teams,this.data.prop)\n    this.sentTeam=this.data.teams.filter(item => {\n      let flag=true;\n      for(let team of this.data.prop){\n        if(team.id==item.id){\n          flag=false\n        }\n      }\n      if(flag)\n        return item \n    });\n    console.log(this.sentTeam)\n  }\n\n  /**@ignore */\n  selected(team){\n    let flag=true;\n    for(let item of this.data.prop){\n      if(item.id==team.id){\n        flag=false\n      }\n    }\n    if(flag==false)\n        return true\n      else\n        return false\n  }\n  \n\n}\n\n    \n\n    \n        \n    \n        \n        Share Proposal\n        \n    \n\n\n    \n        \n            \n                {{team.name}}  \n            \n        \n    \n    \n\n        submit\n        close\n \n     \n\n    \n\n    \n                \n                    ./share-proposal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Share Proposal                                                    {{team.name}}                                      submit        close      '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShareProposalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialMediaAuthService.html":{"url":"injectables/SocialMediaAuthService.html","title":"injectable - SocialMediaAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialMediaAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/social-media-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                            \n                                socialMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, transferDataService: TransferDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            socialMedia\n                        \n                        \n                    \n                \n            \n            \n                \nsocialMedia(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/social-media-auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/social-media-auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { TransferDataService } from './transfer-data.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaAuthService {\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n  public username: String;\n\n  public res;\n  constructor(private http: HttpClient,\n    private router: Router,\n    private transferDataService:TransferDataService) { }\n\n  // socialMedia(data){\n  //   console.log(\"inside socialMedia(Frontend)\")\n  //   return this.http.post(\"http://localhost:8080/getSocialInfo\",data[\"data1\"],{responseType:'text' as 'json'})\n  // }\n\n  socialMedia(data) {\n    console.log(\"inside Social Media\")\n    return this.http.post(`http://localhost:8080/getSocialInfo`,data).pipe(map((res) => {\n        this.res=res;\n        console.log(res)\n        // this.username = res[\"name\"];\n        this.registerSuccessfulLogin();\n      }\n      // ,\n      // (error)=>{\n      //   console.log(\"error------\",error['error']);\n      //   //team page\n      //   this.transferDataService.emitData(error['error'])\n      //   this.router.navigate(['/team']);\n  \n      // }\n      ));\n  }\n\n  createBasicAuthToken(username: String) {\n    return 'Basic ' + (username)\n  }\n\n  registerSuccessfulLogin() {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamComponent.html":{"url":"components/TeamComponent.html","title":"component - TeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/team/team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                ./team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTeam\n                            \n                            \n                                submitted\n                            \n                            \n                                teamForm\n                            \n                            \n                                teamName\n                            \n                            \n                                teams\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                responseDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, transferDataService: TransferDataService, dialog: MatDialog, userService: UserRegisterService, router: Router, authService: SocialAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferDataService\n                                                  \n                                                        \n                                                                        TransferDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserRegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    SocialAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            responseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nresponseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/team/team.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/team/team.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SocialAuthService } from 'angularx-social-login';\nimport { ApiResponseComponent } from './../api-response/api-response.component';\nimport { Router } from '@angular/router';\nimport { UserRegisterService } from './../service/user-register.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TransferDataService } from './../service/transfer-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n\n  message : any;\n  teamForm : FormGroup;\n  loading = false;\n  submitted = false;\n  selectedTeam: string='';\n  teams:any\n  teamName\n  userData\n\n\n  constructor(\n   \n    private formBuilder: FormBuilder,\n    private transferDataService:TransferDataService,\n    public dialog: MatDialog,\n    private userService: UserRegisterService,\n    public router: Router,\n    private authService: SocialAuthService\n  ) { }\n\n  responseDialog() {\n    const dialogRef = this.dialog.open(ApiResponseComponent, {\n      height: '180px',\n      width: '400px',\n      data:{data:this.message}\n    });\n  }\n\n  ngOnInit(): void {\n    this.userData=(this.transferDataService.userData)\n    console.log(\"Test----\",this.userData)\n\n    this.teamForm = this.formBuilder.group({\n      team: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n  });\n  this.userService.getTeam().subscribe(\n    data=> this.teams=data\n  );\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.userData[\"name\"],this.userData.email)\n    this.teamName=this.teamForm.value.team;\n    var data={\"data1\":\n    {\"team\":\n      {\n        \"name\":this.teamName\n      }\n ,    \"user\":\n      {\n        \"name\": this.userData.name,\n        \"email\": this.userData.email,\n        \"password\" :this.userData[\"name\"]+\"@123\"\n      } \n    }\n    }\n    this.userService.doRegister(data).subscribe(\n      (data1) => {\n         console.log(data1);\n           this.message=\"You have been signed up! Now please login again to continue.\"\n           this.responseDialog()\n           this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       },\n       (error)=>{\n        if(error.status==200){\n         \n          this.message=\"You have been signed up! Now please login again to continue.\"\n          this.responseDialog()\n          this.authService.signOut();\n           this.router.navigate(['/home']) ;\n           this.loading=false;\n       \n        }\n        else{\n          alert(\"Some error has occured! please try again later.\")\n        }\n      });\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n    \n\n\n\n    \n     \n        \n             Select Your Team \n        \n\n        \n            \n                Enter Team Name: \n            \n\n            \n                \n                    \n                        Create a new team\n                        {{team}}     \n                    \n                    Please make a selection\n                \n            \n\n            \n    \n            \n                Enter Team Name:\n            \n\n            \n                \n                    \n                    Too short\n                    Too long\n                \n            \n\n            \n        \n            \n                \n                    \n                    Submit\n                \n            \n        \n        \n\n    \n\n    \n                \n                    ./team.component.css\n                \n                .formContainer{\n    font-style: sans-serif;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: whitesmoke;\n    padding: 10px;\n    width: 50%;\n    height: 40%;\n    border-radius: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Select Your Team                                             Enter Team Name:                                                                                     Create a new team                        {{team}}                                             Please make a selection                                                                        Enter Team Name:                                                                                Too short                    Too long                                                                                                                    Submit                                            '\n    var COMPONENTS = [{'name': 'ApiResponseComponent', 'selector': 'app-api-response'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'CreateProposalComponent', 'selector': 'app-create-proposal'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PasswordSpecsComponent', 'selector': 'app-password-specs'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetLinkComponent', 'selector': 'app-reset-link'},{'name': 'ShareProposalComponent', 'selector': 'app-share-proposal'},{'name': 'TeamComponent', 'selector': 'app-team'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Teams.html":{"url":"classes/Teams.html","title":"class - Teams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Teams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Teams {\n    constructor(\n        public id:number,\n        public name:string\n    ){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teams.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeams\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/team/all\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teams.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Teams} from './teams'\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamsService {\n  url=\"http://localhost:8080/team/all\"\n  constructor(private http:HttpClient) { }\n  getTeams():Observable{\n    return this.http.get(this.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestServiceService.html":{"url":"injectables/TestServiceService.html","title":"injectable - TestServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/landing-page/test-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/test-service.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/test-service.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/landing-page/test-service.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl,Validators, FormArray} from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n\n  constructor() { }\n  form: FormGroup = new FormGroup({\n    key: new FormControl(null),\n    title: new FormControl(' ',[Validators.required]),\n    description: new FormControl(' ',[Validators.required,Validators.maxLength(300)]),\n    teams: new FormControl(),\n  });\n  \n  initialiseFormGroup(){\n    this.form.setValue({\n      $key: null,\n      title: ' ',\n      Proposal:' ',\n      team: 0})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferDataService.html":{"url":"injectables/TransferDataService.html","title":"injectable - TransferDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransferDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/transfer-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitData\n                        \n                        \n                    \n                \n            \n            \n                \nemitData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/transfer-data.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/transfer-data.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class TransferDataService {\nuserData: any;\n  //observer = new Subject();\n//  public subscriber = this.observer.asObservable();\n\n  emitData(data) {\n    this.userData = data;\n   // this.observer.next(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n            \n                Description\n            \n            \n                defines the user data type\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, email: string, team: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:11\n                            \n                        \n\n                \n                    \n                        define email of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:7\n                            \n                        \n\n                \n                    \n                        define id of the user (unique) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:9\n                            \n                        \n\n                \n                    \n                        define name of the user (string) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:13\n                            \n                        \n\n                \n                    \n                        define team the user is in \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    constructor(\n        /**define id of the user (unique) */\n        public id:number,\n        /**define name of the user (string) */\n        public name:string,\n        /**define email of the user (string) */\n        public email:string,\n        /**define team the user is in */\n        public team:{\n            /**define id of the team (unique) */\n            id:number,\n            /**define name of the team (string) */\n            name:string\n        }\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLoginService.html":{"url":"injectables/UserLoginService.html","title":"injectable - UserLoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                res\n                            \n                            \n                                USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBasicAuthToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                getLoggedInUserName\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                registerSuccessfulLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBasicAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBasicAuthToken(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInUserName\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInUserName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerSuccessfulLogin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterSuccessfulLogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-login.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            res\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NAME_SESSION_ATTRIBUTE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user-login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  public username: String;\n  public password: String;\n  public res;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  doLogin(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/signIn`,\n      { headers: { authorization: this.createBasicAuthToken(username, password) } }).pipe(map((res) => {\n       this.res=res;\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, this.res.message)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return false\n    return true\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) return ''\n    return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegisterService.html":{"url":"injectables/UserRegisterService.html","title":"injectable - UserRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user-register.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRegister\n                            \n                            \n                                getTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user-register.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegister\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegister(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user-register.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { teamList } from './../teamList';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegisterService {\n\n  constructor(private http:HttpClient) {\n    \n   }\n\n   doRegister(data){\n    console.log(\"inside do_register\")\n    return this.http.post(\"http://localhost:8080/userRegister\",\n    data[\"data1\"],{responseType:'text' as 'json'})\n // return resp\n}\n\ngetTeam():Observable{\n  console.log(\"inside GetTeam\")\n  return this.http.get(\"http://localhost:8080/getTeam\")\n  \n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-response/api-response.component.ts\n            \n            component\n            ApiResponseComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/confirmPassword.Validator.ts\n            \n            function\n            ConfirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/feed-params.ts\n            \n            class\n            FeedParams\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/get-proposals.service.ts\n            \n            injectable\n            GetProposalsService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/comment.ts\n            \n            class\n            Comment\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/create-proposal/create-proposal.component.ts\n            \n            component\n            CreateProposalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/landing-page/feed/share-proposal/share-proposal.component.ts\n            \n            component\n            ShareProposalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/landing-page/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/app/landing-page/proposal.service.ts\n            \n            injectable\n            ProposalService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/landing-page/test-service.service.ts\n            \n            injectable\n            TestServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                17 %\n                (4/23)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/password-specs/password-specs.component.ts\n            \n            component\n            PasswordSpecsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/post-proposal.service.ts\n            \n            injectable\n            PostProposalService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/proposal.ts\n            \n            class\n            Proposal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                20 %\n                (4/20)\n            \n        \n        \n            \n                \n                src/app/reset-link/reset-link.component.ts\n            \n            component\n            ResetLinkComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/service/http-interceptor.service.ts\n            \n            interceptor\n            HttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/social-media-auth.service.ts\n            \n            injectable\n            SocialMediaAuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/service/transfer-data.service.ts\n            \n            injectable\n            TransferDataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user-login.service.ts\n            \n            injectable\n            UserLoginService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/user-register.service.ts\n            \n            injectable\n            UserRegisterService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/team/team.component.ts\n            \n            component\n            TeamComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/teamList.ts\n            \n            class\n            teamList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/teams.ts\n            \n            class\n            Teams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            angular-local-storage : ^0.7.1\n        \n            angularx-social-login : ^3.4.1\n        \n            bootstrap : ^4.5.3\n        \n            mat-select-filter : ^2.3.7\n        \n            ngx-infinite-scroll : ^9.1.0\n        \n            ngx-mat-select-search : ^3.1.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfirmPasswordValidator   (src/.../confirmPassword.Validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/confirmPassword.Validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ConfirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nConfirmPasswordValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProposalSystem\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiResponseComponent\n\nApiResponseComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiResponseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nCreateProposalComponent\n\nCreateProposalComponent\n\nAppModule -->\n\nCreateProposalComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAppModule -->\n\nForgetPasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPasswordSpecsComponent\n\nPasswordSpecsComponent\n\nAppModule -->\n\nPasswordSpecsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetLinkComponent\n\nResetLinkComponent\n\nAppModule -->\n\nResetLinkComponent->AppModule\n\n\n\n\n\nShareProposalComponent\n\nShareProposalComponent\n\nAppModule -->\n\nShareProposalComponent->AppModule\n\n\n\n\n\nTeamComponent\n\nTeamComponent\n\nAppModule -->\n\nTeamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGetProposalsService\n\nGetProposalsService\n\nAppModule -->\n\nGetProposalsService->AppModule\n\n\n\n\n\nPostProposalService\n\nPostProposalService\n\nAppModule -->\n\nPostProposalService->AppModule\n\n\n\n\n\nProposalService\n\nProposalService\n\nAppModule -->\n\nProposalService->AppModule\n\n\n\n\n\nUserRegisterService\n\nUserRegisterService\n\nAppModule -->\n\nUserRegisterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/teamList.html":{"url":"classes/teamList.html","title":"class - teamList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  teamList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teamList.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/teamList.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/teamList.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class teamList{\n    constructor(public teamName:string){}\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
